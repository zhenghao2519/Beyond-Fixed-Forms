Processing classes:   0%|          | 0/10 [00:00<?, ?it/s]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class table
masks_to_be_merged [[1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 212, 213, 214, 215], [6, 7], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 120, 121, 122], [62, 64, 76, 78, 80, 81, 84, 86, 88, 90, 93, 95, 96, 99, 101, 102, 105, 107, 109, 111, 115, 117, 118, 119, 123, 124, 125, 127, 130, 132, 136, 186, 190, 193, 194, 196, 197, 199, 200, 201, 202, 203], [63, 153], [77, 79, 82, 83, 85], [87, 149], [89, 91, 92, 94, 97, 98, 100, 103, 104, 106, 108, 110, 112, 114, 116, 126, 128, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [150, 151], [165, 166], [181, 182, 183], [185, 187, 188], [189, 191], [192, 195, 204], [206, 207, 208, 209], [210, 211]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 12/238 [00:00<00:01, 115.12it/s][A
Calculating viewed counts for every point:  10%|█         | 24/238 [00:00<00:02, 104.40it/s][A
Calculating viewed counts for every point:  15%|█▌        | 36/238 [00:00<00:01, 108.14it/s][A
Calculating viewed counts for every point:  21%|██        | 50/238 [00:00<00:01, 115.26it/s][A
Calculating viewed counts for every point:  26%|██▌       | 62/238 [00:00<00:01, 99.53it/s] [A
Calculating viewed counts for every point:  31%|███       | 73/238 [00:00<00:01, 100.86it/s][A
Calculating viewed counts for every point:  35%|███▌      | 84/238 [00:00<00:01, 86.51it/s] [A
Calculating viewed counts for every point:  39%|███▉      | 94/238 [00:01<00:01, 83.19it/s][A
Calculating viewed counts for every point:  43%|████▎     | 103/238 [00:01<00:01, 83.37it/s][A
Calculating viewed counts for every point:  47%|████▋     | 113/238 [00:01<00:01, 86.60it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 125/238 [00:01<00:01, 93.90it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 135/238 [00:01<00:01, 79.43it/s][A
Calculating viewed counts for every point:  61%|██████    | 144/238 [00:01<00:01, 63.55it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 153/238 [00:01<00:01, 68.31it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 166/238 [00:01<00:00, 80.10it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 179/238 [00:02<00:00, 87.85it/s][A
Calculating viewed counts for every point:  80%|████████  | 191/238 [00:02<00:00, 95.49it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 203/238 [00:02<00:00, 101.41it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 214/238 [00:02<00:00, 99.79it/s] [A
Calculating viewed counts for every point:  95%|█████████▍| 226/238 [00:02<00:00, 103.72it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 237/238 [00:02<00:00, 90.87it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:11<27:28, 11.69s/it]tools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)
detected_ratio_thres_value tensor(0.2683, device='cuda:0')
final masked points tensor(26034, device='cuda:0')
before filtering torch.Size([16, 237360])
after filtering torch.Size([5, 237360])
num_ins_points_after_filtering tensor([6524, 6388, 4813,  610, 4541], device='cuda:0')
Working on scene0015_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 134, 137, 139, 141, 145, 149, 151, 295, 299, 300, 301, 302, 303, 308, 310, 317, 318, 319, 320, 321, 322, 323, 324, 325, 345, 348, 350], [9, 10, 12, 14, 17, 20, 23, 26, 30, 35, 37, 40, 122, 125, 126, 128, 130, 133, 136, 138, 140, 144, 147, 150, 154, 158, 163, 167, 171, 174, 178, 182, 189, 191, 194, 198, 201, 204, 212, 296, 298, 304, 307, 311, 326, 344, 347, 349, 351], [16, 19, 21, 24, 28, 31, 33, 38, 41, 45, 48, 50, 52, 57, 58, 61, 67, 69, 142, 146, 148, 153, 155, 159, 162, 166, 170, 175, 179, 183, 186, 190, 195, 207, 215, 219, 222, 230, 232, 235, 238, 242, 245, 248, 327, 328, 329, 332, 333, 336], [27, 29, 34, 36, 42, 43, 47, 49, 53, 55, 59, 63, 66, 70, 71, 188, 199, 202, 205, 208, 211, 216, 221, 223, 226, 229, 231, 233, 234, 236, 237, 239, 241, 244, 247, 250, 252, 254, 255, 257, 258, 260, 263, 265, 266, 269, 331, 334, 335, 337], [44, 46], [64, 65, 68, 73, 75, 224, 228, 240, 243, 246, 249, 251, 253, 256, 261, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 338], [72, 74, 76, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 213, 218, 225, 227, 281, 282, 283, 285, 288, 289, 290, 292, 294, 306, 313, 339, 340, 341], [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 305, 309, 312, 314, 342, 343, 346], [132, 135], [156, 157], [164, 169, 173, 176, 180, 184, 187, 193, 197], [200, 203], [259, 262]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/198 [00:00<00:01, 110.17it/s][A
Calculating viewed counts for every point:  17%|█▋        | 34/198 [00:00<00:01, 149.65it/s][A
Calculating viewed counts for every point:  27%|██▋       | 53/198 [00:00<00:00, 166.03it/s][A
Calculating viewed counts for every point:  36%|███▌      | 71/198 [00:00<00:00, 160.93it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/198 [00:00<00:00, 158.94it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/198 [00:00<00:00, 167.57it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 125/198 [00:00<00:00, 170.64it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 143/198 [00:00<00:00, 162.83it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 162/198 [00:00<00:00, 169.81it/s][A
Calculating viewed counts for every point:  91%|█████████ | 180/198 [00:01<00:00, 165.90it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 197/198 [00:01<00:00, 152.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:22<25:43, 11.02s/it]detected_ratio_thres_value tensor(0.4545, device='cuda:0')
final masked points tensor(17082, device='cuda:0')
before filtering torch.Size([13, 217086])
after filtering torch.Size([6, 217086])
num_ins_points_after_filtering tensor([2508, 2767, 3024, 2829, 2507, 2362], device='cuda:0')
Working on scene0019_00 class table
masks_to_be_merged [[0, 17], [1, 3], [2, 4, 5], [6, 7, 10], [8, 9]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 11/58 [00:00<00:00, 98.65it/s][A
Calculating viewed counts for every point:  43%|████▎     | 25/58 [00:00<00:00, 112.03it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 39/58 [00:00<00:00, 122.57it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 53/58 [00:00<00:00, 127.14it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:23<14:55,  6.44s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(4850, device='cuda:0')
before filtering torch.Size([5, 136769])
after filtering torch.Size([5, 136769])
num_ins_points_after_filtering tensor([1716,  601, 1176,  449,  273], device='cuda:0')
Working on scene0025_00 class table
masks_to_be_merged [[0, 54, 56, 57, 59, 60, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], [1, 2, 3, 4, 5, 6, 27, 30, 31, 32, 33, 34, 35, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], [7, 8, 9, 10, 11, 12, 13, 17, 23, 24, 25, 26, 28, 29], [15, 16, 18, 19, 20, 21, 22], [38, 39, 40, 41, 42, 43, 44, 45, 46], [47, 48, 49, 50, 51, 52, 53, 55, 58, 104, 105, 106, 107, 108, 109], [90, 91, 92, 93, 94, 96, 97], [99, 100, 101, 102, 103]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 5/195 [00:00<00:04, 45.93it/s][A
Calculating viewed counts for every point:   6%|▌         | 11/195 [00:00<00:03, 51.63it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/195 [00:00<00:02, 63.40it/s][A
Calculating viewed counts for every point:  15%|█▍        | 29/195 [00:00<00:02, 76.38it/s][A
Calculating viewed counts for every point:  21%|██        | 40/195 [00:00<00:01, 83.50it/s][A
Calculating viewed counts for every point:  25%|██▌       | 49/195 [00:00<00:01, 83.06it/s][A
Calculating viewed counts for every point:  30%|██▉       | 58/195 [00:00<00:01, 82.43it/s][A
Calculating viewed counts for every point:  35%|███▍      | 68/195 [00:00<00:01, 84.57it/s][A
Calculating viewed counts for every point:  39%|███▉      | 77/195 [00:00<00:01, 80.72it/s][A
Calculating viewed counts for every point:  44%|████▍     | 86/195 [00:01<00:01, 79.44it/s][A
Calculating viewed counts for every point:  50%|████▉     | 97/195 [00:01<00:01, 84.47it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 106/195 [00:01<00:01, 80.20it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 115/195 [00:01<00:00, 80.20it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 132/195 [00:01<00:00, 103.66it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 143/195 [00:01<00:00, 91.66it/s] [A
Calculating viewed counts for every point:  78%|███████▊  | 153/195 [00:01<00:00, 80.48it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 162/195 [00:02<00:00, 68.76it/s][A
Calculating viewed counts for every point:  90%|█████████ | 176/195 [00:02<00:00, 83.51it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 191/195 [00:02<00:00, 93.47it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:30<15:13,  6.62s/it]detected_ratio_thres_value tensor(0.2708, device='cuda:0')
final masked points tensor(10711, device='cuda:0')
before filtering torch.Size([8, 173392])
after filtering torch.Size([4, 173392])
num_ins_points_after_filtering tensor([3973, 1331, 1108,  343], device='cuda:0')
Working on scene0030_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 59, 61, 64, 67, 72, 74, 76, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 288, 291, 294, 328, 330, 331, 333, 334, 335, 337, 339], [25, 26, 29], [51, 53, 55, 58, 63, 66, 69, 71, 77, 242, 244, 246, 248, 250, 259, 262], [57, 60, 62, 65, 68, 70, 73, 75, 78, 79, 80, 82, 85, 86, 88, 89, 97, 99, 101, 260, 263, 290], [81, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 173, 175, 177, 180, 182, 199, 285, 287, 292, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 332], [154, 156, 164, 166, 168, 170, 172, 174, 176, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 336, 338, 340], [297, 299]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/250 [00:00<00:02, 115.47it/s][A
Calculating viewed counts for every point:  10%|▉         | 24/250 [00:00<00:01, 117.43it/s][A
Calculating viewed counts for every point:  14%|█▍        | 36/250 [00:00<00:02, 78.96it/s] [A
Calculating viewed counts for every point:  18%|█▊        | 45/250 [00:00<00:02, 78.73it/s][A
Calculating viewed counts for every point:  22%|██▏       | 54/250 [00:00<00:02, 81.22it/s][A
Calculating viewed counts for every point:  26%|██▌       | 64/250 [00:00<00:02, 82.11it/s][A
Calculating viewed counts for every point:  30%|███       | 76/250 [00:00<00:01, 91.30it/s][A
Calculating viewed counts for every point:  35%|███▌      | 88/250 [00:00<00:01, 98.14it/s][A
Calculating viewed counts for every point:  40%|████      | 100/250 [00:01<00:01, 102.84it/s][A
Calculating viewed counts for every point:  44%|████▍     | 111/250 [00:01<00:01, 103.23it/s][A
Calculating viewed counts for every point:  49%|████▉     | 122/250 [00:01<00:01, 92.23it/s] [A
Calculating viewed counts for every point:  54%|█████▍    | 135/250 [00:01<00:01, 100.70it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 148/250 [00:01<00:00, 106.67it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 161/250 [00:01<00:00, 112.17it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 173/250 [00:01<00:00, 101.64it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 185/250 [00:01<00:00, 104.89it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 198/250 [00:01<00:00, 109.77it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 210/250 [00:02<00:00, 40.18it/s] [A
Calculating viewed counts for every point:  88%|████████▊ | 219/250 [00:02<00:00, 46.28it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 230/250 [00:02<00:00, 55.67it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 242/250 [00:03<00:00, 66.15it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:45<21:57,  9.62s/it]detected_ratio_thres_value tensor(0.4222, device='cuda:0')
final masked points tensor(19644, device='cuda:0')
before filtering torch.Size([7, 293811])
after filtering torch.Size([4, 293811])
num_ins_points_after_filtering tensor([6819, 2243, 7608, 2533], device='cuda:0')
Working on scene0046_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 80, 82, 83, 84, 86, 87, 88, 89, 90], [6, 7, 19, 20], [8, 9, 10, 11, 17, 18, 91], [12, 13], [15, 16, 49, 50], [21, 22], [46, 47, 48, 51, 52], [59, 60, 61, 62, 75, 78, 81, 85], [64, 65, 66, 67, 70, 71, 72], [68, 69], [73, 74, 77]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 6/249 [00:00<00:07, 33.83it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/249 [00:00<00:08, 28.74it/s][A
Calculating viewed counts for every point:   6%|▌         | 15/249 [00:00<00:06, 35.52it/s][A
Calculating viewed counts for every point:   8%|▊         | 21/249 [00:00<00:05, 42.67it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/249 [00:00<00:03, 56.16it/s][A
Calculating viewed counts for every point:  16%|█▌        | 39/249 [00:00<00:03, 65.46it/s][A
Calculating viewed counts for every point:  18%|█▊        | 46/249 [00:00<00:03, 56.51it/s][A
Calculating viewed counts for every point:  24%|██▍       | 61/249 [00:01<00:02, 80.57it/s][A
Calculating viewed counts for every point:  30%|██▉       | 74/249 [00:01<00:02, 86.03it/s][A
Calculating viewed counts for every point:  34%|███▎      | 84/249 [00:01<00:02, 80.92it/s][A
Calculating viewed counts for every point:  37%|███▋      | 93/249 [00:01<00:01, 80.69it/s][A
Calculating viewed counts for every point:  42%|████▏     | 105/249 [00:01<00:01, 89.83it/s][A
Calculating viewed counts for every point:  46%|████▌     | 115/249 [00:01<00:01, 82.59it/s][A
Calculating viewed counts for every point:  50%|████▉     | 124/249 [00:01<00:01, 71.64it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 132/249 [00:01<00:01, 71.08it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 140/249 [00:02<00:01, 63.14it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 147/249 [00:02<00:01, 59.37it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 154/249 [00:02<00:01, 58.34it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 161/249 [00:02<00:01, 59.54it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 168/249 [00:02<00:01, 56.24it/s][A
Calculating viewed counts for every point:  70%|███████   | 175/249 [00:02<00:01, 58.99it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 183/249 [00:02<00:01, 61.20it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 190/249 [00:03<00:01, 56.37it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 198/249 [00:03<00:00, 61.81it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 205/249 [00:03<00:00, 58.52it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 213/249 [00:03<00:00, 63.89it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 220/249 [00:03<00:00, 62.35it/s][A
Calculating viewed counts for every point:  91%|█████████ | 227/249 [00:03<00:00, 62.28it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 237/249 [00:03<00:00, 72.10it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 248/249 [00:03<00:00, 82.30it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:52<19:58,  8.81s/it]detected_ratio_thres_value tensor(0.2188, device='cuda:0')
final masked points tensor(8169, device='cuda:0')
before filtering torch.Size([11, 186857])
after filtering torch.Size([4, 186857])
num_ins_points_after_filtering tensor([5134,  931,  863,  695], device='cuda:0')
Working on scene0050_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 254, 255, 256, 257, 258, 259, 260], [11, 12, 13, 87, 88, 89, 97, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 135, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 240, 241, 243, 248, 249, 250, 251, 252, 253], [31, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129], [32, 33, 34, 35, 40, 41, 42], [36, 37, 38, 39, 45, 63, 64, 65, 66, 67, 68, 69, 70, 71], [84, 85, 86, 90], [127, 128], [133, 134, 136, 137, 138], [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], [188, 189, 190], [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], [216, 217, 218, 219, 225, 226, 227, 230, 231, 232, 233], [220, 221, 222, 245, 246], [223, 224, 247], [228, 229], [235, 236, 237, 239, 244]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/466 [00:00<00:02, 152.55it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/466 [00:00<00:03, 117.88it/s][A
Calculating viewed counts for every point:  10%|▉         | 45/466 [00:00<00:03, 105.89it/s][A
Calculating viewed counts for every point:  13%|█▎        | 61/466 [00:00<00:03, 116.49it/s][A
Calculating viewed counts for every point:  16%|█▌        | 73/466 [00:00<00:03, 101.73it/s][A
Calculating viewed counts for every point:  19%|█▊        | 87/466 [00:00<00:03, 111.44it/s][A
Calculating viewed counts for every point:  22%|██▏       | 103/466 [00:00<00:02, 123.55it/s][A
Calculating viewed counts for every point:  25%|██▍       | 116/466 [00:01<00:03, 104.35it/s][A
Calculating viewed counts for every point:  27%|██▋       | 128/466 [00:01<00:03, 94.19it/s] [A
Calculating viewed counts for every point:  30%|██▉       | 139/466 [00:01<00:03, 88.60it/s][A
Calculating viewed counts for every point:  32%|███▏      | 150/466 [00:01<00:03, 93.11it/s][A
Calculating viewed counts for every point:  35%|███▌      | 165/466 [00:01<00:02, 106.59it/s][A
Calculating viewed counts for every point:  38%|███▊      | 177/466 [00:01<00:03, 81.88it/s] [A
Calculating viewed counts for every point:  40%|████      | 188/466 [00:01<00:03, 83.04it/s][A
Calculating viewed counts for every point:  43%|████▎     | 201/466 [00:02<00:02, 93.30it/s][A
Calculating viewed counts for every point:  46%|████▌     | 214/466 [00:02<00:02, 101.00it/s][A
Calculating viewed counts for every point:  49%|████▊     | 227/466 [00:02<00:02, 104.67it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 239/466 [00:02<00:02, 108.39it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 251/466 [00:02<00:01, 108.98it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 264/466 [00:02<00:01, 113.60it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 276/466 [00:02<00:01, 95.34it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 294/466 [00:02<00:01, 113.48it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 311/466 [00:02<00:01, 127.02it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 325/466 [00:03<00:01, 129.55it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 339/466 [00:03<00:01, 116.67it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 352/466 [00:03<00:00, 118.44it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 365/466 [00:03<00:00, 107.86it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 380/466 [00:03<00:00, 118.20it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 393/466 [00:03<00:00, 111.01it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 408/466 [00:03<00:00, 120.34it/s][A
Calculating viewed counts for every point:  90%|█████████ | 421/466 [00:03<00:00, 106.51it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 433/466 [00:04<00:00, 109.86it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 445/466 [00:04<00:00, 102.37it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 456/466 [00:04<00:00, 101.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [01:05<22:47, 10.13s/it]detected_ratio_thres_value tensor(0.2241, device='cuda:0')
final masked points tensor(18930, device='cuda:0')
before filtering torch.Size([17, 211406])
after filtering torch.Size([5, 211406])
num_ins_points_after_filtering tensor([1295, 3364, 3224, 3987, 5397], device='cuda:0')
Working on scene0063_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 7, 9], [16, 17, 18], [19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35], [39, 40]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 20/84 [00:00<00:00, 196.62it/s][A
Calculating viewed counts for every point:  48%|████▊     | 40/84 [00:00<00:00, 186.42it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 64/84 [00:00<00:00, 207.14it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [01:06<16:35,  7.43s/it]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(6844, device='cuda:0')
before filtering torch.Size([5, 76966])
after filtering torch.Size([4, 76966])
num_ins_points_after_filtering tensor([1702, 1226, 1166, 2197], device='cuda:0')
Working on scene0064_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 83, 85, 88], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 78, 80, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97], [63, 64]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 7/121 [00:00<00:01, 68.12it/s][A
Calculating viewed counts for every point:  17%|█▋        | 20/121 [00:00<00:01, 86.77it/s][A
Calculating viewed counts for every point:  29%|██▉       | 35/121 [00:00<00:00, 107.85it/s][A
Calculating viewed counts for every point:  38%|███▊      | 46/121 [00:00<00:00, 103.72it/s][A
Calculating viewed counts for every point:  51%|█████     | 62/121 [00:00<00:00, 119.92it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 77/121 [00:00<00:00, 126.75it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 90/121 [00:00<00:00, 124.28it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 103/121 [00:00<00:00, 121.36it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 116/121 [00:01<00:00, 120.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [01:10<13:43,  6.19s/it]detected_ratio_thres_value tensor(0.4118, device='cuda:0')
final masked points tensor(12730, device='cuda:0')
before filtering torch.Size([3, 230672])
after filtering torch.Size([2, 230672])
num_ins_points_after_filtering tensor([7897, 4619], device='cuda:0')
Working on scene0077_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 20, 21], [9, 10], [11, 12, 13, 14, 15], [19, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 12/61 [00:00<00:00, 114.93it/s][A
Calculating viewed counts for every point:  43%|████▎     | 26/61 [00:00<00:00, 120.10it/s][A
Calculating viewed counts for every point:  70%|███████   | 43/61 [00:00<00:00, 127.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [01:11<10:09,  4.62s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(7115, device='cuda:0')
before filtering torch.Size([4, 92807])
after filtering torch.Size([4, 92807])
num_ins_points_after_filtering tensor([3991, 2066,  777,  274], device='cuda:0')
Working on scene0081_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 29, 30, 31, 32, 33, 34], [5, 7, 8, 9, 10, 13, 15, 24, 25, 26, 27, 28], [11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
                                                                                 [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [01:12<07:39,  3.51s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(4066, device='cuda:0')
before filtering torch.Size([3, 51381])
after filtering torch.Size([3, 51381])
num_ins_points_after_filtering tensor([1335, 1312, 1419], device='cuda:0')
Working on scene0084_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 111, 112, 113, 114, 115, 116], [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 89, 90, 91, 92, 93, 94, 95, 96], [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 5/198 [00:00<00:05, 32.59it/s][A
Calculating viewed counts for every point:   5%|▍         | 9/198 [00:00<00:05, 35.39it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/198 [00:00<00:03, 53.79it/s][A
Calculating viewed counts for every point:  17%|█▋        | 34/198 [00:00<00:02, 81.59it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/198 [00:00<00:01, 92.63it/s][A
Calculating viewed counts for every point:  28%|██▊       | 56/198 [00:00<00:01, 92.75it/s][A
Calculating viewed counts for every point:  35%|███▌      | 70/198 [00:00<00:01, 105.67it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/198 [00:00<00:00, 129.35it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 103/198 [00:01<00:00, 130.79it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 117/198 [00:01<00:00, 126.15it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 130/198 [00:01<00:00, 99.76it/s] [A
Calculating viewed counts for every point:  71%|███████   | 141/198 [00:01<00:00, 85.26it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 152/198 [00:01<00:00, 90.47it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 164/198 [00:01<00:00, 95.59it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 175/198 [00:01<00:00, 79.65it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 184/198 [00:02<00:00, 74.34it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 193/198 [00:02<00:00, 67.66it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [01:18<09:01,  4.16s/it]detected_ratio_thres_value tensor(0.3939, device='cuda:0')
final masked points tensor(5229, device='cuda:0')
before filtering torch.Size([3, 116845])
after filtering torch.Size([3, 116845])
num_ins_points_after_filtering tensor([3519, 1095,  615], device='cuda:0')
Working on scene0086_00 class table
masks_to_be_merged [[1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|▏         | 2/143 [00:00<00:16,  8.58it/s][A
Calculating viewed counts for every point:   6%|▌         | 8/143 [00:00<00:04, 27.80it/s][A
Calculating viewed counts for every point:  10%|▉         | 14/143 [00:00<00:03, 37.49it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/143 [00:00<00:02, 42.92it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/143 [00:00<00:02, 45.92it/s][A
Calculating viewed counts for every point:  24%|██▍       | 34/143 [00:00<00:02, 52.20it/s][A
Calculating viewed counts for every point:  29%|██▊       | 41/143 [00:00<00:01, 56.07it/s][A
Calculating viewed counts for every point:  33%|███▎      | 47/143 [00:01<00:01, 54.39it/s][A
Calculating viewed counts for every point:  38%|███▊      | 55/143 [00:01<00:01, 59.41it/s][A
Calculating viewed counts for every point:  43%|████▎     | 62/143 [00:01<00:01, 61.42it/s][A
Calculating viewed counts for every point:  48%|████▊     | 69/143 [00:01<00:01, 58.98it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 77/143 [00:01<00:01, 64.02it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 84/143 [00:01<00:00, 64.64it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 91/143 [00:01<00:00, 65.94it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 98/143 [00:01<00:00, 58.93it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 105/143 [00:01<00:00, 54.28it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 111/143 [00:02<00:00, 55.67it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 117/143 [00:02<00:00, 54.33it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 123/143 [00:02<00:00, 54.16it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 131/143 [00:02<00:00, 58.86it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 137/143 [00:02<00:00, 54.36it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [01:21<08:11,  3.81s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(746, device='cuda:0')
before filtering torch.Size([1, 124572])
after filtering torch.Size([1, 124572])
num_ins_points_after_filtering tensor([282], device='cuda:0')
Working on scene0088_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], [20, 23], [60, 61, 62, 64]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 14/110 [00:00<00:00, 137.25it/s][A
Calculating viewed counts for every point:  25%|██▌       | 28/110 [00:00<00:00, 133.10it/s][A
Calculating viewed counts for every point:  38%|███▊      | 42/110 [00:00<00:00, 126.38it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 58/110 [00:00<00:00, 134.26it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 79/110 [00:00<00:00, 159.64it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 96/110 [00:00<00:00, 157.36it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [01:23<07:26,  3.49s/it]detected_ratio_thres_value tensor(0.4615, device='cuda:0')
final masked points tensor(8567, device='cuda:0')
before filtering torch.Size([3, 166872])
after filtering torch.Size([1, 166872])
num_ins_points_after_filtering tensor([8564], device='cuda:0')
Working on scene0095_00 class table
masks_to_be_merged [[1, 2, 3, 4, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [38, 39, 40, 42, 43], [121, 122, 123, 124, 125, 126, 127, 136], [152, 153, 155, 156, 157, 158, 159, 160, 161, 162]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|          | 2/166 [00:00<01:18,  2.10it/s][A
Calculating viewed counts for every point:   7%|▋         | 12/166 [00:01<00:10, 14.85it/s][A
Calculating viewed counts for every point:  17%|█▋        | 28/166 [00:01<00:03, 37.58it/s][A
Calculating viewed counts for every point:  30%|██▉       | 49/166 [00:01<00:01, 68.62it/s][A
Calculating viewed counts for every point:  41%|████      | 68/166 [00:01<00:01, 93.59it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/166 [00:01<00:00, 106.00it/s][A
Calculating viewed counts for every point:  60%|██████    | 100/166 [00:01<00:00, 109.26it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 116/166 [00:01<00:00, 120.38it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 131/166 [00:01<00:00, 118.08it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 147/166 [00:01<00:00, 127.02it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [01:29<09:03,  4.28s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(14779, device='cuda:0')
before filtering torch.Size([5, 214895])
after filtering torch.Size([3, 214895])
num_ins_points_after_filtering tensor([7114, 1579, 3343], device='cuda:0')
Working on scene0100_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [37, 38, 39, 40, 41, 42], [44, 45, 46, 47]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 19/102 [00:00<00:00, 187.82it/s][A
Calculating viewed counts for every point:  39%|███▉      | 40/102 [00:00<00:00, 187.62it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 59/102 [00:00<00:00, 160.18it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 76/102 [00:00<00:00, 158.14it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [01:31<07:32,  3.59s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(8106, device='cuda:0')
before filtering torch.Size([3, 52304])
after filtering torch.Size([2, 52304])
num_ins_points_after_filtering tensor([7392,  593], device='cuda:0')
Working on scene0131_00 class table
masks_to_be_merged [[0, 2], [1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 67], [28, 29, 30], [60, 61, 62, 63, 64, 65, 66]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 9/108 [00:00<00:01, 80.45it/s][A
Calculating viewed counts for every point:  18%|█▊        | 19/108 [00:00<00:00, 89.35it/s][A
Calculating viewed counts for every point:  37%|███▋      | 40/108 [00:00<00:00, 141.37it/s][A
Calculating viewed counts for every point:  51%|█████     | 55/108 [00:00<00:00, 119.45it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 70/108 [00:00<00:00, 128.67it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 85/108 [00:00<00:00, 131.74it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 102/108 [00:00<00:00, 140.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [01:34<06:51,  3.29s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(17662, device='cuda:0')
before filtering torch.Size([4, 177091])
after filtering torch.Size([2, 177091])
num_ins_points_after_filtering tensor([14529,  1469], device='cuda:0')
Working on scene0139_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 65, 66, 67, 68, 69, 70], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], [37, 38]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 14/136 [00:00<00:00, 138.36it/s][A
Calculating viewed counts for every point:  28%|██▊       | 38/136 [00:00<00:00, 186.28it/s][A
Calculating viewed counts for every point:  45%|████▍     | 61/136 [00:00<00:00, 194.68it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 91/136 [00:00<00:00, 232.66it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 120/136 [00:00<00:00, 247.57it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [01:36<05:59,  2.90s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(6792, device='cuda:0')
before filtering torch.Size([4, 72007])
after filtering torch.Size([4, 72007])
num_ins_points_after_filtering tensor([1499, 2224, 1819, 1143], device='cuda:0')
Working on scene0144_00 class table
masks_to_be_merged [[2, 3], [14, 15, 16, 34, 35], [29, 91, 92, 93], [48, 49, 50], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76], [82, 83], [84, 85, 86], [87, 88, 89], [97, 98]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 15/144 [00:00<00:00, 146.66it/s][A
Calculating viewed counts for every point:  23%|██▎       | 33/144 [00:00<00:00, 158.17it/s][A
Calculating viewed counts for every point:  34%|███▍      | 49/144 [00:00<00:00, 118.83it/s][A
Calculating viewed counts for every point:  51%|█████     | 73/144 [00:00<00:00, 150.68it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 89/144 [00:00<00:00, 148.29it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 105/144 [00:00<00:00, 142.99it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 129/144 [00:00<00:00, 158.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [01:40<06:24,  3.12s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(8926, device='cuda:0')
before filtering torch.Size([9, 126879])
after filtering torch.Size([6, 126879])
num_ins_points_after_filtering tensor([ 173,  175, 2994,  740,  315,   33], device='cuda:0')
Working on scene0146_00 class table
masks_to_be_merged [[0, 1, 2, 5, 6], [3, 4, 7, 8, 9, 10, 11, 12, 13, 26, 27], [14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 9/141 [00:00<00:01, 89.33it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/141 [00:00<00:01, 106.75it/s][A
Calculating viewed counts for every point:  23%|██▎       | 32/141 [00:00<00:01, 100.42it/s][A
Calculating viewed counts for every point:  33%|███▎      | 46/141 [00:00<00:00, 113.16it/s][A
Calculating viewed counts for every point:  41%|████      | 58/141 [00:00<00:00, 113.01it/s][A
Calculating viewed counts for every point:  50%|████▉     | 70/141 [00:00<00:00, 99.99it/s] [A
Calculating viewed counts for every point:  66%|██████▌   | 93/141 [00:00<00:00, 136.15it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 108/141 [00:00<00:00, 125.58it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 122/141 [00:01<00:00, 118.12it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 137/141 [00:01<00:00, 122.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [01:42<05:48,  2.85s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(2279, device='cuda:0')
before filtering torch.Size([4, 60438])
after filtering torch.Size([1, 60438])
num_ins_points_after_filtering tensor([432], device='cuda:0')
Working on scene0149_00 class table
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 7, 9, 23, 24, 25, 27, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 55, 61, 62], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29], [35, 36], [48, 50, 52, 53, 54, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 11/141 [00:00<00:01, 106.87it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/141 [00:00<00:00, 131.12it/s][A
Calculating viewed counts for every point:  29%|██▉       | 41/141 [00:00<00:00, 135.18it/s][A
Calculating viewed counts for every point:  43%|████▎     | 61/141 [00:00<00:00, 158.65it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 78/141 [00:00<00:00, 161.47it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 95/141 [00:00<00:00, 157.62it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 111/141 [00:00<00:00, 151.04it/s][A
Calculating viewed counts for every point:  90%|█████████ | 127/141 [00:00<00:00, 145.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [01:44<05:22,  2.67s/it]detected_ratio_thres_value tensor(0.2041, device='cuda:0')
final masked points tensor(14610, device='cuda:0')
before filtering torch.Size([4, 162396])
after filtering torch.Size([3, 162396])
num_ins_points_after_filtering tensor([9522, 2947, 1930], device='cuda:0')
Working on scene0153_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19], [7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 10/59 [00:00<00:00, 95.57it/s][A
Calculating viewed counts for every point:  34%|███▍      | 20/59 [00:00<00:00, 82.42it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 34/59 [00:00<00:00, 98.62it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 44/59 [00:00<00:00, 98.86it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [01:45<04:27,  2.23s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(2760, device='cuda:0')
before filtering torch.Size([2, 47709])
after filtering torch.Size([1, 47709])
num_ins_points_after_filtering tensor([2443], device='cuda:0')
Working on scene0164_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124], [70, 116, 117, 118]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 21/189 [00:00<00:00, 205.90it/s][A
Calculating viewed counts for every point:  26%|██▌       | 49/189 [00:00<00:00, 196.30it/s][A
Calculating viewed counts for every point:  40%|████      | 76/189 [00:00<00:00, 223.51it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 99/189 [00:00<00:00, 213.20it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 122/189 [00:00<00:00, 218.02it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 145/189 [00:00<00:00, 183.31it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 165/189 [00:00<00:00, 185.02it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 187/189 [00:00<00:00, 192.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [01:49<05:28,  2.76s/it]detected_ratio_thres_value tensor(0.3929, device='cuda:0')
final masked points tensor(10970, device='cuda:0')
before filtering torch.Size([2, 94315])
after filtering torch.Size([1, 94315])
num_ins_points_after_filtering tensor([10928], device='cuda:0')
Working on scene0169_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88], [12, 13], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125], [28, 116], [46, 48, 50], [51, 52, 53, 54], [56, 57, 58], [89, 90, 91]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 4/204 [00:00<00:05, 36.32it/s][A
Calculating viewed counts for every point:   5%|▍         | 10/204 [00:00<00:04, 47.63it/s][A
Calculating viewed counts for every point:  10%|█         | 21/204 [00:00<00:03, 54.45it/s][A
Calculating viewed counts for every point:  13%|█▎        | 27/204 [00:00<00:03, 55.96it/s][A
Calculating viewed counts for every point:  16%|█▌        | 33/204 [00:00<00:03, 51.53it/s][A
Calculating viewed counts for every point:  19%|█▉        | 39/204 [00:00<00:03, 52.08it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/204 [00:00<00:02, 56.93it/s][A
Calculating viewed counts for every point:  25%|██▌       | 52/204 [00:01<00:03, 49.13it/s][A
Calculating viewed counts for every point:  31%|███▏      | 64/204 [00:01<00:02, 61.13it/s][A
Calculating viewed counts for every point:  35%|███▌      | 72/204 [00:01<00:02, 63.53it/s][A
Calculating viewed counts for every point:  41%|████      | 84/204 [00:01<00:01, 77.30it/s][A
Calculating viewed counts for every point:  46%|████▌     | 93/204 [00:01<00:01, 66.09it/s][A
Calculating viewed counts for every point:  50%|█████     | 103/204 [00:01<00:01, 71.33it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 115/204 [00:01<00:01, 81.90it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 130/204 [00:01<00:00, 98.45it/s][A
Calculating viewed counts for every point:  70%|███████   | 143/204 [00:02<00:00, 98.01it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 154/204 [00:02<00:00, 74.43it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 163/204 [00:02<00:00, 52.73it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 171/204 [00:02<00:00, 56.35it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 183/204 [00:02<00:00, 64.46it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 191/204 [00:02<00:00, 67.21it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 199/204 [00:03<00:00, 70.08it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [01:57<08:15,  4.20s/it]detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(14531, device='cuda:0')
before filtering torch.Size([8, 239354])
after filtering torch.Size([3, 239354])
num_ins_points_after_filtering tensor([4661, 9394,  181], device='cuda:0')
Working on scene0187_00 class table
masks_to_be_merged [[0, 1, 3, 4, 5, 7, 8, 9, 10, 12, 15, 17, 19, 22, 23, 25, 27, 28, 29, 31, 32, 34, 35, 37, 38, 40, 42, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 231, 232, 234, 235, 237, 239, 243, 245, 248, 249, 250, 251, 252, 253, 254, 256, 259, 266, 273, 281, 286, 295, 297, 299, 304, 308, 348, 350, 352, 354, 357, 362, 364, 367, 370, 373, 377, 382, 384, 388], [2, 6, 11, 13, 16, 18, 20, 21, 24, 26, 30, 33, 36, 217, 225, 228, 230, 233, 236, 238, 240, 241, 242, 247], [39, 41, 43, 46, 49, 51, 53, 56, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 75, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 264, 270, 275, 278, 287, 294, 300, 303, 310, 369, 371, 376, 379, 381, 383, 391, 392, 395], [98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 119, 126, 129, 132, 134, 137, 140, 143, 145, 149, 150, 153, 156, 160, 162, 168, 307, 309, 312, 315, 318, 320, 359, 363, 365, 368, 372, 374, 375, 378, 380, 386, 387, 389, 390, 393, 394, 396, 397, 398, 399], [115, 121, 127], [135, 136, 139, 144, 152, 155, 159, 164, 169, 171, 172, 174, 177, 179, 182, 313, 317, 322, 325, 328], [141, 148, 151, 154, 157, 161, 163, 165, 170, 173, 175, 178, 180, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 257, 258, 263, 268, 274, 279, 288, 293, 296, 298, 302, 306, 311, 314, 316, 319, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 356, 361, 366], [158, 166, 176, 355, 358, 360, 385], [244, 246], [272, 280, 289]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/227 [00:00<00:03, 59.84it/s][A
Calculating viewed counts for every point:  14%|█▎        | 31/227 [00:00<00:01, 157.61it/s][A
Calculating viewed counts for every point:  23%|██▎       | 53/227 [00:00<00:00, 182.61it/s][A
Calculating viewed counts for every point:  33%|███▎      | 75/227 [00:00<00:00, 194.10it/s][A
Calculating viewed counts for every point:  42%|████▏     | 95/227 [00:00<00:00, 192.34it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 117/227 [00:00<00:00, 199.07it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 140/227 [00:00<00:00, 206.59it/s][A
Calculating viewed counts for every point:  71%|███████   | 161/227 [00:00<00:00, 190.92it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 181/227 [00:00<00:00, 187.75it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 201/227 [00:01<00:00, 189.77it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 222/227 [00:01<00:00, 193.42it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [02:11<13:50,  7.10s/it]detected_ratio_thres_value tensor(0.4103, device='cuda:0')
final masked points tensor(22767, device='cuda:0')
before filtering torch.Size([10, 173752])
after filtering torch.Size([5, 173752])
num_ins_points_after_filtering tensor([5742, 4772, 4309, 2753, 4705], device='cuda:0')
Working on scene0193_00 class table
masks_to_be_merged [[0, 1, 2, 4, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 61]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 10/72 [00:00<00:00, 96.20it/s][A
Calculating viewed counts for every point:  40%|████      | 29/72 [00:00<00:00, 142.86it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 47/72 [00:00<00:00, 157.16it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 63/72 [00:00<00:00, 131.13it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [02:13<10:43,  5.55s/it]detected_ratio_thres_value tensor(0.3939, device='cuda:0')
final masked points tensor(8294, device='cuda:0')
before filtering torch.Size([2, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([3223, 5071], device='cuda:0')
Working on scene0196_00 class table
masks_to_be_merged [[0, 1, 2, 5, 8, 12, 18, 20, 22, 23, 24, 28, 29, 30, 31, 34, 36, 39, 40, 43, 46, 48, 52, 54, 57, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152], [4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 25, 27, 33, 35, 38, 58, 67, 68, 70, 201], [26, 32], [41, 47], [42, 45, 49, 53, 56, 62, 64, 66, 72, 74, 77, 79, 81, 84, 86, 88, 90, 92, 94, 96, 98, 100, 103, 104, 107, 108, 110, 112, 116, 167, 171, 174, 175, 177, 180, 183, 185, 187, 189, 191, 193, 197, 200, 203, 205], [51, 55], [69, 71, 73, 166, 168, 170, 173, 176, 190, 192, 195, 196, 198, 199, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], [75, 76, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 102, 105, 106, 109, 111, 113, 114, 178, 179, 181, 182, 184, 186, 188], [165, 169, 172]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 11/192 [00:00<00:02, 87.58it/s][A
Calculating viewed counts for every point:  14%|█▎        | 26/192 [00:00<00:01, 118.36it/s][A
Calculating viewed counts for every point:  23%|██▎       | 44/192 [00:00<00:01, 143.60it/s][A
Calculating viewed counts for every point:  31%|███▏      | 60/192 [00:00<00:00, 143.41it/s][A
Calculating viewed counts for every point:  44%|████▍     | 84/192 [00:00<00:00, 172.36it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 108/192 [00:00<00:00, 193.68it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 128/192 [00:00<00:00, 188.86it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 153/192 [00:00<00:00, 205.53it/s][A
Calculating viewed counts for every point:  91%|█████████ | 175/192 [00:00<00:00, 209.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [02:19<11:18,  5.90s/it]detected_ratio_thres_value tensor(0.4259, device='cuda:0')
final masked points tensor(11148, device='cuda:0')
before filtering torch.Size([9, 146032])
after filtering torch.Size([4, 146032])
num_ins_points_after_filtering tensor([3189, 2366, 2632, 2418], device='cuda:0')
Working on scene0203_00 class table
masks_to_be_merged [[0, 1, 2, 30, 31, 51, 53, 54, 69, 70, 71, 72], [3, 4, 5, 6, 7, 14, 16, 17, 18, 19, 32, 50, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68], [20, 21, 22, 46, 47], [29, 36], [37, 38], [41, 42]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 13/146 [00:00<00:01, 128.93it/s][A
Calculating viewed counts for every point:  19%|█▉        | 28/146 [00:00<00:00, 137.35it/s][A
Calculating viewed counts for every point:  29%|██▉       | 42/146 [00:00<00:00, 117.37it/s][A
Calculating viewed counts for every point:  38%|███▊      | 55/146 [00:00<00:00, 118.98it/s][A
Calculating viewed counts for every point:  50%|█████     | 73/146 [00:00<00:00, 136.06it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 87/146 [00:00<00:00, 124.41it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 100/146 [00:00<00:00, 97.70it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 120/146 [00:00<00:00, 122.25it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 134/146 [00:01<00:00, 115.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [02:22<09:37,  5.07s/it]detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(3864, device='cuda:0')
before filtering torch.Size([6, 205756])
after filtering torch.Size([3, 205756])
num_ins_points_after_filtering tensor([1543, 1490,  374], device='cuda:0')
Working on scene0207_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 33, 35, 43, 46, 47, 48, 49, 50, 51], [7, 8, 9, 12, 13, 14, 15], [11, 16, 17, 18, 21, 22, 23, 24, 32, 34, 36, 37, 40, 41, 42], [19, 20], [26, 27, 28], [29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 3/199 [00:00<00:09, 21.30it/s][A
Calculating viewed counts for every point:   4%|▍         | 8/199 [00:00<00:05, 35.72it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/199 [00:00<00:03, 49.64it/s][A
Calculating viewed counts for every point:  11%|█         | 21/199 [00:00<00:04, 43.10it/s][A
Calculating viewed counts for every point:  15%|█▍        | 29/199 [00:00<00:03, 53.62it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:02, 59.37it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/199 [00:00<00:02, 62.42it/s][A
Calculating viewed counts for every point:  26%|██▌       | 51/199 [00:00<00:02, 55.29it/s][A
Calculating viewed counts for every point:  29%|██▊       | 57/199 [00:01<00:02, 48.91it/s][A
Calculating viewed counts for every point:  32%|███▏      | 63/199 [00:01<00:02, 46.29it/s][A
Calculating viewed counts for every point:  35%|███▌      | 70/199 [00:01<00:02, 51.74it/s][A
Calculating viewed counts for every point:  38%|███▊      | 76/199 [00:01<00:02, 52.11it/s][A
Calculating viewed counts for every point:  42%|████▏     | 83/199 [00:01<00:02, 56.48it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/199 [00:01<00:02, 54.90it/s][A
Calculating viewed counts for every point:  48%|████▊     | 95/199 [00:01<00:02, 49.29it/s][A
Calculating viewed counts for every point:  51%|█████     | 101/199 [00:01<00:01, 50.52it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/199 [00:02<00:01, 46.30it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 112/199 [00:02<00:01, 44.61it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 118/199 [00:02<00:01, 45.41it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 125/199 [00:02<00:01, 50.12it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 133/199 [00:02<00:01, 55.78it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 142/199 [00:02<00:00, 62.83it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 149/199 [00:02<00:00, 50.31it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 155/199 [00:03<00:00, 51.01it/s][A
Calculating viewed counts for every point:  81%|████████  | 161/199 [00:03<00:00, 50.89it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 168/199 [00:03<00:00, 52.52it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 174/199 [00:03<00:00, 53.32it/s][A
Calculating viewed counts for every point:  90%|█████████ | 180/199 [00:03<00:00, 53.35it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 187/199 [00:03<00:00, 55.84it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 194/199 [00:03<00:00, 56.87it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [02:29<10:07,  5.38s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(6380, device='cuda:0')
before filtering torch.Size([6, 304396])
after filtering torch.Size([2, 304396])
num_ins_points_after_filtering tensor([2230, 1145], device='cuda:0')
Working on scene0208_00 class table
masks_to_be_merged [[1, 70, 71, 72, 73], [2, 3, 4, 5, 7, 8, 9, 36, 37, 38, 39], [10, 11], [12, 13], [14, 15, 16, 29], [17, 18, 19, 20], [23, 24, 25], [26, 27, 28], [32, 33, 74, 75], [40, 41, 42, 43, 44], [45, 46], [48, 49, 50], [52, 53], [61, 62, 63, 64, 65, 66, 67, 68, 69], [77, 78], [79, 81, 82]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 5/239 [00:00<00:04, 47.05it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/239 [00:00<00:02, 77.53it/s][A
Calculating viewed counts for every point:  10%|█         | 24/239 [00:00<00:02, 77.80it/s][A
Calculating viewed counts for every point:  13%|█▎        | 32/239 [00:00<00:02, 72.68it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/239 [00:00<00:02, 70.61it/s][A
Calculating viewed counts for every point:  21%|██▏       | 51/239 [00:00<00:02, 72.17it/s][A
Calculating viewed counts for every point:  25%|██▍       | 59/239 [00:00<00:02, 74.31it/s][A
Calculating viewed counts for every point:  28%|██▊       | 68/239 [00:00<00:02, 77.71it/s][A
Calculating viewed counts for every point:  32%|███▏      | 76/239 [00:01<00:02, 73.50it/s][A
Calculating viewed counts for every point:  36%|███▌      | 85/239 [00:01<00:02, 75.58it/s][A
Calculating viewed counts for every point:  40%|███▉      | 95/239 [00:01<00:01, 82.13it/s][A
Calculating viewed counts for every point:  44%|████▎     | 104/239 [00:01<00:01, 82.75it/s][A
Calculating viewed counts for every point:  48%|████▊     | 114/239 [00:01<00:01, 87.13it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 123/239 [00:01<00:01, 84.05it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 132/239 [00:01<00:01, 81.77it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 141/239 [00:01<00:01, 83.56it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 150/239 [00:01<00:01, 81.35it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 159/239 [00:02<00:00, 81.52it/s][A
Calculating viewed counts for every point:  70%|███████   | 168/239 [00:02<00:00, 79.21it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 178/239 [00:02<00:00, 80.67it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 189/239 [00:02<00:00, 87.01it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 198/239 [00:02<00:00, 79.05it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 207/239 [00:02<00:00, 78.65it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 215/239 [00:02<00:00, 74.94it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 224/239 [00:02<00:00, 77.71it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 232/239 [00:02<00:00, 77.27it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [02:35<10:23,  5.57s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(12119, device='cuda:0')
before filtering torch.Size([16, 407386])
after filtering torch.Size([3, 407386])
num_ins_points_after_filtering tensor([2503, 1800, 1940], device='cuda:0')
Working on scene0217_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 95, 96, 98, 100], [34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 97, 99, 101], [45, 46, 47]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 12/125 [00:00<00:00, 116.28it/s][A
Calculating viewed counts for every point:  22%|██▏       | 28/125 [00:00<00:00, 134.11it/s][A
Calculating viewed counts for every point:  34%|███▎      | 42/125 [00:00<00:00, 118.65it/s][A
Calculating viewed counts for every point:  46%|████▌     | 57/125 [00:00<00:00, 123.48it/s][A
Calculating viewed counts for every point:  60%|██████    | 75/125 [00:00<00:00, 141.71it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 90/125 [00:00<00:00, 142.18it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 108/125 [00:00<00:00, 144.64it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 123/125 [00:00<00:00, 118.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [02:39<09:35,  5.18s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(19291, device='cuda:0')
before filtering torch.Size([5, 126385])
after filtering torch.Size([4, 126385])
num_ins_points_after_filtering tensor([9022, 2811, 3328, 3595], device='cuda:0')
Working on scene0221_00 class table
masks_to_be_merged [[1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 12], [15, 16, 17, 18, 19, 20, 21, 22, 23], [24, 25, 26], [27, 28], [29, 30, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 3/98 [00:00<00:03, 27.62it/s][A
Calculating viewed counts for every point:  20%|██        | 20/98 [00:00<00:00, 106.40it/s][A
Calculating viewed counts for every point:  34%|███▎      | 33/98 [00:00<00:00, 114.33it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 53/98 [00:00<00:00, 135.15it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 72/98 [00:00<00:00, 147.11it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 87/98 [00:00<00:00, 122.60it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [02:41<07:38,  4.17s/it]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(11690, device='cuda:0')
before filtering torch.Size([7, 185828])
after filtering torch.Size([6, 185828])
num_ins_points_after_filtering tensor([2433, 1207, 2726, 1462, 1734, 1416], device='cuda:0')
Working on scene0222_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 295, 296, 298, 299, 300, 301, 302, 303], [20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 118, 119, 121, 122, 124, 125], [29, 31, 32, 123, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140], [33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], [130, 131, 132], [141, 142, 143, 144], [162, 164, 176], [163, 165], [226, 227, 228, 229, 249, 250, 251], [231, 232, 240, 241, 242, 243, 244, 245, 246, 247, 248], [233, 234, 235, 236, 322], [237, 238], [293, 294, 297, 304, 305, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321], [306, 310, 312, 319, 320]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 17/543 [00:00<00:03, 165.99it/s][A
Calculating viewed counts for every point:   6%|▋         | 34/543 [00:00<00:04, 126.62it/s][A
Calculating viewed counts for every point:   9%|▉         | 48/543 [00:00<00:04, 111.46it/s][A
Calculating viewed counts for every point:  11%|█         | 60/543 [00:00<00:05, 83.05it/s] [A
Calculating viewed counts for every point:  14%|█▍        | 78/543 [00:00<00:04, 105.65it/s][A
Calculating viewed counts for every point:  17%|█▋        | 90/543 [00:00<00:04, 108.01it/s][A
Calculating viewed counts for every point:  20%|█▉        | 106/543 [00:00<00:03, 118.09it/s][A
Calculating viewed counts for every point:  22%|██▏       | 121/543 [00:01<00:03, 126.00it/s][A
Calculating viewed counts for every point:  26%|██▌       | 141/543 [00:01<00:02, 144.94it/s][A
Calculating viewed counts for every point:  29%|██▉       | 157/543 [00:01<00:02, 138.15it/s][A
Calculating viewed counts for every point:  32%|███▏      | 173/543 [00:01<00:02, 141.54it/s][A
Calculating viewed counts for every point:  35%|███▍      | 188/543 [00:01<00:03, 111.54it/s][A
Calculating viewed counts for every point:  37%|███▋      | 201/543 [00:01<00:03, 110.88it/s][A
Calculating viewed counts for every point:  39%|███▉      | 213/543 [00:01<00:03, 107.81it/s][A
Calculating viewed counts for every point:  41%|████▏     | 225/543 [00:01<00:02, 109.32it/s][A
Calculating viewed counts for every point:  44%|████▎     | 237/543 [00:02<00:02, 111.09it/s][A
Calculating viewed counts for every point:  46%|████▌     | 250/543 [00:02<00:02, 115.85it/s][A
Calculating viewed counts for every point:  48%|████▊     | 263/543 [00:02<00:02, 117.50it/s][A
Calculating viewed counts for every point:  51%|█████     | 275/543 [00:02<00:02, 116.87it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 291/543 [00:02<00:01, 128.13it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 305/543 [00:02<00:01, 130.33it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 319/543 [00:02<00:01, 123.11it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 334/543 [00:02<00:01, 129.14it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 349/543 [00:02<00:01, 132.76it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 364/543 [00:03<00:01, 135.89it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 378/543 [00:03<00:01, 127.93it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 392/543 [00:03<00:01, 129.68it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 408/543 [00:03<00:01, 134.34it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 422/543 [00:03<00:00, 121.12it/s][A
Calculating viewed counts for every point:  81%|████████  | 439/543 [00:03<00:00, 129.41it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 456/543 [00:03<00:00, 138.79it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 473/543 [00:03<00:00, 147.11it/s][A
Calculating viewed counts for every point:  90%|█████████ | 491/543 [00:03<00:00, 149.86it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 507/543 [00:04<00:00, 135.32it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 521/543 [00:04<00:00, 125.81it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 534/543 [00:04<00:00, 124.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [02:54<12:41,  6.98s/it]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(11139, device='cuda:0')
before filtering torch.Size([14, 234831])
after filtering torch.Size([3, 234831])
num_ins_points_after_filtering tensor([3102,  911, 5962], device='cuda:0')
Working on scene0231_00 class table
masks_to_be_merged [[0, 2, 5, 6, 7, 8, 9, 10, 11, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 237, 238, 240, 241], [1, 3, 4, 34, 39, 63, 65, 67, 69, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [12, 13, 14, 15, 16, 17, 18, 19, 44, 46, 48, 49, 50, 51, 52, 82, 83, 84, 90, 91, 92, 93, 94, 179, 180, 234, 235, 236, 239, 242, 243, 244, 245], [20, 21, 85, 86, 87, 246, 248], [22, 247], [23, 89], [24, 181], [25, 80], [26, 27, 28, 29], [70, 72, 73, 110, 111, 112, 113, 218, 219, 220, 222], [114, 115], [132, 137], [145, 146], [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 189, 191, 192, 223, 224, 225, 227], [185, 188], [214, 215, 216, 217]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 7/444 [00:00<00:06, 69.23it/s][A
Calculating viewed counts for every point:   4%|▎         | 16/444 [00:00<00:05, 74.71it/s][A
Calculating viewed counts for every point:   6%|▌         | 26/444 [00:00<00:05, 82.95it/s][A
Calculating viewed counts for every point:   8%|▊         | 35/444 [00:00<00:06, 67.91it/s][A
Calculating viewed counts for every point:  10%|▉         | 43/444 [00:00<00:06, 59.14it/s][A
Calculating viewed counts for every point:  11%|█▏        | 50/444 [00:00<00:06, 61.96it/s][A
Calculating viewed counts for every point:  13%|█▎        | 57/444 [00:00<00:06, 62.84it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/444 [00:00<00:05, 69.61it/s][A
Calculating viewed counts for every point:  17%|█▋        | 74/444 [00:01<00:05, 68.78it/s][A
Calculating viewed counts for every point:  19%|█▉        | 84/444 [00:01<00:04, 76.04it/s][A
Calculating viewed counts for every point:  21%|██        | 92/444 [00:01<00:04, 74.57it/s][A
Calculating viewed counts for every point:  23%|██▎       | 102/444 [00:01<00:04, 80.37it/s][A
Calculating viewed counts for every point:  25%|██▌       | 111/444 [00:01<00:04, 77.88it/s][A
Calculating viewed counts for every point:  27%|██▋       | 119/444 [00:01<00:04, 75.17it/s][A
Calculating viewed counts for every point:  29%|██▉       | 129/444 [00:01<00:03, 80.25it/s][A
Calculating viewed counts for every point:  31%|███       | 138/444 [00:01<00:04, 74.11it/s][A
Calculating viewed counts for every point:  33%|███▎      | 146/444 [00:02<00:04, 71.25it/s][A
Calculating viewed counts for every point:  35%|███▍      | 154/444 [00:02<00:04, 71.82it/s][A
Calculating viewed counts for every point:  36%|███▋      | 162/444 [00:02<00:03, 72.86it/s][A
Calculating viewed counts for every point:  38%|███▊      | 170/444 [00:02<00:04, 68.48it/s][A
Calculating viewed counts for every point:  40%|████      | 178/444 [00:02<00:03, 71.12it/s][A
Calculating viewed counts for every point:  42%|████▏     | 188/444 [00:02<00:03, 78.85it/s][A
Calculating viewed counts for every point:  44%|████▍     | 197/444 [00:02<00:03, 81.47it/s][A
Calculating viewed counts for every point:  46%|████▋     | 206/444 [00:02<00:02, 83.18it/s][A
Calculating viewed counts for every point:  48%|████▊     | 215/444 [00:02<00:03, 73.85it/s][A
Calculating viewed counts for every point:  50%|█████     | 223/444 [00:03<00:03, 59.10it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 233/444 [00:03<00:03, 66.90it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 242/444 [00:03<00:02, 68.66it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 251/444 [00:03<00:02, 73.74it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 259/444 [00:03<00:02, 70.31it/s][A
Calculating viewed counts for every point:  61%|██████    | 270/444 [00:03<00:02, 79.25it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 279/444 [00:03<00:02, 67.34it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 287/444 [00:04<00:02, 62.86it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 294/444 [00:04<00:02, 63.66it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 302/444 [00:04<00:02, 64.80it/s][A
Calculating viewed counts for every point:  70%|███████   | 311/444 [00:04<00:01, 70.03it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 321/444 [00:04<00:01, 76.19it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 329/444 [00:04<00:01, 70.90it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 338/444 [00:04<00:01, 74.29it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 346/444 [00:04<00:01, 72.06it/s][A
Calculating viewed counts for every point:  80%|████████  | 357/444 [00:04<00:01, 80.60it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 367/444 [00:05<00:00, 84.90it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 376/444 [00:05<00:00, 75.95it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 385/444 [00:05<00:00, 77.92it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 393/444 [00:05<00:00, 74.94it/s][A
Calculating viewed counts for every point:  91%|█████████ | 402/444 [00:05<00:00, 77.15it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 412/444 [00:05<00:00, 73.36it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 422/444 [00:05<00:00, 78.27it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 433/444 [00:05<00:00, 85.45it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 442/444 [00:06<00:00, 77.30it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [03:08<16:27,  9.15s/it]detected_ratio_thres_value tensor(0.3111, device='cuda:0')
final masked points tensor(20728, device='cuda:0')
before filtering torch.Size([16, 419537])
after filtering torch.Size([4, 419537])
num_ins_points_after_filtering tensor([4121, 7591, 4425, 3572], device='cuda:0')
Working on scene0246_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 38, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 73, 74], [5, 7, 8, 16, 18, 19, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 120, 121, 122, 123], [6, 9, 10, 11, 12, 13, 14, 15, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169], [26, 27], [75, 76, 77, 78], [79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 107, 113, 114, 115, 116, 117], [100, 101], [106, 108, 109, 110, 111, 112]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/296 [00:00<00:02, 136.11it/s][A
Calculating viewed counts for every point:  10%|█         | 31/296 [00:00<00:01, 146.46it/s][A
Calculating viewed counts for every point:  16%|█▌        | 46/296 [00:00<00:01, 136.42it/s][A
Calculating viewed counts for every point:  23%|██▎       | 67/296 [00:00<00:01, 161.49it/s][A
Calculating viewed counts for every point:  28%|██▊       | 84/296 [00:00<00:01, 144.10it/s][A
Calculating viewed counts for every point:  34%|███▍      | 100/296 [00:00<00:01, 146.79it/s][A
Calculating viewed counts for every point:  39%|███▉      | 115/296 [00:00<00:01, 132.72it/s][A
Calculating viewed counts for every point:  45%|████▍     | 132/296 [00:00<00:01, 141.95it/s][A
Calculating viewed counts for every point:  50%|█████     | 149/296 [00:01<00:00, 148.32it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 165/296 [00:01<00:00, 134.34it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 182/296 [00:01<00:00, 141.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 197/296 [00:01<00:00, 129.88it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 211/296 [00:01<00:00, 126.59it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 224/296 [00:01<00:00, 111.08it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 242/296 [00:01<00:00, 127.35it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 257/296 [00:01<00:00, 132.41it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 271/296 [00:02<00:00, 131.18it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 287/296 [00:02<00:00, 136.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [03:15<14:56,  8.37s/it]detected_ratio_thres_value tensor(0.3448, device='cuda:0')
final masked points tensor(12147, device='cuda:0')
before filtering torch.Size([8, 201062])
after filtering torch.Size([4, 201062])
num_ins_points_after_filtering tensor([6505, 1754, 1479, 1606], device='cuda:0')
Working on scene0249_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 170, 171], [34, 35], [38, 39, 40, 41, 163, 164, 165, 166, 167, 168, 169], [42, 45], [144, 145, 146], [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 10/274 [00:00<00:02, 95.44it/s][A
Calculating viewed counts for every point:   7%|▋         | 20/274 [00:00<00:02, 86.33it/s][A
Calculating viewed counts for every point:  12%|█▏        | 34/274 [00:00<00:02, 107.60it/s][A
Calculating viewed counts for every point:  16%|█▋        | 45/274 [00:00<00:02, 93.11it/s] [A
Calculating viewed counts for every point:  20%|██        | 55/274 [00:00<00:02, 87.80it/s][A
Calculating viewed counts for every point:  25%|██▍       | 68/274 [00:00<00:02, 98.03it/s][A
Calculating viewed counts for every point:  29%|██▉       | 79/274 [00:00<00:02, 88.10it/s][A
Calculating viewed counts for every point:  32%|███▏      | 89/274 [00:01<00:02, 81.38it/s][A
Calculating viewed counts for every point:  37%|███▋      | 102/274 [00:01<00:01, 92.70it/s][A
Calculating viewed counts for every point:  42%|████▏     | 116/274 [00:01<00:01, 104.59it/s][A
Calculating viewed counts for every point:  46%|████▋     | 127/274 [00:01<00:01, 102.06it/s][A
Calculating viewed counts for every point:  50%|█████     | 138/274 [00:01<00:01, 98.18it/s] [A
Calculating viewed counts for every point:  55%|█████▍    | 150/274 [00:01<00:01, 97.69it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 161/274 [00:01<00:01, 100.63it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 174/274 [00:01<00:00, 106.13it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 185/274 [00:01<00:00, 100.98it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 196/274 [00:02<00:00, 102.38it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 207/274 [00:02<00:00, 90.81it/s] [A
Calculating viewed counts for every point:  79%|███████▉  | 217/274 [00:02<00:00, 92.68it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 227/274 [00:02<00:00, 92.53it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 240/274 [00:02<00:00, 101.08it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 252/274 [00:02<00:00, 105.77it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 264/274 [00:02<00:00, 108.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [03:22<14:17,  8.09s/it]detected_ratio_thres_value tensor(0.3721, device='cuda:0')
final masked points tensor(22897, device='cuda:0')
before filtering torch.Size([7, 331031])
after filtering torch.Size([2, 331031])
num_ins_points_after_filtering tensor([ 1912, 19742], device='cuda:0')
Working on scene0251_00 class table
masks_to_be_merged [[0, 1, 2], [3, 4, 5], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], [60, 61, 62, 63], [65, 66, 67, 68], [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 113], [108, 110, 114, 117], [130, 131]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 7/155 [00:00<00:02, 63.37it/s][A
Calculating viewed counts for every point:  12%|█▏        | 18/155 [00:00<00:01, 86.19it/s][A
Calculating viewed counts for every point:  21%|██        | 32/155 [00:00<00:01, 109.24it/s][A
Calculating viewed counts for every point:  29%|██▉       | 45/155 [00:00<00:01, 96.28it/s] [A
Calculating viewed counts for every point:  35%|███▌      | 55/155 [00:00<00:01, 88.26it/s][A
Calculating viewed counts for every point:  42%|████▏     | 65/155 [00:00<00:01, 74.08it/s][A
Calculating viewed counts for every point:  47%|████▋     | 73/155 [00:00<00:01, 68.06it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 81/155 [00:01<00:01, 65.82it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 95/155 [00:01<00:00, 83.50it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 104/155 [00:01<00:00, 83.90it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 113/155 [00:01<00:00, 79.02it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 123/155 [00:01<00:00, 83.80it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 136/155 [00:01<00:00, 96.14it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 146/155 [00:01<00:00, 92.64it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [03:28<12:58,  7.41s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(15656, device='cuda:0')
before filtering torch.Size([8, 226765])
after filtering torch.Size([3, 226765])
num_ins_points_after_filtering tensor([7542, 1932, 5791], device='cuda:0')
Working on scene0256_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [65, 69, 70, 71], [66, 67, 68, 72, 87, 88, 89, 90, 91, 92, 99]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:00, 274.14it/s][A
Calculating viewed counts for every point:  36%|███▌      | 56/156 [00:00<00:00, 178.75it/s][A
Calculating viewed counts for every point:  49%|████▊     | 76/156 [00:00<00:00, 153.88it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 102/156 [00:00<00:00, 180.59it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 122/156 [00:00<00:00, 171.42it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 146/156 [00:00<00:00, 188.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [03:31<10:32,  6.08s/it]detected_ratio_thres_value tensor(0.3548, device='cuda:0')
final masked points tensor(6061, device='cuda:0')
before filtering torch.Size([3, 108517])
after filtering torch.Size([1, 108517])
num_ins_points_after_filtering tensor([6045], device='cuda:0')
Working on scene0257_00 class table
masks_to_be_merged [[2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 102, 103, 104, 105, 106, 107, 108, 109, 110, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134], [7, 11, 29, 31, 111], [47, 49, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143], [54, 57, 60, 64, 68, 72, 75, 77, 81, 83, 84], [58, 61, 66, 69, 73, 76, 78, 82, 85], [59, 70], [63, 87, 88, 92, 95, 98], [89, 90, 93, 97, 100], [91, 94], [96, 99, 101], [113, 114, 115, 116, 117, 118], [119, 120, 121], [144, 145, 146], [147, 148], [149, 152, 153, 154], [150, 151, 155]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 6/165 [00:00<00:02, 59.87it/s][A
Calculating viewed counts for every point:  16%|█▋        | 27/165 [00:00<00:00, 148.04it/s][A
Calculating viewed counts for every point:  28%|██▊       | 46/165 [00:00<00:00, 167.07it/s][A
Calculating viewed counts for every point:  40%|████      | 66/165 [00:00<00:00, 178.99it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/165 [00:00<00:00, 163.03it/s][A
Calculating viewed counts for every point:  61%|██████    | 101/165 [00:00<00:00, 162.03it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 121/165 [00:00<00:00, 172.29it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 139/165 [00:01<00:00, 94.48it/s] [A
Calculating viewed counts for every point:  93%|█████████▎| 154/165 [00:01<00:00, 104.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [03:36<09:50,  5.73s/it]detected_ratio_thres_value tensor(0.3438, device='cuda:0')
final masked points tensor(6693, device='cuda:0')
before filtering torch.Size([16, 180928])
after filtering torch.Size([7, 180928])
num_ins_points_after_filtering tensor([2454, 1466,  402,  707,  382,  419,   78], device='cuda:0')
Working on scene0277_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 83, 84, 85], [16, 17, 56, 57, 58, 59, 60, 61], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 18/115 [00:00<00:00, 179.25it/s][A
Calculating viewed counts for every point:  31%|███▏      | 36/115 [00:00<00:00, 136.34it/s][A
Calculating viewed counts for every point:  44%|████▍     | 51/115 [00:00<00:00, 137.72it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 66/115 [00:00<00:00, 120.86it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 83/115 [00:00<00:00, 134.98it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 98/115 [00:00<00:00, 136.45it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 113/115 [00:00<00:00, 133.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [03:39<08:28,  4.99s/it]detected_ratio_thres_value tensor(0.3684, device='cuda:0')
final masked points tensor(10953, device='cuda:0')
before filtering torch.Size([3, 79184])
after filtering torch.Size([3, 79184])
num_ins_points_after_filtering tensor([2977, 1235, 6740], device='cuda:0')
Working on scene0278_00 class table
masks_to_be_merged [[0, 1, 28], [2, 29, 30], [3, 4, 5, 6, 8, 9, 31, 32, 33, 34, 35, 36, 37], [21, 22], [23, 24], [25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 11/80 [00:00<00:00, 96.90it/s][A
Calculating viewed counts for every point:  38%|███▊      | 30/80 [00:00<00:00, 148.63it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 49/80 [00:00<00:00, 165.37it/s][A
Calculating viewed counts for every point:  82%|████████▎ | 66/80 [00:00<00:00, 118.57it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [03:41<06:34,  3.90s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(6093, device='cuda:0')
before filtering torch.Size([6, 77020])
after filtering torch.Size([1, 77020])
num_ins_points_after_filtering tensor([5849], device='cuda:0')
Working on scene0300_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 89, 90, 91, 92, 93, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], [20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], [83, 84, 85, 86, 87]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 24/175 [00:00<00:00, 204.01it/s][A
Calculating viewed counts for every point:  26%|██▌       | 45/175 [00:00<00:00, 203.88it/s][A
Calculating viewed counts for every point:  38%|███▊      | 67/175 [00:00<00:00, 207.95it/s][A
Calculating viewed counts for every point:  50%|█████     | 88/175 [00:00<00:00, 207.54it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 109/175 [00:00<00:00, 196.84it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 131/175 [00:00<00:00, 199.90it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 153/175 [00:00<00:00, 205.86it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [03:45<06:33,  3.93s/it]detected_ratio_thres_value tensor(0.3824, device='cuda:0')
final masked points tensor(9837, device='cuda:0')
before filtering torch.Size([3, 140216])
after filtering torch.Size([2, 140216])
num_ins_points_after_filtering tensor([5843, 3683], device='cuda:0')
Working on scene0304_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], [39, 40, 41, 42, 43, 65, 66]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 5/178 [00:00<00:03, 43.85it/s][A
Calculating viewed counts for every point:  11%|█         | 19/178 [00:00<00:01, 94.76it/s][A
Calculating viewed counts for every point:  20%|█▉        | 35/178 [00:00<00:01, 119.88it/s][A
Calculating viewed counts for every point:  30%|███       | 54/178 [00:00<00:00, 145.09it/s][A
Calculating viewed counts for every point:  39%|███▉      | 69/178 [00:00<00:01, 83.95it/s] [A
Calculating viewed counts for every point:  48%|████▊     | 86/178 [00:00<00:00, 102.05it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 100/178 [00:00<00:00, 108.24it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 120/178 [00:01<00:00, 129.53it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 135/178 [00:01<00:00, 118.88it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 149/178 [00:01<00:00, 109.89it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 170/178 [00:01<00:00, 132.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [03:48<06:22,  3.87s/it]detected_ratio_thres_value tensor(0.3714, device='cuda:0')
final masked points tensor(6567, device='cuda:0')
before filtering torch.Size([2, 164016])
after filtering torch.Size([1, 164016])
num_ins_points_after_filtering tensor([6037], device='cuda:0')
Working on scene0307_00 class table
masks_to_be_merged [[1, 2, 3, 4, 28, 29, 30, 31, 32, 86, 88, 89, 90, 91], [8, 9, 10, 11, 12, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [14, 15], [16, 17], [18, 19, 20, 22, 23, 65, 66, 67, 69, 70, 72, 74, 75, 77, 79, 80, 82, 83], [21, 24, 25, 26, 68, 71, 73, 76, 78, 81, 84, 85, 87], [33, 34, 35], [49, 50, 51, 52], [53, 54, 55, 56, 57, 58], [59, 60, 61, 62, 63]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/205 [00:00<00:03, 65.21it/s][A
Calculating viewed counts for every point:   7%|▋         | 15/205 [00:00<00:02, 73.05it/s][A
Calculating viewed counts for every point:  11%|█         | 23/205 [00:00<00:03, 49.29it/s][A
Calculating viewed counts for every point:  15%|█▍        | 30/205 [00:00<00:03, 54.98it/s][A
Calculating viewed counts for every point:  18%|█▊        | 37/205 [00:00<00:02, 58.58it/s][A
Calculating viewed counts for every point:  22%|██▏       | 45/205 [00:00<00:02, 64.52it/s][A
Calculating viewed counts for every point:  25%|██▌       | 52/205 [00:00<00:02, 61.25it/s][A
Calculating viewed counts for every point:  29%|██▉       | 59/205 [00:01<00:02, 57.47it/s][A
Calculating viewed counts for every point:  32%|███▏      | 65/205 [00:01<00:02, 49.53it/s][A
Calculating viewed counts for every point:  35%|███▌      | 72/205 [00:01<00:02, 50.13it/s][A
Calculating viewed counts for every point:  38%|███▊      | 78/205 [00:01<00:02, 51.07it/s][A
Calculating viewed counts for every point:  41%|████      | 84/205 [00:01<00:02, 53.05it/s][A
Calculating viewed counts for every point:  44%|████▍     | 90/205 [00:01<00:02, 52.94it/s][A
Calculating viewed counts for every point:  47%|████▋     | 96/205 [00:01<00:01, 54.52it/s][A
Calculating viewed counts for every point:  50%|█████     | 103/205 [00:01<00:01, 56.48it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 109/205 [00:01<00:01, 53.29it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 115/205 [00:02<00:01, 51.41it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 121/205 [00:02<00:01, 51.34it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 127/205 [00:02<00:01, 50.90it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 135/205 [00:02<00:01, 57.21it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 141/205 [00:02<00:01, 48.77it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 148/205 [00:02<00:01, 53.24it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 154/205 [00:02<00:01, 49.15it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 160/205 [00:03<00:00, 45.32it/s][A
Calculating viewed counts for every point:  81%|████████  | 166/205 [00:03<00:00, 47.55it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 174/205 [00:03<00:00, 55.15it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 181/205 [00:03<00:00, 55.11it/s][A
Calculating viewed counts for every point:  91%|█████████ | 187/205 [00:03<00:00, 51.52it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 193/205 [00:03<00:00, 51.51it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 199/205 [00:03<00:00, 50.81it/s][A
Calculating viewed counts for every point: 100%|██████████| 205/205 [00:03<00:00, 48.48it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [03:56<08:04,  4.94s/it]detected_ratio_thres_value tensor(0.2188, device='cuda:0')
final masked points tensor(12317, device='cuda:0')
before filtering torch.Size([10, 371616])
after filtering torch.Size([6, 371616])
num_ins_points_after_filtering tensor([2314, 2037,  795, 1513, 1925, 1307], device='cuda:0')
Working on scene0314_00 class table
masks_to_be_merged [[0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], [44, 45, 46, 47]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 18/93 [00:00<00:00, 179.50it/s][A
Calculating viewed counts for every point:  48%|████▊     | 45/93 [00:00<00:00, 231.23it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 69/93 [00:00<00:00, 152.79it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 45/142 [03:58<06:43,  4.16s/it]detected_ratio_thres_value tensor(0.5217, device='cuda:0')
final masked points tensor(4358, device='cuda:0')
before filtering torch.Size([2, 87446])
after filtering torch.Size([1, 87446])
num_ins_points_after_filtering tensor([4290], device='cuda:0')
Working on scene0316_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 40], [5, 6, 7, 41], [8, 43], [9, 10, 11, 12, 13], [14, 15, 16, 17, 18, 19, 20, 21, 22, 44, 45, 46, 47, 48, 51, 52], [23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 37, 39, 49, 50], [26, 32, 34, 36, 38]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 10/77 [00:00<00:00, 96.95it/s][A
Calculating viewed counts for every point:  31%|███       | 24/77 [00:00<00:00, 99.42it/s][A
Calculating viewed counts for every point:  44%|████▍     | 34/77 [00:00<00:00, 97.68it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 51/77 [00:00<00:00, 119.78it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 64/77 [00:00<00:00, 103.42it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 76/77 [00:00<00:00, 107.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [04:00<05:39,  3.53s/it]detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(16402, device='cuda:0')
before filtering torch.Size([7, 78769])
after filtering torch.Size([5, 78769])
num_ins_points_after_filtering tensor([1613, 2071, 2365, 3256, 6898], device='cuda:0')
Working on scene0328_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [6, 7, 8, 9, 10, 11, 12], [26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [31, 33], [53, 54, 55]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 4/142 [00:00<00:04, 32.89it/s][A
Calculating viewed counts for every point:  11%|█         | 15/142 [00:00<00:01, 69.47it/s][A
Calculating viewed counts for every point:  25%|██▍       | 35/142 [00:00<00:00, 123.21it/s][A
Calculating viewed counts for every point:  38%|███▊      | 54/142 [00:00<00:00, 145.15it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 77/142 [00:00<00:00, 173.12it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 103/142 [00:00<00:00, 195.59it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 124/142 [00:00<00:00, 199.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [04:03<05:02,  3.19s/it]detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(14932, device='cuda:0')
before filtering torch.Size([5, 111467])
after filtering torch.Size([3, 111467])
num_ins_points_after_filtering tensor([6562, 2813, 5464], device='cuda:0')
Working on scene0329_00 class table
masks_to_be_merged [[0, 1, 11], [2, 3, 4, 5, 6, 8, 9, 10, 23, 24, 25, 26, 27, 28, 29, 30, 50, 51, 52, 53, 54, 55, 56, 57], [7, 49], [17, 18, 19, 20, 21, 73, 74, 75, 76], [32, 33, 34, 35, 36, 37, 38], [40, 41], [43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 64, 65, 66], [48, 63, 67, 68, 69, 70, 71, 72]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 7/156 [00:00<00:02, 65.14it/s][A
Calculating viewed counts for every point:  11%|█         | 17/156 [00:00<00:02, 69.21it/s][A
Calculating viewed counts for every point:  17%|█▋        | 27/156 [00:00<00:01, 79.77it/s][A
Calculating viewed counts for every point:  25%|██▌       | 39/156 [00:00<00:01, 93.65it/s][A
Calculating viewed counts for every point:  31%|███▏      | 49/156 [00:00<00:01, 85.89it/s][A
Calculating viewed counts for every point:  37%|███▋      | 58/156 [00:00<00:01, 70.78it/s][A
Calculating viewed counts for every point:  44%|████▍     | 69/156 [00:00<00:01, 79.58it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 81/156 [00:00<00:00, 86.06it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 90/156 [00:01<00:00, 76.22it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 102/156 [00:01<00:00, 87.14it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 112/156 [00:01<00:00, 86.33it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 122/156 [00:01<00:00, 89.83it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 132/156 [00:01<00:00, 88.76it/s][A
Calculating viewed counts for every point:  91%|█████████ | 142/156 [00:01<00:00, 89.24it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 154/156 [00:01<00:00, 96.12it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [04:07<05:17,  3.38s/it]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(11624, device='cuda:0')
before filtering torch.Size([8, 355413])
after filtering torch.Size([4, 355413])
num_ins_points_after_filtering tensor([2094, 3074, 1399,  763], device='cuda:0')
Working on scene0334_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 8, 10, 12, 14, 116, 119, 122, 124, 126, 129, 131, 133, 135, 137, 138, 141, 143, 145], [5, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 123, 125, 128, 130, 132, 134, 136, 139, 140, 142, 144], [27, 30, 32, 50, 58, 60, 62, 65, 68, 71, 73, 75, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99], [33, 35, 36, 39, 40, 41, 45, 46, 51, 52, 54, 56, 59, 61, 63, 67, 70, 72], [37, 38, 43, 53, 55], [64, 66, 69, 74, 76], [79, 81, 95, 97, 98, 100, 101, 102, 103, 104]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 10/119 [00:00<00:01, 98.42it/s][A
Calculating viewed counts for every point:  18%|█▊        | 22/119 [00:00<00:00, 98.24it/s][A
Calculating viewed counts for every point:  27%|██▋       | 32/119 [00:00<00:01, 73.11it/s][A
Calculating viewed counts for every point:  34%|███▎      | 40/119 [00:00<00:01, 64.42it/s][A
Calculating viewed counts for every point:  44%|████▎     | 52/119 [00:00<00:00, 79.66it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 65/119 [00:00<00:00, 93.01it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 76/119 [00:00<00:00, 76.79it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 87/119 [00:01<00:00, 82.37it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 97/119 [00:01<00:00, 86.73it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 107/119 [00:01<00:00, 75.96it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [04:12<06:06,  3.94s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(12628, device='cuda:0')
before filtering torch.Size([7, 197174])
after filtering torch.Size([7, 197174])
num_ins_points_after_filtering tensor([1518, 3215, 2914, 1440,  918,  477, 2138], device='cuda:0')
Working on scene0338_00 class table
masks_to_be_merged [[0, 1, 2, 28, 30], [3, 4, 5, 6, 7, 27, 29, 31], [8, 9, 10, 11, 12, 13, 32, 33, 34, 35], [14, 15, 16, 17], [18, 19, 20, 21, 22, 23], [24, 25]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 9/81 [00:00<00:00, 88.63it/s][A
Calculating viewed counts for every point:  22%|██▏       | 18/81 [00:00<00:00, 71.14it/s][A
Calculating viewed counts for every point:  46%|████▌     | 37/81 [00:00<00:00, 117.51it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 50/81 [00:00<00:00, 98.39it/s] [A
Calculating viewed counts for every point:  79%|███████▉  | 64/81 [00:00<00:00, 110.58it/s][A
Calculating viewed counts for every point: 100%|██████████| 81/81 [00:00<00:00, 113.82it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [04:13<05:01,  3.28s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(13697, device='cuda:0')
before filtering torch.Size([6, 106339])
after filtering torch.Size([4, 106339])
num_ins_points_after_filtering tensor([2962,  659, 3268, 6058], device='cuda:0')
Working on scene0342_00 class table
masks_to_be_merged [[4, 5, 6, 7, 8, 9, 10], [12, 13, 14]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 25/93 [00:00<00:00, 248.42it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 50/93 [00:00<00:00, 171.59it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 72/93 [00:00<00:00, 172.33it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 91/93 [00:00<00:00, 177.93it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  36%|███▌      | 51/142 [04:15<03:59,  2.63s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(2561, device='cuda:0')
before filtering torch.Size([2, 89958])
after filtering torch.Size([2, 89958])
num_ins_points_after_filtering tensor([1656,  235], device='cuda:0')
Working on scene0343_00 class table
masks_to_be_merged [[0, 3, 6, 9, 12, 15, 17, 20, 23, 25, 29, 33, 37, 42, 183, 185, 186, 190, 194, 197, 200, 203, 206, 209, 212, 215, 218, 221, 222, 228, 234], [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 16, 18, 19, 21, 22, 27, 30, 34, 39, 40, 44, 48, 51, 54, 187, 189, 192, 193, 196, 198, 199, 201, 202, 204, 205, 207, 208, 210, 211, 213, 214, 216, 217, 219, 220, 226, 227, 231, 232, 238, 240, 246, 249, 252], [24, 28, 32, 36, 41, 47, 52, 55, 58, 61, 66, 67, 72, 75, 77, 82, 86, 89, 91, 184, 188, 195, 224, 225, 229, 233, 236, 243, 251, 253, 254, 255, 258, 267, 271, 275, 276], [26, 31, 35, 38, 43, 46, 50, 57, 60, 191, 223, 230, 235, 239, 242, 245, 248, 250], [45, 49, 53, 56, 59, 62, 65, 68, 71, 74, 79, 84, 88, 90, 93, 94, 105, 237, 241, 244, 247, 256, 260, 261, 263, 269], [63, 64, 70, 73, 78, 83, 87, 92, 95, 97, 101, 103, 104, 107, 109, 110, 113, 257, 259, 262, 264, 266, 272], [76, 96, 98, 100, 102, 106, 108, 111, 115, 120, 123, 128, 130, 132, 135, 136, 138, 142, 144, 145, 146, 148, 150, 152, 155, 265, 268, 273, 274, 277], [80, 85], [112, 114, 116, 119, 124, 129, 131, 133, 137, 139], [117, 121, 127, 141], [118, 122, 126], [147, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 21/124 [00:00<00:00, 205.87it/s][A
Calculating viewed counts for every point:  34%|███▍      | 42/124 [00:00<00:00, 120.13it/s][A
Calculating viewed counts for every point:  48%|████▊     | 60/124 [00:00<00:00, 132.48it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 81/124 [00:00<00:00, 155.79it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 99/124 [00:00<00:00, 161.29it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 120/124 [00:00<00:00, 174.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [04:22<05:52,  3.91s/it]detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(27573, device='cuda:0')
before filtering torch.Size([12, 165618])
after filtering torch.Size([9, 165618])
num_ins_points_after_filtering tensor([3311, 2149, 3656, 2092, 3311, 2537, 3138,  842, 6413], device='cuda:0')
Working on scene0351_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94], [17, 18, 20, 21, 34], [23, 24, 25, 26, 27], [28, 29, 30, 31, 32, 33], [36, 37], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66], [49, 50]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 17/147 [00:00<00:00, 142.35it/s][A
Calculating viewed counts for every point:  22%|██▏       | 32/147 [00:00<00:01, 93.68it/s] [A
Calculating viewed counts for every point:  31%|███▏      | 46/147 [00:00<00:00, 108.76it/s][A
Calculating viewed counts for every point:  39%|███▉      | 58/147 [00:00<00:01, 81.01it/s] [A
Calculating viewed counts for every point:  49%|████▉     | 72/147 [00:00<00:00, 90.98it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 83/147 [00:00<00:00, 94.15it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 94/147 [00:00<00:00, 97.97it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 105/147 [00:01<00:00, 91.55it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 124/147 [00:01<00:00, 115.10it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 137/147 [00:01<00:00, 87.74it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [04:26<05:55,  4.00s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(6478, device='cuda:0')
before filtering torch.Size([7, 172134])
after filtering torch.Size([4, 172134])
num_ins_points_after_filtering tensor([2112,  484, 1564, 2209], device='cuda:0')
Working on scene0353_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 10, 11, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 176, 177, 178, 179, 180, 181, 182], [7, 8, 9, 79, 80, 81, 174], [12, 13, 14, 15, 16, 17, 18, 19, 93], [20, 21, 22, 23, 24, 25, 94, 95, 96, 97, 98], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], [45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165], [64, 66, 68, 70, 71, 72, 73, 74, 76, 77, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172], [75, 173], [115, 116, 117, 118], [150, 151]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 16/299 [00:00<00:01, 158.44it/s][A
Calculating viewed counts for every point:  11%|█         | 32/299 [00:00<00:02, 129.40it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/299 [00:00<00:01, 148.76it/s][A
Calculating viewed counts for every point:  23%|██▎       | 68/299 [00:00<00:01, 159.61it/s][A
Calculating viewed counts for every point:  29%|██▉       | 86/299 [00:00<00:01, 163.95it/s][A
Calculating viewed counts for every point:  34%|███▍      | 103/299 [00:00<00:01, 141.52it/s][A
Calculating viewed counts for every point:  39%|███▉      | 118/299 [00:00<00:01, 137.92it/s][A
Calculating viewed counts for every point:  44%|████▍     | 133/299 [00:00<00:01, 135.54it/s][A
Calculating viewed counts for every point:  49%|████▉     | 147/299 [00:01<00:01, 118.30it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 160/299 [00:01<00:01, 107.76it/s][A
Calculating viewed counts for every point:  60%|██████    | 180/299 [00:01<00:00, 129.91it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 199/299 [00:01<00:00, 136.87it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 216/299 [00:01<00:00, 142.43it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 233/299 [00:01<00:00, 148.66it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 249/299 [00:01<00:00, 139.85it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 265/299 [00:01<00:00, 142.40it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 282/299 [00:02<00:00, 146.62it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 297/299 [00:02<00:00, 147.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [04:32<06:58,  4.75s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(12390, device='cuda:0')
before filtering torch.Size([10, 208782])
after filtering torch.Size([5, 208782])
num_ins_points_after_filtering tensor([1863, 2837, 1867, 1580, 1276], device='cuda:0')
Working on scene0354_00 class table
masks_to_be_merged [[0, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58], [1, 2, 3, 4, 55], [6, 7], [8, 9], [10, 11, 12, 13, 14], [19, 21, 22, 23, 24, 25], [31, 32], [33, 34, 35, 51, 52, 53, 54], [60, 61]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 11/113 [00:00<00:00, 109.99it/s][A
Calculating viewed counts for every point:  27%|██▋       | 31/113 [00:00<00:00, 162.91it/s][A
Calculating viewed counts for every point:  42%|████▏     | 48/113 [00:00<00:00, 119.78it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 62/113 [00:00<00:00, 121.62it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 86/113 [00:00<00:00, 154.52it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 104/113 [00:00<00:00, 161.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [04:35<05:49,  4.02s/it]detected_ratio_thres_value tensor(0.3636, device='cuda:0')
final masked points tensor(16839, device='cuda:0')
before filtering torch.Size([9, 110569])
after filtering torch.Size([5, 110569])
num_ins_points_after_filtering tensor([3309,  259,  729, 7840, 4366], device='cuda:0')
Working on scene0355_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 80, 81, 82, 83, 84, 85, 86, 87, 88], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], [63, 66, 67, 68]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/115 [00:00<00:00, 248.62it/s][A
Calculating viewed counts for every point:  43%|████▎     | 50/115 [00:00<00:00, 167.67it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 75/115 [00:00<00:00, 195.56it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 99/115 [00:00<00:00, 208.08it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [04:37<05:12,  3.63s/it]detected_ratio_thres_value tensor(0.5152, device='cuda:0')
final masked points tensor(5436, device='cuda:0')
before filtering torch.Size([3, 136135])
after filtering torch.Size([2, 136135])
num_ins_points_after_filtering tensor([2767, 2657], device='cuda:0')
Working on scene0356_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 103, 104, 105, 106, 107, 108], [10, 11, 12, 13, 14, 15, 73, 74, 75], [16, 17, 18, 19, 20, 21, 28, 76, 77, 78, 79, 80, 81], [22, 23, 24, 27, 82, 83, 84, 85], [25, 26, 30, 31, 35, 86, 88, 89, 92], [32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], [58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 11/136 [00:00<00:01, 109.76it/s][A
Calculating viewed counts for every point:  16%|█▌        | 22/136 [00:00<00:01, 99.07it/s] [A
Calculating viewed counts for every point:  24%|██▎       | 32/136 [00:00<00:01, 91.83it/s][A
Calculating viewed counts for every point:  40%|████      | 55/136 [00:00<00:00, 140.54it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 70/136 [00:00<00:00, 113.99it/s][A
Calculating viewed counts for every point:  61%|██████    | 83/136 [00:00<00:00, 98.11it/s] [A
Calculating viewed counts for every point:  69%|██████▉   | 94/136 [00:00<00:00, 98.39it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 107/136 [00:01<00:00, 102.77it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 126/136 [00:01<00:00, 123.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [04:42<05:31,  3.90s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(7161, device='cuda:0')
before filtering torch.Size([7, 81172])
after filtering torch.Size([3, 81172])
num_ins_points_after_filtering tensor([2142, 1665, 2077], device='cuda:0')
Working on scene0357_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 18, 19, 20, 21, 30, 31, 32], [27, 28, 29], [33, 39], [35, 36, 37, 38]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 5/91 [00:00<00:01, 47.60it/s][A
Calculating viewed counts for every point:  13%|█▎        | 12/91 [00:00<00:01, 52.09it/s][A
Calculating viewed counts for every point:  20%|█▉        | 18/91 [00:00<00:01, 53.06it/s][A
Calculating viewed counts for every point:  30%|██▉       | 27/91 [00:00<00:00, 66.28it/s][A
Calculating viewed counts for every point:  42%|████▏     | 38/91 [00:00<00:00, 78.08it/s][A
Calculating viewed counts for every point:  51%|█████     | 46/91 [00:00<00:00, 69.25it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 54/91 [00:00<00:00, 67.53it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 61/91 [00:00<00:00, 67.88it/s][A
Calculating viewed counts for every point:  80%|████████  | 73/91 [00:01<00:00, 82.44it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 84/91 [00:01<00:00, 88.07it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [04:44<04:53,  3.50s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(4735, device='cuda:0')
before filtering torch.Size([5, 136945])
after filtering torch.Size([3, 136945])
num_ins_points_after_filtering tensor([2499, 1395,  724], device='cuda:0')
Working on scene0377_00 class table
masks_to_be_merged [[0, 9, 35, 36], [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 37, 38, 39], [10, 11, 12, 33, 34, 40, 41, 42, 43], [17, 18, 19], [20, 21, 23, 24, 25], [26, 27, 28, 29], [30, 31]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 5/91 [00:00<00:01, 48.69it/s][A
Calculating viewed counts for every point:  21%|██        | 19/91 [00:00<00:00, 100.74it/s][A
Calculating viewed counts for every point:  33%|███▎      | 30/91 [00:00<00:00, 70.58it/s] [A
Calculating viewed counts for every point:  42%|████▏     | 38/91 [00:00<00:00, 71.48it/s][A
Calculating viewed counts for every point:  51%|█████     | 46/91 [00:00<00:00, 71.67it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 54/91 [00:00<00:00, 70.32it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 62/91 [00:00<00:00, 64.55it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 69/91 [00:01<00:00, 64.03it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 76/91 [00:01<00:00, 59.42it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 84/91 [00:01<00:00, 62.92it/s][A
Calculating viewed counts for every point: 100%|██████████| 91/91 [00:01<00:00, 59.44it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [04:47<04:35,  3.32s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(9698, device='cuda:0')
before filtering torch.Size([7, 111811])
after filtering torch.Size([4, 111811])
num_ins_points_after_filtering tensor([1436, 2049, 1626, 1699], device='cuda:0')
Working on scene0378_00 class table
masks_to_be_merged [[0, 3, 6, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 39, 42, 46, 56, 58, 156, 158, 171, 173, 174, 176, 180, 183, 185, 186, 187, 188, 190, 192, 194, 195, 197, 199, 201, 203, 205], [1, 4, 8, 13, 16, 18, 22, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 179, 181, 182, 184, 189, 191, 193, 196, 198, 200, 202, 204], [2, 5, 7, 48, 60, 63, 65, 67], [36, 38, 41], [40, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 91, 98, 99, 100, 101], [85, 86], [92, 93], [95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], [102, 103, 104], [118, 119, 120, 121]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/190 [00:00<00:01, 166.74it/s][A
Calculating viewed counts for every point:  19%|█▉        | 37/190 [00:00<00:00, 183.89it/s][A
Calculating viewed counts for every point:  30%|███       | 57/190 [00:00<00:00, 189.23it/s][A
Calculating viewed counts for every point:  40%|████      | 76/190 [00:00<00:00, 132.88it/s][A
Calculating viewed counts for every point:  48%|████▊     | 92/190 [00:00<00:00, 109.44it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 105/190 [00:00<00:00, 105.56it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 117/190 [00:01<00:00, 95.73it/s] [A
Calculating viewed counts for every point:  67%|██████▋   | 128/190 [00:01<00:00, 94.84it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 142/190 [00:01<00:00, 105.33it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 159/190 [00:01<00:00, 121.73it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 178/190 [00:01<00:00, 138.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [04:55<06:27,  4.73s/it]detected_ratio_thres_value tensor(0.3947, device='cuda:0')
final masked points tensor(10116, device='cuda:0')
before filtering torch.Size([10, 156298])
after filtering torch.Size([3, 156298])
num_ins_points_after_filtering tensor([2718, 4017, 2284], device='cuda:0')
Working on scene0382_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 39, 40, 41, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [54, 55, 56, 57]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 14/113 [00:00<00:00, 138.05it/s][A
Calculating viewed counts for every point:  25%|██▍       | 28/113 [00:00<00:00, 114.13it/s][A
Calculating viewed counts for every point:  36%|███▋      | 41/113 [00:00<00:00, 114.40it/s][A
Calculating viewed counts for every point:  47%|████▋     | 53/113 [00:00<00:00, 98.67it/s] [A
Calculating viewed counts for every point:  58%|█████▊    | 65/113 [00:00<00:00, 104.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 76/113 [00:00<00:00, 102.42it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 89/113 [00:00<00:00, 106.88it/s][A
Calculating viewed counts for every point:  90%|█████████ | 102/113 [00:00<00:00, 112.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [04:58<05:33,  4.12s/it]detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(6432, device='cuda:0')
before filtering torch.Size([3, 100285])
after filtering torch.Size([1, 100285])
num_ins_points_after_filtering tensor([5157], device='cuda:0')
Working on scene0389_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 86, 87, 88], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22], [24, 28, 30], [25, 26, 27, 29, 31], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], [54, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [61, 62, 63, 64, 65, 66, 67, 68, 69, 83, 84], [85, 89, 90]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 8/142 [00:00<00:01, 79.83it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/142 [00:00<00:00, 135.76it/s][A
Calculating viewed counts for every point:  31%|███       | 44/142 [00:00<00:00, 154.59it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/142 [00:00<00:00, 116.88it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 78/142 [00:00<00:00, 132.04it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 99/142 [00:00<00:00, 154.11it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 121/142 [00:00<00:00, 172.28it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 140/142 [00:00<00:00, 162.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [05:01<05:05,  3.82s/it]detected_ratio_thres_value tensor(0.2750, device='cuda:0')
final masked points tensor(17208, device='cuda:0')
before filtering torch.Size([10, 201003])
after filtering torch.Size([7, 201003])
num_ins_points_after_filtering tensor([1914, 1880, 1306,  981, 2194, 5000,  638], device='cuda:0')
Working on scene0406_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 25], [22, 23]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 7/142 [00:00<00:01, 67.96it/s][A
Calculating viewed counts for every point:  18%|█▊        | 25/142 [00:00<00:00, 132.27it/s][A
Calculating viewed counts for every point:  30%|██▉       | 42/142 [00:00<00:00, 146.36it/s][A
Calculating viewed counts for every point:  40%|████      | 57/142 [00:00<00:00, 86.64it/s] [A
Calculating viewed counts for every point:  58%|█████▊    | 82/142 [00:00<00:00, 126.56it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 109/142 [00:00<00:00, 163.14it/s][A
Calculating viewed counts for every point:  91%|█████████ | 129/142 [00:00<00:00, 163.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [05:03<04:10,  3.17s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(1684, device='cuda:0')
before filtering torch.Size([2, 48864])
after filtering torch.Size([1, 48864])
num_ins_points_after_filtering tensor([1674], device='cuda:0')
Working on scene0412_00 class table
masks_to_be_merged [[0, 5, 6, 7], [1, 2, 3, 4, 29, 30, 31, 32], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 34, 35, 37, 38, 39, 40, 42, 46, 47, 49, 63, 64, 65, 66, 67, 74], [19, 20], [22, 23, 61], [25, 26], [41, 43, 44], [45, 48, 50, 51], [52, 53, 54, 55], [70, 71, 72]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/237 [00:00<00:04, 57.55it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/237 [00:00<00:02, 104.22it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/237 [00:00<00:01, 134.03it/s][A
Calculating viewed counts for every point:  24%|██▎       | 56/237 [00:00<00:01, 141.74it/s][A
Calculating viewed counts for every point:  31%|███       | 73/237 [00:00<00:01, 149.95it/s][A
Calculating viewed counts for every point:  38%|███▊      | 89/237 [00:00<00:01, 139.07it/s][A
Calculating viewed counts for every point:  47%|████▋     | 111/237 [00:00<00:00, 149.77it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 127/237 [00:00<00:00, 149.43it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 147/237 [00:01<00:00, 162.87it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 164/237 [00:01<00:00, 126.48it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 178/237 [00:01<00:00, 124.96it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 195/237 [00:01<00:00, 127.70it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 213/237 [00:01<00:00, 139.63it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 228/237 [00:01<00:00, 139.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [05:06<04:09,  3.20s/it]detected_ratio_thres_value tensor(0.1569, device='cuda:0')
final masked points tensor(7994, device='cuda:0')
before filtering torch.Size([10, 175557])
after filtering torch.Size([3, 175557])
num_ins_points_after_filtering tensor([1418,  188,  182], device='cuda:0')
Working on scene0414_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 28, 29, 30, 33, 34, 35, 36, 37, 38], [21, 22, 23], [24, 25, 26, 27], [41, 42]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 9/117 [00:00<00:01, 80.73it/s][A
Calculating viewed counts for every point:  17%|█▋        | 20/117 [00:00<00:01, 84.90it/s][A
Calculating viewed counts for every point:  25%|██▍       | 29/117 [00:00<00:01, 66.17it/s][A
Calculating viewed counts for every point:  33%|███▎      | 39/117 [00:00<00:01, 75.69it/s][A
Calculating viewed counts for every point:  40%|████      | 47/117 [00:00<00:00, 75.44it/s][A
Calculating viewed counts for every point:  47%|████▋     | 55/117 [00:00<00:00, 72.18it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 65/117 [00:00<00:00, 76.81it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 73/117 [00:00<00:00, 73.52it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 81/117 [00:01<00:00, 70.76it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 92/117 [00:01<00:00, 79.39it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 101/117 [00:01<00:00, 65.81it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 111/117 [00:01<00:00, 72.28it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [05:09<04:02,  3.15s/it]detected_ratio_thres_value tensor(0.2581, device='cuda:0')
final masked points tensor(7952, device='cuda:0')
before filtering torch.Size([4, 192685])
after filtering torch.Size([4, 192685])
num_ins_points_after_filtering tensor([3685,  124,  457, 2834], device='cuda:0')
Working on scene0423_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 12/77 [00:00<00:00, 116.25it/s][A
Calculating viewed counts for every point:  51%|█████     | 39/77 [00:00<00:00, 203.56it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 60/77 [00:00<00:00, 161.46it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  46%|████▋     | 66/142 [05:11<03:39,  2.89s/it]detected_ratio_thres_value tensor(0.6071, device='cuda:0')
final masked points tensor(1336, device='cuda:0')
before filtering torch.Size([1, 53074])
after filtering torch.Size([1, 53074])
num_ins_points_after_filtering tensor([1336], device='cuda:0')
Working on scene0426_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [14, 15, 60, 61, 62], [16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], [35, 36, 37], [38, 43, 81], [39, 82], [40, 41, 42], [44, 45], [77, 78, 80]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 13/231 [00:00<00:01, 123.37it/s][A
Calculating viewed counts for every point:  13%|█▎        | 29/231 [00:00<00:01, 142.56it/s][A
Calculating viewed counts for every point:  19%|█▉        | 44/231 [00:00<00:01, 140.74it/s][A
Calculating viewed counts for every point:  29%|██▊       | 66/231 [00:00<00:00, 170.33it/s][A
Calculating viewed counts for every point:  37%|███▋      | 86/231 [00:00<00:00, 178.98it/s][A
Calculating viewed counts for every point:  46%|████▌     | 106/231 [00:00<00:00, 183.52it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 125/231 [00:00<00:00, 170.86it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 143/231 [00:00<00:00, 171.69it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 161/231 [00:00<00:00, 164.29it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 179/231 [00:01<00:00, 166.21it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 201/231 [00:01<00:00, 179.83it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 220/231 [00:01<00:00, 170.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [05:16<04:16,  3.42s/it]detected_ratio_thres_value tensor(0.2917, device='cuda:0')
final masked points tensor(5712, device='cuda:0')
before filtering torch.Size([9, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([2977], device='cuda:0')
Working on scene0427_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46], [19, 20, 37], [21, 22], [47, 48]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 6/132 [00:00<00:02, 59.62it/s][A
Calculating viewed counts for every point:  27%|██▋       | 35/132 [00:00<00:00, 172.60it/s][A
Calculating viewed counts for every point:  39%|███▉      | 52/132 [00:00<00:00, 140.13it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 70/132 [00:00<00:00, 151.88it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 86/132 [00:00<00:00, 151.49it/s][A
Calculating viewed counts for every point:  81%|████████  | 107/132 [00:00<00:00, 169.52it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 126/132 [00:00<00:00, 174.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [05:18<03:39,  2.97s/it]detected_ratio_thres_value tensor(0.4138, device='cuda:0')
final masked points tensor(2243, device='cuda:0')
before filtering torch.Size([4, 74074])
after filtering torch.Size([1, 74074])
num_ins_points_after_filtering tensor([2243], device='cuda:0')
Working on scene0430_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 36, 37, 41, 43, 44, 46, 47, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 141, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 167, 170, 173, 174, 176, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 200, 201, 202, 206], [16, 28, 30, 31, 33, 35], [38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 135, 144, 148, 177, 199, 203], [42, 45], [85, 86], [163, 165], [183, 184], [204, 207], [205, 208]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/231 [00:00<00:03, 66.17it/s][A
Calculating viewed counts for every point:  12%|█▏        | 27/231 [00:00<00:01, 136.91it/s][A
Calculating viewed counts for every point:  18%|█▊        | 41/231 [00:00<00:01, 128.70it/s][A
Calculating viewed counts for every point:  24%|██▍       | 55/231 [00:00<00:01, 129.97it/s][A
Calculating viewed counts for every point:  31%|███       | 71/231 [00:00<00:01, 137.85it/s][A
Calculating viewed counts for every point:  37%|███▋      | 85/231 [00:00<00:01, 124.97it/s][A
Calculating viewed counts for every point:  42%|████▏     | 98/231 [00:00<00:01, 118.26it/s][A
Calculating viewed counts for every point:  48%|████▊     | 110/231 [00:00<00:01, 114.88it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 126/231 [00:01<00:00, 119.00it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 142/231 [00:01<00:00, 128.94it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 156/231 [00:01<00:00, 124.66it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 172/231 [00:01<00:00, 133.04it/s][A
Calculating viewed counts for every point:  81%|████████  | 186/231 [00:01<00:00, 120.89it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 199/231 [00:01<00:00, 113.67it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 211/231 [00:01<00:00, 112.09it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 225/231 [00:01<00:00, 115.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [05:25<05:14,  4.31s/it]detected_ratio_thres_value tensor(0.5098, device='cuda:0')
final masked points tensor(5619, device='cuda:0')
before filtering torch.Size([9, 210249])
after filtering torch.Size([0, 210249])
num_ins_points_after_filtering tensor([], device='cuda:0', dtype=torch.int64)
Working on scene0432_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [7, 9], [22, 24]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▏     | 22/52 [00:00<00:00, 216.46it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [05:26<03:59,  3.33s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(3581, device='cuda:0')
before filtering torch.Size([3, 39529])
after filtering torch.Size([1, 39529])
num_ins_points_after_filtering tensor([541], device='cuda:0')
Working on scene0435_00 class table
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 45, 47, 50, 53, 56, 59, 60, 62, 64, 65, 66, 67, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151], [12, 13], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 49, 52, 55, 58, 61, 123, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 153, 197, 198, 199, 200, 201, 203], [36, 37, 38], [51, 54, 57], [68, 69, 70, 71, 72, 73, 74, 75, 76], [79, 84, 89], [81, 85, 86, 87, 88, 97], [90, 92], [95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [110, 111], [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 154, 155, 156, 157, 193, 194, 195, 196], [145, 147], [152, 202], [158, 159, 185, 186, 187, 188], [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], [189, 190, 191, 192]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 7/328 [00:00<00:05, 63.06it/s][A
Calculating viewed counts for every point:   5%|▌         | 18/328 [00:00<00:03, 80.43it/s][A
Calculating viewed counts for every point:   8%|▊         | 27/328 [00:00<00:03, 82.62it/s][A
Calculating viewed counts for every point:  11%|█▏        | 37/328 [00:00<00:03, 87.88it/s][A
Calculating viewed counts for every point:  15%|█▍        | 48/328 [00:00<00:02, 94.41it/s][A
Calculating viewed counts for every point:  19%|█▊        | 61/328 [00:00<00:02, 102.87it/s][A
Calculating viewed counts for every point:  22%|██▏       | 72/328 [00:00<00:02, 100.35it/s][A
Calculating viewed counts for every point:  26%|██▌       | 84/328 [00:00<00:02, 104.77it/s][A
Calculating viewed counts for every point:  29%|██▉       | 95/328 [00:00<00:02, 104.77it/s][A
Calculating viewed counts for every point:  32%|███▏      | 106/328 [00:01<00:02, 105.43it/s][A
Calculating viewed counts for every point:  36%|███▌      | 117/328 [00:01<00:02, 82.29it/s] [A
Calculating viewed counts for every point:  39%|███▉      | 128/328 [00:01<00:02, 88.36it/s][A
Calculating viewed counts for every point:  42%|████▏     | 138/328 [00:01<00:02, 72.75it/s][A
Calculating viewed counts for every point:  45%|████▌     | 149/328 [00:01<00:02, 75.55it/s][A
Calculating viewed counts for every point:  48%|████▊     | 158/328 [00:01<00:02, 78.84it/s][A
Calculating viewed counts for every point:  51%|█████     | 167/328 [00:01<00:02, 69.80it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 175/328 [00:02<00:02, 67.43it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 187/328 [00:02<00:01, 79.84it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 196/328 [00:02<00:01, 79.86it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 208/328 [00:02<00:01, 89.42it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 218/328 [00:02<00:01, 84.28it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 235/328 [00:02<00:00, 105.18it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 249/328 [00:02<00:00, 113.98it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 261/328 [00:02<00:00, 98.55it/s] [A
Calculating viewed counts for every point:  83%|████████▎ | 272/328 [00:03<00:00, 92.10it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 283/328 [00:03<00:00, 95.15it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 293/328 [00:03<00:00, 93.03it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 306/328 [00:03<00:00, 86.69it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 319/328 [00:03<00:00, 95.64it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [05:36<06:06,  5.16s/it]detected_ratio_thres_value tensor(0.3462, device='cuda:0')
final masked points tensor(15678, device='cuda:0')
before filtering torch.Size([17, 254998])
after filtering torch.Size([5, 254998])
num_ins_points_after_filtering tensor([2355, 3086, 2782, 4819, 1049], device='cuda:0')
Working on scene0441_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 13], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 6/77 [00:00<00:01, 53.88it/s][A
Calculating viewed counts for every point:  19%|█▉        | 15/77 [00:00<00:00, 72.44it/s][A
Calculating viewed counts for every point:  30%|██▉       | 23/77 [00:00<00:00, 62.36it/s][A
Calculating viewed counts for every point:  44%|████▍     | 34/77 [00:00<00:00, 70.80it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 42/77 [00:00<00:00, 46.93it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 49/77 [00:00<00:00, 51.38it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 55/77 [00:01<00:00, 49.59it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 61/77 [00:01<00:00, 45.40it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 67/77 [00:01<00:00, 46.12it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 74/77 [00:01<00:00, 50.66it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [05:38<05:00,  4.30s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(2323, device='cuda:0')
before filtering torch.Size([3, 86191])
after filtering torch.Size([3, 86191])
num_ins_points_after_filtering tensor([318, 439, 740], device='cuda:0')
Working on scene0458_00 class table
masks_to_be_merged [[0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 43, 44, 45, 46, 47, 48, 49, 50], [3, 4, 5, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], [35, 36, 37, 38, 39, 40, 41, 42]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 17/199 [00:00<00:01, 165.06it/s][A
Calculating viewed counts for every point:  17%|█▋        | 34/199 [00:00<00:02, 76.54it/s] [A
Calculating viewed counts for every point:  23%|██▎       | 46/199 [00:00<00:01, 85.92it/s][A
Calculating viewed counts for every point:  34%|███▎      | 67/199 [00:00<00:01, 118.72it/s][A
Calculating viewed counts for every point:  42%|████▏     | 84/199 [00:00<00:00, 132.28it/s][A
Calculating viewed counts for every point:  51%|█████     | 101/199 [00:00<00:00, 139.91it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 117/199 [00:00<00:00, 136.20it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 136/199 [00:01<00:00, 150.95it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 152/199 [00:01<00:00, 149.18it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 168/199 [00:01<00:00, 139.68it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 189/199 [00:01<00:00, 158.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [05:41<04:30,  3.93s/it]detected_ratio_thres_value tensor(0.2121, device='cuda:0')
final masked points tensor(4266, device='cuda:0')
before filtering torch.Size([3, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([2349,  702], device='cuda:0')
Working on scene0461_00 class table
masks_to_be_merged [[0, 3, 6, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 44, 45, 46, 47, 48], [1, 2, 4, 5, 7, 8, 9, 10, 12, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56], [43, 49]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 20/52 [00:00<00:00, 192.61it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 40/52 [00:00<00:00, 181.60it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [05:43<03:42,  3.27s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(3325, device='cuda:0')
before filtering torch.Size([3, 59134])
after filtering torch.Size([2, 59134])
num_ins_points_after_filtering tensor([1418, 1907], device='cuda:0')
Working on scene0462_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 7, 61, 62, 64, 65, 66], [5, 72], [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 73, 74, 75], [40, 41, 42], [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [67, 68]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 16/114 [00:00<00:00, 155.37it/s][A
Calculating viewed counts for every point:  34%|███▍      | 39/114 [00:00<00:00, 196.11it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 59/114 [00:00<00:00, 178.78it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 78/114 [00:00<00:00, 171.56it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 96/114 [00:00<00:00, 151.06it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 112/114 [00:00<00:00, 121.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [05:45<03:23,  3.04s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(23620, device='cuda:0')
before filtering torch.Size([6, 156714])
after filtering torch.Size([3, 156714])
num_ins_points_after_filtering tensor([ 2875,  2733, 17334], device='cuda:0')
Working on scene0474_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 121], [9, 10, 11], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], [27, 28], [30, 31, 32, 33, 34, 35, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 9/164 [00:00<00:01, 87.48it/s][A
Calculating viewed counts for every point:  11%|█         | 18/164 [00:00<00:01, 79.27it/s][A
Calculating viewed counts for every point:  20%|██        | 33/164 [00:00<00:01, 108.97it/s][A
Calculating viewed counts for every point:  27%|██▋       | 45/164 [00:00<00:01, 92.01it/s] [A
Calculating viewed counts for every point:  34%|███▍      | 56/164 [00:00<00:01, 95.07it/s][A
Calculating viewed counts for every point:  40%|████      | 66/164 [00:00<00:01, 83.33it/s][A
Calculating viewed counts for every point:  51%|█████     | 83/164 [00:00<00:00, 101.87it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 94/164 [00:00<00:00, 101.12it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 105/164 [00:01<00:00, 84.14it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 122/164 [00:01<00:00, 103.34it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 134/164 [00:01<00:00, 105.47it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 150/164 [00:01<00:00, 118.47it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 163/164 [00:01<00:00, 116.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [05:51<04:01,  3.66s/it]detected_ratio_thres_value tensor(0.3871, device='cuda:0')
final masked points tensor(10573, device='cuda:0')
before filtering torch.Size([6, 182281])
after filtering torch.Size([4, 182281])
num_ins_points_after_filtering tensor([4875, 1863, 1445, 2388], device='cuda:0')
Working on scene0488_00 class table
masks_to_be_merged [[0, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 18], [5, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 4/60 [00:00<00:01, 37.24it/s][A
Calculating viewed counts for every point:  18%|█▊        | 11/60 [00:00<00:00, 52.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 22/60 [00:00<00:00, 76.00it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 31/60 [00:00<00:00, 80.09it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 46/60 [00:00<00:00, 103.74it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [05:52<03:21,  3.10s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(11834, device='cuda:0')
before filtering torch.Size([3, 108319])
after filtering torch.Size([2, 108319])
num_ins_points_after_filtering tensor([7127, 1724], device='cuda:0')
Working on scene0490_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [54, 55, 56], [57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 16/129 [00:00<00:00, 157.20it/s][A
Calculating viewed counts for every point:  26%|██▋       | 34/129 [00:00<00:00, 166.04it/s][A
Calculating viewed counts for every point:  42%|████▏     | 54/129 [00:00<00:00, 179.28it/s][A
Calculating viewed counts for every point:  60%|██████    | 78/129 [00:00<00:00, 198.26it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 100/129 [00:00<00:00, 200.43it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 121/129 [00:00<00:00, 185.42it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [05:55<03:01,  2.84s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(13237, device='cuda:0')
before filtering torch.Size([3, 131283])
after filtering torch.Size([1, 131283])
num_ins_points_after_filtering tensor([13219], device='cuda:0')
Working on scene0494_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 15/75 [00:00<00:00, 149.84it/s][A
Calculating viewed counts for every point:  40%|████      | 30/75 [00:00<00:00, 131.59it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 51/75 [00:00<00:00, 138.07it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 67/75 [00:00<00:00, 145.04it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [05:56<02:41,  2.56s/it]detected_ratio_thres_value tensor(0.5263, device='cuda:0')
final masked points tensor(2006, device='cuda:0')
before filtering torch.Size([1, 62048])
after filtering torch.Size([1, 62048])
num_ins_points_after_filtering tensor([2006], device='cuda:0')
Working on scene0496_00 class table
masks_to_be_merged [[0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 5/134 [00:00<00:02, 46.00it/s][A
Calculating viewed counts for every point:  10%|█         | 14/134 [00:00<00:01, 70.81it/s][A
Calculating viewed counts for every point:  21%|██        | 28/134 [00:00<00:01, 98.87it/s][A
Calculating viewed counts for every point:  28%|██▊       | 38/134 [00:00<00:01, 88.73it/s][A
Calculating viewed counts for every point:  40%|███▉      | 53/134 [00:00<00:00, 103.31it/s][A
Calculating viewed counts for every point:  48%|████▊     | 64/134 [00:00<00:00, 93.37it/s] [A
Calculating viewed counts for every point:  57%|█████▋    | 76/134 [00:00<00:00, 99.06it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 87/134 [00:00<00:00, 97.11it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 99/134 [00:01<00:00, 102.93it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 113/134 [00:01<00:00, 111.29it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 126/134 [00:01<00:00, 111.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [06:01<03:07,  3.02s/it]detected_ratio_thres_value tensor(0.5882, device='cuda:0')
final masked points tensor(7075, device='cuda:0')
before filtering torch.Size([4, 192962])
after filtering torch.Size([2, 192962])
num_ins_points_after_filtering tensor([4508, 1204], device='cuda:0')
Working on scene0500_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], [9, 10], [12, 13, 14, 15, 16, 17], [18, 19], [23, 24], [25, 26, 27, 35, 38, 40, 43, 44, 50, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 104, 105, 107, 109, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 128, 131, 132, 133], [74, 75], [81, 82], [124, 127, 129, 135, 136], [139, 140], [141, 142, 143], [144, 145], [146, 147, 148, 149, 150, 152, 154, 156], [151, 153, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182], [169, 170, 171, 172, 173]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/219 [00:00<00:02, 82.45it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/219 [00:00<00:02, 70.90it/s][A
Calculating viewed counts for every point:  12%|█▏        | 26/219 [00:00<00:03, 57.77it/s][A
Calculating viewed counts for every point:  15%|█▌        | 33/219 [00:00<00:03, 58.59it/s][A
Calculating viewed counts for every point:  18%|█▊        | 40/219 [00:00<00:03, 56.93it/s][A
Calculating viewed counts for every point:  21%|██▏       | 47/219 [00:00<00:02, 59.41it/s][A
Calculating viewed counts for every point:  25%|██▍       | 54/219 [00:00<00:02, 55.05it/s][A
Calculating viewed counts for every point:  28%|██▊       | 61/219 [00:01<00:02, 57.12it/s][A
Calculating viewed counts for every point:  32%|███▏      | 69/219 [00:01<00:02, 61.73it/s][A
Calculating viewed counts for every point:  35%|███▍      | 76/219 [00:01<00:02, 63.07it/s][A
Calculating viewed counts for every point:  38%|███▊      | 83/219 [00:01<00:02, 63.40it/s][A
Calculating viewed counts for every point:  41%|████      | 90/219 [00:01<00:02, 62.33it/s][A
Calculating viewed counts for every point:  44%|████▍     | 97/219 [00:01<00:01, 62.02it/s][A
Calculating viewed counts for every point:  47%|████▋     | 104/219 [00:01<00:01, 57.77it/s][A
Calculating viewed counts for every point:  51%|█████     | 112/219 [00:01<00:01, 62.56it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 120/219 [00:01<00:01, 66.66it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 127/219 [00:02<00:01, 57.72it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 136/219 [00:02<00:01, 64.37it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 145/219 [00:02<00:01, 70.76it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 153/219 [00:02<00:00, 68.18it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 161/219 [00:02<00:00, 60.69it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 172/219 [00:02<00:00, 71.25it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 181/219 [00:02<00:00, 75.93it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 189/219 [00:02<00:00, 73.79it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 197/219 [00:03<00:00, 69.92it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 205/219 [00:03<00:00, 66.79it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 212/219 [00:03<00:00, 62.59it/s][A
Calculating viewed counts for every point: 100%|██████████| 219/219 [00:03<00:00, 63.89it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [06:11<05:17,  5.20s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(24983, device='cuda:0')
before filtering torch.Size([15, 396942])
after filtering torch.Size([3, 396942])
num_ins_points_after_filtering tensor([ 2949, 11950,  7091], device='cuda:0')
Working on scene0518_00 class table
masks_to_be_merged [[0, 1, 15, 17, 30, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], [2, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 110, 111, 112, 113, 114, 115, 116], [3, 4], [6, 7, 8], [61, 62], [63, 64], [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 15/147 [00:00<00:00, 145.16it/s][A
Calculating viewed counts for every point:  22%|██▏       | 32/147 [00:00<00:00, 156.07it/s][A
Calculating viewed counts for every point:  35%|███▌      | 52/147 [00:00<00:00, 167.48it/s][A
Calculating viewed counts for every point:  47%|████▋     | 69/147 [00:00<00:00, 155.67it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 87/147 [00:00<00:00, 163.15it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 105/147 [00:00<00:00, 166.51it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 127/147 [00:00<00:00, 182.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [06:14<04:39,  4.67s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(5783, device='cuda:0')
before filtering torch.Size([7, 130180])
after filtering torch.Size([1, 130180])
num_ins_points_after_filtering tensor([4223], device='cuda:0')
Working on scene0527_00 class table
masks_to_be_merged [[0, 1, 2, 31, 32, 33, 34, 35], [3, 4, 5, 6, 7, 8, 9, 10, 12, 36, 37, 38, 39, 40], [13, 14], [15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], [29, 30]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 19/68 [00:00<00:00, 184.22it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 44/68 [00:00<00:00, 215.21it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 67/68 [00:00<00:00, 218.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [06:15<03:30,  3.57s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(6447, device='cuda:0')
before filtering torch.Size([5, 65893])
after filtering torch.Size([3, 65893])
num_ins_points_after_filtering tensor([2245, 2216, 1799], device='cuda:0')
Working on scene0535_00 class table
masks_to_be_merged [[0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 60, 62, 64], [10, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 61, 63, 65], [27, 29], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46], [44, 45, 47, 48, 49, 50, 51, 52, 53, 54], [55, 56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 18/69 [00:00<00:00, 164.50it/s][A
Calculating viewed counts for every point:  51%|█████     | 35/69 [00:00<00:00, 109.67it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 47/69 [00:00<00:00, 104.39it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 63/69 [00:00<00:00, 120.38it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [06:18<03:09,  3.27s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(8293, device='cuda:0')
before filtering torch.Size([6, 90268])
after filtering torch.Size([5, 90268])
num_ins_points_after_filtering tensor([1293, 1414, 2272, 2882,  380], device='cuda:0')
Working on scene0549_00 class table
masks_to_be_merged [[0, 2, 3, 5, 7, 9, 11, 13, 15, 17, 19, 91, 92, 94, 97, 101, 103, 104, 105, 107, 110, 111, 112, 113], [1, 8, 10, 12, 16, 18, 20, 21, 25, 95, 98, 106, 108, 109, 114], [14, 93, 96, 99, 100, 102], [22, 23, 24, 26, 27], [28, 29, 31, 35, 36, 39, 42, 45, 47, 48, 50], [30, 32, 34, 37, 40, 44, 49, 51, 52, 53, 54, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 73, 75, 77, 90], [33, 38, 41, 43, 46, 56, 58, 66, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 18/83 [00:00<00:00, 175.49it/s][A
Calculating viewed counts for every point:  43%|████▎     | 36/83 [00:00<00:00, 168.09it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 58/83 [00:00<00:00, 189.43it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 79/83 [00:00<00:00, 195.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [06:20<02:50,  2.99s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(12541, device='cuda:0')
before filtering torch.Size([7, 161973])
after filtering torch.Size([5, 161973])
num_ins_points_after_filtering tensor([3000,  427, 1396, 4083, 2040], device='cuda:0')
Working on scene0550_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], [10, 11, 12, 66, 67, 71, 72, 73], [13, 14, 15, 94, 95, 96, 97, 98], [16, 17, 18], [65, 68, 69, 70], [74, 75, 76, 77, 78, 79, 80, 81, 90, 91], [82, 83, 84, 85, 86, 87, 88, 89], [92, 93], [99, 100, 101, 102, 103, 104, 105, 106, 107], [108, 109, 110, 111], [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 11/392 [00:00<00:03, 109.60it/s][A
Calculating viewed counts for every point:   6%|▌         | 22/392 [00:00<00:03, 109.32it/s][A
Calculating viewed counts for every point:  10%|█         | 40/392 [00:00<00:02, 140.17it/s][A
Calculating viewed counts for every point:  14%|█▍        | 56/392 [00:00<00:02, 147.92it/s][A
Calculating viewed counts for every point:  19%|█▉        | 74/392 [00:00<00:01, 159.12it/s][A
Calculating viewed counts for every point:  23%|██▎       | 90/392 [00:00<00:02, 145.47it/s][A
Calculating viewed counts for every point:  29%|██▉       | 115/392 [00:00<00:01, 177.10it/s][A
Calculating viewed counts for every point:  36%|███▌      | 141/392 [00:00<00:01, 201.98it/s][A
Calculating viewed counts for every point:  41%|████▏     | 162/392 [00:00<00:01, 195.84it/s][A
Calculating viewed counts for every point:  47%|████▋     | 186/392 [00:01<00:00, 207.42it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 207/392 [00:01<00:00, 190.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 228/392 [00:01<00:00, 195.57it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 248/392 [00:01<00:00, 186.85it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 267/392 [00:01<00:00, 181.73it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 286/392 [00:01<00:00, 174.40it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 304/392 [00:01<00:00, 159.97it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 321/392 [00:01<00:00, 145.16it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 338/392 [00:02<00:00, 151.29it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 358/392 [00:02<00:00, 162.03it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 382/392 [00:02<00:00, 178.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [06:25<03:25,  3.68s/it]detected_ratio_thres_value tensor(0.1224, device='cuda:0')
final masked points tensor(19752, device='cuda:0')
before filtering torch.Size([11, 127677])
after filtering torch.Size([6, 127677])
num_ins_points_after_filtering tensor([4856, 1496, 1167,  892, 2432, 5024], device='cuda:0')
Working on scene0552_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 24, 26, 29, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88], [20, 23, 27, 31, 90, 91, 92, 93, 94, 96, 98, 100], [21, 25, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 61, 62, 63, 64, 68, 71, 72, 77, 95, 97, 99, 101, 102], [40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57], [52, 53], [87, 89]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 26/89 [00:00<00:00, 256.96it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 52/89 [00:00<00:00, 209.20it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 79/89 [00:00<00:00, 233.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [06:28<03:07,  3.40s/it]detected_ratio_thres_value tensor(0.4583, device='cuda:0')
final masked points tensor(10498, device='cuda:0')
before filtering torch.Size([6, 123103])
after filtering torch.Size([4, 123103])
num_ins_points_after_filtering tensor([1967, 1293, 1778, 5454], device='cuda:0')
Working on scene0553_00 class table
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [22, 23], [24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 16/151 [00:00<00:00, 157.79it/s][A
Calculating viewed counts for every point:  21%|██        | 32/151 [00:00<00:01, 107.93it/s][A
Calculating viewed counts for every point:  29%|██▉       | 44/151 [00:00<00:00, 107.46it/s][A
Calculating viewed counts for every point:  40%|████      | 61/151 [00:00<00:00, 125.47it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 79/151 [00:00<00:00, 135.99it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 93/151 [00:00<00:00, 119.87it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 110/151 [00:00<00:00, 133.46it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 124/151 [00:01<00:00, 123.30it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 141/151 [00:01<00:00, 135.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [06:30<02:38,  2.93s/it]detected_ratio_thres_value tensor(0.2258, device='cuda:0')
final masked points tensor(2259, device='cuda:0')
before filtering torch.Size([5, 62854])
after filtering torch.Size([1, 62854])
num_ins_points_after_filtering tensor([2065], device='cuda:0')
Working on scene0558_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21], [22, 23], [24, 25, 27], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/71 [00:00<00:00, 141.61it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 37/71 [00:00<00:00, 165.58it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 54/71 [00:00<00:00, 158.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [06:31<02:10,  2.46s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(17486, device='cuda:0')
before filtering torch.Size([6, 92953])
after filtering torch.Size([4, 92953])
num_ins_points_after_filtering tensor([5407, 4464, 3212, 3056], device='cuda:0')
Working on scene0559_00 class table
masks_to_be_merged [[0, 2, 4, 6, 8, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], [1, 3, 5, 7, 9, 11, 13, 16], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  43%|████▎     | 25/58 [00:00<00:00, 244.24it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 51/58 [00:00<00:00, 237.70it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [06:33<01:52,  2.16s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(4346, device='cuda:0')
before filtering torch.Size([3, 89796])
after filtering torch.Size([3, 89796])
num_ins_points_after_filtering tensor([ 817,  677, 2852], device='cuda:0')
Working on scene0565_00 class table
masks_to_be_merged [[1, 5, 9, 11, 14], [3, 7], [12, 23], [13, 17, 18, 20, 21, 22, 24, 25, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41], [27, 30, 32], [42, 43, 44, 45, 49, 50], [46, 47, 48], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 19/107 [00:00<00:00, 182.66it/s][A
Calculating viewed counts for every point:  36%|███▌      | 38/107 [00:00<00:00, 116.69it/s][A
Calculating viewed counts for every point:  49%|████▊     | 52/107 [00:00<00:00, 118.74it/s][A
Calculating viewed counts for every point:  61%|██████    | 65/107 [00:00<00:00, 106.93it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 78/107 [00:00<00:00, 113.38it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 101/107 [00:00<00:00, 146.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [06:35<01:56,  2.28s/it]detected_ratio_thres_value tensor(0.2581, device='cuda:0')
final masked points tensor(9259, device='cuda:0')
before filtering torch.Size([9, 167558])
after filtering torch.Size([5, 167558])
num_ins_points_after_filtering tensor([2824, 1398, 1589,  297, 2721], device='cuda:0')
Working on scene0568_00 class table
masks_to_be_merged [[0, 1], [6, 7, 8, 9, 10], [11, 12], [13, 15, 16, 17, 18, 21, 22, 25, 26, 28, 31, 32, 35, 38, 39, 41], [14, 19, 20, 23, 24, 27, 29, 30, 33, 36, 40, 42, 43, 44], [34, 37], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69], [66, 68, 70, 71, 72, 73, 74, 76, 78, 80, 82, 86, 87, 90, 93, 95, 96], [75, 77, 79, 81, 83, 84, 85, 88, 89, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 7/166 [00:00<00:02, 69.28it/s][A
Calculating viewed counts for every point:   8%|▊         | 14/166 [00:00<00:02, 59.70it/s][A
Calculating viewed counts for every point:  13%|█▎        | 21/166 [00:00<00:02, 57.56it/s][A
Calculating viewed counts for every point:  16%|█▋        | 27/166 [00:00<00:03, 45.37it/s][A
Calculating viewed counts for every point:  19%|█▉        | 32/166 [00:00<00:02, 46.32it/s][A
Calculating viewed counts for every point:  22%|██▏       | 37/166 [00:00<00:02, 47.14it/s][A
Calculating viewed counts for every point:  26%|██▌       | 43/166 [00:00<00:02, 50.78it/s][A
Calculating viewed counts for every point:  30%|███       | 50/166 [00:00<00:02, 53.87it/s][A
Calculating viewed counts for every point:  34%|███▎      | 56/166 [00:01<00:02, 50.24it/s][A
Calculating viewed counts for every point:  37%|███▋      | 62/166 [00:01<00:02, 46.63it/s][A
Calculating viewed counts for every point:  45%|████▍     | 74/166 [00:01<00:01, 65.16it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 88/166 [00:01<00:00, 82.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 97/166 [00:01<00:00, 75.33it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 105/166 [00:01<00:00, 72.21it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 119/166 [00:01<00:00, 89.39it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 131/166 [00:01<00:00, 96.06it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 142/166 [00:02<00:00, 93.40it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 155/166 [00:02<00:00, 101.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [06:41<02:42,  3.25s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(19688, device='cuda:0')
before filtering torch.Size([9, 232453])
after filtering torch.Size([5, 232453])
num_ins_points_after_filtering tensor([3084, 3704, 1439, 2847, 6451], device='cuda:0')
Working on scene0574_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18], [11, 12, 13], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 9/103 [00:00<00:01, 80.37it/s][A
Calculating viewed counts for every point:  26%|██▌       | 27/103 [00:00<00:00, 117.82it/s][A
Calculating viewed counts for every point:  46%|████▌     | 47/103 [00:00<00:00, 139.08it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 71/103 [00:00<00:00, 174.14it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 89/103 [00:00<00:00, 145.47it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [06:43<02:17,  2.80s/it]detected_ratio_thres_value tensor(0.3684, device='cuda:0')
final masked points tensor(4111, device='cuda:0')
before filtering torch.Size([3, 55521])
after filtering torch.Size([2, 55521])
num_ins_points_after_filtering tensor([1659, 2448], device='cuda:0')
Working on scene0575_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], [138, 139, 140, 141]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 14/294 [00:00<00:02, 135.05it/s][A
Calculating viewed counts for every point:  11%|█         | 31/294 [00:00<00:01, 153.01it/s][A
Calculating viewed counts for every point:  16%|█▌        | 47/294 [00:00<00:01, 154.63it/s][A
Calculating viewed counts for every point:  21%|██▏       | 63/294 [00:00<00:01, 150.00it/s][A
Calculating viewed counts for every point:  27%|██▋       | 79/294 [00:00<00:01, 143.65it/s][A
Calculating viewed counts for every point:  32%|███▏      | 95/294 [00:00<00:01, 145.40it/s][A
Calculating viewed counts for every point:  37%|███▋      | 110/294 [00:00<00:01, 135.37it/s][A
Calculating viewed counts for every point:  42%|████▏     | 124/294 [00:00<00:01, 126.97it/s][A
Calculating viewed counts for every point:  47%|████▋     | 139/294 [00:01<00:01, 128.51it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 152/294 [00:01<00:01, 128.73it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 167/294 [00:01<00:01, 120.10it/s][A
Calculating viewed counts for every point:  61%|██████    | 180/294 [00:01<00:00, 117.12it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 195/294 [00:01<00:00, 124.69it/s][A
Calculating viewed counts for every point:  71%|███████   | 208/294 [00:01<00:00, 115.28it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 224/294 [00:01<00:00, 126.81it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 239/294 [00:01<00:00, 132.01it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 254/294 [00:01<00:00, 136.71it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 270/294 [00:02<00:00, 142.81it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 287/294 [00:02<00:00, 149.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [06:49<03:10,  3.97s/it]detected_ratio_thres_value tensor(0.3538, device='cuda:0')
final masked points tensor(5412, device='cuda:0')
before filtering torch.Size([2, 194207])
after filtering torch.Size([1, 194207])
num_ins_points_after_filtering tensor([5409], device='cuda:0')
Working on scene0578_00 class table
masks_to_be_merged [[0, 1, 2, 3, 5, 8, 10, 13, 15, 17, 19, 21, 23, 25, 27, 30, 31, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 112, 113, 114, 115, 116, 117, 124, 125, 126, 127, 128, 129, 130, 131], [4, 6, 7, 9, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 29, 32, 33, 35, 36, 39, 109, 110, 111, 118, 119, 120], [37, 38], [77, 80], [121, 122, 123]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 8/149 [00:00<00:01, 73.67it/s][A
Calculating viewed counts for every point:  22%|██▏       | 33/149 [00:00<00:00, 171.70it/s][A
Calculating viewed counts for every point:  34%|███▍      | 51/149 [00:00<00:00, 172.14it/s][A
Calculating viewed counts for every point:  47%|████▋     | 70/149 [00:00<00:00, 178.19it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 92/149 [00:00<00:00, 192.84it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 113/149 [00:00<00:00, 194.21it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 133/149 [00:00<00:00, 196.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [06:53<02:55,  3.74s/it]detected_ratio_thres_value tensor(0.4483, device='cuda:0')
final masked points tensor(6925, device='cuda:0')
before filtering torch.Size([5, 147607])
after filtering torch.Size([2, 147607])
num_ins_points_after_filtering tensor([5743, 1167], device='cuda:0')
Working on scene0580_00 class table
masks_to_be_merged [[0, 1, 2, 4, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 62, 63, 64, 65, 66, 67, 68, 69, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 117], [3, 5, 6, 70, 71, 72, 74, 75, 90, 91, 92, 93, 95, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 257, 258, 260], [8, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 233, 235, 236, 237, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 234, 238, 239, 240, 246, 247], [130, 132, 133, 134], [131, 135, 136, 137, 138, 139, 140, 143, 153, 154, 221, 222, 223, 224], [141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152], [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185, 186, 229, 230, 231], [220, 232], [225, 226, 227, 228]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 12/477 [00:00<00:04, 114.93it/s][A
Calculating viewed counts for every point:   6%|▋         | 31/477 [00:00<00:02, 155.13it/s][A
Calculating viewed counts for every point:  11%|█         | 52/477 [00:00<00:02, 178.89it/s][A
Calculating viewed counts for every point:  15%|█▍        | 70/477 [00:00<00:02, 165.39it/s][A
Calculating viewed counts for every point:  18%|█▊        | 87/477 [00:00<00:02, 135.94it/s][A
Calculating viewed counts for every point:  22%|██▏       | 104/477 [00:00<00:02, 140.14it/s][A
Calculating viewed counts for every point:  25%|██▍       | 119/477 [00:00<00:02, 137.58it/s][A
Calculating viewed counts for every point:  28%|██▊       | 134/477 [00:00<00:02, 118.24it/s][A
Calculating viewed counts for every point:  32%|███▏      | 151/477 [00:01<00:02, 128.98it/s][A
Calculating viewed counts for every point:  36%|███▌      | 172/477 [00:01<00:02, 148.65it/s][A
Calculating viewed counts for every point:  40%|███▉      | 189/477 [00:01<00:01, 154.11it/s][A
Calculating viewed counts for every point:  43%|████▎     | 207/477 [00:01<00:01, 157.54it/s][A
Calculating viewed counts for every point:  47%|████▋     | 224/477 [00:01<00:01, 157.16it/s][A
Calculating viewed counts for every point:  51%|█████     | 241/477 [00:01<00:01, 153.87it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 257/477 [00:01<00:01, 145.36it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 275/477 [00:01<00:01, 152.65it/s][A
Calculating viewed counts for every point:  61%|██████    | 291/477 [00:02<00:01, 139.74it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 309/477 [00:02<00:01, 148.83it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 326/477 [00:02<00:01, 148.32it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 346/477 [00:02<00:00, 157.93it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 364/477 [00:02<00:00, 163.29it/s][A
Calculating viewed counts for every point:  81%|████████  | 384/477 [00:02<00:00, 169.81it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 402/477 [00:02<00:00, 160.36it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 419/477 [00:02<00:00, 152.11it/s][A
Calculating viewed counts for every point:  91%|█████████ | 435/477 [00:03<00:00, 99.98it/s] [A
Calculating viewed counts for every point:  94%|█████████▍| 448/477 [00:03<00:00, 105.73it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 461/477 [00:03<00:00, 110.33it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 474/477 [00:03<00:00, 110.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [07:03<04:21,  5.69s/it]detected_ratio_thres_value tensor(0.2292, device='cuda:0')
final masked points tensor(16680, device='cuda:0')
before filtering torch.Size([10, 158047])
after filtering torch.Size([4, 158047])
num_ins_points_after_filtering tensor([1354, 3246, 4442, 4254], device='cuda:0')
Working on scene0583_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 58, 59, 61, 62, 63, 65, 66, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 98, 99, 100, 101, 102, 103, 104, 105], [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 64, 71, 72, 73, 74, 75, 76, 77, 79], [18, 19], [67, 68, 69], [95, 96, 97]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 14/198 [00:00<00:01, 104.61it/s][A
Calculating viewed counts for every point:  13%|█▎        | 26/198 [00:00<00:01, 112.16it/s][A
Calculating viewed counts for every point:  21%|██        | 42/198 [00:00<00:01, 130.85it/s][A
Calculating viewed counts for every point:  29%|██▉       | 58/198 [00:00<00:00, 140.86it/s][A
Calculating viewed counts for every point:  37%|███▋      | 74/198 [00:00<00:00, 142.09it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/198 [00:00<00:00, 117.38it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 110/198 [00:00<00:00, 140.69it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 129/198 [00:00<00:00, 150.23it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 146/198 [00:01<00:00, 155.07it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 167/198 [00:01<00:00, 169.91it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 185/198 [00:01<00:00, 171.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [07:06<03:44,  4.98s/it]detected_ratio_thres_value tensor(0.3958, device='cuda:0')
final masked points tensor(4886, device='cuda:0')
before filtering torch.Size([5, 146782])
after filtering torch.Size([3, 146782])
num_ins_points_after_filtering tensor([1349, 2555,  562], device='cuda:0')
Working on scene0591_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 91, 92, 93, 95, 96, 97, 99, 123, 125, 127, 128, 130, 132, 135, 137], [8, 11, 83, 84, 85, 86, 87, 88, 89, 90, 129, 131, 133, 134, 136, 138, 139, 140], [40, 41], [54, 55], [66, 68, 70, 71, 94], [67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 143, 144, 145, 146, 147, 148], [80, 81, 82, 141, 142], [98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126], [108, 109, 111, 112, 113, 114]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 7/173 [00:00<00:03, 55.24it/s][A
Calculating viewed counts for every point:   9%|▊         | 15/173 [00:00<00:02, 67.24it/s][A
Calculating viewed counts for every point:  18%|█▊        | 31/173 [00:00<00:01, 88.61it/s][A
Calculating viewed counts for every point:  27%|██▋       | 46/173 [00:00<00:01, 107.37it/s][A
Calculating viewed counts for every point:  33%|███▎      | 57/173 [00:00<00:01, 78.25it/s] [A
Calculating viewed counts for every point:  39%|███▊      | 67/173 [00:00<00:01, 77.22it/s][A
Calculating viewed counts for every point:  44%|████▍     | 76/173 [00:01<00:01, 66.73it/s][A
Calculating viewed counts for every point:  49%|████▉     | 85/173 [00:01<00:01, 70.08it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 94/173 [00:01<00:01, 74.57it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 102/173 [00:01<00:01, 68.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 116/173 [00:01<00:00, 85.56it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 132/173 [00:01<00:00, 101.70it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 146/173 [00:01<00:00, 111.30it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 158/173 [00:01<00:00, 105.29it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 169/173 [00:01<00:00, 103.54it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [07:12<03:55,  5.35s/it]detected_ratio_thres_value tensor(0.1944, device='cuda:0')
final masked points tensor(20665, device='cuda:0')
before filtering torch.Size([9, 175600])
after filtering torch.Size([7, 175600])
num_ins_points_after_filtering tensor([6914, 3007,   71,  434, 2714, 6496,  727], device='cuda:0')
Working on scene0593_00 class table
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 45, 46, 47, 150, 151], [14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 145, 146, 147, 148, 149], [33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 136, 138, 139, 140, 141, 142, 143, 144], [49, 50, 51, 52, 53, 100, 101, 102, 103], [54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 104, 107, 109], [59, 62, 64, 71, 74, 76, 77, 78, 79, 80, 81, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], [82, 83, 84, 85, 86, 87, 88, 90], [89, 91, 92, 93, 94, 95, 96, 97, 98, 99]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/230 [00:00<00:03, 65.03it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/230 [00:00<00:02, 79.03it/s][A
Calculating viewed counts for every point:  12%|█▏        | 28/230 [00:00<00:02, 95.87it/s][A
Calculating viewed counts for every point:  20%|██        | 46/230 [00:00<00:01, 127.67it/s][A
Calculating viewed counts for every point:  28%|██▊       | 64/230 [00:00<00:01, 141.10it/s][A
Calculating viewed counts for every point:  34%|███▍      | 79/230 [00:00<00:01, 118.26it/s][A
Calculating viewed counts for every point:  41%|████      | 94/230 [00:00<00:01, 124.59it/s][A
Calculating viewed counts for every point:  47%|████▋     | 107/230 [00:00<00:01, 118.96it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 123/230 [00:01<00:00, 129.32it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 137/230 [00:01<00:00, 127.98it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 151/230 [00:01<00:00, 127.34it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 164/230 [00:01<00:00, 114.42it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 181/230 [00:01<00:00, 126.45it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 196/230 [00:01<00:00, 132.30it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 210/230 [00:01<00:00, 133.08it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 224/230 [00:01<00:00, 133.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [07:18<03:57,  5.51s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(15360, device='cuda:0')
before filtering torch.Size([8, 211902])
after filtering torch.Size([7, 211902])
num_ins_points_after_filtering tensor([2265, 3069, 2580, 1459, 1050, 1648,  683], device='cuda:0')
Working on scene0595_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 25, 26, 27, 28, 29, 30, 31, 32], [10, 12, 22, 23, 24], [16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▋       | 20/76 [00:00<00:00, 177.59it/s][A
Calculating viewed counts for every point:  50%|█████     | 38/76 [00:00<00:00, 175.54it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 56/76 [00:00<00:00, 146.32it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 74/76 [00:00<00:00, 157.10it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [07:20<02:58,  4.26s/it]detected_ratio_thres_value tensor(0.1500, device='cuda:0')
final masked points tensor(15833, device='cuda:0')
before filtering torch.Size([3, 142330])
after filtering torch.Size([3, 142330])
num_ins_points_after_filtering tensor([2018, 8639, 4195], device='cuda:0')
Working on scene0598_00 class table
masks_to_be_merged [[0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 78, 83], [1, 3], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 13/101 [00:00<00:00, 127.21it/s][A
Calculating viewed counts for every point:  32%|███▏      | 32/101 [00:00<00:00, 162.00it/s][A
Calculating viewed counts for every point:  50%|█████     | 51/101 [00:00<00:00, 165.55it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 68/101 [00:00<00:00, 162.96it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 87/101 [00:00<00:00, 171.16it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [07:22<02:31,  3.70s/it]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(7940, device='cuda:0')
before filtering torch.Size([3, 145562])
after filtering torch.Size([3, 145562])
num_ins_points_after_filtering tensor([4484,   25, 3390], device='cuda:0')
Working on scene0599_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 26/189 [00:00<00:01, 115.77it/s][A
Calculating viewed counts for every point:  20%|██        | 38/189 [00:00<00:01, 111.29it/s][A
Calculating viewed counts for every point:  27%|██▋       | 51/189 [00:00<00:01, 115.94it/s][A
Calculating viewed counts for every point:  38%|███▊      | 72/189 [00:00<00:00, 145.48it/s][A
Calculating viewed counts for every point:  50%|████▉     | 94/189 [00:00<00:00, 164.79it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 112/189 [00:00<00:00, 144.62it/s][A
Calculating viewed counts for every point:  71%|███████   | 134/189 [00:00<00:00, 163.78it/s][A
Calculating viewed counts for every point:  80%|████████  | 152/189 [00:01<00:00, 168.24it/s][A
Calculating viewed counts for every point:  91%|█████████ | 172/189 [00:01<00:00, 176.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [07:27<02:45,  4.13s/it]detected_ratio_thres_value tensor(0.5135, device='cuda:0')
final masked points tensor(6298, device='cuda:0')
before filtering torch.Size([1, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([6298], device='cuda:0')
Working on scene0606_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], [53, 54, 55], [66, 67, 68, 69, 70, 74, 75], [78, 79], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/250 [00:00<00:01, 175.79it/s][A
Calculating viewed counts for every point:  15%|█▌        | 38/250 [00:00<00:01, 174.33it/s][A
Calculating viewed counts for every point:  26%|██▌       | 65/250 [00:00<00:00, 213.55it/s][A
Calculating viewed counts for every point:  35%|███▍      | 87/250 [00:00<00:00, 211.65it/s][A
Calculating viewed counts for every point:  44%|████▎     | 109/250 [00:00<00:00, 178.73it/s][A
Calculating viewed counts for every point:  51%|█████     | 128/250 [00:00<00:00, 159.41it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 145/250 [00:00<00:00, 143.88it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 160/250 [00:01<00:00, 128.39it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 181/250 [00:01<00:00, 147.52it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 199/250 [00:01<00:00, 154.94it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 217/250 [00:01<00:00, 159.66it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 234/250 [00:01<00:00, 142.88it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 249/250 [00:01<00:00, 137.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [07:32<02:55,  4.49s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(11727, device='cuda:0')
before filtering torch.Size([5, 164401])
after filtering torch.Size([2, 164401])
num_ins_points_after_filtering tensor([6276,  819], device='cuda:0')
Working on scene0607_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 74, 75, 76, 77, 78, 79, 80, 81], [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 12/100 [00:00<00:01, 83.40it/s][A
Calculating viewed counts for every point:  21%|██        | 21/100 [00:00<00:01, 77.13it/s][A
Calculating viewed counts for every point:  41%|████      | 41/100 [00:00<00:00, 104.04it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 52/100 [00:00<00:00, 71.04it/s] [A
Calculating viewed counts for every point:  79%|███████▉  | 79/100 [00:00<00:00, 116.88it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [07:35<02:29,  3.94s/it]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(17781, device='cuda:0')
before filtering torch.Size([2, 113156])
after filtering torch.Size([2, 113156])
num_ins_points_after_filtering tensor([14884,  2897], device='cuda:0')
Working on scene0608_00 class table
masks_to_be_merged [[0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 149, 150, 153, 155, 156, 158, 160, 162, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 189, 191, 194, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], [9, 18, 22, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 64, 65], [56, 60, 63], [57, 58, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], [62, 249, 250, 251, 252], [69, 70, 71, 72], [73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99], [74, 94, 103, 107, 115], [100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 124], [116, 118], [121, 122, 125], [129, 132, 133, 134, 135, 137, 138], [130, 131], [136, 139, 268], [140, 141, 143], [142, 144, 145, 146, 147, 151, 152, 154, 157, 159, 161, 163, 164, 166, 168, 181, 182, 184], [188, 190, 192, 193], [265, 266, 267]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 23/339 [00:00<00:01, 224.26it/s][A
Calculating viewed counts for every point:  14%|█▎        | 46/339 [00:00<00:01, 164.13it/s][A
Calculating viewed counts for every point:  19%|█▉        | 64/339 [00:00<00:01, 168.12it/s][A
Calculating viewed counts for every point:  24%|██▍       | 82/339 [00:00<00:01, 150.85it/s][A
Calculating viewed counts for every point:  29%|██▉       | 98/339 [00:00<00:01, 130.52it/s][A
Calculating viewed counts for every point:  34%|███▍      | 116/339 [00:00<00:01, 143.00it/s][A
Calculating viewed counts for every point:  40%|███▉      | 135/339 [00:00<00:01, 149.72it/s][A
Calculating viewed counts for every point:  45%|████▌     | 153/339 [00:00<00:01, 154.59it/s][A
Calculating viewed counts for every point:  50%|████▉     | 169/339 [00:01<00:01, 144.18it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 184/339 [00:01<00:01, 144.34it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 199/339 [00:01<00:01, 139.52it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 222/339 [00:01<00:00, 162.53it/s][A
Calculating viewed counts for every point:  71%|███████   | 239/339 [00:01<00:00, 160.63it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 263/339 [00:01<00:00, 181.41it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 282/339 [00:01<00:00, 181.30it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 305/339 [00:01<00:00, 194.72it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 325/339 [00:02<00:00, 165.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [07:46<03:44,  6.07s/it]detected_ratio_thres_value tensor(0.2586, device='cuda:0')
final masked points tensor(10581, device='cuda:0')
before filtering torch.Size([18, 186579])
after filtering torch.Size([4, 186579])
num_ins_points_after_filtering tensor([2280, 1516, 1801,  651], device='cuda:0')
Working on scene0609_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 32, 33, 34, 36, 39, 41, 42, 44, 45, 47, 48, 50], [6, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 35, 37, 38, 40, 43, 46, 49, 53, 90, 91, 93, 94, 96, 97, 101, 102, 104, 106, 116, 117, 121], [52, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 122], [95, 98, 99, 100]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 15/110 [00:00<00:00, 146.36it/s][A
Calculating viewed counts for every point:  41%|████      | 45/110 [00:00<00:00, 232.03it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 75/110 [00:00<00:00, 259.93it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 103/110 [00:00<00:00, 267.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▍  | 106/142 [07:49<03:05,  5.15s/it]detected_ratio_thres_value tensor(0.3548, device='cuda:0')
final masked points tensor(5104, device='cuda:0')
before filtering torch.Size([4, 78836])
after filtering torch.Size([2, 78836])
num_ins_points_after_filtering tensor([1551, 2081], device='cuda:0')
Working on scene0616_00 class table
masks_to_be_merged [[0, 1, 2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 117, 119, 121, 123, 234, 235, 238, 239, 240, 242, 244, 246], [4, 5, 6, 7, 8, 9, 10, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 108, 109, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 187, 188, 189, 207, 209, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 241, 243, 245, 247], [11, 12, 13, 51, 52, 53, 54, 55, 56, 73, 158, 179, 180, 206, 208, 210, 211, 212, 213], [57, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 215, 216, 217], [83, 84, 85], [86, 222], [139, 140, 181]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 106.45it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:04, 58.29it/s] [A
Calculating viewed counts for every point:  10%|▉         | 29/304 [00:00<00:05, 49.85it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/304 [00:00<00:05, 50.09it/s][A
Calculating viewed counts for every point:  16%|█▌        | 48/304 [00:00<00:03, 70.02it/s][A
Calculating viewed counts for every point:  20%|█▉        | 60/304 [00:00<00:02, 81.73it/s][A
Calculating viewed counts for every point:  23%|██▎       | 69/304 [00:01<00:03, 71.46it/s][A
Calculating viewed counts for every point:  25%|██▌       | 77/304 [00:01<00:03, 57.07it/s][A
Calculating viewed counts for every point:  28%|██▊       | 84/304 [00:01<00:04, 51.76it/s][A
Calculating viewed counts for every point:  30%|██▉       | 90/304 [00:01<00:04, 45.36it/s][A
Calculating viewed counts for every point:  31%|███▏      | 95/304 [00:01<00:04, 45.81it/s][A
Calculating viewed counts for every point:  34%|███▎      | 102/304 [00:01<00:04, 50.44it/s][A
Calculating viewed counts for every point:  37%|███▋      | 113/304 [00:01<00:03, 63.37it/s][A
Calculating viewed counts for every point:  40%|████      | 123/304 [00:02<00:02, 71.41it/s][A
Calculating viewed counts for every point:  44%|████▍     | 135/304 [00:02<00:02, 83.26it/s][A
Calculating viewed counts for every point:  47%|████▋     | 144/304 [00:02<00:01, 84.74it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 157/304 [00:02<00:01, 94.83it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 170/304 [00:02<00:01, 102.10it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 181/304 [00:02<00:01, 98.86it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 192/304 [00:02<00:01, 98.78it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 203/304 [00:02<00:01, 100.46it/s][A
Calculating viewed counts for every point:  71%|███████   | 215/304 [00:02<00:00, 104.14it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 226/304 [00:03<00:00, 91.84it/s] [A
Calculating viewed counts for every point:  78%|███████▊  | 236/304 [00:03<00:00, 89.48it/s][A
Calculating viewed counts for every point:  81%|████████  | 246/304 [00:03<00:00, 67.99it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 254/304 [00:03<00:00, 64.33it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 265/304 [00:03<00:00, 71.43it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 273/304 [00:03<00:00, 72.21it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 282/304 [00:03<00:00, 75.38it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 294/304 [00:03<00:00, 86.82it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [08:04<04:43,  8.09s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(8964, device='cuda:0')
before filtering torch.Size([7, 310248])
after filtering torch.Size([1, 310248])
num_ins_points_after_filtering tensor([3610], device='cuda:0')
Working on scene0618_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 105, 108, 110, 111, 113, 118, 120, 121, 122], [8, 9, 11, 14, 16, 18, 20, 22, 24, 26, 28, 125, 127, 129, 132], [10, 12, 13, 15, 17, 19, 21, 23, 25, 27, 29, 32, 33, 34, 35, 36, 40, 42, 45, 65, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 95, 97, 99, 102, 106, 109, 112, 115, 117, 119, 123, 124, 126, 128, 130, 131, 133], [30, 31], [37, 41, 43, 46, 47, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 69], [44, 48, 49, 53, 57, 59], [71, 73, 75, 77, 79, 83, 85, 87, 91, 94, 96, 103, 104, 107], [93, 100], [98, 101], [114, 116]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 10/90 [00:00<00:00, 92.97it/s][A
Calculating viewed counts for every point:  23%|██▎       | 21/90 [00:00<00:00, 101.36it/s][A
Calculating viewed counts for every point:  38%|███▊      | 34/90 [00:00<00:00, 111.55it/s][A
Calculating viewed counts for every point:  51%|█████     | 46/90 [00:00<00:00, 105.77it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 58/90 [00:00<00:00, 110.03it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 70/90 [00:00<00:00, 112.61it/s][A
Calculating viewed counts for every point:  91%|█████████ | 82/90 [00:00<00:00, 93.72it/s] [A
                                                                                          [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [08:08<03:56,  6.96s/it]detected_ratio_thres_value tensor(0.4615, device='cuda:0')
final masked points tensor(21983, device='cuda:0')
before filtering torch.Size([10, 232740])
after filtering torch.Size([4, 232740])
num_ins_points_after_filtering tensor([ 1868,  1577, 12113,  5246], device='cuda:0')
Working on scene0621_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], [13, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 170, 172, 173, 175], [22, 24, 25, 27, 31, 34, 36, 38, 40, 41, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 99, 105, 108, 109, 110, 111, 223, 224, 225, 226, 228, 229, 231, 235, 236, 238, 239, 240, 241, 243, 245, 247, 248, 251, 253, 255, 260, 261], [30, 33, 35, 37, 39], [42, 43, 51, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 227, 230, 232, 233, 234, 237, 249, 257], [44, 45, 48, 50, 52, 54, 56], [46, 49], [84, 86], [87, 88, 89, 95, 98], [91, 92], [104, 106], [114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [116, 118], [150, 151, 152], [158, 159, 160, 161, 162, 163, 164, 165], [166, 167, 168], [171, 174, 177, 178, 179], [199, 201], [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], [250, 252, 254]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 19/268 [00:00<00:01, 183.71it/s][A
Calculating viewed counts for every point:  14%|█▍        | 38/268 [00:00<00:01, 172.44it/s][A
Calculating viewed counts for every point:  21%|██        | 56/268 [00:00<00:01, 156.83it/s][A
Calculating viewed counts for every point:  27%|██▋       | 72/268 [00:00<00:01, 155.08it/s][A
Calculating viewed counts for every point:  33%|███▎      | 88/268 [00:00<00:01, 152.41it/s][A
Calculating viewed counts for every point:  40%|███▉      | 106/268 [00:00<00:01, 160.49it/s][A
Calculating viewed counts for every point:  46%|████▌     | 123/268 [00:00<00:00, 159.64it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 140/268 [00:00<00:00, 149.23it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 156/268 [00:01<00:00, 151.29it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 172/268 [00:01<00:00, 146.50it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 187/268 [00:01<00:00, 144.39it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 202/268 [00:01<00:00, 145.60it/s][A
Calculating viewed counts for every point:  81%|████████  | 217/268 [00:01<00:00, 140.31it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 232/268 [00:01<00:00, 140.52it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 248/268 [00:01<00:00, 143.92it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 265/268 [00:01<00:00, 150.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [08:18<04:13,  7.69s/it]detected_ratio_thres_value tensor(0.1622, device='cuda:0')
final masked points tensor(21044, device='cuda:0')
before filtering torch.Size([20, 250821])
after filtering torch.Size([8, 250821])
num_ins_points_after_filtering tensor([2820, 2282, 4496, 2229,  503, 1712, 2512, 2533], device='cuda:0')
Working on scene0629_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28], [29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 140, 141, 142, 144, 145, 146, 148, 152, 154, 155, 157], [36, 38, 40, 42, 45, 47, 49, 52, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 143, 147, 149, 150, 151, 153, 156, 158, 164], [137, 138, 139], [159, 160, 161, 162]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 13/275 [00:00<00:02, 127.43it/s][A
Calculating viewed counts for every point:   9%|▉         | 26/275 [00:00<00:02, 123.05it/s][A
Calculating viewed counts for every point:  14%|█▍        | 39/275 [00:00<00:02, 106.78it/s][A
Calculating viewed counts for every point:  20%|█▉        | 54/275 [00:00<00:01, 121.81it/s][A
Calculating viewed counts for every point:  24%|██▍       | 67/275 [00:00<00:01, 111.66it/s][A
Calculating viewed counts for every point:  30%|███       | 83/275 [00:00<00:01, 124.04it/s][A
Calculating viewed counts for every point:  36%|███▌      | 98/275 [00:00<00:01, 129.10it/s][A
Calculating viewed counts for every point:  41%|████      | 112/275 [00:00<00:01, 128.02it/s][A
Calculating viewed counts for every point:  45%|████▌     | 125/275 [00:01<00:01, 128.08it/s][A
Calculating viewed counts for every point:  51%|█████     | 139/275 [00:01<00:01, 129.19it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 154/275 [00:01<00:00, 132.99it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 170/275 [00:01<00:00, 137.69it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 184/275 [00:01<00:00, 126.64it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 197/275 [00:01<00:00, 123.48it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 211/275 [00:01<00:00, 126.54it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 224/275 [00:01<00:00, 124.76it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 237/275 [00:01<00:00, 122.33it/s][A
Calculating viewed counts for every point:  91%|█████████ | 250/275 [00:02<00:00, 119.58it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 265/275 [00:02<00:00, 127.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [08:25<04:01,  7.56s/it]detected_ratio_thres_value tensor(0.3922, device='cuda:0')
final masked points tensor(7526, device='cuda:0')
before filtering torch.Size([6, 255083])
after filtering torch.Size([3, 255083])
num_ins_points_after_filtering tensor([1233, 2693, 2943], device='cuda:0')
Working on scene0633_00 class table
masks_to_be_merged [[0, 2, 8, 12, 14, 17, 20, 24, 26, 27, 28, 29, 30, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 91, 93, 94, 95, 96, 97, 109, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127], [1, 3, 5, 9, 11, 15, 16, 19, 22, 23, 25, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92], [4, 6, 7, 10, 13, 18, 21, 70, 72, 74, 82, 83, 84, 85, 86], [31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 98, 102, 103, 104, 105, 106, 107, 108], [34, 35, 99, 100, 101, 128], [116, 117, 118, 119]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 25/160 [00:00<00:00, 248.86it/s][A
Calculating viewed counts for every point:  31%|███▏      | 50/160 [00:00<00:00, 221.30it/s][A
Calculating viewed counts for every point:  50%|█████     | 80/160 [00:00<00:00, 254.37it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 106/160 [00:00<00:00, 232.17it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 130/160 [00:00<00:00, 234.03it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 154/160 [00:00<00:00, 220.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [08:28<03:12,  6.20s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(14550, device='cuda:0')
before filtering torch.Size([6, 101007])
after filtering torch.Size([3, 101007])
num_ins_points_after_filtering tensor([1364, 4993, 4144], device='cuda:0')
Working on scene0643_00 class table
masks_to_be_merged [[0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 148, 149, 151, 154, 156], [1, 4, 6, 137, 139, 142, 144, 146, 150, 152, 153, 155, 157, 194, 195], [49, 50, 51, 52, 53, 54, 55], [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 81, 83, 84, 87, 88, 117, 118, 119, 121, 123, 125, 126, 127, 128], [76, 78, 80, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 122, 124, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], [147, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 187, 188, 189, 190, 191, 192], [173, 174]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/194 [00:00<00:01, 172.05it/s][A
Calculating viewed counts for every point:  19%|█▊        | 36/194 [00:00<00:00, 161.43it/s][A
Calculating viewed counts for every point:  29%|██▉       | 57/194 [00:00<00:00, 181.53it/s][A
Calculating viewed counts for every point:  39%|███▉      | 76/194 [00:00<00:00, 160.16it/s][A
Calculating viewed counts for every point:  48%|████▊     | 93/194 [00:00<00:00, 134.42it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 108/194 [00:00<00:00, 128.58it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 125/194 [00:00<00:00, 139.33it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 140/194 [00:00<00:00, 130.95it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 154/194 [00:01<00:00, 125.40it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 169/194 [00:01<00:00, 131.77it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 183/194 [00:01<00:00, 128.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [08:35<03:11,  6.38s/it]detected_ratio_thres_value tensor(0.4737, device='cuda:0')
final masked points tensor(9363, device='cuda:0')
before filtering torch.Size([7, 167360])
after filtering torch.Size([4, 167360])
num_ins_points_after_filtering tensor([2769,  724, 2806, 2050], device='cuda:0')
Working on scene0644_00 class table
masks_to_be_merged [[0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143], [3, 5, 89, 93], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [68, 69], [70, 71], [72, 73, 74, 75, 76, 77, 78, 149, 150, 154], [142, 144, 145, 146, 147, 148], [151, 152, 153, 155, 156, 157], [158, 159, 160, 161, 162, 163, 166], [168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [171, 174, 179]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/201 [00:00<00:03, 55.04it/s][A
Calculating viewed counts for every point:   8%|▊         | 16/201 [00:00<00:02, 77.81it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/201 [00:00<00:02, 71.76it/s][A
Calculating viewed counts for every point:  17%|█▋        | 34/201 [00:00<00:02, 79.64it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/201 [00:00<00:01, 90.53it/s][A
Calculating viewed counts for every point:  28%|██▊       | 56/201 [00:00<00:01, 92.11it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/201 [00:00<00:01, 86.47it/s][A
Calculating viewed counts for every point:  37%|███▋      | 75/201 [00:00<00:01, 84.10it/s][A
Calculating viewed counts for every point:  42%|████▏     | 84/201 [00:01<00:01, 83.51it/s][A
Calculating viewed counts for every point:  47%|████▋     | 94/201 [00:01<00:01, 87.72it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 106/201 [00:01<00:00, 96.59it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 119/201 [00:01<00:00, 105.10it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 130/201 [00:01<00:00, 99.83it/s] [A
Calculating viewed counts for every point:  71%|███████   | 142/201 [00:01<00:00, 102.29it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 153/201 [00:01<00:00, 94.63it/s] [A
Calculating viewed counts for every point:  81%|████████  | 163/201 [00:01<00:00, 90.71it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 173/201 [00:01<00:00, 90.31it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 185/201 [00:02<00:00, 97.38it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 195/201 [00:02<00:00, 86.89it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [08:44<03:32,  7.34s/it]detected_ratio_thres_value tensor(0.4688, device='cuda:0')
final masked points tensor(14493, device='cuda:0')
before filtering torch.Size([11, 299472])
after filtering torch.Size([3, 299472])
num_ins_points_after_filtering tensor([5531, 5557, 1623], device='cuda:0')
Working on scene0645_00 class table
masks_to_be_merged [[0, 1, 5, 6, 149, 150, 169, 170, 171, 172, 173], [2, 3, 4, 152, 153, 154, 167, 168], [8, 9, 10, 11], [12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 38, 39, 41, 42, 45], [17, 18], [30, 31, 33, 34, 35, 36, 37, 40, 44, 46, 47, 48, 49, 50, 51, 53, 55, 57, 59], [52, 54, 56, 58, 60, 61, 62, 63, 64, 67, 68], [65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116], [100, 101, 102, 114, 117, 118, 119, 120, 121, 122], [124, 125, 126], [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|▏         | 6/451 [00:00<00:07, 58.25it/s][A
Calculating viewed counts for every point:   3%|▎         | 12/451 [00:00<00:07, 58.42it/s][A
Calculating viewed counts for every point:   4%|▍         | 19/451 [00:00<00:06, 62.32it/s][A
Calculating viewed counts for every point:   6%|▌         | 26/451 [00:00<00:08, 48.67it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/451 [00:00<00:08, 50.37it/s][A
Calculating viewed counts for every point:   8%|▊         | 38/451 [00:00<00:08, 46.22it/s][A
Calculating viewed counts for every point:  10%|▉         | 45/451 [00:00<00:07, 51.40it/s][A
Calculating viewed counts for every point:  11%|█▏        | 51/451 [00:00<00:07, 51.34it/s][A
Calculating viewed counts for every point:  13%|█▎        | 57/451 [00:01<00:08, 47.50it/s][A
Calculating viewed counts for every point:  14%|█▍        | 64/451 [00:01<00:07, 51.29it/s][A
Calculating viewed counts for every point:  16%|█▌        | 70/451 [00:01<00:07, 49.00it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/451 [00:01<00:07, 52.81it/s][A
Calculating viewed counts for every point:  19%|█▉        | 86/451 [00:01<00:05, 61.21it/s][A
Calculating viewed counts for every point:  21%|██        | 93/451 [00:01<00:08, 42.44it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/451 [00:02<00:07, 47.19it/s][A
Calculating viewed counts for every point:  24%|██▍       | 108/451 [00:02<00:06, 51.21it/s][A
Calculating viewed counts for every point:  26%|██▌       | 117/451 [00:02<00:05, 59.09it/s][A
Calculating viewed counts for every point:  27%|██▋       | 124/451 [00:02<00:05, 56.88it/s][A
Calculating viewed counts for every point:  30%|██▉       | 134/451 [00:02<00:04, 66.96it/s][A
Calculating viewed counts for every point:  31%|███▏      | 142/451 [00:02<00:04, 67.79it/s][A
Calculating viewed counts for every point:  33%|███▎      | 150/451 [00:02<00:04, 62.92it/s][A
Calculating viewed counts for every point:  35%|███▍      | 157/451 [00:02<00:04, 59.65it/s][A
Calculating viewed counts for every point:  36%|███▋      | 164/451 [00:02<00:04, 60.63it/s][A
Calculating viewed counts for every point:  38%|███▊      | 172/451 [00:03<00:04, 64.74it/s][A
Calculating viewed counts for every point:  40%|███▉      | 179/451 [00:03<00:04, 64.90it/s][A
Calculating viewed counts for every point:  42%|████▏     | 189/451 [00:03<00:03, 73.76it/s][A
Calculating viewed counts for every point:  44%|████▎     | 197/451 [00:03<00:03, 74.24it/s][A
Calculating viewed counts for every point:  45%|████▌     | 205/451 [00:03<00:03, 73.27it/s][A
Calculating viewed counts for every point:  48%|████▊     | 215/451 [00:03<00:03, 74.68it/s][A
Calculating viewed counts for every point:  50%|████▉     | 225/451 [00:03<00:02, 81.18it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 234/451 [00:03<00:03, 70.62it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 242/451 [00:04<00:03, 67.76it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 249/451 [00:04<00:03, 63.33it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 256/451 [00:04<00:03, 58.40it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 264/451 [00:04<00:02, 62.55it/s][A
Calculating viewed counts for every point:  60%|██████    | 271/451 [00:04<00:03, 58.13it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 281/451 [00:04<00:02, 66.01it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 289/451 [00:04<00:02, 66.08it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 296/451 [00:04<00:02, 56.37it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 303/451 [00:05<00:02, 57.46it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 309/451 [00:05<00:02, 57.13it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 315/451 [00:05<00:02, 55.15it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 322/451 [00:05<00:02, 58.88it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 329/451 [00:05<00:02, 56.50it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 335/451 [00:05<00:02, 54.11it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 341/451 [00:05<00:02, 54.62it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 347/451 [00:05<00:01, 55.77it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 355/451 [00:06<00:01, 60.61it/s][A
Calculating viewed counts for every point:  80%|████████  | 362/451 [00:06<00:01, 56.96it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 370/451 [00:06<00:01, 62.16it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 377/451 [00:06<00:01, 59.21it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 384/451 [00:06<00:01, 61.03it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 395/451 [00:06<00:00, 72.91it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 404/451 [00:06<00:00, 76.35it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 412/451 [00:06<00:00, 74.40it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 420/451 [00:06<00:00, 64.23it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 427/451 [00:07<00:00, 60.62it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 434/451 [00:07<00:00, 60.39it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 441/451 [00:07<00:00, 59.86it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 448/451 [00:07<00:00, 55.21it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [08:59<04:25,  9.47s/it]detected_ratio_thres_value tensor(0.2292, device='cuda:0')
final masked points tensor(18962, device='cuda:0')
before filtering torch.Size([12, 352477])
after filtering torch.Size([6, 352477])
num_ins_points_after_filtering tensor([2453, 1850, 2635, 4876, 3665, 1440], device='cuda:0')
Working on scene0647_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 21, 23, 24, 26, 32, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151], [18, 22], [41, 42, 44, 46, 48, 50, 53, 55, 57], [47, 49], [52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], [83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 103, 104, 111, 114, 117, 120, 121, 125]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 17/110 [00:00<00:00, 167.01it/s][A
Calculating viewed counts for every point:  31%|███       | 34/110 [00:00<00:00, 148.60it/s][A
Calculating viewed counts for every point:  48%|████▊     | 53/110 [00:00<00:00, 164.28it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 74/110 [00:00<00:00, 178.59it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 93/110 [00:00<00:00, 182.00it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [09:03<03:29,  7.75s/it]detected_ratio_thres_value tensor(0.4444, device='cuda:0')
final masked points tensor(10146, device='cuda:0')
before filtering torch.Size([6, 196185])
after filtering torch.Size([4, 196185])
num_ins_points_after_filtering tensor([6223, 1304, 1880,  692], device='cuda:0')
Working on scene0648_00 class table
masks_to_be_merged [[0, 1, 2, 47, 48, 49, 50, 51, 52, 179, 180, 181, 182, 223, 224, 225, 230, 231, 232, 234, 235, 236], [3, 4, 5, 6, 63, 64, 226, 227], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], [21, 24, 26], [22, 23, 25, 27, 28, 29, 30, 31, 84, 85, 86, 87], [32, 33, 34, 35, 36, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 251, 252, 253, 254, 255, 256, 257], [38, 39, 40, 210], [41, 43], [44, 45], [46, 241], [53, 54, 55, 56, 57, 228, 229], [171, 172, 173, 174, 175, 176], [177, 178], [183, 219, 220, 221, 222], [208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 242, 243, 244, 245, 246, 248, 249], [238, 239]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 11/419 [00:00<00:04, 93.00it/s][A
Calculating viewed counts for every point:   6%|▌         | 26/419 [00:00<00:03, 123.92it/s][A
Calculating viewed counts for every point:  10%|█         | 42/419 [00:00<00:02, 139.33it/s][A
Calculating viewed counts for every point:  14%|█▎        | 57/419 [00:00<00:02, 123.99it/s][A
Calculating viewed counts for every point:  17%|█▋        | 70/419 [00:00<00:03, 87.72it/s] [A
Calculating viewed counts for every point:  20%|██        | 84/419 [00:00<00:03, 96.20it/s][A
Calculating viewed counts for every point:  23%|██▎       | 95/419 [00:00<00:03, 91.72it/s][A
Calculating viewed counts for every point:  26%|██▋       | 111/419 [00:01<00:02, 108.56it/s][A
Calculating viewed counts for every point:  30%|██▉       | 125/419 [00:01<00:02, 116.25it/s][A
Calculating viewed counts for every point:  36%|███▌      | 149/419 [00:01<00:01, 149.25it/s][A
Calculating viewed counts for every point:  39%|███▉      | 165/419 [00:01<00:01, 151.62it/s][A
Calculating viewed counts for every point:  43%|████▎     | 181/419 [00:01<00:01, 133.95it/s][A
Calculating viewed counts for every point:  48%|████▊     | 200/419 [00:01<00:01, 147.03it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 216/419 [00:01<00:01, 140.87it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 231/419 [00:01<00:01, 141.81it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 246/419 [00:01<00:01, 139.17it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 261/419 [00:02<00:01, 123.17it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 274/419 [00:02<00:01, 124.59it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 291/419 [00:02<00:00, 136.49it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 306/419 [00:02<00:01, 89.24it/s] [A
Calculating viewed counts for every point:  76%|███████▌  | 318/419 [00:02<00:01, 91.63it/s][A
Calculating viewed counts for every point:  81%|████████  | 338/419 [00:02<00:00, 114.21it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 354/419 [00:02<00:00, 117.53it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 368/419 [00:03<00:00, 115.22it/s][A
Calculating viewed counts for every point:  91%|█████████ | 381/419 [00:03<00:00, 109.06it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 399/419 [00:03<00:00, 125.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [09:13<03:43,  8.58s/it]detected_ratio_thres_value tensor(0.3929, device='cuda:0')
final masked points tensor(9908, device='cuda:0')
before filtering torch.Size([16, 167915])
after filtering torch.Size([2, 167915])
num_ins_points_after_filtering tensor([3816, 1885], device='cuda:0')
Working on scene0651_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 60, 61, 63, 64, 65], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], [33, 34], [36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 3/104 [00:00<00:04, 21.26it/s][A
Calculating viewed counts for every point:   6%|▌         | 6/104 [00:00<00:10,  9.22it/s][A
Calculating viewed counts for every point:   8%|▊         | 8/104 [00:00<00:08, 11.27it/s][A
Calculating viewed counts for every point:  10%|▉         | 10/104 [00:00<00:08, 10.77it/s][A
Calculating viewed counts for every point:  17%|█▋        | 18/104 [00:01<00:03, 24.98it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/104 [00:01<00:02, 36.39it/s][A
Calculating viewed counts for every point:  32%|███▏      | 33/104 [00:01<00:01, 43.82it/s][A
Calculating viewed counts for every point:  47%|████▋     | 49/104 [00:01<00:00, 72.59it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 60/104 [00:01<00:00, 77.36it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 71/104 [00:01<00:00, 85.04it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 90/104 [00:01<00:00, 111.15it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 102/104 [00:01<00:00, 107.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [09:17<02:57,  7.11s/it]detected_ratio_thres_value tensor(0.3448, device='cuda:0')
final masked points tensor(9741, device='cuda:0')
before filtering torch.Size([4, 88450])
after filtering torch.Size([2, 88450])
num_ins_points_after_filtering tensor([5328, 4075], device='cuda:0')
Working on scene0652_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 76], [17, 60, 61, 62], [18, 19, 36, 37, 63, 77, 78], [21, 22, 24, 25, 26, 28, 64], [29, 30], [31, 32, 33], [34, 35], [65, 66, 67, 68, 69, 70, 71], [72, 73, 74, 75]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/144 [00:00<00:00, 238.90it/s][A
Calculating viewed counts for every point:  33%|███▎      | 48/144 [00:00<00:00, 220.32it/s][A
Calculating viewed counts for every point:  49%|████▉     | 71/144 [00:00<00:00, 222.08it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 94/144 [00:00<00:00, 219.02it/s][A
Calculating viewed counts for every point:  81%|████████  | 116/144 [00:00<00:00, 190.33it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 138/144 [00:00<00:00, 187.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [09:19<02:16,  5.69s/it]detected_ratio_thres_value tensor(0.2051, device='cuda:0')
final masked points tensor(7879, device='cuda:0')
before filtering torch.Size([9, 100286])
after filtering torch.Size([5, 100286])
num_ins_points_after_filtering tensor([4797,  364,  685,  548,  476], device='cuda:0')
Working on scene0653_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 36, 40, 42, 43, 46, 48, 50, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], [29, 30, 31, 33, 34, 35, 37, 38, 39, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346], [44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115], [92, 95, 96], [98, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], [183, 184, 185, 186, 187], [188, 189, 190, 191], [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232], [209, 210], [230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 306, 307, 308, 312, 314], [303, 304, 305, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 327, 329], [310, 311], [326, 328]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 15/388 [00:00<00:02, 145.76it/s][A
Calculating viewed counts for every point:   8%|▊         | 30/388 [00:00<00:02, 146.07it/s][A
Calculating viewed counts for every point:  12%|█▏        | 45/388 [00:00<00:02, 129.45it/s][A
Calculating viewed counts for every point:  15%|█▌        | 60/388 [00:00<00:02, 136.30it/s][A
Calculating viewed counts for every point:  19%|█▉        | 74/388 [00:00<00:04, 66.47it/s] [A
Calculating viewed counts for every point:  23%|██▎       | 88/388 [00:00<00:03, 80.35it/s][A
Calculating viewed counts for every point:  26%|██▌       | 100/388 [00:01<00:03, 86.12it/s][A
Calculating viewed counts for every point:  29%|██▉       | 113/388 [00:01<00:02, 95.33it/s][A
Calculating viewed counts for every point:  33%|███▎      | 128/388 [00:01<00:02, 107.54it/s][A
Calculating viewed counts for every point:  37%|███▋      | 142/388 [00:01<00:02, 115.55it/s][A
Calculating viewed counts for every point:  40%|███▉      | 155/388 [00:01<00:02, 90.41it/s] [A
Calculating viewed counts for every point:  44%|████▎     | 169/388 [00:01<00:02, 100.12it/s][A
Calculating viewed counts for every point:  47%|████▋     | 181/388 [00:01<00:01, 104.79it/s][A
Calculating viewed counts for every point:  51%|█████     | 196/388 [00:01<00:01, 115.26it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 209/388 [00:02<00:01, 105.67it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 224/388 [00:02<00:01, 115.12it/s][A
Calculating viewed counts for every point:  61%|██████    | 237/388 [00:02<00:01, 116.73it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 250/388 [00:02<00:01, 112.83it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 264/388 [00:02<00:01, 119.88it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 277/388 [00:02<00:00, 114.58it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 289/388 [00:02<00:00, 114.61it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 302/388 [00:02<00:00, 118.53it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 316/388 [00:02<00:00, 123.68it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 329/388 [00:03<00:00, 118.24it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 341/388 [00:03<00:00, 116.30it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 356/388 [00:03<00:00, 124.78it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 371/388 [00:03<00:00, 130.64it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 386/388 [00:03<00:00, 136.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [09:33<03:06,  8.12s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(17884, device='cuda:0')
before filtering torch.Size([13, 284951])
after filtering torch.Size([6, 284951])
num_ins_points_after_filtering tensor([3188, 1553, 2333, 1043, 4490, 2756], device='cuda:0')
Working on scene0655_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37], [22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 11/111 [00:00<00:01, 78.22it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/111 [00:00<00:01, 61.15it/s][A
Calculating viewed counts for every point:  23%|██▎       | 26/111 [00:00<00:01, 61.82it/s][A
Calculating viewed counts for every point:  30%|██▉       | 33/111 [00:00<00:01, 56.31it/s][A
Calculating viewed counts for every point:  35%|███▌      | 39/111 [00:00<00:01, 56.33it/s][A
Calculating viewed counts for every point:  43%|████▎     | 48/111 [00:00<00:00, 65.03it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 61/111 [00:00<00:00, 82.71it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 70/111 [00:01<00:00, 75.58it/s][A
Calculating viewed counts for every point:  81%|████████  | 90/111 [00:01<00:00, 92.15it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 106/111 [00:01<00:00, 108.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [09:37<02:28,  6.76s/it]detected_ratio_thres_value tensor(0.3684, device='cuda:0')
final masked points tensor(7608, device='cuda:0')
before filtering torch.Size([2, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([7362], device='cuda:0')
Working on scene0658_00 class table
masks_to_be_merged [[0, 2, 5, 6, 8, 9, 10, 12, 15, 16, 19, 21, 22, 23], [1, 3, 4, 7, 11, 13, 14, 17, 18, 20], [24, 25, 26, 27, 28, 29, 35, 36], [30, 31, 32, 33, 34, 38], [39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 15/55 [00:00<00:00, 149.90it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 30/55 [00:00<00:00, 93.93it/s] [A
Calculating viewed counts for every point:  75%|███████▍  | 41/55 [00:00<00:00, 98.86it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 52/55 [00:00<00:00, 86.44it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [09:38<01:50,  5.26s/it]detected_ratio_thres_value tensor(0.3636, device='cuda:0')
final masked points tensor(13436, device='cuda:0')
before filtering torch.Size([5, 129951])
after filtering torch.Size([5, 129951])
num_ins_points_after_filtering tensor([3332, 1342, 5495, 1407, 1831], device='cuda:0')
Working on scene0660_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 16/105 [00:00<00:00, 159.71it/s][A
Calculating viewed counts for every point:  36%|███▌      | 38/105 [00:00<00:00, 174.20it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 57/105 [00:00<00:00, 177.35it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 81/105 [00:00<00:00, 199.68it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 103/105 [00:00<00:00, 205.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [09:40<01:24,  4.23s/it]detected_ratio_thres_value tensor(0.4138, device='cuda:0')
final masked points tensor(6859, device='cuda:0')
before filtering torch.Size([1, 110960])
after filtering torch.Size([1, 110960])
num_ins_points_after_filtering tensor([6859], device='cuda:0')
Working on scene0663_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 43, 44, 47, 49, 50, 52, 58, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 211, 213], [24, 25], [26, 105], [38, 40, 42, 45, 46, 48, 51, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 130, 133, 135, 136, 137, 138, 139], [54, 55], [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210], [96, 97, 98, 99, 100, 101, 102, 103, 104], [110, 111], [141, 142, 143, 144, 149, 150, 151, 152, 153, 154], [145, 147, 148], [207, 208]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|▏         | 4/295 [00:00<00:15, 18.25it/s][A
Calculating viewed counts for every point:   2%|▏         | 6/295 [00:00<00:24, 11.80it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/295 [00:00<00:12, 22.47it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/295 [00:00<00:05, 50.79it/s][A
Calculating viewed counts for every point:  15%|█▍        | 43/295 [00:01<00:04, 55.85it/s][A
Calculating viewed counts for every point:  18%|█▊        | 54/295 [00:01<00:03, 67.34it/s][A
Calculating viewed counts for every point:  22%|██▏       | 66/295 [00:01<00:02, 79.55it/s][A
Calculating viewed counts for every point:  30%|██▉       | 88/295 [00:01<00:01, 113.86it/s][A
Calculating viewed counts for every point:  35%|███▍      | 103/295 [00:01<00:01, 123.28it/s][A
Calculating viewed counts for every point:  41%|████      | 120/295 [00:01<00:01, 135.85it/s][A
Calculating viewed counts for every point:  47%|████▋     | 139/295 [00:01<00:01, 148.57it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 155/295 [00:01<00:01, 133.78it/s][A
Calculating viewed counts for every point:  60%|██████    | 177/295 [00:01<00:00, 155.23it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 197/295 [00:01<00:00, 166.67it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 215/295 [00:02<00:00, 168.51it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 235/295 [00:02<00:00, 175.11it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 253/295 [00:02<00:00, 171.93it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 271/295 [00:02<00:00, 170.09it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 291/295 [00:02<00:00, 158.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [09:47<01:37,  5.14s/it]detected_ratio_thres_value tensor(0.3415, device='cuda:0')
final masked points tensor(7955, device='cuda:0')
before filtering torch.Size([11, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([1969, 2851], device='cuda:0')
Working on scene0664_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|          | 1/144 [00:00<00:15,  9.17it/s][A
Calculating viewed counts for every point:   6%|▌         | 8/144 [00:00<00:03, 41.45it/s][A
Calculating viewed counts for every point:  12%|█▎        | 18/144 [00:00<00:02, 62.37it/s][A
Calculating viewed counts for every point:  23%|██▎       | 33/144 [00:00<00:01, 94.13it/s][A
Calculating viewed counts for every point:  30%|██▉       | 43/144 [00:00<00:01, 83.09it/s][A
Calculating viewed counts for every point:  40%|████      | 58/144 [00:00<00:00, 100.05it/s][A
Calculating viewed counts for every point:  48%|████▊     | 69/144 [00:00<00:00, 97.47it/s] [A
Calculating viewed counts for every point:  55%|█████▍    | 79/144 [00:00<00:00, 96.45it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 100/144 [00:01<00:00, 121.60it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 128/144 [00:01<00:00, 161.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [09:49<01:15,  4.22s/it]detected_ratio_thres_value tensor(0.4118, device='cuda:0')
final masked points tensor(2041, device='cuda:0')
before filtering torch.Size([1, 44585])
after filtering torch.Size([1, 44585])
num_ins_points_after_filtering tensor([2041], device='cuda:0')
Working on scene0665_00 class table
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 9, 12, 13, 15, 17, 20, 22, 24, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 149, 152, 153, 155], [1, 8, 10, 11, 14, 16, 18, 19, 21, 23, 25, 26, 27, 29, 31, 33, 141, 143, 145, 147, 150, 154, 156], [28, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46], [43, 53, 54], [48, 50, 52], [49, 51, 55, 57, 59, 61, 64, 65, 66, 67, 68, 70, 73, 76, 79, 81, 83, 85, 87, 89, 93, 95, 98, 101, 103], [86, 88, 90, 91, 92, 94, 96, 97, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122], [116, 124], [118, 121, 123], [127, 128, 129, 130, 131, 132]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 12/104 [00:00<00:00, 119.41it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 120.38it/s][A
Calculating viewed counts for every point:  37%|███▋      | 38/104 [00:00<00:00, 90.32it/s] [A
Calculating viewed counts for every point:  47%|████▋     | 49/104 [00:00<00:00, 95.36it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 61/104 [00:00<00:00, 102.87it/s][A
Calculating viewed counts for every point:  70%|███████   | 73/104 [00:00<00:00, 107.12it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 87/104 [00:00<00:00, 116.06it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 99/104 [00:00<00:00, 110.05it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [09:54<01:14,  4.36s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(23756, device='cuda:0')
before filtering torch.Size([10, 252726])
after filtering torch.Size([6, 252726])
num_ins_points_after_filtering tensor([3750, 2922, 3046, 3697, 3263, 6728], device='cuda:0')
Working on scene0670_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 48, 52, 53, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], [39, 41, 46, 47, 49, 50, 51, 54, 55, 56, 57, 58, 60, 63, 237, 238, 239], [61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 120, 241], [134, 135, 137]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 25/303 [00:00<00:01, 242.67it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/303 [00:00<00:01, 198.32it/s][A
Calculating viewed counts for every point:  23%|██▎       | 71/303 [00:00<00:01, 194.48it/s][A
Calculating viewed counts for every point:  30%|███       | 91/303 [00:00<00:01, 161.09it/s][A
Calculating viewed counts for every point:  37%|███▋      | 112/303 [00:00<00:01, 174.51it/s][A
Calculating viewed counts for every point:  43%|████▎     | 131/303 [00:00<00:00, 176.28it/s][A
Calculating viewed counts for every point:  50%|████▉     | 150/303 [00:00<00:00, 170.33it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 168/303 [00:00<00:00, 172.49it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 186/303 [00:01<00:00, 157.27it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 205/303 [00:01<00:00, 165.34it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 223/303 [00:01<00:00, 168.84it/s][A
Calculating viewed counts for every point:  81%|████████  | 244/303 [00:01<00:00, 178.17it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 265/303 [00:01<00:00, 186.60it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 285/303 [00:01<00:00, 170.88it/s][A
Calculating viewed counts for every point: 100%|██████████| 303/303 [00:01<00:00, 170.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [10:02<01:24,  5.28s/it]detected_ratio_thres_value tensor(0.3939, device='cuda:0')
final masked points tensor(13991, device='cuda:0')
before filtering torch.Size([4, 176038])
after filtering torch.Size([3, 176038])
num_ins_points_after_filtering tensor([8472,  700, 4815], device='cuda:0')
Working on scene0671_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|███▉      | 31/78 [00:00<00:00, 305.39it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 62/78 [00:00<00:00, 265.40it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [10:03<01:00,  4.06s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(5805, device='cuda:0')
before filtering torch.Size([1, 81469])
after filtering torch.Size([1, 81469])
num_ins_points_after_filtering tensor([5804], device='cuda:0')
Working on scene0678_00 class table
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [18, 19, 20, 123, 124, 125], [21, 22, 23, 24, 25, 126, 127, 128, 129, 130, 131, 132, 133, 134], [26, 27, 28, 29, 30, 31, 32, 33, 135, 137, 138, 139, 140], [34, 35, 36, 38, 40, 43], [37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], [75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], [77, 78], [79, 80, 81, 82, 155], [142, 143], [144, 145, 146, 147], [148, 149, 150], [151, 152, 153, 154]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 6/245 [00:00<00:04, 54.16it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/245 [00:00<00:04, 56.43it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/245 [00:00<00:03, 60.02it/s][A
Calculating viewed counts for every point:  11%|█         | 26/245 [00:00<00:03, 61.96it/s][A
Calculating viewed counts for every point:  14%|█▍        | 35/245 [00:00<00:02, 71.40it/s][A
Calculating viewed counts for every point:  18%|█▊        | 43/245 [00:00<00:03, 57.67it/s][A
Calculating viewed counts for every point:  21%|██        | 51/245 [00:00<00:03, 57.95it/s][A
Calculating viewed counts for every point:  24%|██▎       | 58/245 [00:01<00:04, 41.75it/s][A
Calculating viewed counts for every point:  27%|██▋       | 66/245 [00:01<00:03, 48.64it/s][A
Calculating viewed counts for every point:  31%|███▏      | 77/245 [00:01<00:02, 60.96it/s][A
Calculating viewed counts for every point:  35%|███▍      | 85/245 [00:01<00:02, 57.73it/s][A
Calculating viewed counts for every point:  38%|███▊      | 92/245 [00:01<00:03, 50.05it/s][A
Calculating viewed counts for every point:  40%|████      | 98/245 [00:01<00:03, 46.72it/s][A
Calculating viewed counts for every point:  44%|████▎     | 107/245 [00:01<00:02, 55.64it/s][A
Calculating viewed counts for every point:  47%|████▋     | 114/245 [00:02<00:02, 54.76it/s][A
Calculating viewed counts for every point:  50%|████▉     | 122/245 [00:02<00:02, 60.51it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 132/245 [00:02<00:01, 70.08it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 140/245 [00:02<00:01, 65.40it/s][A
Calculating viewed counts for every point:  61%|██████    | 149/245 [00:02<00:01, 70.21it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 161/245 [00:02<00:01, 82.53it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 170/245 [00:02<00:01, 69.13it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 179/245 [00:02<00:00, 73.44it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 187/245 [00:03<00:00, 70.87it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 195/245 [00:03<00:00, 70.20it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 203/245 [00:03<00:00, 61.62it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 210/245 [00:03<00:00, 53.75it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 217/245 [00:03<00:00, 55.45it/s][A
Calculating viewed counts for every point:  91%|█████████ | 223/245 [00:03<00:00, 53.89it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 231/245 [00:03<00:00, 59.98it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 240/245 [00:03<00:00, 67.38it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [10:13<01:22,  5.89s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(29250, device='cuda:0')
before filtering torch.Size([15, 364811])
after filtering torch.Size([7, 364811])
num_ins_points_after_filtering tensor([2115, 1952, 1173, 5895, 1646, 8061, 2247], device='cuda:0')
Working on scene0684_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 34, 36, 37, 38, 39, 40, 41, 42, 43], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [27, 28, 29], [30, 31, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 13/87 [00:00<00:00, 127.15it/s][A
Calculating viewed counts for every point:  44%|████▎     | 38/87 [00:00<00:00, 197.89it/s][A
Calculating viewed counts for every point:  70%|███████   | 61/87 [00:00<00:00, 211.53it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [10:15<00:59,  4.60s/it]detected_ratio_thres_value tensor(0.3462, device='cuda:0')
final masked points tensor(2836, device='cuda:0')
before filtering torch.Size([4, 41364])
after filtering torch.Size([2, 41364])
num_ins_points_after_filtering tensor([1069, 1681], device='cuda:0')
Working on scene0685_00 class table
masks_to_be_merged [[0, 3, 4, 5, 6, 7, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76], [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20], [22, 23, 24, 25, 26, 27, 28, 34, 35], [29, 30], [31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51], [53, 61], [54, 55, 56, 57, 58], [73, 74, 75]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 8/196 [00:00<00:03, 60.08it/s][A
Calculating viewed counts for every point:  11%|█         | 21/196 [00:00<00:01, 93.17it/s][A
Calculating viewed counts for every point:  21%|██        | 41/196 [00:00<00:01, 134.29it/s][A
Calculating viewed counts for every point:  28%|██▊       | 55/196 [00:00<00:01, 132.23it/s][A
Calculating viewed counts for every point:  35%|███▌      | 69/196 [00:00<00:01, 121.34it/s][A
Calculating viewed counts for every point:  42%|████▏     | 83/196 [00:00<00:00, 126.04it/s][A
Calculating viewed counts for every point:  51%|█████     | 100/196 [00:00<00:00, 137.81it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 115/196 [00:00<00:00, 134.16it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 129/196 [00:01<00:00, 122.65it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 152/196 [00:01<00:00, 151.67it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 168/196 [00:01<00:00, 151.98it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 186/196 [00:01<00:00, 159.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [10:18<00:50,  4.18s/it]detected_ratio_thres_value tensor(0.2250, device='cuda:0')
final masked points tensor(13443, device='cuda:0')
before filtering torch.Size([8, 132720])
after filtering torch.Size([4, 132720])
num_ins_points_after_filtering tensor([2022,  488, 8660,  617], device='cuda:0')
Working on scene0686_00 class table
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 3/153 [00:00<00:05, 25.60it/s][A
Calculating viewed counts for every point:   5%|▌         | 8/153 [00:00<00:03, 38.18it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/153 [00:00<00:03, 45.92it/s][A
Calculating viewed counts for every point:  12%|█▏        | 19/153 [00:00<00:02, 45.19it/s][A
Calculating viewed counts for every point:  16%|█▋        | 25/153 [00:00<00:02, 48.42it/s][A
Calculating viewed counts for every point:  22%|██▏       | 33/153 [00:00<00:02, 56.52it/s][A
Calculating viewed counts for every point:  25%|██▌       | 39/153 [00:00<00:02, 56.72it/s][A
Calculating viewed counts for every point:  29%|██▉       | 45/153 [00:00<00:01, 57.27it/s][A
Calculating viewed counts for every point:  33%|███▎      | 51/153 [00:00<00:01, 57.92it/s][A
Calculating viewed counts for every point:  37%|███▋      | 57/153 [00:01<00:01, 58.41it/s][A
Calculating viewed counts for every point:  42%|████▏     | 64/153 [00:01<00:01, 57.44it/s][A
Calculating viewed counts for every point:  47%|████▋     | 72/153 [00:01<00:01, 61.45it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 80/153 [00:01<00:01, 66.37it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 87/153 [00:01<00:01, 60.66it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 94/153 [00:01<00:00, 60.03it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 101/153 [00:01<00:00, 61.48it/s][A
Calculating viewed counts for every point:  71%|███████   | 108/153 [00:01<00:00, 63.65it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 115/153 [00:01<00:00, 65.18it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 122/153 [00:02<00:00, 56.90it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 128/153 [00:02<00:00, 56.76it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 134/153 [00:02<00:00, 56.94it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 142/153 [00:02<00:00, 60.95it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 149/153 [00:02<00:00, 62.62it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [10:21<00:42,  3.84s/it]detected_ratio_thres_value tensor(0.0638, device='cuda:0')
final masked points tensor(4295, device='cuda:0')
before filtering torch.Size([1, 89776])
after filtering torch.Size([1, 89776])
num_ins_points_after_filtering tensor([4057], device='cuda:0')
Working on scene0689_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 31, 32, 33, 34, 37, 38, 40], [22, 23, 24, 25, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 6/87 [00:00<00:01, 58.38it/s][A
Calculating viewed counts for every point:  29%|██▊       | 25/87 [00:00<00:00, 124.81it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 51/87 [00:00<00:00, 180.26it/s][A
Calculating viewed counts for every point:  80%|████████  | 70/87 [00:00<00:00, 175.98it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [10:22<00:30,  3.09s/it]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(3764, device='cuda:0')
before filtering torch.Size([2, 122129])
after filtering torch.Size([2, 122129])
num_ins_points_after_filtering tensor([391, 849], device='cuda:0')
Working on scene0690_00 class table
masks_to_be_merged [[0, 1, 2, 56], [4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 31, 33, 34, 35, 36, 62, 63, 64, 66, 73, 74, 75], [10, 12, 60, 61, 65, 69, 70], [41, 45, 46, 47, 51], [43, 44], [48, 49], [53, 54]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 17/90 [00:00<00:00, 168.93it/s][A
Calculating viewed counts for every point:  41%|████      | 37/90 [00:00<00:00, 186.52it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 56/90 [00:00<00:00, 158.13it/s][A
Calculating viewed counts for every point:  81%|████████  | 73/90 [00:00<00:00, 158.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [10:24<00:25,  2.80s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(10394, device='cuda:0')
before filtering torch.Size([7, 106050])
after filtering torch.Size([1, 106050])
num_ins_points_after_filtering tensor([2366], device='cuda:0')
Working on scene0693_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 21/174 [00:00<00:00, 192.39it/s][A
Calculating viewed counts for every point:  24%|██▎       | 41/174 [00:00<00:00, 178.57it/s][A
Calculating viewed counts for every point:  34%|███▍      | 60/174 [00:00<00:00, 163.56it/s][A
Calculating viewed counts for every point:  48%|████▊     | 83/174 [00:00<00:00, 186.04it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 102/174 [00:00<00:00, 173.15it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 120/174 [00:00<00:00, 163.89it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 137/174 [00:00<00:00, 151.62it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 166/174 [00:00<00:00, 188.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [10:26<00:20,  2.58s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(2409, device='cuda:0')
before filtering torch.Size([1, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([2409], device='cuda:0')
Working on scene0695_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [8, 9, 11, 12, 13, 14, 15, 18, 19, 33, 34], [10, 24, 25, 26, 27, 28, 29, 30, 31, 32], [16, 17, 40], [20, 21, 22], [35, 36], [37, 38]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 16/182 [00:00<00:01, 157.30it/s][A
Calculating viewed counts for every point:  19%|█▊        | 34/182 [00:00<00:00, 168.16it/s][A
Calculating viewed counts for every point:  28%|██▊       | 51/182 [00:00<00:00, 168.32it/s][A
Calculating viewed counts for every point:  37%|███▋      | 68/182 [00:00<00:00, 159.87it/s][A
Calculating viewed counts for every point:  47%|████▋     | 85/182 [00:00<00:00, 153.24it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 103/182 [00:00<00:00, 160.07it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 120/182 [00:00<00:00, 148.92it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 140/182 [00:00<00:00, 162.87it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 157/182 [00:01<00:00, 144.11it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 172/182 [00:01<00:00, 143.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [10:29<00:17,  2.47s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(8368, device='cuda:0')
before filtering torch.Size([7, 133418])
after filtering torch.Size([6, 133418])
num_ins_points_after_filtering tensor([ 654, 1817, 1497, 2763,  964,  519], device='cuda:0')
Working on scene0696_00 class table
masks_to_be_merged [[0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], [3, 4, 60, 70, 71, 72, 74, 76]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 7/130 [00:00<00:01, 65.01it/s][A
Calculating viewed counts for every point:  13%|█▎        | 17/130 [00:00<00:01, 81.51it/s][A
Calculating viewed counts for every point:  24%|██▍       | 31/130 [00:00<00:01, 97.46it/s][A
Calculating viewed counts for every point:  32%|███▏      | 41/130 [00:00<00:00, 90.45it/s][A
Calculating viewed counts for every point:  40%|████      | 52/130 [00:00<00:00, 94.25it/s][A
Calculating viewed counts for every point:  48%|████▊     | 62/130 [00:00<00:00, 95.43it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 72/130 [00:00<00:00, 86.06it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 81/130 [00:01<00:00, 69.88it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 89/130 [00:01<00:00, 63.59it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 101/130 [00:01<00:00, 75.07it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 111/130 [00:01<00:00, 79.84it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 120/130 [00:01<00:00, 69.96it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 129/130 [00:01<00:00, 73.51it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [10:33<00:18,  3.15s/it]detected_ratio_thres_value tensor(0.4783, device='cuda:0')
final masked points tensor(4705, device='cuda:0')
before filtering torch.Size([2, 231067])
after filtering torch.Size([1, 231067])
num_ins_points_after_filtering tensor([4652], device='cuda:0')
Working on scene0697_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 61, 62, 63, 64, 65, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [21, 22, 91], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], [52, 53, 54, 55, 56, 57, 58, 59, 60, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175], [66, 176], [67, 69, 71, 73, 74], [70, 72], [114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 25/288 [00:00<00:01, 247.05it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/288 [00:00<00:01, 191.83it/s][A
Calculating viewed counts for every point:  25%|██▌       | 73/288 [00:00<00:01, 206.21it/s][A
Calculating viewed counts for every point:  33%|███▎      | 95/288 [00:00<00:00, 207.35it/s][A
Calculating viewed counts for every point:  41%|████      | 117/288 [00:00<00:01, 159.33it/s][A
Calculating viewed counts for every point:  50%|█████     | 145/288 [00:00<00:00, 190.83it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 166/288 [00:00<00:00, 195.44it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 187/288 [00:00<00:00, 195.02it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 210/288 [00:01<00:00, 203.01it/s][A
Calculating viewed counts for every point:  81%|████████  | 232/288 [00:01<00:00, 189.73it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 252/288 [00:01<00:00, 174.13it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 276/288 [00:01<00:00, 189.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [10:39<00:19,  3.84s/it]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(10027, device='cuda:0')
before filtering torch.Size([9, 139300])
after filtering torch.Size([5, 139300])
num_ins_points_after_filtering tensor([1381, 3501, 2813,  841, 1124], device='cuda:0')
Working on scene0699_00 class table
masks_to_be_merged [[0, 2, 4, 6, 8, 103, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131], [1, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151], [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], [93, 94, 95]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/220 [00:00<00:03, 61.22it/s][A
Calculating viewed counts for every point:   6%|▋         | 14/220 [00:00<00:03, 61.06it/s][A
Calculating viewed counts for every point:  15%|█▌        | 33/220 [00:00<00:01, 112.69it/s][A
Calculating viewed counts for every point:  20%|██        | 45/220 [00:00<00:02, 82.33it/s] [A
Calculating viewed counts for every point:  25%|██▌       | 55/220 [00:00<00:01, 86.45it/s][A
Calculating viewed counts for every point:  33%|███▎      | 72/220 [00:00<00:01, 108.91it/s][A
Calculating viewed counts for every point:  40%|████      | 88/220 [00:00<00:01, 121.00it/s][A
Calculating viewed counts for every point:  48%|████▊     | 106/220 [00:00<00:00, 136.02it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 121/220 [00:01<00:00, 125.61it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 135/220 [00:01<00:00, 95.10it/s] [A
Calculating viewed counts for every point:  66%|██████▋   | 146/220 [00:01<00:00, 89.25it/s][A
Calculating viewed counts for every point:  71%|███████   | 156/220 [00:01<00:00, 70.83it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 168/220 [00:01<00:00, 80.50it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 189/220 [00:01<00:00, 108.50it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 202/220 [00:02<00:00, 100.59it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 215/220 [00:02<00:00, 96.81it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [10:46<00:18,  4.74s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(9405, device='cuda:0')
before filtering torch.Size([5, 153041])
after filtering torch.Size([4, 153041])
num_ins_points_after_filtering tensor([3189, 3172, 2238,  806], device='cuda:0')
Working on scene0700_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 103], [8, 57, 58, 60, 61], [9, 90], [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 197, 199, 203, 207, 208, 209, 210, 211, 213, 223, 226, 227, 228, 231, 235, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267], [19, 21, 24, 26, 27, 28, 29, 30, 192, 194, 196, 198, 201, 202, 204, 205, 206, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 229, 230, 232, 233, 234, 236, 259, 261], [71, 72, 73, 74, 75], [78, 79, 80, 81, 82], [83, 85], [86, 87], [91, 92, 93, 94, 95, 96, 97], [98, 99, 100, 101, 102], [131, 132, 133, 134, 135, 136, 137], [138, 139], [153, 154], [155, 156, 157, 158, 159, 160], [255, 256]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 9/459 [00:00<00:05, 85.97it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/459 [00:00<00:08, 49.33it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/459 [00:00<00:05, 76.89it/s][A
Calculating viewed counts for every point:   9%|▉         | 42/459 [00:00<00:10, 40.34it/s][A
Calculating viewed counts for every point:  11%|█         | 51/459 [00:01<00:08, 48.65it/s][A
Calculating viewed counts for every point:  14%|█▍        | 64/459 [00:01<00:06, 64.10it/s][A
Calculating viewed counts for every point:  17%|█▋        | 79/459 [00:01<00:04, 81.47it/s][A
Calculating viewed counts for every point:  20%|█▉        | 90/459 [00:01<00:04, 82.62it/s][A
Calculating viewed counts for every point:  22%|██▏       | 100/459 [00:01<00:04, 77.52it/s][A
Calculating viewed counts for every point:  24%|██▎       | 109/459 [00:01<00:04, 79.63it/s][A
Calculating viewed counts for every point:  27%|██▋       | 122/459 [00:01<00:03, 91.47it/s][A
Calculating viewed counts for every point:  29%|██▉       | 133/459 [00:01<00:03, 93.40it/s][A
Calculating viewed counts for every point:  31%|███       | 143/459 [00:01<00:03, 92.12it/s][A
Calculating viewed counts for every point:  33%|███▎      | 153/459 [00:02<00:03, 89.65it/s][A
Calculating viewed counts for every point:  36%|███▌      | 163/459 [00:02<00:03, 84.45it/s][A
Calculating viewed counts for every point:  37%|███▋      | 172/459 [00:02<00:03, 76.85it/s][A
Calculating viewed counts for every point:  39%|███▉      | 180/459 [00:02<00:05, 47.74it/s][A
Calculating viewed counts for every point:  41%|████      | 188/459 [00:02<00:05, 53.33it/s][A
Calculating viewed counts for every point:  42%|████▏     | 195/459 [00:02<00:04, 54.73it/s][A
Calculating viewed counts for every point:  44%|████▍     | 202/459 [00:03<00:05, 49.49it/s][A
Calculating viewed counts for every point:  46%|████▋     | 213/459 [00:03<00:03, 61.89it/s][A
Calculating viewed counts for every point:  49%|████▉     | 225/459 [00:03<00:03, 75.05it/s][A
Calculating viewed counts for every point:  51%|█████     | 234/459 [00:03<00:03, 73.79it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 249/459 [00:03<00:02, 92.58it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 260/459 [00:03<00:02, 88.74it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 271/459 [00:03<00:02, 91.93it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 284/459 [00:03<00:01, 98.24it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 296/459 [00:03<00:01, 103.06it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 309/459 [00:04<00:01, 107.90it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 321/459 [00:04<00:01, 101.37it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 332/459 [00:04<00:01, 94.90it/s] [A
Calculating viewed counts for every point:  75%|███████▍  | 342/459 [00:04<00:01, 88.85it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 352/459 [00:04<00:01, 76.29it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 361/459 [00:04<00:01, 76.69it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 375/459 [00:04<00:00, 90.94it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 389/459 [00:04<00:00, 103.43it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 400/459 [00:05<00:00, 103.11it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 411/459 [00:05<00:00, 104.54it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 425/459 [00:05<00:00, 112.86it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 437/459 [00:05<00:00, 91.93it/s] [A
Calculating viewed counts for every point:  98%|█████████▊| 450/459 [00:05<00:00, 100.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [10:59<00:21,  7.24s/it]detected_ratio_thres_value tensor(0.3091, device='cuda:0')
final masked points tensor(13644, device='cuda:0')
before filtering torch.Size([16, 167755])
after filtering torch.Size([3, 167755])
num_ins_points_after_filtering tensor([4671, 2034,  702], device='cuda:0')
Working on scene0701_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 8/102 [00:00<00:01, 69.64it/s][A
Calculating viewed counts for every point:  18%|█▊        | 18/102 [00:00<00:01, 81.97it/s][A
Calculating viewed counts for every point:  26%|██▋       | 27/102 [00:00<00:00, 77.16it/s][A
Calculating viewed counts for every point:  46%|████▌     | 47/102 [00:00<00:00, 120.18it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 70/102 [00:00<00:00, 156.01it/s][A
Calculating viewed counts for every point:  90%|█████████ | 92/102 [00:00<00:00, 176.23it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [11:00<00:10,  5.48s/it]detected_ratio_thres_value tensor(0.3902, device='cuda:0')
final masked points tensor(2969, device='cuda:0')
before filtering torch.Size([1, 73550])
after filtering torch.Size([1, 73550])
num_ins_points_after_filtering tensor([2964], device='cuda:0')
Working on scene0702_00 class table
masks_to_be_merged [[1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 15/84 [00:00<00:00, 137.35it/s][A
Calculating viewed counts for every point:  36%|███▌      | 30/84 [00:00<00:00, 134.38it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 44/84 [00:00<00:00, 135.72it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 62/84 [00:00<00:00, 150.74it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 80/84 [00:00<00:00, 159.35it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [11:01<00:04,  4.09s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2217, device='cuda:0')
before filtering torch.Size([1, 54769])
after filtering torch.Size([1, 54769])
num_ins_points_after_filtering tensor([2134], device='cuda:0')
Working on scene0704_00 class table
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 15, 16, 17], [20, 21, 22, 23], [26, 28, 29], [35, 36, 101], [38, 39], [40, 41], [42, 43], [48, 49], [59, 72], [60, 61, 62, 63, 108, 109, 110, 124, 125, 126, 127], [76, 77, 78], [81, 84], [87, 88, 89], [94, 96], [103, 137, 140], [118, 119, 120, 121], [131, 132, 133], [135, 136], [138, 139], [164, 165]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/241 [00:00<00:01, 191.57it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/241 [00:00<00:02, 83.34it/s] [A
Calculating viewed counts for every point:  22%|██▏       | 52/241 [00:01<00:06, 30.19it/s][A
Calculating viewed counts for every point:  27%|██▋       | 64/241 [00:01<00:04, 39.75it/s][A
Calculating viewed counts for every point:  33%|███▎      | 80/241 [00:01<00:02, 55.57it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:01<00:02, 71.93it/s][A
Calculating viewed counts for every point:  45%|████▌     | 109/241 [00:01<00:01, 80.95it/s][A
Calculating viewed counts for every point:  51%|█████     | 122/241 [00:01<00:01, 90.01it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 135/241 [00:01<00:01, 97.45it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 151/241 [00:02<00:00, 110.29it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 165/241 [00:02<00:00, 115.38it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 185/241 [00:02<00:00, 136.58it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 204/241 [00:02<00:00, 150.18it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 221/241 [00:02<00:00, 138.18it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 238/241 [00:02<00:00, 145.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [11:07<00:00,  4.81s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [11:07<00:00,  4.70s/it]
detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(26846, device='cuda:0')
before filtering torch.Size([20, 183029])
after filtering torch.Size([13, 183029])
num_ins_points_after_filtering tensor([2618, 1904,  944,  250,  409, 3153, 1245,  312,   43, 1928,  614, 1364,
         528], device='cuda:0')
Processing class: table
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<02:37,  1.12s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:34,  1.49it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:07,  2.05it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:02<00:56,  2.45it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:52,  2.61it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:47,  2.86it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:46,  2.88it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:03<00:39,  3.36it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:42,  3.12it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:39,  3.31it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:04<00:36,  3.60it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:04<00:33,  3.87it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:04<00:31,  4.11it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:30,  4.24it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:32,  3.91it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:05<00:28,  4.43it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:05<00:29,  4.17it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:05<00:29,  4.21it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:30,  4.08it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:06<00:26,  4.67it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:06<00:29,  4.10it/s]DEBUG best_match_after_iou_check [tensor(88), tensor(36), tensor(155), tensor(88), tensor(88)]
DEBUG uniques tensor([ 36,  88, 155]) tensor([1, 3, 1])
Matched 1 times with 36
Matched 3 times with 88
Merge stage2 masks
Matched 1 times with 155
iou for matched labels tensor([0.3102, 0.6865, 0.4754])
Matched labels: ['kitchen_counter', 'desk', 'kitchen_counter']
Clip similarities: [0.71923828125, 0.8125, 0.71923828125]
DEBUG best_match_after_iou_check [tensor(57), tensor(42), tensor(33), tensor(27), tensor(3), tensor(0)]
DEBUG uniques tensor([ 0,  3, 27, 33, 42, 57]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 3
Matched 1 times with 27
Matched 1 times with 33
Matched 1 times with 42
Matched 1 times with 57
iou for matched labels tensor([0.7304, 0.5931, 0.6095, 0.8149, 0.7045, 0.6337])
Matched labels: ['desk', 'table', 'table', 'folded_chair', 'table', 'desk']
Clip similarities: [0.8125, 1.0009765625, 1.0009765625, 0.6435546875, 1.0009765625, 0.8125]
DEBUG best_match_after_iou_check [tensor(56), tensor(74), tensor(74), tensor(82), tensor(97)]
DEBUG uniques tensor([56, 74, 82, 97]) tensor([1, 2, 1, 1])
Matched 1 times with 56
Matched 2 times with 74
Merge stage2 masks
Matched 1 times with 82
Matched 1 times with 97
iou for matched labels tensor([0.3280, 0.3196, 0.4780, 0.4053])
Matched labels: ['sofa_chair', 'folded_chair', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.6630859375, 0.6435546875, 0.6630859375, 0.6630859375]
DEBUG best_match_after_iou_check [tensor(50), tensor(193), tensor(129), tensor(50)]
DEBUG uniques tensor([ 50, 129, 193]) tensor([2, 1, 1])
Matched 2 times with 50
Merge stage2 masks
Matched 1 times with 129
Matched 1 times with 193
iou for matched labels tensor([0.6816, 0.7179, 0.4150])
Matched labels: ['bin', 'mini_fridge', 'desk']
Clip similarities: [0.677734375, 0.6494140625, 0.8125]
DEBUG best_match_after_iou_check [tensor(171), tensor(100), tensor(63), tensor(139)]
DEBUG uniques tensor([ 63, 100, 139, 171]) tensor([1, 1, 1, 1])
Matched 1 times with 63
Matched 1 times with 100
Matched 1 times with 139
Matched 1 times with 171
iou for matched labels tensor([0.7932, 0.3800, 0.7952, 0.6338])
Matched labels: ['desk', 'desk', 'desk', 'folded_chair']
Clip similarities: [0.8125, 0.8125, 0.8125, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(42), tensor(119), tensor(30), tensor(175)]
DEBUG uniques tensor([ 30,  42, 119, 175]) tensor([1, 1, 1, 1])
Matched 1 times with 30
Matched 1 times with 42
Matched 1 times with 119
Matched 1 times with 175
iou for matched labels tensor([0.7788, 0.6815, 0.1780, 0.3702])
Matched labels: ['desk', 'dresser', 'bed', 'folded_chair']
Clip similarities: [0.8125, 0.740234375, 0.673828125, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(142), tensor(226), tensor(143), tensor(69), tensor(57)]
DEBUG uniques tensor([ 57,  69, 142, 143, 226]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 57
Matched 1 times with 69
Matched 1 times with 142
Matched 1 times with 143
Matched 1 times with 226
iou for matched labels tensor([0.9418, 0.6268, 0.5163, 0.4864, 0.4177])
Matched labels: ['end_table', 'couch', 'desk', 'sofa_chair', 'couch']
Clip similarities: [0.888671875, 0.73779296875, 0.8125, 0.6630859375, 0.73779296875]
DEBUG best_match_after_iou_check [tensor(62), tensor(108), tensor(167), tensor(71)]
DEBUG uniques tensor([ 62,  71, 108, 167]) tensor([1, 1, 1, 1])
Matched 1 times with 62
Matched 1 times with 71
Matched 1 times with 108
Matched 1 times with 167
iou for matched labels tensor([0.7213, 0.2902, 0.2762, 0.5510])
Matched labels: ['desk', 'mat', 'person', 'counter']
Clip similarities: [0.8125, 0.74267578125, 0.72998046875, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(25), tensor(72)]
DEBUG uniques tensor([25, 72]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 72
iou for matched labels tensor([0.7496, 0.7887])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.83642578125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(154), tensor(95), tensor(33), tensor(134)]
DEBUG uniques tensor([ 33,  95, 134, 154]) tensor([1, 1, 1, 1])
Matched 1 times with 33
Matched 1 times with 95
Matched 1 times with 134
Matched 1 times with 154
iou for matched labels tensor([0.6803, 0.3572, 0.4329, 0.5831])
Matched labels: ['monitor', 'shower_floor', 'box', 'monitor']
Clip similarities: [0.70703125, 0.619140625, 0.7109375, 0.70703125]
DEBUG best_match_after_iou_check [tensor(34), tensor(7), tensor(1)]
DEBUG uniques tensor([ 1,  7, 34]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 7
Matched 1 times with 34
iou for matched labels tensor([0.7537, 0.7825, 0.8682])
Matched labels: ['table', 'table', 'table']
Clip similarities: [1.0009765625, 1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(72), tensor(32), tensor(3)]
DEBUG uniques tensor([ 3, 32, 72]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 32
Matched 1 times with 72
iou for matched labels tensor([0.7084, 0.7311, 0.3704])
Matched labels: ['bathroom_counter', 'ironing_board', 'radiator']
Clip similarities: [0.66796875, 0.64794921875, 0.6669921875]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.1833])
Matched labels: ['sink']
Clip similarities: [0.75927734375]
DEBUG best_match_after_iou_check [tensor(97)]
DEBUG uniques tensor([97]) tensor([1])
Matched 1 times with 97
iou for matched labels tensor([0.8125])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(72), tensor(176), tensor(176)]
DEBUG uniques tensor([ 72, 176]) tensor([1, 2])
Matched 1 times with 72
Matched 2 times with 176
Merge stage2 masks
iou for matched labels tensor([0.3833, 0.4811])
Matched labels: ['desk', 'file_cabinet']
Clip similarities: [0.8125, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(14), tensor(59)]
DEBUG uniques tensor([14, 59]) tensor([1, 1])
Matched 1 times with 14
Matched 1 times with 59
iou for matched labels tensor([0.8410, 0.7219])
Matched labels: ['bathroom_counter', 'chair']
Clip similarities: [0.66796875, 0.7861328125]
DEBUG best_match_after_iou_check [tensor(24), tensor(116)]
DEBUG uniques tensor([ 24, 116]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 116
iou for matched labels tensor([0.4542, 0.5468])
Matched labels: ['desk', 'refrigerator']
Clip similarities: [0.8125, 0.66162109375]
DEBUG best_match_after_iou_check [tensor(95), tensor(121), tensor(149), tensor(96)]
DEBUG uniques tensor([ 95,  96, 121, 149]) tensor([1, 1, 1, 1])
Matched 1 times with 95
Matched 1 times with 96
Matched 1 times with 121
Matched 1 times with 149
iou for matched labels tensor([0.6534, 0.4172, 0.4801, 0.2906])
Matched labels: ['sink', 'washing_machine', 'laundry_hamper', 'laundry_hamper']
Clip similarities: [0.75927734375, 0.65869140625, 0.5947265625, 0.5947265625]
DEBUG best_match_after_iou_check [tensor(150), tensor(13), tensor(71), tensor(9), tensor(7), tensor(109)]
DEBUG uniques tensor([  7,   9,  13,  71, 109, 150]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 9
Matched 1 times with 13
Matched 1 times with 71
Matched 1 times with 109
Matched 1 times with 150
iou for matched labels tensor([0.1124, 0.2183, 0.2820, 0.1439, 0.0374, 0.0196])
Matched labels: ['ironing_board', 'bag', 'folded_chair', 'sofa_chair', 'dresser', 'closet_door']
Clip similarities: [0.64794921875, 0.7138671875, 0.6435546875, 0.6630859375, 0.740234375, 0.60498046875]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.7020])
Matched labels: ['box']
Clip similarities: [0.7109375]
DEBUG best_match_after_iou_check [tensor(90), tensor(237), tensor(292)]
DEBUG uniques tensor([ 90, 237, 292]) tensor([1, 1, 1])
Matched 1 times with 90
Matched 1 times with 237
Matched 1 times with 292
iou for matched labels tensor([0.3987, 0.4619, 0.4800])
Matched labels: ['kitchen_counter', 'table', 'chair']
Clip similarities: [0.71923828125, 1.0009765625, 0.7861328125]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques Select thresholds for refinement:  15%|█▌        | 22/142 [00:06<00:25,  4.79it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:06<00:23,  5.14it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:27,  4.25it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:07<00:32,  3.64it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:07<00:32,  3.53it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:07<00:32,  3.56it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:08<00:32,  3.55it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:08<00:34,  3.31it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:09<00:38,  2.87it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:09<00:34,  3.22it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:09<00:34,  3.23it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:09<00:34,  3.19it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:10<00:39,  2.74it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:10<00:37,  2.89it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:11<00:36,  2.90it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:11<00:35,  2.97it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:11<00:31,  3.30it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:11<00:31,  3.23it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:12<00:28,  3.61it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:12<00:25,  3.93it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:12<00:26,  3.75it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:12<00:28,  3.52it/s]tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.8001])
Matched labels: ['bathroom_counter']
Clip similarities: [0.66796875]
DEBUG best_match_after_iou_check [tensor(64)]
DEBUG uniques tensor([64]) tensor([1])
Matched 1 times with 64
iou for matched labels tensor([0.3708])
Matched labels: ['kitchen_counter']
Clip similarities: [0.71923828125]
DEBUG best_match_after_iou_check [tensor(12), tensor(134), tensor(75)]
DEBUG uniques tensor([ 12,  75, 134]) tensor([1, 1, 1])
Matched 1 times with 12
Matched 1 times with 75
Matched 1 times with 134
iou for matched labels tensor([0.6660, 0.6302, 0.7432])
Matched labels: ['desk', 'table', 'table']
Clip similarities: [0.8125, 1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(28), tensor(103), tensor(92), tensor(63), tensor(2)]
DEBUG uniques tensor([  2,  28,  63,  92, 103]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 28
Matched 1 times with 63
Matched 1 times with 92
Matched 1 times with 103
iou for matched labels tensor([0.8661, 0.7147, 0.6854, 0.5549, 0.8892])
Matched labels: ['coffee_table', 'table', 'desk', 'desk', 'coffee_table']
Clip similarities: [0.83642578125, 1.0009765625, 0.8125, 0.8125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(42), tensor(1)]
DEBUG uniques tensor([ 1, 42]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 42
iou for matched labels tensor([0.6215, 0.6122])
Matched labels: ['chair', 'bed']
Clip similarities: [0.7861328125, 0.673828125]
DEBUG best_match_after_iou_check [tensor(37), tensor(165), tensor(72), tensor(124)]
DEBUG uniques tensor([ 37,  72, 124, 165]) tensor([1, 1, 1, 1])
Matched 1 times with 37
Matched 1 times with 72
Matched 1 times with 124
Matched 1 times with 165
iou for matched labels tensor([0.6479, 0.5424, 0.6161, 0.7425])
Matched labels: ['table', 'folded_chair', 'table', 'table']
Clip similarities: [1.0009765625, 0.6435546875, 1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(218), tensor(98), tensor(136)]
DEBUG uniques tensor([ 98, 136, 218]) tensor([1, 1, 1])
Matched 1 times with 98
Matched 1 times with 136
Matched 1 times with 218
iou for matched labels tensor([0.5229, 0.5215, 0.5996])
Matched labels: ['coffee_table', 'box', 'stool']
Clip similarities: [0.83642578125, 0.7109375, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(180), tensor(102)]
DEBUG uniques tensor([102, 180]) tensor([1, 1])
Matched 1 times with 102
Matched 1 times with 180
iou for matched labels tensor([0.5198, 0.5328])
Matched labels: ['kitchen_counter', 'stool']
Clip similarities: [0.71923828125, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(439), tensor(314), tensor(439)]
DEBUG uniques tensor([314, 439]) tensor([1, 2])
Matched 1 times with 314
Matched 2 times with 439
Merge stage2 masks
iou for matched labels tensor([0.3509, 0.7075])
Matched labels: ['couch', 'table']
Clip similarities: [0.73779296875, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(30), tensor(24), tensor(44), tensor(57)]
DEBUG uniques tensor([24, 30, 44, 57]) tensor([1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 30
Matched 1 times with 44
Matched 1 times with 57
iou for matched labels tensor([0.6306, 0.6840, 0.5496, 0.3062])
Matched labels: ['bed', 'desk', 'desk', 'bed']
Clip similarities: [0.673828125, 0.8125, 0.8125, 0.673828125]
DEBUG best_match_after_iou_check [tensor(16), tensor(26), tensor(34), tensor(60), tensor(165), tensor(58)]
DEBUG uniques tensor([ 16,  26,  34,  58,  60, 165]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 16
Matched 1 times with 26
Matched 1 times with 34
Matched 1 times with 58
Matched 1 times with 60
Matched 1 times with 165
iou for matched labels tensor([0.4660, 0.5655, 0.2475, 0.6954, 0.4221, 0.6386])
Matched labels: ['bed', 'box', 'bed', 'desk', 'desk', 'closet_door']
Clip similarities: [0.673828125, 0.7109375, 0.673828125, 0.8125, 0.8125, 0.60498046875]
DEBUG best_match_after_iou_check [tensor(135), tensor(184), tensor(123)]
DEBUG uniques tensor([123, 135, 184]) tensor([1, 1, 1])
Matched 1 times with 123
Matched 1 times with 135
Matched 1 times with 184
iou for matched labels tensor([0.4651, 0.5003, 0.5030])
Matched labels: ['desk', 'refrigerator', 'dresser']
Clip similarities: [0.8125, 0.66162109375, 0.740234375]
DEBUG best_match_after_iou_check [tensor(89), tensor(61), tensor(83), tensor(164)]
DEBUG uniques tensor([ 61,  83,  89, 164]) tensor([1, 1, 1, 1])
Matched 1 times with 61
Matched 1 times with 83
Matched 1 times with 89
Matched 1 times with 164
iou for matched labels tensor([0.6309, 0.6156, 0.4766, 0.5348])
Matched labels: ['kitchen_counter', 'kitchen_counter', 'desk', 'kitchen_counter']
Clip similarities: [0.71923828125, 0.71923828125, 0.8125, 0.71923828125]
DEBUG best_match_after_iou_check [tensor(414), tensor(85), tensor(258), tensor(236)]
DEBUG uniques tensor([ 85, 236, 258, 414]) tensor([1, 1, 1, 1])
Matched 1 times with 85
Matched 1 times with 236
Matched 1 times with 258
Matched 1 times with 414
iou for matched labels tensor([0.7396, 0.4879, 0.7003, 0.5313])
Matched labels: ['furniture', 'ladder', 'furniture', 'sink']
Clip similarities: [0.802734375, 0.75341796875, 0.802734375, 0.75927734375]
DEBUG best_match_after_iou_check [tensor(0), tensor(28)]
DEBUG uniques tensor([ 0, 28]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 28
iou for matched labels tensor([0.6795, 0.7598])
Matched labels: ['desk', 'table']
Clip similarities: [0.8125, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(7), tensor(196), tensor(14)]
DEBUG uniques tensor([  7,  14, 196]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 14
Matched 1 times with 196
iou for matched labels tensor([0.7433, 0.3068, 0.8486])
Matched labels: ['table', 'doorframe', 'table']
Clip similarities: [1.0009765625, 0.6650390625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(115)]
DEBUG uniques tensor([115]) tensor([1])
Matched 1 times with 115
iou for matched labels tensor([0.5285])
Matched labels: ['desk']
Clip similarities: [0.8125]
DEBUG best_match_after_iou_check [tensor(3), tensor(359), tensor(39), tensor(5), tensor(169), tensor(84), tensor(163)]
DEBUG uniques tensor([  3,   5,  39,  84, 163, 169, 359]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 5
Matched 1 times with 39
Matched 1 times with 84
Matched 1 times with 163
Matched 1 times with 169
Matched 1 times with 359
iou for matched labels tensor([0.8643, 0.5370, 0.5047, 0.2777, 0.5378, 0.7150, 0.0154])
Matched labels: ['table', 'desk', 'folded_chair', 'folded_chair', 'folded_chair', 'desk', 'folded_chair']
Clip similarities: [1.0009765625, 0.8125, 0.6435546875, 0.6435546875, 0.6435546875, 0.8125, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(74), tensor(74), tensor(93)]
DEBUG uniques tensor([74, 93]) tensor([2, 1])
Matched 2 times with 74
Merge stage2 masks
Matched 1 times with 93
iou for matched labels tensor([0.7076, 0.8115])
Matched labels: ['bed', 'desk']
Clip similarities: [0.673828125, 0.8125]
DEBUG best_match_after_iou_check [tensor(57)]
DEBUG uniques tensor([57]) tensor([1])
Matched 1 times with 57
iou for matched labels tensor([0.6959])
Matched labels: ['kitchen_counter']
Clip similarities: [0.71923828125]
DEBUG best_match_after_iou_check [tensor(54), tensor(135)]
DEBUG uniques tensor([ 54, 135]) tensor([1, 1])
Matched 1 times with 54
Matched 1 times with 135
iou for matched labels tensor([0.6776, 0.6572])
Matched labels: ['desk', 'desk']
Clip similarities: [0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(51)]
DEBUG uniques tensor([51]) tensor([1])
Matched 1 times with 51
iou for matched labels tensor([0.6050])
Matched labels: ['file_cabinet']
Clip similarities: [0.72021484375]
DEBUG best_match_after_iou_check [tensor(5), tensor(43), tensor(280), tensor(173), tensor(18), tensor(282)]
DEBUG uniques tensor([  5,  18,  43, 173, 280, 282]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 18
Matched 1 times with 43
Matched 1 times with 173
Matched 1 times with 280
Matched 1 times with 282
iou for matched labels tensor([0.5166, 0.2603, 0.4845, 0.5765, 0.4825, 0.4645])
Matched labels: Select thresholds for refinement:  31%|███       | 44/142 [00:13<00:32,  3.01it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:13<00:28,  3.39it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:13<00:26,  3.59it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:14<00:26,  3.65it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:14<00:29,  3.18it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:14<00:31,  2.97it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:15<00:28,  3.17it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:15<00:25,  3.56it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:15<00:25,  3.47it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:15<00:25,  3.51it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:16<00:25,  3.41it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:16<00:24,  3.58it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:16<00:23,  3.61it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:16<00:22,  3.82it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:17<00:21,  3.93it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:17<00:20,  4.07it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:17<00:20,  3.93it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:17<00:20,  3.91it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:18<00:23,  3.48it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:18<00:19,  4.11it/s]['washing_machine', 'ironing_board', 'shelf', 'ironing_board', 'ironing_board', 'closet']
Clip similarities: [0.65869140625, 0.64794921875, 0.75048828125, 0.64794921875, 0.64794921875, 0.68408203125]
DEBUG best_match_after_iou_check [tensor(21)]
DEBUG uniques tensor([21]) tensor([1])
Matched 1 times with 21
iou for matched labels tensor([0.5981])
Matched labels: ['desk']
Clip similarities: [0.8125]
DEBUG best_match_after_iou_check [tensor(17), tensor(1), tensor(78), tensor(99), tensor(98)]
DEBUG uniques tensor([ 1, 17, 78, 98, 99]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 17
Matched 1 times with 78
Matched 1 times with 98
Matched 1 times with 99
iou for matched labels tensor([0.7958, 0.6211, 0.7510, 0.8290, 0.2526])
Matched labels: ['folded_chair', 'sofa_chair', 'coffee_table', 'sofa_chair', 'shower_floor']
Clip similarities: [0.6435546875, 0.6630859375, 0.83642578125, 0.6630859375, 0.619140625]
DEBUG best_match_after_iou_check [tensor(88), tensor(91), tensor(91)]
DEBUG uniques tensor([88, 91]) tensor([1, 2])
Matched 1 times with 88
Matched 2 times with 91
Merge stage2 masks
iou for matched labels tensor([0.4288, 0.3896])
Matched labels: ['bar', 'kitchen_counter']
Clip similarities: [0.74072265625, 0.71923828125]
DEBUG best_match_after_iou_check [tensor(10), tensor(194), tensor(18), tensor(67)]
DEBUG uniques tensor([ 10,  18,  67, 194]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 18
Matched 1 times with 67
Matched 1 times with 194
iou for matched labels tensor([0.9236, 0.5136, 0.4098, 0.2866])
Matched labels: ['coffee_table', 'stair_rail', 'desk', 'desk']
Clip similarities: [0.83642578125, 0.63427734375, 0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(55), tensor(12), tensor(42), tensor(0), tensor(88), tensor(118), tensor(21)]
DEBUG uniques tensor([  0,  12,  21,  42,  55,  88, 118]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 12
Matched 1 times with 21
Matched 1 times with 42
Matched 1 times with 55
Matched 1 times with 88
Matched 1 times with 118
iou for matched labels tensor([0.6434, 0.8253, 0.7284, 0.7811, 0.3254, 0.4025, 0.6132])
Matched labels: ['folded_chair', 'coffee_table', 'bench', 'folded_chair', 'folded_chair', 'bar', 'bench']
Clip similarities: [0.6435546875, 0.83642578125, 0.79736328125, 0.6435546875, 0.6435546875, 0.74072265625, 0.79736328125]
DEBUG best_match_after_iou_check [tensor(68), tensor(39), tensor(80), tensor(80)]
DEBUG uniques tensor([39, 68, 80]) tensor([1, 1, 2])
Matched 1 times with 39
Matched 1 times with 68
Matched 2 times with 80
Merge stage2 masks
iou for matched labels tensor([0.8666, 0.6020, 0.6109])
Matched labels: ['file_cabinet', 'copier', 'recycling_bin']
Clip similarities: [0.72021484375, 0.70556640625, 0.71142578125]
DEBUG best_match_after_iou_check [tensor(100), tensor(102)]
DEBUG uniques tensor([100, 102]) tensor([1, 1])
Matched 1 times with 100
Matched 1 times with 102
iou for matched labels tensor([0.7418, 0.3131])
Matched labels: ['desk', 'folded_chair']
Clip similarities: [0.8125, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(69), tensor(29), tensor(185), tensor(200), tensor(46), tensor(80), tensor(111), tensor(62), tensor(98)]
DEBUG uniques tensor([ 29,  46,  62,  69,  80,  98, 111, 185, 200]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 29
Matched 1 times with 46
Matched 1 times with 62
Matched 1 times with 69
Matched 1 times with 80
Matched 1 times with 98
Matched 1 times with 111
Matched 1 times with 185
Matched 1 times with 200
iou for matched labels tensor([0.7295, 0.2947, 0.4593, 0.4773, 0.6817, 0.6462, 0.4738, 0.4419, 0.4931])
Matched labels: ['cart', 'cart', 'furniture', 'monitor', 'furniture', 'furniture', 'furniture', 'furniture', 'furniture']
Clip similarities: [0.7470703125, 0.7470703125, 0.802734375, 0.70703125, 0.802734375, 0.802734375, 0.802734375, 0.802734375, 0.802734375]
DEBUG best_match_after_iou_check [tensor(132), tensor(37), tensor(191), tensor(91)]
DEBUG uniques tensor([ 37,  91, 132, 191]) tensor([1, 1, 1, 1])
Matched 1 times with 37
Matched 1 times with 91
Matched 1 times with 132
Matched 1 times with 191
iou for matched labels tensor([0.3017, 0.5435, 0.3798, 0.2611])
Matched labels: ['desk', 'fan', 'closet_wall', 'desk']
Clip similarities: [0.8125, 0.7236328125, 0.591796875, 0.8125]
DEBUG best_match_after_iou_check [tensor(49), tensor(7), tensor(153), tensor(45), tensor(199)]
DEBUG uniques tensor([  7,  45,  49, 153, 199]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 45
Matched 1 times with 49
Matched 1 times with 153
Matched 1 times with 199
iou for matched labels tensor([0.4280, 0.6154, 0.5315, 0.5556, 0.4306])
Matched labels: ['shelf', 'shelf', 'desk', 'desk', 'mini_fridge']
Clip similarities: [0.75048828125, 0.75048828125, 0.8125, 0.8125, 0.6494140625]
DEBUG best_match_after_iou_check [tensor(56), tensor(78), tensor(10), tensor(138), tensor(138)]
DEBUG uniques tensor([ 10,  56,  78, 138]) tensor([1, 1, 1, 2])
Matched 1 times with 10
Matched 1 times with 56
Matched 1 times with 78
Matched 2 times with 138
Merge stage2 masks
iou for matched labels tensor([0.2859, 0.0680, 0.2143, 0.2155])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'folded_chair']
Clip similarities: [0.6435546875, 0.6435546875, 0.6435546875, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(1), tensor(33)]
DEBUG uniques tensor([ 1, 33]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 33
iou for matched labels tensor([0.6476, 0.6457])
Matched labels: ['table', 'table']
Clip similarities: [1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(2), tensor(32), tensor(72)]
DEBUG uniques tensor([ 2, 32, 72]) tensor([1, 1, 1])
Matched 1 times with 2
Matched 1 times with 32
Matched 1 times with 72
iou for matched labels tensor([0.7395, 0.4771, 0.9244])
Matched labels: ['desk', 'bed', 'dresser']
Clip similarities: [0.8125, 0.673828125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(26), tensor(104), tensor(24)]
DEBUG uniques tensor([ 24,  26, 104]) tensor([1, 1, 1])
Matched 1 times with 24
Matched 1 times with 26
Matched 1 times with 104
iou for matched labels tensor([0.2967, 0.6936, 0.3976])
Matched labels: ['shelf', 'kitchen_counter', 'case_of_water_bottles']
Clip similarities: [0.75048828125, 0.71923828125, 0.62841796875]
DEBUG best_match_after_iou_check [tensor(14), tensor(57), tensor(57), tensor(2)]
DEBUG uniques tensor([ 2, 14, 57]) tensor([1, 1, 2])
Matched 1 times with 2
Matched 1 times with 14
Matched 2 times with 57
Merge stage2 masks
iou for matched labels tensor([0.7752, 0.3134, 0.7073])
Matched labels: ['crate', 'shelf', 'shelf']
Clip similarities: [0.740234375, 0.75048828125, 0.75048828125]
DEBUG best_match_after_iou_check [tensor(23), tensor(59), tensor(29)]
DEBUG uniques tensor([23, 29, 59]) tensor([1, 1, 1])
Matched 1 times with 23
Matched 1 times with 29
Matched 1 times with 59
iou for matched labels tensor([0.5208, 0.6711, 0.5930])
Matched labels: ['desk', 'desk', 'desk']
Clip similarities: [0.8125, 0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.8631])
Matched labels: ['desk']
Clip similarities: [0.8125]
DEBUG best_match_after_iou_check [tensor(178), tensor(64), tensor(19), tensor(5), tensor(121), tensor(104), tensor(86)]
DEBUG uniques tensor([  5,  19,  64,  86, 104, 121, 178]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 19
Matched 1 times with 64
Matched 1 times with 86
Matched 1 times with 104
Matched 1 times with 121
Matched 1 times with 178
iou for matched labels tensor([0.5249, 0.7986, 0.4741, 0.4042, 0.7088, 0.6292, 0.4295])
Matched labels: ['bar', 'desk', 'dresser', 'radiator', 'table', 'dresser', 'refrigerator']
Clip similarities: [0.74072265625, 0.8125, 0.740234375, 0.6669921875, 1.0009765625, 0.740234375, 0.66162109375]
DEBUG best_match_after_iou_check [tensor(109)]
DEBUG uniques tensor([109]) tensor([1])
Matched 1 times with 109
iou for matched labels tensor([0.5366])
Matched labels: ['bathroom_counter']
Clip similarities: [0.66796875]
Select thresholds for refinement:  45%|████▌     | 64/142 [00:18<00:19,  4.00it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:19<00:21,  3.57it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:19<00:21,  3.49it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:19<00:19,  3.76it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:19<00:18,  3.95it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:19<00:16,  4.44it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:20<00:14,  5.11it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:20<00:16,  4.20it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:20<00:14,  4.67it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:20<00:13,  5.04it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:20<00:14,  4.78it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:21<00:15,  4.33it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:21<00:17,  3.88it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:21<00:18,  3.58it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:22<00:16,  3.77it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:22<00:15,  3.97it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:22<00:16,  3.78it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:23<00:19,  3.17it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:23<00:17,  3.36it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:23<00:15,  3.83it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:23<00:14,  3.95it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:24<00:14,  3.81it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:24<00:15,  3.63it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:24<00:14,  3.88it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:24<00:11,  4.53it/s]DEBUG best_match_after_iou_check [tensor(239), tensor(34), tensor(143)]
DEBUG uniques tensor([ 34, 143, 239]) tensor([1, 1, 1])
Matched 1 times with 34
Matched 1 times with 143
Matched 1 times with 239
iou for matched labels tensor([0.2820, 0.0554, 0.2427])
Matched labels: ['counter', 'refrigerator', 'doorframe']
Clip similarities: [0.80908203125, 0.66162109375, 0.6650390625]
DEBUG best_match_after_iou_check [tensor(64), tensor(56), tensor(56), tensor(1)]
DEBUG uniques tensor([ 1, 56, 64]) tensor([1, 2, 1])
Matched 1 times with 1
Matched 2 times with 56
Merge stage2 masks
Matched 1 times with 64
iou for matched labels tensor([0.6196, 0.3601, 0.4779])
Matched labels: ['desk', 'table', 'folded_chair']
Clip similarities: [0.8125, 1.0009765625, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(65)]
DEBUG uniques tensor([65]) tensor([1])
Matched 1 times with 65
iou for matched labels tensor([0.6663])
Matched labels: ['stool']
Clip similarities: [0.7685546875]
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.6731])
Matched labels: ['dresser']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(43)]
DEBUG uniques tensor([43]) tensor([1])
Matched 1 times with 43
iou for matched labels tensor([0.8065])
Matched labels: ['table']
Clip similarities: [1.0009765625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(50)]
DEBUG uniques tensor([50]) tensor([1])
Matched 1 times with 50
iou for matched labels tensor([0.5934])
Matched labels: ['stool']
Clip similarities: [0.7685546875]
DEBUG best_match_after_iou_check [tensor(224), tensor(32), tensor(117), tensor(42), tensor(40)]
DEBUG uniques tensor([ 32,  40,  42, 117, 224]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 32
Matched 1 times with 40
Matched 1 times with 42
Matched 1 times with 117
Matched 1 times with 224
iou for matched labels tensor([0.7312, 0.5805, 0.5300, 0.6660, 0.4254])
Matched labels: ['mini_fridge', 'desk', 'dresser', 'dresser', 'bathroom_counter']
Clip similarities: [0.6494140625, 0.8125, 0.740234375, 0.740234375, 0.66796875]
DEBUG best_match_after_iou_check [tensor(114), tensor(12), tensor(94)]
DEBUG uniques tensor([ 12,  94, 114]) tensor([1, 1, 1])
Matched 1 times with 12
Matched 1 times with 94
Matched 1 times with 114
iou for matched labels tensor([0.6186, 0.1193, 0.2906])
Matched labels: ['pipe', 'sink', 'bathroom_stall_door']
Clip similarities: [0.6826171875, 0.75927734375, 0.57470703125]
DEBUG best_match_after_iou_check [tensor(50), tensor(85)]
DEBUG uniques tensor([50, 85]) tensor([1, 1])
Matched 1 times with 50
Matched 1 times with 85
iou for matched labels tensor([0.7102, 0.5324])
Matched labels: ['bathroom_counter', 'shower_door']
Clip similarities: [0.66796875, 0.591796875]
DEBUG best_match_after_iou_check [tensor(23), tensor(84)]
DEBUG uniques tensor([23, 84]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 84
iou for matched labels tensor([0.8222, 0.7771])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.83642578125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(36), tensor(169), tensor(93)]
DEBUG uniques tensor([ 36,  93, 169]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 93
Matched 1 times with 169
iou for matched labels tensor([0.2623, 0.7396, 0.4716])
Matched labels: ['copier', 'counter', 'file_cabinet']
Clip similarities: [0.70556640625, 0.80908203125, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(36), tensor(134), tensor(155), tensor(27)]
DEBUG uniques tensor([ 27,  36, 134, 155]) tensor([1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 36
Matched 1 times with 134
Matched 1 times with 155
iou for matched labels tensor([0.4370, 0.4028, 0.5947, 0.4222])
Matched labels: ['shelf', 'computer_tower', 'desk', 'desk']
Clip similarities: [0.75048828125, 0.62841796875, 0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(98), tensor(92)]
DEBUG uniques tensor([92, 98]) tensor([1, 1])
Matched 1 times with 92
Matched 1 times with 98
iou for matched labels tensor([0.6623, 0.7015])
Matched labels: ['sink', 'dresser']
Clip similarities: [0.75927734375, 0.740234375]
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.8867])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.7360])
Matched labels: ['desk']
Clip similarities: [0.8125]
DEBUG best_match_after_iou_check [tensor(64), tensor(128)]
DEBUG uniques tensor([ 64, 128]) tensor([1, 1])
Matched 1 times with 64
Matched 1 times with 128
iou for matched labels tensor([0.4508, 0.4406])
Matched labels: ['desk', 'table']
Clip similarities: [0.8125, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(9), tensor(59), tensor(33)]
DEBUG uniques tensor([ 9, 33, 59]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 33
Matched 1 times with 59
iou for matched labels tensor([0.7391, 0.6849, 0.6839])
Matched labels: ['table', 'table', 'table']
Clip similarities: [1.0009765625, 1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(166)]
DEBUG uniques tensor([166]) tensor([1])
Matched 1 times with 166
iou for matched labels tensor([0.7717])
Matched labels: ['furniture']
Clip similarities: [0.802734375]
DEBUG best_match_after_iou_check [tensor(119), tensor(167), tensor(86)]
DEBUG uniques tensor([ 86, 119, 167]) tensor([1, 1, 1])
Matched 1 times with 86
Matched 1 times with 119
Matched 1 times with 167
iou for matched labels tensor([0.5412, 0.6873, 0.6558])
Matched labels: ['sink', 'tv_stand', 'printer']
Clip similarities: [0.75927734375, 0.7578125, 0.7177734375]
DEBUG best_match_after_iou_check [tensor(104), tensor(44), tensor(1), tensor(9), tensor(23)]
DEBUG uniques tensor([  1,   9,  23,  44, 104]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 9
Matched 1 times with 23
Matched 1 times with 44
Matched 1 times with 104
iou for matched labels tensor([0.6818, 0.5479, 0.5843, 0.3368, 0.6146])
Matched labels: ['tv_stand', 'box', 'desk', 'desk', 'folded_chair']
Clip similarities: [0.7578125, 0.7109375, 0.8125, 0.8125, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(0), tensor(76), tensor(74), tensor(17), tensor(45)]
DEBUG uniques tensor([ 0, 17, 45, 74, 76]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 17
Matched 1 times with 45
Matched 1 times with 74
Matched 1 times with 76
iou for matched labels tensor([0.7648, 0.4936, 0.6174, 0.8082, 0.7071])
Matched labels: ['coffee_table', 'coffee_table', 'end_table', 'coffee_table', 'end_table']
Clip similarities: [0.83642578125, 0.83642578125, 0.888671875, 0.83642578125, 0.888671875]
DEBUG best_match_after_iou_check [tensor(79), tensor(98), tensor(61), tensor(201), tensor(3), tensor(79)]
DEBUG uniques tensor([  3,  61,  79,  98, 201]) tensor([1, 1, 2, 1, 1])
Matched 1 times with 3
Matched 1 times with 61
Matched 2 times with 79
Merge stage2 masks
Matched 1 times with 98
Matched 1 times with 201
iou for matched labels tensor([0.3743, 0.5501, 0.3144, 0.6845, 0.7397])
Matched labels: ['shower_wall', 'paper_towel_dispenser', 'shower_wall', 'shower_floor', 'bathroom_counter']
Clip similarities: [0.57421875, 0.58056640625, 0.57421875, 0.619140625, 0.66796875]
DEBUG best_match_after_iou_check [tensor(51), tensor(12), tensor(17), tensor(147)]
DEBUG uniques tensor([ 12,  17,  51, 147]) tensor([1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 17
Matched 1 times with 51
Matched 1 times with 147
iou for matched labels tensor([0.7098, 0.6309, 0.8824, 0.5729])
Matched labels: ['desk', 'table', 'table', 'file_cabinet']
Clip similarities: [0.8125, 1.0009765625, 1.0009765625, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(120)]
DEBUG uniques tensor([120]) tensor([1])
Matched 1 times with 120
iou for matched labels tensor([0.5660])
Matched labels: ['trash_can']
Clip similarities: [0.7109375]
DEBUG best_match_after_iou_check [tensor(48), tensor(48), tensor(98), tensor(84)]
DEBUG uniques Select thresholds for refinement:  63%|██████▎   | 89/142 [00:24<00:11,  4.54it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:25<00:12,  4.17it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:25<00:12,  4.21it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:25<00:13,  3.75it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:25<00:11,  4.32it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:26<00:12,  3.96it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:26<00:12,  3.85it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:26<00:13,  3.48it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:27<00:12,  3.56it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:27<00:12,  3.45it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:27<00:13,  3.19it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:28<00:12,  3.33it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:28<00:11,  3.45it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:28<00:11,  3.61it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:28<00:10,  3.65it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:29<00:09,  3.89it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:29<00:10,  3.58it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:29<00:09,  3.94it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:30<00:11,  3.05it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:30<00:11,  3.03it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:30<00:11,  2.94it/s]tensor([48, 84, 98]) tensor([2, 1, 1])
Matched 2 times with 48
Merge stage2 masks
Matched 1 times with 84
Matched 1 times with 98
iou for matched labels tensor([0.3116, 0.7446, 0.5359])
Matched labels: ['bookshelf', 'table', 'bookshelf']
Clip similarities: [0.7255859375, 1.0009765625, 0.7255859375]
DEBUG best_match_after_iou_check [tensor(52), tensor(216), tensor(113)]
DEBUG uniques tensor([ 52, 113, 216]) tensor([1, 1, 1])
Matched 1 times with 52
Matched 1 times with 113
Matched 1 times with 216
iou for matched labels tensor([0.7568, 0.7259, 0.5453])
Matched labels: ['ottoman', 'projector_screen', 'clothes']
Clip similarities: [0.65478515625, 0.6533203125, 0.70751953125]
DEBUG best_match_after_iou_check [tensor(24), tensor(215), tensor(360), tensor(147), tensor(64)]
DEBUG uniques tensor([ 24,  64, 147, 215, 360]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 64
Matched 1 times with 147
Matched 1 times with 215
Matched 1 times with 360
iou for matched labels tensor([0.6730, 0.6004, 0.4789, 0.3445, 0.6745])
Matched labels: ['cart', 'printer', 'box', 'monitor', 'desk']
Clip similarities: [0.7470703125, 0.7177734375, 0.7109375, 0.70703125, 0.8125]
DEBUG best_match_after_iou_check [tensor(140), tensor(108), tensor(39), tensor(44), tensor(92)]
DEBUG uniques tensor([ 39,  44,  92, 108, 140]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 39
Matched 1 times with 44
Matched 1 times with 92
Matched 1 times with 108
Matched 1 times with 140
iou for matched labels tensor([0.4969, 0.7053, 0.7256, 0.4233, 0.7221])
Matched labels: ['shelf', 'storage_bin', 'desk', 'tv_stand', 'coffee_table']
Clip similarities: [0.75048828125, 0.69189453125, 0.8125, 0.7578125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(80), tensor(54)]
DEBUG uniques tensor([54, 80]) tensor([1, 1])
Matched 1 times with 54
Matched 1 times with 80
iou for matched labels tensor([0.7753, 0.6064])
Matched labels: ['chair', 'bathroom_counter']
Clip similarities: [0.7861328125, 0.66796875]
DEBUG best_match_after_iou_check [tensor(48)]
DEBUG uniques tensor([48]) tensor([1])
Matched 1 times with 48
iou for matched labels tensor([0.7050])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(55), tensor(28)]
DEBUG uniques tensor([28, 55]) tensor([1, 1])
Matched 1 times with 28
Matched 1 times with 55
iou for matched labels tensor([0.7323, 0.5387])
Matched labels: ['table', 'desk']
Clip similarities: [1.0009765625, 0.8125]
DEBUG best_match_after_iou_check [tensor(115), tensor(80), tensor(50), tensor(85)]
DEBUG uniques tensor([ 50,  80,  85, 115]) tensor([1, 1, 1, 1])
Matched 1 times with 50
Matched 1 times with 80
Matched 1 times with 85
Matched 1 times with 115
iou for matched labels tensor([0.6167, 0.6032, 0.7012, 0.5568])
Matched labels: ['nightstand', 'bed', 'dresser', 'bookshelf']
Clip similarities: [0.755859375, 0.673828125, 0.740234375, 0.7255859375]
DEBUG best_match_after_iou_check [tensor(154), tensor(94), tensor(123)]
DEBUG uniques tensor([ 94, 123, 154]) tensor([1, 1, 1])
Matched 1 times with 94
Matched 1 times with 123
Matched 1 times with 154
iou for matched labels tensor([0.7023, 0.5205, 0.2687])
Matched labels: ['chair', 'sink', 'cup']
Clip similarities: [0.7861328125, 0.75927734375, 0.71435546875]
DEBUG best_match_after_iou_check [tensor(40), tensor(91), tensor(91), tensor(23), tensor(128), tensor(126), tensor(74)]
DEBUG uniques tensor([ 23,  40,  74,  91, 126, 128]) tensor([1, 1, 1, 2, 1, 1])
Matched 1 times with 23
Matched 1 times with 40
Matched 1 times with 74
Matched 2 times with 91
Merge stage2 masks
Matched 1 times with 126
Matched 1 times with 128
iou for matched labels tensor([0.3709, 0.2847, 0.4572, 0.7272, 0.8478, 0.5256])
Matched labels: ['file_cabinet', 'file_cabinet', 'file_cabinet', 'file_cabinet', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.72021484375, 0.72021484375, 0.72021484375, 0.72021484375, 0.72021484375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(39), tensor(28), tensor(178), tensor(38), tensor(98), tensor(197), tensor(11)]
DEBUG uniques tensor([ 11,  28,  38,  39,  98, 178, 197]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 28
Matched 1 times with 38
Matched 1 times with 39
Matched 1 times with 98
Matched 1 times with 178
Matched 1 times with 197
iou for matched labels tensor([0.3308, 0.8215, 0.5827, 0.2537, 0.5657, 0.6180, 0.1482])
Matched labels: ['copier', 'desk', 'copier', 'couch', 'copier', 'stair_rail', 'file_cabinet']
Clip similarities: [0.70556640625, 0.8125, 0.70556640625, 0.73779296875, 0.70556640625, 0.63427734375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(74), tensor(56), tensor(78)]
DEBUG uniques tensor([56, 74, 78]) tensor([1, 1, 1])
Matched 1 times with 56
Matched 1 times with 74
Matched 1 times with 78
iou for matched labels tensor([0.5189, 0.6353, 0.3789])
Matched labels: ['bag', 'laundry_hamper', 'washing_machine']
Clip similarities: [0.7138671875, 0.5947265625, 0.65869140625]
DEBUG best_match_after_iou_check [tensor(63), tensor(174), tensor(11)]
DEBUG uniques tensor([ 11,  63, 174]) tensor([1, 1, 1])
Matched 1 times with 11
Matched 1 times with 63
Matched 1 times with 174
iou for matched labels tensor([0.6242, 0.0295, 0.6639])
Matched labels: ['table', 'table', 'desk']
Clip similarities: [1.0009765625, 1.0009765625, 0.8125]
DEBUG best_match_after_iou_check [tensor(103)]
DEBUG uniques tensor([103]) tensor([1])
Matched 1 times with 103
iou for matched labels tensor([0.6381])
Matched labels: ['dining_table']
Clip similarities: [0.87841796875]
DEBUG best_match_after_iou_check [tensor(16), tensor(18)]
DEBUG uniques tensor([16, 18]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 18
iou for matched labels tensor([0.6011, 0.6301])
Matched labels: ['kitchen_counter', 'tv_stand']
Clip similarities: [0.71923828125, 0.7578125]
DEBUG best_match_after_iou_check [tensor(16), tensor(146)]
DEBUG uniques tensor([ 16, 146]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 146
iou for matched labels tensor([0.8391, 0.5026])
Matched labels: ['table', 'kitchen_counter']
Clip similarities: [1.0009765625, 0.71923828125]
DEBUG best_match_after_iou_check [tensor(147), tensor(162), tensor(73), tensor(197)]
DEBUG uniques tensor([ 73, 147, 162, 197]) tensor([1, 1, 1, 1])
Matched 1 times with 73
Matched 1 times with 147
Matched 1 times with 162
Matched 1 times with 197
iou for matched labels tensor([0.7807, 0.4008, 0.6841, 0.2333])
Matched labels: ['coffee_table', 'monitor', 'box', 'guitar']
Clip similarities: [0.83642578125, 0.70703125, 0.7109375, 0.6787109375]
DEBUG best_match_after_iou_check [tensor(8), tensor(7)]
DEBUG uniques tensor([7, 8]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 8
iou for matched labels tensor([0.6126, 0.6299])
Matched labels: ['table', 'table']
Clip similarities: [1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(6)]
DEBUG uniques tensor([6]) tensor([1])
Matched 1 times with 6
iou for matched labels tensor([0.8856])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(134), tensor(47), tensor(17), tensor(190)]
DEBUG uniques tensor([ 17,  47, 134, 190]) tensor([1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 47
Matched 1 times with 134
Matched 1 times with 190
iou for matched labels tensor([0.4059, 0.4862, 0.7919, 0.6313])
Matched labels: ['folded_chair', 'stool', 'handicap_bar', 'tv_stand']
Clip similarities: [0.6435546875, 0.7685546875, 0.68701171875, 0.7578125]
DEBUG best_match_after_iou_check [tensor(160), tensor(172), tensor(41), tensor(71), tensor(162), tensor(71), tensor(172), tensor(187)]
DEBUG uniques tensor([ 41,  71, 160, 162, 172, 187]) tensor([1, 2, 1, 1, 2, 1])
Matched 1 times with 41
Matched 2 times with 71
Merge stage2 masks
Matched 1 times with 160
Matched 1 times with 162
Matched 2 times with 172
Merge stage2 masks
Matched 1 times with 187
iou for matched labels tensor([0.4755, 0.7249, 0.1791, 0.6469, 0.6746, 0.6731])
Matched labels: ['desk', 'desk', 'table', 'desk', 'desk', 'desk']
Clip similarities: [0.8125, 0.8125, 1.0009765625, 0.8125, 0.8125, 0.8125]
Select thresholds for refinement:  77%|███████▋  | 110/142 [00:31<00:11,  2.88it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:31<00:09,  3.16it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:31<00:08,  3.39it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:32<00:09,  3.15it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:32<00:09,  2.83it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:32<00:08,  3.05it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:32<00:07,  3.25it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:33<00:06,  3.59it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:33<00:06,  3.86it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:33<00:07,  3.28it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:34<00:06,  3.56it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:34<00:06,  3.48it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:34<00:05,  3.84it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:34<00:05,  3.67it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:35<00:04,  4.18it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:35<00:04,  3.83it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:35<00:04,  3.67it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:35<00:03,  4.10it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:36<00:04,  3.26it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:36<00:03,  3.97it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:36<00:03,  3.83it/s]DEBUG best_match_after_iou_check [tensor(54), tensor(306), tensor(306)]
DEBUG uniques tensor([ 54, 306]) tensor([1, 2])
Matched 1 times with 54
Matched 2 times with 306
Merge stage2 masks
iou for matched labels tensor([0.7202, 0.7464])
Matched labels: ['end_table', 'tv_stand']
Clip similarities: [0.888671875, 0.7578125]
DEBUG best_match_after_iou_check [tensor(170), tensor(71), tensor(103)]
DEBUG uniques tensor([ 71, 103, 170]) tensor([1, 1, 1])
Matched 1 times with 71
Matched 1 times with 103
Matched 1 times with 170
iou for matched labels tensor([0.5746, 0.7761, 0.5835])
Matched labels: ['dresser', 'shelf', 'furniture']
Clip similarities: [0.740234375, 0.75048828125, 0.802734375]
DEBUG best_match_after_iou_check [tensor(146), tensor(76), tensor(82), tensor(103)]
DEBUG uniques tensor([ 76,  82, 103, 146]) tensor([1, 1, 1, 1])
Matched 1 times with 76
Matched 1 times with 82
Matched 1 times with 103
Matched 1 times with 146
iou for matched labels tensor([0.5161, 0.5672, 0.5701, 0.4970])
Matched labels: ['desk', 'refrigerator', 'desk', 'desk']
Clip similarities: [0.8125, 0.66162109375, 0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(107), tensor(157), tensor(157)]
DEBUG uniques tensor([107, 157]) tensor([1, 2])
Matched 1 times with 107
Matched 2 times with 157
Merge stage2 masks
iou for matched labels tensor([0.4505, 0.4355])
Matched labels: ['desk', 'desk']
Clip similarities: [0.8125, 0.8125]
DEBUG best_match_after_iou_check [tensor(27), tensor(305), tensor(130), tensor(97), tensor(65), tensor(73)]
DEBUG uniques tensor([ 27,  65,  73,  97, 130, 305]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 65
Matched 1 times with 73
Matched 1 times with 97
Matched 1 times with 130
Matched 1 times with 305
iou for matched labels tensor([0.7440, 0.5722, 0.3838, 0.4895, 0.5177, 0.6505])
Matched labels: ['crate', 'end_table', 'coffee_table', 'desk', 'dresser', 'bathroom_counter']
Clip similarities: [0.740234375, 0.888671875, 0.83642578125, 0.8125, 0.740234375, 0.66796875]
DEBUG best_match_after_iou_check [tensor(78), tensor(120), tensor(9), tensor(18)]
DEBUG uniques tensor([  9,  18,  78, 120]) tensor([1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 18
Matched 1 times with 78
Matched 1 times with 120
iou for matched labels tensor([0.6695, 0.6339, 0.7808, 0.7533])
Matched labels: ['table', 'table', 'table', 'table']
Clip similarities: [1.0009765625, 1.0009765625, 1.0009765625, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(193), tensor(17)]
DEBUG uniques tensor([ 17, 193]) tensor([1, 1])
Matched 1 times with 17
Matched 1 times with 193
iou for matched labels tensor([0.4890, 0.3634])
Matched labels: ['shelf', 'shelf']
Clip similarities: [0.75048828125, 0.75048828125]
DEBUG best_match_after_iou_check [tensor(82), tensor(90)]
DEBUG uniques tensor([82, 90]) tensor([1, 1])
Matched 1 times with 82
Matched 1 times with 90
iou for matched labels tensor([0.5900, 0.4027])
Matched labels: ['sink', 'folded_chair']
Clip similarities: [0.75927734375, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(94), tensor(135), tensor(135), tensor(136), tensor(206)]
DEBUG uniques tensor([ 94, 135, 136, 206]) tensor([1, 2, 1, 1])
Matched 1 times with 94
Matched 2 times with 135
Merge stage2 masks
Matched 1 times with 136
Matched 1 times with 206
iou for matched labels tensor([0.7016, 0.2875, 0.4958, 0.5818])
Matched labels: ['dresser', 'desk', 'tv_stand', 'dresser']
Clip similarities: [0.740234375, 0.8125, 0.7578125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(59), tensor(117), tensor(176), tensor(82), tensor(73), tensor(18)]
DEBUG uniques tensor([ 18,  59,  73,  82, 117, 176]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 59
Matched 1 times with 73
Matched 1 times with 82
Matched 1 times with 117
Matched 1 times with 176
iou for matched labels tensor([0.5474, 0.3370, 0.0704, 0.3102, 0.5709, 0.7450])
Matched labels: ['desk', 'desk', 'bathroom_stall_door', 'desk', 'desk', 'file_cabinet']
Clip similarities: [0.8125, 0.8125, 0.57470703125, 0.8125, 0.8125, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(57)]
DEBUG uniques tensor([57]) tensor([1])
Matched 1 times with 57
iou for matched labels tensor([0.6530])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(19), tensor(73), tensor(10), tensor(116), tensor(73)]
DEBUG uniques tensor([ 10,  19,  73, 116]) tensor([1, 1, 2, 1])
Matched 1 times with 10
Matched 1 times with 19
Matched 2 times with 73
Merge stage2 masks
Matched 1 times with 116
iou for matched labels tensor([0.6040, 0.5627, 0.2653, 0.4101])
Matched labels: ['desk', 'bed', 'tv_stand', 'tv_stand']
Clip similarities: [0.8125, 0.673828125, 0.7578125, 0.7578125]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.6971])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(197), tensor(96)]
DEBUG uniques tensor([ 96, 197]) tensor([1, 1])
Matched 1 times with 96
Matched 1 times with 197
iou for matched labels tensor([0.6331, 0.5080])
Matched labels: ['suitcase', 'desk']
Clip similarities: [0.74169921875, 0.8125]
DEBUG best_match_after_iou_check [tensor(90)]
DEBUG uniques tensor([90]) tensor([1])
Matched 1 times with 90
iou for matched labels tensor([0.6033])
Matched labels: ['bathroom_counter']
Clip similarities: [0.66796875]
DEBUG best_match_after_iou_check [tensor(47), tensor(51), tensor(56), tensor(109), tensor(20), tensor(139)]
DEBUG uniques tensor([ 20,  47,  51,  56, 109, 139]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 47
Matched 1 times with 51
Matched 1 times with 56
Matched 1 times with 109
Matched 1 times with 139
iou for matched labels tensor([0.6947, 0.6936, 0.6571, 0.7650, 0.7609, 0.7130])
Matched labels: ['table', 'table', 'folded_chair', 'table', 'table', 'folded_chair']
Clip similarities: [1.0009765625, 1.0009765625, 0.6435546875, 1.0009765625, 1.0009765625, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(82), tensor(90), tensor(55)]
DEBUG uniques tensor([55, 82, 90]) tensor([1, 1, 1])
Matched 1 times with 55
Matched 1 times with 82
Matched 1 times with 90
iou for matched labels tensor([0.6562, 0.3774, 0.7738])
Matched labels: ['kitchen_counter', 'dresser', 'kitchen_counter']
Clip similarities: [0.71923828125, 0.740234375, 0.71923828125]
DEBUG best_match_after_iou_check [tensor(153)]
DEBUG uniques tensor([153]) tensor([1])
Matched 1 times with 153
iou for matched labels tensor([0.6471])
Matched labels: ['furniture']
Clip similarities: [0.802734375]
DEBUG best_match_after_iou_check [tensor(100), tensor(116), tensor(116), tensor(170), tensor(157), tensor(61), tensor(125)]
DEBUG uniques tensor([ 61, 100, 116, 125, 157, 170]) tensor([1, 1, 2, 1, 1, 1])
Matched 1 times with 61
Matched 1 times with 100
Matched 2 times with 116
Merge stage2 masks
Matched 1 times with 125
Matched 1 times with 157
Matched 1 times with 170
iou for matched labels tensor([0.0971, 0.7392, 0.4153, 0.7645, 0.4522, 0.3139])
Matched labels: ['washing_machine', 'laundry_detergent', 'washing_machine', 'bathroom_counter', 'washing_machine', 'sink']
Clip similarities: [0.65869140625, 0.59130859375, 0.65869140625, 0.66796875, 0.65869140625, 0.75927734375]
DEBUG best_match_after_iou_check [tensor(8), tensor(7)]
DEBUG uniques tensor([7, 8]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 8
iou for matched labels tensor([0.8373, 0.7623])
Matched labels: ['box', 'desk']
Clip similarities: [0.7109375, 0.8125]
DEBUG best_match_after_iou_check [tensor(55), tensor(122), tensor(47), tensor(2)]
DEBUG uniques tensor([  2,  47,  55, 122]) tensor([1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 47
Matched 1 times with 55
Matched 1 times with 122
iou for matched labels tensor([0.4483, 0.2727, 0.4046, 0.1933])
Matched labels: ['bin', 'printer', 'printer', 'file_cabinet']
Clip similarities: [0.677734375, 0.7177734375, 0.7177734375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(65)]
DEBUG uniques tensor([65]) tensor([1])
Matched 1 times with 65
iou for matched labels Select thresholds for refinement:  92%|█████████▏| 131/142 [00:36<00:02,  4.18it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:37<00:02,  4.15it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:37<00:02,  4.20it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:37<00:01,  5.02it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:37<00:01,  4.43it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:38<00:01,  4.03it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:38<00:01,  3.98it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:38<00:01,  4.00it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:38<00:00,  3.73it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:39<00:00,  3.93it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:39<00:00,  4.37it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:39<00:00,  3.51it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:39<00:00,  3.58it/s]
tensor([0.2171])
Matched labels: ['shower_floor']
Clip similarities: [0.619140625]
DEBUG best_match_after_iou_check [tensor(92), tensor(1)]
DEBUG uniques tensor([ 1, 92]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 92
iou for matched labels tensor([0.0347, 0.3067])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.6435546875, 0.6435546875]
DEBUG best_match_after_iou_check [tensor(68)]
DEBUG uniques tensor([68]) tensor([1])
Matched 1 times with 68
iou for matched labels tensor([0.7172])
Matched labels: ['coffee_table']
Clip similarities: [0.83642578125]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.7427])
Matched labels: ['bathroom_cabinet']
Clip similarities: [0.6220703125]
DEBUG best_match_after_iou_check [tensor(0), tensor(25), tensor(220), tensor(132), tensor(73), tensor(35)]
DEBUG uniques tensor([  0,  25,  35,  73, 132, 220]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 25
Matched 1 times with 35
Matched 1 times with 73
Matched 1 times with 132
Matched 1 times with 220
iou for matched labels tensor([0.8637, 0.6260, 0.3831, 0.2202, 0.4567, 0.2507])
Matched labels: ['lamp', 'desk', 'dresser', 'closet_wall', 'rail', 'laundry_basket']
Clip similarities: [0.67529296875, 0.8125, 0.740234375, 0.591796875, 0.72509765625, 0.62451171875]
DEBUG best_match_after_iou_check [tensor(35)]
DEBUG uniques tensor([35]) tensor([1])
Matched 1 times with 35
iou for matched labels tensor([0.7020])
Matched labels: ['table']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(35), tensor(36), tensor(101), tensor(15), tensor(53)]
DEBUG uniques tensor([ 15,  35,  36,  53, 101]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 35
Matched 1 times with 36
Matched 1 times with 53
Matched 1 times with 101
iou for matched labels tensor([0.6233, 0.6951, 0.5460, 0.5542, 0.6855])
Matched labels: ['dresser', 'dresser', 'dresser', 'dresser', 'radiator']
Clip similarities: [0.740234375, 0.740234375, 0.740234375, 0.740234375, 0.6669921875]
DEBUG best_match_after_iou_check [tensor(178), tensor(81), tensor(138), tensor(138)]
DEBUG uniques tensor([ 81, 138, 178]) tensor([1, 2, 1])
Matched 1 times with 81
Matched 2 times with 138
Merge stage2 masks
Matched 1 times with 178
iou for matched labels tensor([0.7357, 0.7643, 0.6288])
Matched labels: ['dresser', 'radiator', 'desk']
Clip similarities: [0.740234375, 0.6669921875, 0.8125]
DEBUG best_match_after_iou_check [tensor(187), tensor(107), tensor(168)]
DEBUG uniques tensor([107, 168, 187]) tensor([1, 1, 1])
Matched 1 times with 107
Matched 1 times with 168
Matched 1 times with 187
iou for matched labels tensor([0.2097, 0.6981, 0.4427])
Matched labels: ['shelf', 'file_cabinet', 'monitor']
Clip similarities: [0.75048828125, 0.72021484375, 0.70703125]
DEBUG best_match_after_iou_check [tensor(39)]
DEBUG uniques tensor([39]) tensor([1])
Matched 1 times with 39
iou for matched labels tensor([0.7327])
Matched labels: ['ottoman']
Clip similarities: [0.65478515625]
DEBUG best_match_after_iou_check [tensor(90)]
DEBUG uniques tensor([90]) tensor([1])
Matched 1 times with 90
iou for matched labels tensor([0.6803])
Matched labels: ['bathroom_stall_door']
Clip similarities: [0.57470703125]
DEBUG best_match_after_iou_check [tensor(332), tensor(44), tensor(323), tensor(258), tensor(82), tensor(157), tensor(31), tensor(31), tensor(332), tensor(55), tensor(70), tensor(56), tensor(122)]
DEBUG uniques tensor([ 31,  44,  55,  56,  70,  82, 122, 157, 258, 323, 332]) tensor([2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2])
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 44
Matched 1 times with 55
Matched 1 times with 56
Matched 1 times with 70
Matched 1 times with 82
Matched 1 times with 122
Matched 1 times with 157
Matched 1 times with 258
Matched 1 times with 323
Matched 2 times with 332
Merge stage2 masks
iou for matched labels tensor([0.1362, 0.1837, 0.0783, 0.0756, 0.2699, 0.3504, 0.1929, 0.1823, 0.0631,
        0.2232, 0.1090])
Matched labels: ['box', 'counter', 'counter', 'table', 'paper_cutter', 'bin', 'desk', 'box', 'box', 'copier', 'dustpan']
Clip similarities: [0.7109375, 0.80908203125, 0.80908203125, 1.0009765625, 0.63330078125, 0.677734375, 0.8125, 0.7109375, 0.7109375, 0.70556640625, 0.69677734375]
Unique similarities: [0.57421875, 0.57470703125, 0.58056640625, 0.59130859375, 0.591796875, 0.5947265625, 0.60498046875, 0.619140625, 0.6220703125, 0.62451171875, 0.62841796875, 0.63330078125, 0.63427734375, 0.6435546875, 0.64794921875, 0.6494140625, 0.6533203125, 0.65478515625, 0.65869140625, 0.66162109375, 0.6630859375, 0.6650390625, 0.6669921875, 0.66796875, 0.673828125, 0.67529296875, 0.677734375, 0.6787109375, 0.6826171875, 0.68408203125, 0.68701171875, 0.69189453125, 0.69677734375, 0.70556640625, 0.70703125, 0.70751953125, 0.7109375, 0.71142578125, 0.7138671875, 0.71435546875, 0.7177734375, 0.71923828125, 0.72021484375, 0.7236328125, 0.72509765625, 0.7255859375, 0.72998046875, 0.73779296875, 0.740234375, 0.74072265625, 0.74169921875, 0.74267578125, 0.7470703125, 0.75048828125, 0.75341796875, 0.755859375, 0.7578125, 0.75927734375, 0.7685546875, 0.7861328125, 0.79736328125, 0.802734375, 0.80908203125, 0.8125, 0.83642578125, 0.87841796875, 0.888671875, 1.0009765625]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 11it [00:00, 106.37it/s]Refining stage1 output with stage2 outcomes: 45it [00:00, 240.20it/s]DEBUG all ious tensor([0.3102, 0.6865, 0.4754])
USE STAGE 2 MASK tensor(0.3102)
USE STAGE 1 MASK tensor(0.6865)
USE STAGE 1 MASK tensor(0.4754)
DEBUG all ious tensor([0.7304, 0.5931, 0.6095, 0.8149, 0.7045, 0.6337])
USE STAGE 1 MASK tensor(0.7304)
USE STAGE 1 MASK tensor(0.5931)
USE STAGE 1 MASK tensor(0.6095)
USE STAGE 1 MASK tensor(0.8149)
USE STAGE 1 MASK tensor(0.7045)
USE STAGE 1 MASK tensor(0.6337)
DEBUG all ious tensor([0.3280, 0.3196, 0.4780, 0.4053])
USE STAGE 2 MASK tensor(0.3280)
USE STAGE 2 MASK tensor(0.3196)
USE STAGE 1 MASK tensor(0.4780)
USE STAGE 2 MASK tensor(0.4053)
DEBUG all ious tensor([0.6816, 0.7179, 0.4150])
USE STAGE 1 MASK tensor(0.6816)
USE STAGE 1 MASK tensor(0.7179)
USE STAGE 2 MASK tensor(0.4150)
DEBUG all ious tensor([0.7932, 0.3800, 0.7952, 0.6338])
USE STAGE 1 MASK tensor(0.7932)
USE STAGE 2 MASK tensor(0.3800)
USE STAGE 1 MASK tensor(0.7952)
USE STAGE 1 MASK tensor(0.6338)
DEBUG all ious tensor([0.7788, 0.6815, 0.1780, 0.3702])
USE STAGE 1 MASK tensor(0.7788)
USE STAGE 1 MASK tensor(0.6815)
USE STAGE 2 MASK tensor(0.1780)
USE STAGE 2 MASK tensor(0.3702)
DEBUG all ious tensor([0.9418, 0.6268, 0.5163, 0.4864, 0.4177])
USE STAGE 1 MASK tensor(0.9418)
USE STAGE 1 MASK tensor(0.6268)
USE STAGE 1 MASK tensor(0.5163)
USE STAGE 1 MASK tensor(0.4864)
USE STAGE 2 MASK tensor(0.4177)
DEBUG all ious tensor([0.7213, 0.2902, 0.2762, 0.5510])
USE STAGE 1 MASK tensor(0.7213)
USE STAGE 2 MASK tensor(0.2902)
USE STAGE 2 MASK tensor(0.2762)
USE STAGE 1 MASK tensor(0.5510)
DEBUG all ious tensor([0.7496, 0.7887])
USE STAGE 1 MASK tensor(0.7496)
USE STAGE 1 MASK tensor(0.7887)
DEBUG all ious tensor([0.6803, 0.3572, 0.4329, 0.5831])
USE STAGE 1 MASK tensor(0.6803)
USE STAGE 2 MASK tensor(0.3572)
USE STAGE 2 MASK tensor(0.4329)
USE STAGE 1 MASK tensor(0.5831)
DEBUG all ious tensor([0.7537, 0.7825, 0.8682])
USE STAGE 1 MASK tensor(0.7537)
USE STAGE 1 MASK tensor(0.7825)
USE STAGE 1 MASK tensor(0.8682)
DEBUG all ious tensor([0.7084, 0.7311, 0.3704])
USE STAGE 1 MASK tensor(0.7084)
USE STAGE 1 MASK tensor(0.7311)
USE STAGE 2 MASK tensor(0.3704)
DEBUG all ious tensor([0.1833])
USE STAGE 2 MASK tensor(0.1833)
DEBUG all ious tensor([0.8125])
USE STAGE 1 MASK tensor(0.8125)
DEBUG all ious tensor([0.3833, 0.4811])
USE STAGE 2 MASK tensor(0.3833)
USE STAGE 1 MASK tensor(0.4811)
DEBUG all ious tensor([0.8410, 0.7219])
USE STAGE 1 MASK tensor(0.8410)
USE STAGE 1 MASK tensor(0.7219)
DEBUG all ious tensor([0.4542, 0.5468])
USE STAGE 1 MASK tensor(0.4542)
USE STAGE 1 MASK tensor(0.5468)
DEBUG all ious tensor([0.6534, 0.4172, 0.4801, 0.2906])
USE STAGE 1 MASK tensor(0.6534)
USE STAGE 2 MASK tensor(0.4172)
USE STAGE 1 MASK tensor(0.4801)
USE STAGE 2 MASK tensor(0.2906)
DEBUG all ious tensor([0.1124, 0.2183, 0.2820, 0.1439, 0.0374, 0.0196])
USE STAGE 2 MASK tensor(0.1124)
USE STAGE 2 MASK tensor(0.2183)
USE STAGE 2 MASK tensor(0.2820)
USE STAGE 2 MASK tensor(0.1439)
USE STAGE 2 MASK tensor(0.0374)
USE STAGE 2 MASK tensor(0.0196)
DEBUG all ious tensor([0.7020])
USE STAGE 1 MASK tensor(0.7020)
DEBUG all ious tensor([0.3987, 0.4619, 0.4800])
USE STAGE 2 MASK tensor(0.3987)
USE STAGE 1 MASK tensor(0.4619)
USE STAGE 1 MASK tensor(0.4800)
DEBUG all ious tensor([0.8001])
USE STAGE 1 MASK tensor(0.8001)
DEBUG all ious tensor([0.3708])
USE STAGE 2 MASK tensor(0.3708)
DEBUG all ious tensor([0.6660, 0.6302, 0.7432])
USE STAGE 1 MASK tensor(0.6660)
USE STAGE 1 MASK tensor(0.6302)
USE STAGE 1 MASK tensor(0.7432)
DEBUG all ious tensor([0.8661, 0.7147, 0.6854, 0.5549, 0.8892])
USE STAGE 1 MASK tensor(0.8661)
USE STAGE 1 MASK tensor(0.7147)
USE STAGE 1 MASK tensor(0.6854)
USE STAGE 1 MASK tensor(0.5549)
USE STAGE 1 MASK tensor(0.8892)
DEBUG all ious tensor([0.6215, 0.6122])
USE STAGE 1 MASK tensor(0.6215)
USE STAGE 1 MASK tensor(0.6122)
DEBUG all ious tensor([0.6479, 0.5424, 0.6161, 0.7425])
USE STAGE 1 MASK tensor(0.6479)
USE STAGE 1 MASK tensor(0.5424)
USE STAGE 1 MASK tensor(0.6161)
USE STAGE 1 MASK tensor(0.7425)
DEBUG all ious tensor([0.5229, 0.5215, 0.5996])
USE STAGE 1 MASK tensor(0.5229)
USE STAGE 1 MASK tensor(0.5215)
USE STAGE 1 MASK tensor(0.5996)
DEBUG all ious tensor([0.5198, 0.5328])
USE STAGE 1 MASK tensor(0.5198)
USE STAGE 1 MASK tensor(0.5328)
DEBUG all ious tensor([0.3509, 0.7075])
USE STAGE 2 MASK tensor(0.3509)
USE STAGE 1 MASK tensor(0.7075)
DEBUG all ious tensor([0.6306, 0.6840, 0.5496, 0.3062])
USE STAGE 1 MASK tensor(0.6306)
USE STAGE 1 MASK tensor(0.6840)
USE STAGE 1 MASK tensor(0.5496)
USE STAGE 2 MASK tensor(0.3062)
DEBUG all ious tensor([0.4660, 0.5655, 0.2475, 0.6954, 0.4221, 0.6386])
USE STAGE 1 MASK tensor(0.4660)
USE STAGE 1 MASK tensor(0.5655)
USE STAGE 2 MASK tensor(0.2475)
USE STAGE 1 MASK tensor(0.6954)
USE STAGE 2 MASK tensor(0.4221)
USE STAGE 1 MASK tensor(0.6386)
DEBUG all ious tensor([0.4651, 0.5003, 0.5030])
USE STAGE 1 MASK tensor(0.4651)
USE STAGE 1 MASK tensor(0.5003)
USE STAGE 1 MASK tensor(0.5030)
DEBUG all ious tensor([0.6309, 0.6156, 0.4766, 0.5348])
USE STAGE 1 MASK tensor(0.6309)
USE STAGE 1 MASK tensor(0.6156)
USE STAGE 1 MASK tensor(0.4766)
USE STAGE 1 MASK tensor(0.5348)
DEBUG all ious tensor([0.7396, 0.4879, 0.7003, 0.5313])
USE STAGE 1 MASK tensor(0.7396)
USE STAGE 1 MASK tensor(0.4879)
USE STAGE 1 MASK tensor(0.7003)
USE STAGE 1 MASK tensor(0.5313)
DEBUG all ious tensor([0.6795, 0.7598])
USE STAGE 1 MASK tensor(0.6795)
USE STAGE 1 MASK tensor(0.7598)
DEBUG all ious tensor([0.7433, 0.3068, 0.8486])
USE STAGE 1 MASK tensor(0.7433)
USE STAGE 2 MASK tensor(0.3068)
USE STAGE 1 MASK tensor(0.8486)
DEBUG all ious tensor([0.5285])
USE STAGE 1 MASK tensor(0.5285)
DEBUG all ious tensor([0.8643, 0.5370, 0.5047, 0.2777, 0.5378, 0.7150, 0.0154])
USE STAGE 1 MASK tensor(0.8643)
USE STAGE 1 MASK tensor(0.5370)
USE STAGE 1 MASK tensor(0.5047)
USE STAGE 2 MASK tensor(0.2777)
USE STAGE 1 MASK tensor(0.5378)
USE STAGE 1 MASK tensor(0.7150)
USE STAGE 2 MASK tensor(0.0154)
DEBUG all ious tensor([0.7076, 0.8115])
USE STAGE 1 MASK tensor(0.7076)
USE STAGE 1 MASK tensor(0.8115)
DEBUG all ious tensor([0.6959])
USE STAGE 1 MASK tensor(0.6959)
DEBUG all ious tensor([0.6776, 0.6572])
USE STAGE 1 MASK tensor(0.6776)
USE STAGE 1 MASK tensor(0.6572)
DEBUG all ious tensor([0.6050])
USE STAGE 1 MASK tensor(0.6050)
DEBUG all ious tensor([0.5166, 0.2603, 0.4845, 0.5765, 0.4825, 0.4645])
USE STAGE 1 MASK tensor(0.5166)
USE STAGE 2 MASK tensor(0.2603)
USE STAGE 1 MASK tensor(0.4845)
USE STAGE 1 MASK tensor(0.5765)
USE STAGE 1 MASK tensor(0.4825)
USE STAGE 1 MASK tensor(0.4645)
DEBUG all ious tensor([0.5981])
USE STAGE 1 MASK tensor(0.5981)
DEBUG all ious tensor([0.7958, 0.6211, 0.7510, 0.8290, 0.2526])
USE STAGE 1 MASK tensor(0.7958)
USE STAGE 1 MASK tensor(0.6211)
USE STAGE 1 MASK tensor(0.7510)
USE STAGE 1 MASK tensor(0.8290)
USE STAGE 2 MASK tensor(0.2526)
DEBUG all ious tensor([0.4288, 0.3896])
USE STAGE 2 MASK tensor(0.4288)
USE STAGE 2 MASK tensor(0.3896)
DEBUG all ious tensor([0.9236, 0.5136, 0.4098, 0.2866])
USE STAGE 1 MASK tensor(0.9236)
USE STAGE 1 MASK tensor(0.5136)
USE STAGE 2 MASK tensor(0.4098)
USE STAGE 2 MASK tensor(0.2866)
DEBUG all ious tensor([0.6434, 0.8253, 0.7284, 0.7811, 0.3254, 0.4025, 0.6132])
USE STAGE 1 MASK tensor(0.6434)
USE STAGE 1 MASK tensor(0.8253)
USE STAGE 1 MASK tensor(0.7284)
USE STAGE 1 MASK tensor(0.7811)
USE STAGE 2 MASK tensor(0.3254)
USE STAGE 2 MASK tensor(0.4025)
USE STAGE 1 MASK tensor(0.6132)
DEBUG all ious tensor([0.8666, 0.6020, 0.6109])
USE STAGE 1 MASK tensor(0.8666)
USE STAGE 1 MASK tensor(0.6020)
USE STAGE 1 MASK tensor(0.6109)
DEBUG all ious tensor([0.7418, 0.3131])
USE STAGE 1 MASK tensor(0.7418)
USE STAGE 2 MASK tensor(0.3131)
DEBUG all ious tensor([0.7295, 0.2947, 0.4593, 0.4773, 0.6817, 0.6462, 0.4738, 0.4419, 0.4931])
USE STAGE 1 MASK tensor(0.7295)
USE STAGE 2 MASK tensor(0.2947)
USE STAGE 1 MASK tensor(0.4593)
USE STAGE 1 MASK tensor(0.4773)
USE STAGE 1 MASK tensor(0.6817)
USE STAGE 1 MASK tensor(0.6462)
USE STAGE 1 MASK tensor(0.4738)
USE STAGE 2 MASK tensor(0.4419)
USE STAGE 1 MASK tensor(0.4931)
DEBUG all ious tensor([0.3017, 0.5435, 0.3798, 0.2611])
USE STAGE 2 MASK tensor(0.3017)
USE STAGE 1 MASK tensor(0.5435)
USE STAGE 2 MASK tensor(0.3798)
USE STAGE 2 MASK tensor(0.2611)
Refining stage1 output with stage2 outcomes: 73it [00:00, 256.88it/s]Refining stage1 output with stage2 outcomes: 99it [00:00, 243.34it/s]DEBUG all ious tensor([0.4280, 0.6154, 0.5315, 0.5556, 0.4306])
USE STAGE 2 MASK tensor(0.4280)
USE STAGE 1 MASK tensor(0.6154)
USE STAGE 1 MASK tensor(0.5315)
USE STAGE 1 MASK tensor(0.5556)
USE STAGE 2 MASK tensor(0.4306)
DEBUG all ious tensor([0.2859, 0.0680, 0.2143, 0.2155])
USE STAGE 2 MASK tensor(0.2859)
USE STAGE 2 MASK tensor(0.0680)
USE STAGE 2 MASK tensor(0.2143)
USE STAGE 2 MASK tensor(0.2155)
DEBUG all ious tensor([0.6476, 0.6457])
USE STAGE 1 MASK tensor(0.6476)
USE STAGE 1 MASK tensor(0.6457)
DEBUG all ious tensor([0.7395, 0.4771, 0.9244])
USE STAGE 1 MASK tensor(0.7395)
USE STAGE 1 MASK tensor(0.4771)
USE STAGE 1 MASK tensor(0.9244)
DEBUG all ious tensor([0.2967, 0.6936, 0.3976])
USE STAGE 2 MASK tensor(0.2967)
USE STAGE 1 MASK tensor(0.6936)
USE STAGE 2 MASK tensor(0.3976)
DEBUG all ious tensor([0.7752, 0.3134, 0.7073])
USE STAGE 1 MASK tensor(0.7752)
USE STAGE 2 MASK tensor(0.3134)
USE STAGE 1 MASK tensor(0.7073)
DEBUG all ious tensor([0.5208, 0.6711, 0.5930])
USE STAGE 1 MASK tensor(0.5208)
USE STAGE 1 MASK tensor(0.6711)
USE STAGE 1 MASK tensor(0.5930)
DEBUG all ious tensor([0.8631])
USE STAGE 1 MASK tensor(0.8631)
DEBUG all ious tensor([0.5249, 0.7986, 0.4741, 0.4042, 0.7088, 0.6292, 0.4295])
USE STAGE 1 MASK tensor(0.5249)
USE STAGE 1 MASK tensor(0.7986)
USE STAGE 1 MASK tensor(0.4741)
USE STAGE 2 MASK tensor(0.4042)
USE STAGE 1 MASK tensor(0.7088)
USE STAGE 1 MASK tensor(0.6292)
USE STAGE 2 MASK tensor(0.4295)
DEBUG all ious tensor([0.5366])
USE STAGE 1 MASK tensor(0.5366)
DEBUG all ious tensor([0.2820, 0.0554, 0.2427])
USE STAGE 2 MASK tensor(0.2820)
USE STAGE 2 MASK tensor(0.0554)
USE STAGE 2 MASK tensor(0.2427)
DEBUG all ious tensor([0.6196, 0.3601, 0.4779])
USE STAGE 1 MASK tensor(0.6196)
USE STAGE 2 MASK tensor(0.3601)
USE STAGE 1 MASK tensor(0.4779)
DEBUG all ious tensor([0.6663])
USE STAGE 1 MASK tensor(0.6663)
DEBUG all ious tensor([0.6731])
USE STAGE 1 MASK tensor(0.6731)
DEBUG all ious tensor([0.8065])
USE STAGE 1 MASK tensor(0.8065)
DEBUG all ious []
DEBUG all ious tensor([0.5934])
USE STAGE 1 MASK tensor(0.5934)
DEBUG all ious tensor([0.7312, 0.5805, 0.5300, 0.6660, 0.4254])
USE STAGE 1 MASK tensor(0.7312)
USE STAGE 1 MASK tensor(0.5805)
USE STAGE 1 MASK tensor(0.5300)
USE STAGE 1 MASK tensor(0.6660)
USE STAGE 2 MASK tensor(0.4254)
DEBUG all ious tensor([0.6186, 0.1193, 0.2906])
USE STAGE 1 MASK tensor(0.6186)
USE STAGE 2 MASK tensor(0.1193)
USE STAGE 2 MASK tensor(0.2906)
DEBUG all ious tensor([0.7102, 0.5324])
USE STAGE 1 MASK tensor(0.7102)
USE STAGE 1 MASK tensor(0.5324)
DEBUG all ious tensor([0.8222, 0.7771])
USE STAGE 1 MASK tensor(0.8222)
USE STAGE 1 MASK tensor(0.7771)
DEBUG all ious tensor([0.2623, 0.7396, 0.4716])
USE STAGE 2 MASK tensor(0.2623)
USE STAGE 1 MASK tensor(0.7396)
USE STAGE 1 MASK tensor(0.4716)
DEBUG all ious tensor([0.4370, 0.4028, 0.5947, 0.4222])
USE STAGE 2 MASK tensor(0.4370)
USE STAGE 2 MASK tensor(0.4028)
USE STAGE 1 MASK tensor(0.5947)
USE STAGE 2 MASK tensor(0.4222)
DEBUG all ious tensor([0.6623, 0.7015])
USE STAGE 1 MASK tensor(0.6623)
USE STAGE 1 MASK tensor(0.7015)
DEBUG all ious tensor([0.8867])
USE STAGE 1 MASK tensor(0.8867)
DEBUG all ious tensor([0.7360])
USE STAGE 1 MASK tensor(0.7360)
DEBUG all ious tensor([0.4508, 0.4406])
USE STAGE 1 MASK tensor(0.4508)
USE STAGE 2 MASK tensor(0.4406)
DEBUG all ious tensor([0.7391, 0.6849, 0.6839])
USE STAGE 1 MASK tensor(0.7391)
USE STAGE 1 MASK tensor(0.6849)
USE STAGE 1 MASK tensor(0.6839)
DEBUG all ious tensor([0.7717])
USE STAGE 1 MASK tensor(0.7717)
DEBUG all ious tensor([0.5412, 0.6873, 0.6558])
USE STAGE 1 MASK tensor(0.5412)
USE STAGE 1 MASK tensor(0.6873)
USE STAGE 1 MASK tensor(0.6558)
DEBUG all ious tensor([0.6818, 0.5479, 0.5843, 0.3368, 0.6146])
USE STAGE 1 MASK tensor(0.6818)
USE STAGE 1 MASK tensor(0.5479)
USE STAGE 1 MASK tensor(0.5843)
USE STAGE 2 MASK tensor(0.3368)
USE STAGE 1 MASK tensor(0.6146)
DEBUG all ious tensor([0.7648, 0.4936, 0.6174, 0.8082, 0.7071])
USE STAGE 1 MASK tensor(0.7648)
USE STAGE 1 MASK tensor(0.4936)
USE STAGE 1 MASK tensor(0.6174)
USE STAGE 1 MASK tensor(0.8082)
USE STAGE 1 MASK tensor(0.7071)
DEBUG all ious tensor([0.3743, 0.5501, 0.3144, 0.6845, 0.7397])
USE STAGE 2 MASK tensor(0.3743)
USE STAGE 1 MASK tensor(0.5501)
USE STAGE 2 MASK tensor(0.3144)
USE STAGE 1 MASK tensor(0.6845)
USE STAGE 1 MASK tensor(0.7397)
DEBUG all ious tensor([0.7098, 0.6309, 0.8824, 0.5729])
USE STAGE 1 MASK tensor(0.7098)
USE STAGE 1 MASK tensor(0.6309)
USE STAGE 1 MASK tensor(0.8824)
USE STAGE 1 MASK tensor(0.5729)
DEBUG all ious tensor([0.5660])
USE STAGE 1 MASK tensor(0.5660)
DEBUG all ious tensor([0.3116, 0.7446, 0.5359])
USE STAGE 2 MASK tensor(0.3116)
USE STAGE 1 MASK tensor(0.7446)
USE STAGE 1 MASK tensor(0.5359)
DEBUG all ious tensor([0.7568, 0.7259, 0.5453])
USE STAGE 1 MASK tensor(0.7568)
USE STAGE 1 MASK tensor(0.7259)
USE STAGE 1 MASK tensor(0.5453)
DEBUG all ious tensor([0.6730, 0.6004, 0.4789, 0.3445, 0.6745])
USE STAGE 1 MASK tensor(0.6730)
USE STAGE 1 MASK tensor(0.6004)
USE STAGE 1 MASK tensor(0.4789)
USE STAGE 2 MASK tensor(0.3445)
USE STAGE 1 MASK tensor(0.6745)
DEBUG all ious tensor([0.4969, 0.7053, 0.7256, 0.4233, 0.7221])
USE STAGE 1 MASK tensor(0.4969)
USE STAGE 1 MASK tensor(0.7053)
USE STAGE 1 MASK tensor(0.7256)
USE STAGE 2 MASK tensor(0.4233)
USE STAGE 1 MASK tensor(0.7221)
DEBUG all ious tensor([0.7753, 0.6064])
USE STAGE 1 MASK tensor(0.7753)
USE STAGE 1 MASK tensor(0.6064)
DEBUG all ious tensor([0.7050])
USE STAGE 1 MASK tensor(0.7050)
DEBUG all ious tensor([0.7323, 0.5387])
USE STAGE 1 MASK tensor(0.7323)
USE STAGE 1 MASK tensor(0.5387)
DEBUG all ious tensor([0.6167, 0.6032, 0.7012, 0.5568])
USE STAGE 1 MASK tensor(0.6167)
USE STAGE 1 MASK tensor(0.6032)
USE STAGE 1 MASK tensor(0.7012)
USE STAGE 1 MASK tensor(0.5568)
DEBUG all ious tensor([0.7023, 0.5205, 0.2687])
USE STAGE 1 MASK tensor(0.7023)
USE STAGE 1 MASK tensor(0.5205)
USE STAGE 2 MASK tensor(0.2687)
DEBUG all ious tensor([0.3709, 0.2847, 0.4572, 0.7272, 0.8478, 0.5256])
USE STAGE 2 MASK tensor(0.3709)
USE STAGE 2 MASK tensor(0.2847)
USE STAGE 1 MASK tensor(0.4572)
USE STAGE 1 MASK tensor(0.7272)
USE STAGE 1 MASK tensor(0.8478)
USE STAGE 1 MASK tensor(0.5256)
DEBUG all ious tensor([0.3308, 0.8215, 0.5827, 0.2537, 0.5657, 0.6180, 0.1482])
USE STAGE 2 MASK tensor(0.3308)
USE STAGE 1 MASK tensor(0.8215)
USE STAGE 1 MASK tensor(0.5827)
USE STAGE 2 MASK tensor(0.2537)
USE STAGE 1 MASK tensor(0.5657)
USE STAGE 1 MASK tensor(0.6180)
USE STAGE 2 MASK tensor(0.1482)
DEBUG all ious tensor([0.5189, 0.6353, 0.3789])
USE STAGE 1 MASK tensor(0.5189)
USE STAGE 1 MASK tensor(0.6353)
USE STAGE 2 MASK tensor(0.3789)
DEBUG all ious tensor([0.6242, 0.0295, 0.6639])
USE STAGE 1 MASK tensor(0.6242)
USE STAGE 2 MASK tensor(0.0295)
USE STAGE 1 MASK tensor(0.6639)
DEBUG all ious tensor([0.6381])
USE STAGE 1 MASK tensor(0.6381)
DEBUG all ious tensor([0.6011, 0.6301])
USE STAGE 1 MASK tensor(0.6011)
USE STAGE 1 MASK tensor(0.6301)
DEBUG all ious tensor([0.8391, 0.5026])
USE STAGE 1 MASK tensor(0.8391)
USE STAGE 1 MASK tensor(0.5026)
DEBUG all ious tensor([0.7807, 0.4008, 0.6841, 0.2333])
USE STAGE 1 MASK tensor(0.7807)
USE STAGE 2 MASK tensor(0.4008)
USE STAGE 1 MASK tensor(0.6841)
USE STAGE 2 MASK tensor(0.2333)
DEBUG all ious tensor([0.6126, 0.6299])
USE STAGE 1 MASK tensor(0.6126)
USE STAGE 1 MASK tensor(0.6299)
DEBUG all ious tensor([0.8856])
USE STAGE 1 MASK tensor(0.8856)
DEBUG all ious tensor([0.4059, 0.4862, 0.7919, 0.6313])
USE STAGE 2 MASK tensor(0.4059)
USE STAGE 1 MASK tensor(0.4862)
USE STAGE 1 MASK tensor(0.7919)
USE STAGE 1 MASK tensor(0.6313)
DEBUG all ious tensor([0.4755, 0.7249, 0.1791, 0.6469, 0.6746, 0.6731])
USE STAGE 1 MASK tensor(0.4755)
USE STAGE 1 MASK tensor(0.7249)
USE STAGE 2 MASK tensor(0.1791)
USE STAGE 1 MASK tensor(0.6469)
USE STAGE 1 MASK tensor(0.6746)
USE STAGE 1 MASK tensor(0.6731)
DEBUG all ious tensor([0.7202, 0.7464])
USE STAGE 1 MASK tensor(0.7202)
USE STAGE 1 MASK tensor(0.7464)
DEBUG all ious tensor([0.5746, 0.7761, 0.5835])
USE STAGE 1 MASK tensor(0.5746)
USE STAGE 1 MASK tensor(0.7761)
USE STAGE 1 MASK tensor(0.5835)
DEBUG all ious tensor([0.5161, 0.5672, 0.5701, 0.4970])
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 124it [00:00, 219.20it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 214.42it/s]
tensor(0.5161)
USE STAGE 1 MASK tensor(0.5672)
USE STAGE 1 MASK tensor(0.5701)
USE STAGE 1 MASK tensor(0.4970)
DEBUG all ious tensor([0.4505, 0.4355])
USE STAGE 1 MASK tensor(0.4505)
USE STAGE 2 MASK tensor(0.4355)
DEBUG all ious tensor([0.7440, 0.5722, 0.3838, 0.4895, 0.5177, 0.6505])
USE STAGE 1 MASK tensor(0.7440)
USE STAGE 1 MASK tensor(0.5722)
USE STAGE 2 MASK tensor(0.3838)
USE STAGE 1 MASK tensor(0.4895)
USE STAGE 1 MASK tensor(0.5177)
USE STAGE 1 MASK tensor(0.6505)
DEBUG all ious tensor([0.6695, 0.6339, 0.7808, 0.7533])
USE STAGE 1 MASK tensor(0.6695)
USE STAGE 1 MASK tensor(0.6339)
USE STAGE 1 MASK tensor(0.7808)
USE STAGE 1 MASK tensor(0.7533)
DEBUG all ious tensor([0.4890, 0.3634])
USE STAGE 1 MASK tensor(0.4890)
USE STAGE 2 MASK tensor(0.3634)
DEBUG all ious tensor([0.5900, 0.4027])
USE STAGE 1 MASK tensor(0.5900)
USE STAGE 2 MASK tensor(0.4027)
DEBUG all ious tensor([0.7016, 0.2875, 0.4958, 0.5818])
USE STAGE 1 MASK tensor(0.7016)
USE STAGE 2 MASK tensor(0.2875)
USE STAGE 1 MASK tensor(0.4958)
USE STAGE 1 MASK tensor(0.5818)
DEBUG all ious tensor([0.5474, 0.3370, 0.0704, 0.3102, 0.5709, 0.7450])
USE STAGE 1 MASK tensor(0.5474)
USE STAGE 2 MASK tensor(0.3370)
USE STAGE 2 MASK tensor(0.0704)
USE STAGE 2 MASK tensor(0.3102)
USE STAGE 1 MASK tensor(0.5709)
USE STAGE 1 MASK tensor(0.7450)
DEBUG all ious tensor([0.6530])
USE STAGE 1 MASK tensor(0.6530)
DEBUG all ious tensor([0.6040, 0.5627, 0.2653, 0.4101])
USE STAGE 1 MASK tensor(0.6040)
USE STAGE 1 MASK tensor(0.5627)
USE STAGE 2 MASK tensor(0.2653)
USE STAGE 2 MASK tensor(0.4101)
DEBUG all ious tensor([0.6971])
USE STAGE 1 MASK tensor(0.6971)
DEBUG all ious tensor([0.6331, 0.5080])
USE STAGE 1 MASK tensor(0.6331)
USE STAGE 1 MASK tensor(0.5080)
DEBUG all ious tensor([0.6033])
USE STAGE 1 MASK tensor(0.6033)
DEBUG all ious tensor([0.6947, 0.6936, 0.6571, 0.7650, 0.7609, 0.7130])
USE STAGE 1 MASK tensor(0.6947)
USE STAGE 1 MASK tensor(0.6936)
USE STAGE 1 MASK tensor(0.6571)
USE STAGE 1 MASK tensor(0.7650)
USE STAGE 1 MASK tensor(0.7609)
USE STAGE 1 MASK tensor(0.7130)
DEBUG all ious tensor([0.6562, 0.3774, 0.7738])
USE STAGE 1 MASK tensor(0.6562)
USE STAGE 2 MASK tensor(0.3774)
USE STAGE 1 MASK tensor(0.7738)
DEBUG all ious tensor([0.6471])
USE STAGE 1 MASK tensor(0.6471)
DEBUG all ious tensor([0.0971, 0.7392, 0.4153, 0.7645, 0.4522, 0.3139])
USE STAGE 2 MASK tensor(0.0971)
USE STAGE 1 MASK tensor(0.7392)
USE STAGE 2 MASK tensor(0.4153)
USE STAGE 1 MASK tensor(0.7645)
USE STAGE 1 MASK tensor(0.4522)
USE STAGE 2 MASK tensor(0.3139)
DEBUG all ious tensor([0.8373, 0.7623])
USE STAGE 1 MASK tensor(0.8373)
USE STAGE 1 MASK tensor(0.7623)
DEBUG all ious tensor([0.4483, 0.2727, 0.4046, 0.1933])
USE STAGE 2 MASK tensor(0.4483)
USE STAGE 2 MASK tensor(0.2727)
USE STAGE 2 MASK tensor(0.4046)
USE STAGE 2 MASK tensor(0.1933)
DEBUG all ious tensor([0.2171])
USE STAGE 2 MASK tensor(0.2171)
DEBUG all ious tensor([0.0347, 0.3067])
USE STAGE 2 MASK tensor(0.0347)
USE STAGE 2 MASK tensor(0.3067)
DEBUG all ious tensor([0.7172])
USE STAGE 1 MASK tensor(0.7172)
DEBUG all ious tensor([0.7427])
USE STAGE 1 MASK tensor(0.7427)
DEBUG all ious tensor([0.8637, 0.6260, 0.3831, 0.2202, 0.4567, 0.2507])
USE STAGE 1 MASK tensor(0.8637)
USE STAGE 1 MASK tensor(0.6260)
USE STAGE 2 MASK tensor(0.3831)
USE STAGE 2 MASK tensor(0.2202)
USE STAGE 1 MASK tensor(0.4567)
USE STAGE 2 MASK tensor(0.2507)
DEBUG all ious tensor([0.7020])
USE STAGE 1 MASK tensor(0.7020)
DEBUG all ious tensor([0.6233, 0.6951, 0.5460, 0.5542, 0.6855])
USE STAGE 1 MASK tensor(0.6233)
USE STAGE 1 MASK tensor(0.6951)
USE STAGE 1 MASK tensor(0.5460)
USE STAGE 1 MASK tensor(0.5542)
USE STAGE 1 MASK tensor(0.6855)
DEBUG all ious tensor([0.7357, 0.7643, 0.6288])
USE STAGE 1 MASK tensor(0.7357)
USE STAGE 1 MASK tensor(0.7643)
USE STAGE 1 MASK tensor(0.6288)
DEBUG all ious tensor([0.2097, 0.6981, 0.4427])
USE STAGE 2 MASK tensor(0.2097)
USE STAGE 1 MASK tensor(0.6981)
USE STAGE 2 MASK tensor(0.4427)
DEBUG all ious tensor([0.7327])
USE STAGE 1 MASK tensor(0.7327)
DEBUG all ious tensor([0.6803])
USE STAGE 1 MASK tensor(0.6803)
DEBUG all ious tensor([0.1362, 0.1837, 0.0783, 0.0756, 0.2699, 0.3504, 0.1929, 0.1823, 0.0631,
        0.2232, 0.1090])
USE STAGE 2 MASK tensor(0.1362)
USE STAGE 2 MASK tensor(0.1837)
USE STAGE 2 MASK tensor(0.0783)
USE STAGE 2 MASK tensor(0.0756)
USE STAGE 2 MASK tensor(0.2699)
USE STAGE 2 MASK tensor(0.3504)
USE STAGE 2 MASK tensor(0.1929)
USE STAGE 2 MASK tensor(0.1823)
USE STAGE 2 MASK tensor(0.0631)
USE STAGE 2 MASK tensor(0.2232)
USE STAGE 2 MASK tensor(0.1090)
Evaluating class table...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class table...:   1%|          | 1/142 [00:00<00:14,  9.98it/s]Evaluating class table...:   2%|▏         | 3/142 [00:00<00:09, 14.61it/s]Evaluating class table...:   4%|▎         | 5/142 [00:00<00:10, 13.16it/s]Evaluating class table...:   5%|▍         | 7/142 [00:00<00:09, 13.88it/s]Evaluating class table...:   6%|▋         | 9/142 [00:00<00:08, 15.32it/s]Evaluating class table...:   8%|▊         | 12/142 [00:00<00:06, 19.36it/s]Evaluating class table...:  11%|█         | 15/142 [00:00<00:06, 18.77it/s]Evaluating class table...:  13%|█▎        | 18/142 [00:01<00:06, 20.41it/s]Evaluating class table...:  15%|█▍        | 21/142 [00:01<00:05, 21.67it/s]Evaluating class table...:  17%|█▋        | 24/142 [00:01<00:05, 22.01it/s]Evaluating class table...:  19%|█▉        | 27/142 [00:01<00:05, 21.82it/s]Evaluating class table...:  21%|██        | 30/142 [00:01<00:07, 14.78it/s]Evaluating class table...:  23%|██▎       | 32/142 [00:01<00:07, 15.54it/s]Evaluating class table...:  24%|██▍       | 34/142 [00:02<00:08, 12.57it/s]Evaluating class table...:  25%|██▌       | 36/142 [00:02<00:08, 12.60it/s]Evaluating class table...:  27%|██▋       | 38/142 [00:02<00:07, 13.99it/s]Evaluating class table...:  29%|██▉       | 41/142 [00:02<00:05, 17.25it/s]Evaluating class table...:  30%|███       | 43/142 [00:02<00:05, 16.57it/s]Evaluating class table...:  32%|███▏      | 45/142 [00:02<00:06, 14.58it/s]Evaluating class table...:  34%|███▍      | 48/142 [00:02<00:06, 15.22it/s]Evaluating class table...:  35%|███▌      | 50/142 [00:03<00:05, 15.37it/s]Evaluating class table...:  37%|███▋      | 53/142 [00:03<00:05, 17.22it/s]Evaluating class table...:  39%|███▊      | 55/142 [00:03<00:05, 17.28it/s]Evaluating class table...:  41%|████      | 58/142 [00:03<00:04, 19.16it/s]Evaluating class table...:  43%|████▎     | 61/142 [00:03<00:03, 20.82it/s]Evaluating class table...:  45%|████▌     | 64/142 [00:03<00:03, 20.63it/s]Evaluating class table...:  47%|████▋     | 67/142 [00:03<00:03, 21.01it/s]Evaluating class table...:  49%|████▉     | 70/142 [00:03<00:03, 23.15it/s]Evaluating class table...:  51%|█████▏    | 73/142 [00:04<00:03, 21.58it/s]Evaluating class table...:  54%|█████▎    | 76/142 [00:04<00:03, 20.19it/s]Evaluating class table...:  56%|█████▌    | 79/142 [00:04<00:02, 22.10it/s]Evaluating class table...:  58%|█████▊    | 82/142 [00:04<00:03, 19.08it/s]Evaluating class table...:  60%|█████▉    | 85/142 [00:04<00:02, 20.86it/s]Evaluating class table...:  62%|██████▏   | 88/142 [00:04<00:02, 20.39it/s]Evaluating class table...:  64%|██████▍   | 91/142 [00:05<00:02, 21.63it/s]Evaluating class table...:  66%|██████▌   | 94/142 [00:05<00:02, 20.77it/s]Evaluating class table...:  68%|██████▊   | 97/142 [00:05<00:02, 20.20it/s]Evaluating class table...:  70%|███████   | 100/142 [00:05<00:02, 16.92it/s]Evaluating class table...:  72%|███████▏  | 102/142 [00:05<00:02, 16.56it/s]Evaluating class table...:  73%|███████▎  | 104/142 [00:05<00:02, 16.84it/s]Evaluating class table...:  75%|███████▍  | 106/142 [00:05<00:02, 17.33it/s]Evaluating class table...:  76%|███████▌  | 108/142 [00:06<00:02, 14.36it/s]Evaluating class table...:  77%|███████▋  | 110/142 [00:06<00:02, 12.48it/s]Evaluating class table...:  80%|███████▉  | 113/142 [00:06<00:02, 13.70it/s]Evaluating class table...:  81%|████████  | 115/142 [00:06<00:02, 12.94it/s]Evaluating class table...:  83%|████████▎ | 118/142 [00:06<00:01, 15.52it/s]Evaluating class table...:  85%|████████▍ | 120/142 [00:06<00:01, 15.08it/s]Evaluating class table...:  87%|████████▋ | 123/142 [00:07<00:01, 16.91it/s]Evaluating class table...:  88%|████████▊ | 125/142 [00:07<00:00, 17.30it/s]Evaluating class table...:  89%|████████▉ | 127/142 [00:07<00:00, 17.94it/s]Evaluating class table...:  91%|█████████ | 129/142 [00:07<00:00, 14.62it/s]Evaluating class table...:  92%|█████████▏| 131/142 [00:07<00:00, 15.76it/s]Evaluating class table...:  95%|█████████▌| 135/142 [00:07<00:00, 19.42it/s]Evaluating class table...:  97%|█████████▋| 138/142 [00:07<00:00, 17.28it/s]Evaluating class table...: 100%|██████████| 142/142 [00:08<00:00, 19.04it/s]Evaluating class table...: 100%|██████████| 142/142 [00:08<00:00, 17.40it/s]
  0%|          | 0/142 [00:00<?, ?it/s]  7%|▋         | 10/142 [00:00<00:01, 79.80it/s] 20%|██        | 29/142 [00:00<00:00, 135.47it/s] 31%|███       | 44/142 [00:00<00:00, 127.74it/s] 46%|████▋     | 66/142 [00:00<00:00, 160.42it/s] 61%|██████▏   | 87/142 [00:00<00:00, 176.63it/s] 75%|███████▌  | 107/142 [00:00<00:00, 182.14it/s] 89%|████████▊ | 126/142 [00:00<00:00, 162.05it/s]100%|██████████| 142/142 [00:00<00:00, 162.65it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.006   0.007   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.007   0.009   0.009
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.002   0.002   0.003
################################################

DEBUG avg value {'ap': 0.3597839374886951, 'ap50%': 0.4342714641966512, 'ap25%': 0.4718662742434533, 'rc': 0.6865079365079365, 'rc50%': 0.8214285714285714, 'rc25%': 0.8857142857142857}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  10%|█         | 1/10 [12:10<1:49:35, 730.60s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Projecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:01<03:05,  1.31s/it]Working on scene0011_00 class backpack
No 3d masks detected in backprojection!
Working on scene0015_00 class backpack
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/198 [00:00<00:01, 176.35it/s][A
Calculating viewed counts for every point:  19%|█▉        | 38/198 [00:00<00:00, 184.88it/s][A
Calculating viewed counts for every point:  30%|██▉       | 59/198 [00:00<00:00, 194.84it/s][A
Calculating viewed counts for every point:  41%|████▏     | 82/198 [00:00<00:00, 205.39it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 103/198 [00:00<00:00, 190.94it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 123/198 [00:00<00:00, 185.25it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 144/198 [00:00<00:00, 191.86it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

Calculating viewed counts for every point:  83%|████████▎ | 164/198 [00:00<00:00, 185.34it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 183/198 [00:00<00:00, 184.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:03<04:08,  1.78s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(316, device='cuda:0')
before filtering torch.Size([1, 217086])
after filtering torch.Size([1, 217086])
num_ins_points_after_filtering tensor([316], device='cuda:0')
Working on scene0019_00 class backpack
No 3d masks detected in backprojection!
Working on scene0025_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0030_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22], [15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/250 [00:00<00:02, 115.62it/s][A
Calculating viewed counts for every point:  10%|▉         | 24/250 [00:00<00:01, 114.41it/s][A
Calculating viewed counts for every point:  14%|█▍        | 36/250 [00:00<00:01, 114.59it/s][A
Calculating viewed counts for every point:  19%|█▉        | 48/250 [00:00<00:01, 109.66it/s][A
Calculating viewed counts for every point:  24%|██▍       | 60/250 [00:00<00:01, 111.22it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/250 [00:00<00:01, 112.72it/s][A
Calculating viewed counts for every point:  34%|███▎      | 84/250 [00:00<00:01, 109.95it/s][A
Calculating viewed counts for every point:  38%|███▊      | 96/250 [00:00<00:01, 110.10it/s][A
Calculating viewed counts for every point:  43%|████▎     | 108/250 [00:00<00:01, 110.77it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/250 [00:01<00:01, 109.70it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 131/250 [00:01<00:01, 108.67it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 143/250 [00:01<00:00, 111.52it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 155/250 [00:01<00:00, 109.95it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 167/250 [00:01<00:00, 107.36it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 179/250 [00:01<00:00, 109.02it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 190/250 [00:01<00:00, 107.86it/s][A
Calculating viewed counts for every point:  80%|████████  | 201/250 [00:01<00:00, 105.92it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 212/250 [00:01<00:00, 105.92it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 223/250 [00:02<00:00, 105.90it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 235/250 [00:02<00:00, 107.07it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 246/250 [00:02<00:00, 106.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:06<02:41,  1.18s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(877, device='cuda:0')
before filtering torch.Size([2, 293811])
after filtering torch.Size([1, 293811])
num_ins_points_after_filtering tensor([767], device='cuda:0')
Working on scene0046_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 30, 32], [6, 7, 8, 9, 26, 29, 31, 33, 34, 35, 36], [12, 13, 14], [23, 28]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 15/249 [00:00<00:01, 143.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/249 [00:00<00:01, 147.04it/s][A
Calculating viewed counts for every point:  19%|█▉        | 47/249 [00:00<00:01, 154.11it/s][A
Calculating viewed counts for every point:  25%|██▌       | 63/249 [00:00<00:01, 152.68it/s][A
Calculating viewed counts for every point:  32%|███▏      | 79/249 [00:00<00:01, 147.57it/s][A
Calculating viewed counts for every point:  39%|███▉      | 97/249 [00:00<00:00, 155.51it/s][A
Calculating viewed counts for every point:  45%|████▌     | 113/249 [00:00<00:00, 152.03it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 129/249 [00:00<00:00, 149.60it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 146/249 [00:00<00:00, 153.91it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 162/249 [00:01<00:00, 152.74it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 179/249 [00:01<00:00, 154.25it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 196/249 [00:01<00:00, 157.84it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 214/249 [00:01<00:00, 163.06it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 231/249 [00:01<00:00, 164.05it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 248/249 [00:01<00:00, 158.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:08<03:13,  1.43s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(1386, device='cuda:0')
before filtering torch.Size([4, 186857])
after filtering torch.Size([2, 186857])
num_ins_points_after_filtering tensor([735, 503], device='cuda:0')
Working on scene0050_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 38, 40, 42, 43, 45, 47, 49, 51, 53, 54, 55, 57, 60, 63, 72, 75, 78, 80, 82, 86], [10, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 46, 48, 50, 52, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 79, 81, 83, 84, 87, 88]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 195.35it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 187.97it/s][A
Calculating viewed counts for every point:  13%|█▎        | 59/466 [00:00<00:02, 186.12it/s][A
Calculating viewed counts for every point:  17%|█▋        | 78/466 [00:00<00:02, 186.63it/s][A
Calculating viewed counts for every point:  21%|██        | 97/466 [00:00<00:02, 176.94it/s][A
Calculating viewed counts for every point:  25%|██▌       | 118/466 [00:00<00:01, 184.34it/s][A
Calculating viewed counts for every point:  29%|██▉       | 137/466 [00:00<00:01, 179.93it/s][A
Calculating viewed counts for every point:  33%|███▎      | 156/466 [00:00<00:01, 181.94it/s][A
Calculating viewed counts for every point:  38%|███▊      | 176/466 [00:00<00:01, 184.93it/s][A
Calculating viewed counts for every point:  42%|████▏     | 195/466 [00:01<00:01, 176.94it/s][A
Calculating viewed counts for every point:  46%|████▌     | 215/466 [00:01<00:01, 181.54it/s][A
Calculating viewed counts for every point:  50%|█████     | 234/466 [00:01<00:01, 183.49it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 256/466 [00:01<00:01, 190.46it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 277/466 [00:01<00:00, 193.89it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 298/466 [00:01<00:00, 196.99it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 318/466 [00:01<00:00, 194.52it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 339/466 [00:01<00:00, 197.80it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 359/466 [00:01<00:00, 195.58it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 379/466 [00:02<00:00, 196.14it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 399/466 [00:02<00:00, 189.63it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 419/466 [00:02<00:00, 188.55it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 439/466 [00:02<00:00, 189.25it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 460/466 [00:02<00:00, 193.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:11<04:29,  2.00s/it]Projecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:12<03:45,  1.69s/it]detected_ratio_thres_value tensor(0.3902, device='cuda:0')
final masked points tensor(1619, device='cuda:0')
before filtering torch.Size([2, 211406])
after filtering torch.Size([2, 211406])
num_ins_points_after_filtering tensor([894, 725], device='cuda:0')
Working on scene0063_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0064_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/121 [00:00<00:00, 154.09it/s][A
Calculating viewed counts for every point:  27%|██▋       | 33/121 [00:00<00:00, 160.77it/s][A
Calculating viewed counts for every point:  44%|████▍     | 53/121 [00:00<00:00, 175.92it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 71/121 [00:00<00:00, 161.82it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 88/121 [00:00<00:00, 160.26it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 106/121 [00:00<00:00, 165.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [00:13<03:23,  1.53s/it]detected_ratio_thres_value tensor(0.4211, device='cuda:0')
final masked points tensor(659, device='cuda:0')
before filtering torch.Size([1, 230672])
after filtering torch.Size([1, 230672])
num_ins_points_after_filtering tensor([659], device='cuda:0')
Working on scene0077_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0081_00 class backpack
No 3d masks detected in backprojection!
Working on scene0084_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 20/198 [00:00<00:00, 198.15it/s][A
Calculating viewed counts for every point:  21%|██        | 42/198 [00:00<00:00, 209.94it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/198 [00:00<00:00, 222.18it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/198 [00:00<00:00, 202.78it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 110/198 [00:00<00:00, 197.89it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 130/198 [00:00<00:00, 198.31it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 150/198 [00:00<00:00, 197.54it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 172/198 [00:00<00:00, 203.75it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 193/198 [00:00<00:00, 195.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:15<02:02,  1.06it/s]Projecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:15<01:09,  1.83it/s]Projecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:15<00:43,  2.82it/s]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(399, device='cuda:0')
before filtering torch.Size([1, 116845])
after filtering torch.Size([1, 116845])
num_ins_points_after_filtering tensor([399], device='cuda:0')
Working on scene0086_00 class backpack
No 3d masks detected in backprojection!
Working on scene0088_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0095_00 class backpack
No 3d masks detected in backprojection!
Working on scene0100_00 class backpack
No 3d masks detected in backprojection!
Working on scene0131_00 class backpack
No 3d masks detected in backprojection!
Working on scene0139_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0144_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0146_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 29/141 [00:00<00:00, 288.34it/s][A
Calculating viewed counts for every point:  41%|████      | 58/141 [00:00<00:00, 266.57it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 89/141 [00:00<00:00, 285.15it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 124/141 [00:00<00:00, 306.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:16<00:49,  2.48it/s]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(1151, device='cuda:0')
before filtering torch.Size([1, 60438])
after filtering torch.Size([1, 60438])
num_ins_points_after_filtering tensor([1151], device='cuda:0')
Working on scene0149_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0153_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0164_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/189 [00:00<00:00, 227.46it/s][A
Calculating viewed counts for every point:  25%|██▍       | 47/189 [00:00<00:00, 232.49it/s][A
Calculating viewed counts for every point:  38%|███▊      | 71/189 [00:00<00:00, 226.82it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 102/189 [00:00<00:00, 256.05it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 132/189 [00:00<00:00, 270.21it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 167/189 [00:00<00:00, 294.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:17<00:45,  2.64it/s]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(1226, device='cuda:0')
before filtering torch.Size([2, 94315])
after filtering torch.Size([1, 94315])
num_ins_points_after_filtering tensor([1089], device='cuda:0')
Working on scene0169_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 15/204 [00:00<00:01, 142.96it/s][A
Calculating viewed counts for every point:  15%|█▍        | 30/204 [00:00<00:01, 137.22it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/204 [00:00<00:01, 137.48it/s][A
Calculating viewed counts for every point:  29%|██▉       | 59/204 [00:00<00:01, 140.83it/s][A
Calculating viewed counts for every point:  37%|███▋      | 75/204 [00:00<00:00, 145.40it/s][A
Calculating viewed counts for every point:  44%|████▍     | 90/204 [00:00<00:00, 134.59it/s][A
Calculating viewed counts for every point:  51%|█████     | 104/204 [00:00<00:00, 129.37it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 118/204 [00:00<00:00, 129.48it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 132/204 [00:00<00:00, 128.06it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 146/204 [00:01<00:00, 130.92it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 160/204 [00:01<00:00, 128.32it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 174/204 [00:01<00:00, 131.08it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 188/204 [00:01<00:00, 132.50it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 202/204 [00:01<00:00, 132.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:19<01:11,  1.64it/s]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(1119, device='cuda:0')
before filtering torch.Size([1, 239354])
after filtering torch.Size([1, 239354])
num_ins_points_after_filtering tensor([1119], device='cuda:0')
Working on scene0187_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [25, 26]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 23/227 [00:00<00:00, 227.72it/s][A
Calculating viewed counts for every point:  20%|██        | 46/227 [00:00<00:00, 212.28it/s][A
Calculating viewed counts for every point:  31%|███       | 70/227 [00:00<00:00, 217.48it/s][A
Calculating viewed counts for every point:  41%|████      | 92/227 [00:00<00:00, 214.08it/s][A
Calculating viewed counts for every point:  50%|█████     | 114/227 [00:00<00:00, 211.57it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 136/227 [00:00<00:00, 209.47it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 157/227 [00:00<00:00, 205.56it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 178/227 [00:00<00:00, 193.63it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 202/227 [00:00<00:00, 204.85it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 223/227 [00:01<00:00, 197.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:21<01:36,  1.21it/s]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(1438, device='cuda:0')
before filtering torch.Size([2, 173752])
after filtering torch.Size([1, 173752])
num_ins_points_after_filtering tensor([1438], device='cuda:0')
Working on scene0193_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0196_00 class backpack
masks_to_be_merged [[0, 1, 2, 7, 8, 9], [3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/192 [00:00<00:00, 227.96it/s][A
Calculating viewed counts for every point:  24%|██▍       | 46/192 [00:00<00:00, 202.01it/s][A
Calculating viewed counts for every point:  35%|███▌      | 68/192 [00:00<00:00, 206.37it/s][A
Calculating viewed counts for every point:  47%|████▋     | 90/192 [00:00<00:00, 211.25it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 112/192 [00:00<00:00, 211.16it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 138/192 [00:00<00:00, 226.96it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 161/192 [00:00<00:00, 214.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [00:22<01:23,  1.38it/s]detected_ratio_thres_value tensor(0.0857, device='cuda:0')
final masked points tensor(598, device='cuda:0')
before filtering torch.Size([2, 146032])
after filtering torch.Size([2, 146032])
num_ins_points_after_filtering tensor([404, 109], device='cuda:0')
Working on scene0203_00 class backpack
masks_to_be_merged [[0, 1], [5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 17/146 [00:00<00:00, 167.15it/s][A
Calculating viewed counts for every point:  25%|██▍       | 36/146 [00:00<00:00, 175.26it/s][A
Calculating viewed counts for every point:  39%|███▉      | 57/146 [00:00<00:00, 185.79it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 76/146 [00:00<00:00, 182.94it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 96/146 [00:00<00:00, 185.12it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 116/146 [00:00<00:00, 189.04it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 135/146 [00:00<00:00, 177.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:23<01:28,  1.28it/s]detected_ratio_thres_value tensor(0.1034, device='cuda:0')
final masked points tensor(762, device='cuda:0')
before filtering torch.Size([2, 205756])
after filtering torch.Size([1, 205756])
num_ins_points_after_filtering tensor([581], device='cuda:0')
Working on scene0207_00 class backpack
masks_to_be_merged [[0, 1], [2, 32, 34], [3, 4, 6, 30, 31], [5, 7, 8, 9, 11], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 117.66it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 116.45it/s][A
Calculating viewed counts for every point:  19%|█▉        | 38/199 [00:00<00:01, 124.19it/s][A
Calculating viewed counts for every point:  26%|██▌       | 51/199 [00:00<00:01, 119.73it/s][A
Calculating viewed counts for every point:  32%|███▏      | 63/199 [00:00<00:01, 117.96it/s][A
Calculating viewed counts for every point:  38%|███▊      | 75/199 [00:00<00:01, 116.99it/s][A
Calculating viewed counts for every point:  44%|████▎     | 87/199 [00:00<00:00, 113.08it/s][A
Calculating viewed counts for every point:  50%|████▉     | 99/199 [00:00<00:00, 114.55it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 112/199 [00:00<00:00, 115.66it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 124/199 [00:01<00:00, 116.80it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 136/199 [00:01<00:00, 112.61it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 148/199 [00:01<00:00, 113.58it/s][A
Calculating viewed counts for every point:  80%|████████  | 160/199 [00:01<00:00, 110.30it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 172/199 [00:01<00:00, 111.46it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 184/199 [00:01<00:00, 112.03it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 196/199 [00:01<00:00, 108.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:26<02:11,  1.17s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(3760, device='cuda:0')
before filtering torch.Size([5, 304396])
after filtering torch.Size([4, 304396])
num_ins_points_after_filtering tensor([ 749,  629,  669, 1577], device='cuda:0')
Working on scene0208_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0217_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 20/125 [00:00<00:00, 196.61it/s][A
Calculating viewed counts for every point:  33%|███▎      | 41/125 [00:00<00:00, 200.14it/s][A
Calculating viewed counts for every point:  50%|████▉     | 62/125 [00:00<00:00, 200.27it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 83/125 [00:00<00:00, 192.62it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 104/125 [00:00<00:00, 197.20it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 124/125 [00:00<00:00, 196.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [00:26<01:40,  1.11it/s]detected_ratio_thres_value tensor(0.1379, device='cuda:0')
final masked points tensor(1422, device='cuda:0')
before filtering torch.Size([2, 126385])
after filtering torch.Size([1, 126385])
num_ins_points_after_filtering tensor([1227], device='cuda:0')
Working on scene0221_00 class backpack
masks_to_be_merged [[2, 3]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 19/98 [00:00<00:00, 187.27it/s][A
Calculating viewed counts for every point:  43%|████▎     | 42/98 [00:00<00:00, 206.95it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 63/98 [00:00<00:00, 206.09it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 84/98 [00:00<00:00, 199.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [00:27<01:30,  1.21it/s]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(500, device='cuda:0')
before filtering torch.Size([1, 185828])
after filtering torch.Size([1, 185828])
num_ins_points_after_filtering tensor([351], device='cuda:0')
Working on scene0222_00 class backpack
masks_to_be_merged [[1, 2, 27], [4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46], [19, 20, 21, 22, 42], [24, 25], [29, 30, 31, 32], [48, 49]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 18/543 [00:00<00:03, 171.74it/s][A
Calculating viewed counts for every point:   7%|▋         | 38/543 [00:00<00:02, 184.90it/s][A
Calculating viewed counts for every point:  10%|█         | 57/543 [00:00<00:02, 186.43it/s][A
Calculating viewed counts for every point:  14%|█▍        | 76/543 [00:00<00:02, 175.95it/s][A
Calculating viewed counts for every point:  17%|█▋        | 94/543 [00:00<00:02, 173.20it/s][A
Calculating viewed counts for every point:  21%|██        | 112/543 [00:00<00:02, 169.85it/s][A
Calculating viewed counts for every point:  24%|██▍       | 130/543 [00:00<00:02, 170.97it/s][A
Calculating viewed counts for every point:  27%|██▋       | 148/543 [00:00<00:02, 171.24it/s][A
Calculating viewed counts for every point:  31%|███       | 166/543 [00:00<00:02, 173.60it/s][A
Calculating viewed counts for every point:  34%|███▍      | 187/543 [00:01<00:01, 183.01it/s][A
Calculating viewed counts for every point:  38%|███▊      | 206/543 [00:01<00:01, 179.26it/s][A
Calculating viewed counts for every point:  41%|████▏     | 225/543 [00:01<00:01, 180.84it/s][A
Calculating viewed counts for every point:  45%|████▍     | 244/543 [00:01<00:01, 180.25it/s][A
Calculating viewed counts for every point:  48%|████▊     | 263/543 [00:01<00:01, 172.19it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 282/543 [00:01<00:01, 176.24it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 302/543 [00:01<00:01, 180.59it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 321/543 [00:01<00:01, 179.11it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 339/543 [00:01<00:01, 175.94it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 358/543 [00:02<00:01, 178.14it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 376/543 [00:02<00:00, 174.35it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 395/543 [00:02<00:00, 176.63it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 413/543 [00:02<00:00, 177.31it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 433/543 [00:02<00:00, 183.56it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 452/543 [00:02<00:00, 176.99it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 471/543 [00:02<00:00, 178.14it/s][A
Calculating viewed counts for every point:  90%|█████████ | 489/543 [00:02<00:00, 170.44it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 507/543 [00:02<00:00, 168.43it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 524/543 [00:02<00:00, 162.00it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 541/543 [00:03<00:00, 158.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [00:31<02:48,  1.54s/it]detected_ratio_thres_value tensor(0.1200, device='cuda:0')
final masked points tensor(2540, device='cuda:0')
before filtering torch.Size([7, 234831])
after filtering torch.Size([1, 234831])
num_ins_points_after_filtering tensor([1569], device='cuda:0')
Working on scene0231_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 9/444 [00:00<00:05, 86.93it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/444 [00:00<00:04, 100.97it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 106.63it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 103.47it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 99.29it/s] [A
Calculating viewed counts for every point:  15%|█▌        | 67/444 [00:00<00:03, 103.40it/s][A
Calculating viewed counts for every point:  18%|█▊        | 78/444 [00:00<00:03, 102.26it/s][A
Calculating viewed counts for every point:  20%|██        | 89/444 [00:00<00:03, 100.87it/s][A
Calculating viewed counts for every point:  23%|██▎       | 100/444 [00:00<00:03, 99.28it/s][A
Calculating viewed counts for every point:  25%|██▍       | 110/444 [00:01<00:03, 97.45it/s][A
Calculating viewed counts for every point:  27%|██▋       | 121/444 [00:01<00:03, 98.41it/s][A
Calculating viewed counts for every point:  30%|██▉       | 131/444 [00:01<00:03, 98.67it/s][A
Calculating viewed counts for every point:  32%|███▏      | 143/444 [00:01<00:02, 102.63it/s][A
Calculating viewed counts for every point:  35%|███▍      | 154/444 [00:01<00:02, 104.66it/s][A
Calculating viewed counts for every point:  37%|███▋      | 165/444 [00:01<00:02, 100.30it/s][A
Calculating viewed counts for every point:  40%|███▉      | 176/444 [00:01<00:02, 100.66it/s][A
Calculating viewed counts for every point:  42%|████▏     | 187/444 [00:01<00:02, 102.31it/s][A
Calculating viewed counts for every point:  45%|████▍     | 198/444 [00:01<00:02, 104.31it/s][A
Calculating viewed counts for every point:  47%|████▋     | 209/444 [00:02<00:02, 100.15it/s][A
Calculating viewed counts for every point:  50%|████▉     | 220/444 [00:02<00:02, 96.89it/s] [A
Calculating viewed counts for every point:  52%|█████▏    | 230/444 [00:02<00:02, 94.36it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 241/444 [00:02<00:02, 97.39it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 251/444 [00:02<00:01, 97.98it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 261/444 [00:02<00:01, 96.57it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 272/444 [00:02<00:01, 99.04it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 284/444 [00:02<00:01, 102.75it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 295/444 [00:02<00:01, 100.56it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 306/444 [00:03<00:01, 98.55it/s] [A
Calculating viewed counts for every point:  71%|███████   | 316/444 [00:03<00:01, 91.95it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 326/444 [00:03<00:01, 93.84it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 336/444 [00:03<00:01, 92.89it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 346/444 [00:03<00:01, 94.46it/s][A
Calculating viewed counts for every point:  80%|████████  | 356/444 [00:03<00:00, 94.30it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 367/444 [00:03<00:00, 94.52it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 378/444 [00:03<00:00, 97.38it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 388/444 [00:03<00:00, 97.61it/s][A
Calculating viewed counts for every point:  90%|█████████ | 400/444 [00:04<00:00, 100.34it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 411/444 [00:04<00:00, 101.48it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 422/444 [00:04<00:00, 96.03it/s] [A
Calculating viewed counts for every point:  97%|█████████▋| 432/444 [00:04<00:00, 96.47it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 443/444 [00:04<00:00, 98.00it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [00:36<04:13,  2.35s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(1110, device='cuda:0')
before filtering torch.Size([1, 419537])
after filtering torch.Size([1, 419537])
num_ins_points_after_filtering tensor([1083], device='cuda:0')
Working on scene0246_00 class backpack
masks_to_be_merged [[0, 2, 3, 4], [12, 14]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 16/296 [00:00<00:01, 152.51it/s][A
Calculating viewed counts for every point:  11%|█▏        | 34/296 [00:00<00:01, 165.40it/s][A
Calculating viewed counts for every point:  18%|█▊        | 53/296 [00:00<00:01, 176.21it/s][A
Calculating viewed counts for every point:  25%|██▍       | 73/296 [00:00<00:01, 181.97it/s][A
Calculating viewed counts for every point:  31%|███▏      | 93/296 [00:00<00:01, 186.52it/s][A
Calculating viewed counts for every point:  38%|███▊      | 112/296 [00:00<00:01, 180.84it/s][A
Calculating viewed counts for every point:  44%|████▍     | 131/296 [00:00<00:00, 182.13it/s][A
Calculating viewed counts for every point:  51%|█████     | 150/296 [00:00<00:00, 184.06it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 169/296 [00:00<00:00, 183.52it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 191/296 [00:01<00:00, 192.17it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 211/296 [00:01<00:00, 189.35it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 232/296 [00:01<00:00, 193.91it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 253/296 [00:01<00:00, 197.07it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 273/296 [00:01<00:00, 193.30it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 293/296 [00:01<00:00, 193.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [00:37<03:54,  2.19s/it]detected_ratio_thres_value tensor(0.0290, device='cuda:0')
final masked points tensor(1989, device='cuda:0')
before filtering torch.Size([2, 201062])
after filtering torch.Size([2, 201062])
num_ins_points_after_filtering tensor([205, 483], device='cuda:0')
Working on scene0249_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0251_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0256_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0257_00 class backpack
masks_to_be_merged [[3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 18/165 [00:00<00:00, 178.17it/s][A
Calculating viewed counts for every point:  24%|██▎       | 39/165 [00:00<00:00, 193.14it/s][A
Calculating viewed counts for every point:  36%|███▌      | 59/165 [00:00<00:00, 191.49it/s][A
Calculating viewed counts for every point:  48%|████▊     | 79/165 [00:00<00:00, 187.54it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 103/165 [00:00<00:00, 204.19it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 124/165 [00:00<00:00, 196.91it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 147/165 [00:00<00:00, 204.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [00:38<01:45,  1.03s/it]detected_ratio_thres_value tensor(0.0667, device='cuda:0')
final masked points tensor(1643, device='cuda:0')
before filtering torch.Size([1, 180928])
after filtering torch.Size([1, 180928])
num_ins_points_after_filtering tensor([1609], device='cuda:0')
Working on scene0277_00 class backpack
masks_to_be_merged [[2, 3, 10, 11], [4, 5]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 23/115 [00:00<00:00, 226.31it/s][A
Calculating viewed counts for every point:  40%|████      | 46/115 [00:00<00:00, 217.75it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 73/115 [00:00<00:00, 237.99it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 97/115 [00:00<00:00, 226.96it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [00:39<01:39,  1.03it/s]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(1247, device='cuda:0')
before filtering torch.Size([2, 79184])
after filtering torch.Size([2, 79184])
num_ins_points_after_filtering tensor([382, 802], device='cuda:0')
Working on scene0278_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0300_00 class backpack
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [24, 25]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 26/175 [00:00<00:00, 259.19it/s][A
Calculating viewed counts for every point:  30%|██▉       | 52/175 [00:00<00:00, 248.60it/s][A
Calculating viewed counts for every point:  45%|████▌     | 79/175 [00:00<00:00, 256.14it/s][A
Calculating viewed counts for every point:  60%|██████    | 105/175 [00:00<00:00, 251.89it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 131/175 [00:00<00:00, 253.58it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 157/175 [00:00<00:00, 237.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [00:40<01:26,  1.16it/s]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(1455, device='cuda:0')
before filtering torch.Size([3, 140216])
after filtering torch.Size([1, 140216])
num_ins_points_after_filtering tensor([1395], device='cuda:0')
Working on scene0304_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 19/178 [00:00<00:00, 179.97it/s][A
Calculating viewed counts for every point:  21%|██▏       | 38/178 [00:00<00:00, 180.51it/s][A
Calculating viewed counts for every point:  34%|███▍      | 61/178 [00:00<00:00, 201.46it/s][A
Calculating viewed counts for every point:  48%|████▊     | 85/178 [00:00<00:00, 213.44it/s][A
Calculating viewed counts for every point:  61%|██████    | 108/178 [00:00<00:00, 217.54it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 130/178 [00:00<00:00, 209.07it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 152/178 [00:00<00:00, 210.29it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 175/178 [00:00<00:00, 215.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [00:42<01:32,  1.07it/s]Projecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [00:42<00:44,  2.13it/s]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(1582, device='cuda:0')
before filtering torch.Size([2, 164016])
after filtering torch.Size([1, 164016])
num_ins_points_after_filtering tensor([1430], device='cuda:0')
Working on scene0307_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0314_00 class backpack
No 3d masks detected in backprojection!
Working on scene0316_00 class backpack
No 3d masks detected in backprojection!
Working on scene0328_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0329_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/156 [00:00<00:01, 132.25it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:01, 125.03it/s][A
Calculating viewed counts for every point:  26%|██▋       | 41/156 [00:00<00:00, 120.06it/s][A
Calculating viewed counts for every point:  35%|███▍      | 54/156 [00:00<00:00, 122.88it/s][A
Calculating viewed counts for every point:  43%|████▎     | 67/156 [00:00<00:00, 120.01it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 80/156 [00:00<00:00, 121.47it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 93/156 [00:00<00:00, 121.54it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 106/156 [00:00<00:00, 120.79it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 119/156 [00:00<00:00, 120.41it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 132/156 [00:01<00:00, 118.22it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 145/156 [00:01<00:00, 120.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [00:44<01:04,  1.47it/s]detected_ratio_thres_value tensor(0.3438, device='cuda:0')
final masked points tensor(584, device='cuda:0')
before filtering torch.Size([1, 355413])
after filtering torch.Size([1, 355413])
num_ins_points_after_filtering tensor([584], device='cuda:0')
Working on scene0334_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 15/119 [00:00<00:00, 147.37it/s][A
Calculating viewed counts for every point:  25%|██▌       | 30/119 [00:00<00:00, 146.34it/s][A
Calculating viewed counts for every point:  38%|███▊      | 45/119 [00:00<00:00, 146.74it/s][A
Calculating viewed counts for every point:  50%|█████     | 60/119 [00:00<00:00, 129.41it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 74/119 [00:00<00:00, 129.70it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 88/119 [00:00<00:00, 131.04it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 102/119 [00:00<00:00, 133.66it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 118/119 [00:00<00:00, 140.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [00:45<01:10,  1.33it/s]detected_ratio_thres_value tensor(0.1351, device='cuda:0')
final masked points tensor(329, device='cuda:0')
before filtering torch.Size([1, 197174])
after filtering torch.Size([1, 197174])
num_ins_points_after_filtering tensor([329], device='cuda:0')
Working on scene0338_00 class backpack
No 3d masks detected in backprojection!
Working on scene0342_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0343_00 class backpack
No 3d masks detected in backprojection!
Working on scene0351_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 16/147 [00:00<00:00, 153.12it/s][A
Calculating viewed counts for every point:  22%|██▏       | 32/147 [00:00<00:00, 149.80it/s][A
Calculating viewed counts for every point:  34%|███▍      | 50/147 [00:00<00:00, 160.56it/s][A
Calculating viewed counts for every point:  46%|████▌     | 67/147 [00:00<00:00, 154.98it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 83/147 [00:00<00:00, 153.27it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 100/147 [00:00<00:00, 155.93it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 116/147 [00:00<00:00, 154.73it/s][A
Calculating viewed counts for every point:  90%|█████████ | 133/147 [00:00<00:00, 157.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [00:46<00:47,  1.87it/s]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(236, device='cuda:0')
before filtering torch.Size([1, 172134])
after filtering torch.Size([1, 172134])
num_ins_points_after_filtering tensor([236], device='cuda:0')
Working on scene0353_00 class backpack
masks_to_be_merged [[3, 4, 5], [6, 7, 8, 9, 10, 11, 13, 14, 15, 16], [12, 28], [17, 18, 19, 20, 21], [22, 23], [24, 25], [32, 33]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/299 [00:00<00:01, 163.77it/s][A
Calculating viewed counts for every point:  13%|█▎        | 39/299 [00:00<00:01, 192.80it/s][A
Calculating viewed counts for every point:  20%|█▉        | 59/299 [00:00<00:01, 190.22it/s][A
Calculating viewed counts for every point:  26%|██▋       | 79/299 [00:00<00:01, 185.65it/s][A
Calculating viewed counts for every point:  33%|███▎      | 98/299 [00:00<00:01, 173.28it/s][A
Calculating viewed counts for every point:  39%|███▉      | 117/299 [00:00<00:01, 177.04it/s][A
Calculating viewed counts for every point:  45%|████▌     | 135/299 [00:00<00:00, 177.79it/s][A
Calculating viewed counts for every point:  51%|█████     | 153/299 [00:00<00:00, 172.67it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 175/299 [00:00<00:00, 184.04it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 194/299 [00:01<00:00, 179.78it/s][A
Calculating viewed counts for every point:  71%|███████   | 213/299 [00:01<00:00, 180.95it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 232/299 [00:01<00:00, 174.09it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 251/299 [00:01<00:00, 176.23it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 269/299 [00:01<00:00, 176.57it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 289/299 [00:01<00:00, 181.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [00:48<01:08,  1.28it/s]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(1487, device='cuda:0')
before filtering torch.Size([7, 208782])
after filtering torch.Size([4, 208782])
num_ins_points_after_filtering tensor([102, 425, 179, 138], device='cuda:0')
Working on scene0354_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0355_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0356_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0357_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 161.70it/s][A
Calculating viewed counts for every point:  38%|███▊      | 35/91 [00:00<00:00, 168.86it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 52/91 [00:00<00:00, 163.88it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 70/91 [00:00<00:00, 166.71it/s][A
Calculating viewed counts for every point: 100%|██████████| 91/91 [00:00<00:00, 178.38it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [00:49<00:42,  1.98it/s]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(677, device='cuda:0')
before filtering torch.Size([1, 136945])
after filtering torch.Size([1, 136945])
num_ins_points_after_filtering tensor([677], device='cuda:0')
Working on scene0377_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 168.37it/s][A
Calculating viewed counts for every point:  37%|███▋      | 34/91 [00:00<00:00, 162.39it/s][A
Calculating viewed counts for every point:  60%|██████    | 55/91 [00:00<00:00, 181.24it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 74/91 [00:00<00:00, 177.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [00:50<00:44,  1.86it/s]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(473, device='cuda:0')
before filtering torch.Size([1, 111811])
after filtering torch.Size([1, 111811])
num_ins_points_after_filtering tensor([473], device='cuda:0')
Working on scene0378_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15], [11, 13, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/190 [00:00<00:01, 171.13it/s][A
Calculating viewed counts for every point:  19%|█▉        | 36/190 [00:00<00:00, 165.10it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/190 [00:00<00:00, 168.19it/s][A
Calculating viewed counts for every point:  38%|███▊      | 72/190 [00:00<00:00, 171.69it/s][A
Calculating viewed counts for every point:  48%|████▊     | 92/190 [00:00<00:00, 179.19it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 110/190 [00:00<00:00, 172.92it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 129/190 [00:00<00:00, 175.20it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 147/190 [00:00<00:00, 169.09it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 165/190 [00:00<00:00, 171.27it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 183/190 [00:01<00:00, 167.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [00:51<00:56,  1.44it/s]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(938, device='cuda:0')
before filtering torch.Size([3, 156298])
after filtering torch.Size([3, 156298])
num_ins_points_after_filtering tensor([594, 253,  91], device='cuda:0')
Working on scene0382_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7], [10, 11]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 20/113 [00:00<00:00, 197.63it/s][A
Calculating viewed counts for every point:  36%|███▋      | 41/113 [00:00<00:00, 202.95it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 62/113 [00:00<00:00, 203.62it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 90/113 [00:00<00:00, 232.07it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [00:52<00:57,  1.40it/s]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(2717, device='cuda:0')
before filtering torch.Size([2, 100285])
after filtering torch.Size([1, 100285])
num_ins_points_after_filtering tensor([2531], device='cuda:0')
Working on scene0389_00 class backpack
masks_to_be_merged [[0, 31, 33], [3, 4, 5], [7, 8, 10], [9, 11], [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24], [19, 23, 25, 26, 27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/142 [00:00<00:00, 182.16it/s][A
Calculating viewed counts for every point:  27%|██▋       | 38/142 [00:00<00:00, 179.73it/s][A
Calculating viewed counts for every point:  42%|████▏     | 59/142 [00:00<00:00, 191.67it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 79/142 [00:00<00:00, 188.41it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 99/142 [00:00<00:00, 190.55it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 120/142 [00:00<00:00, 195.15it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 140/142 [00:00<00:00, 187.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [00:53<01:04,  1.23it/s]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(1895, device='cuda:0')
before filtering torch.Size([6, 201003])
after filtering torch.Size([3, 201003])
num_ins_points_after_filtering tensor([596, 727, 276], device='cuda:0')
Working on scene0406_00 class backpack
No 3d masks detected in backprojection!
Working on scene0412_00 class backpack
masks_to_be_merged [[1, 2, 14, 15, 16, 19, 20, 21, 22], [3, 4, 5, 17, 18], [6, 7], [8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/237 [00:00<00:00, 217.12it/s][A
Calculating viewed counts for every point:  19%|█▊        | 44/237 [00:00<00:00, 209.94it/s][A
Calculating viewed counts for every point:  28%|██▊       | 66/237 [00:00<00:00, 203.40it/s][A
Calculating viewed counts for every point:  37%|███▋      | 87/237 [00:00<00:00, 193.76it/s][A
Calculating viewed counts for every point:  46%|████▋     | 110/237 [00:00<00:00, 205.80it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 131/237 [00:00<00:00, 204.69it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 154/237 [00:00<00:00, 210.34it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 177/237 [00:00<00:00, 214.57it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 199/237 [00:00<00:00, 201.43it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 221/237 [00:01<00:00, 202.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [00:55<01:01,  1.27it/s]detected_ratio_thres_value tensor(0.1212, device='cuda:0')
final masked points tensor(3612, device='cuda:0')
before filtering torch.Size([4, 175557])
after filtering torch.Size([3, 175557])
num_ins_points_after_filtering tensor([ 801, 1860,  152], device='cuda:0')
Working on scene0414_00 class backpack
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 16/117 [00:00<00:00, 159.45it/s][A
Calculating viewed counts for every point:  32%|███▏      | 37/117 [00:00<00:00, 188.58it/s][A
Calculating viewed counts for every point:  48%|████▊     | 56/117 [00:00<00:00, 183.53it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 75/117 [00:00<00:00, 165.13it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 92/117 [00:00<00:00, 158.37it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 109/117 [00:00<00:00, 153.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [00:55<01:00,  1.27it/s]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(281, device='cuda:0')
before filtering torch.Size([1, 192685])
after filtering torch.Size([1, 192685])
num_ins_points_after_filtering tensor([281], device='cuda:0')
Working on scene0423_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0426_00 class backpack
masks_to_be_merged [[0, 1, 2], [3, 27, 28, 29, 30, 31, 32], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [23, 24, 25, 47, 48, 49, 50, 51, 52]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█▏        | 26/231 [00:00<00:00, 259.59it/s][A
Calculating viewed counts for every point:  23%|██▎       | 53/231 [00:00<00:00, 257.01it/s][A
Calculating viewed counts for every point:  35%|███▍      | 80/231 [00:00<00:00, 259.46it/s][A
Calculating viewed counts for every point:  46%|████▌     | 106/231 [00:00<00:00, 257.24it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 135/231 [00:00<00:00, 266.68it/s][A
Calculating viewed counts for every point:  70%|███████   | 162/231 [00:00<00:00, 257.56it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 190/231 [00:00<00:00, 261.93it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 217/231 [00:00<00:00, 259.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [00:57<00:57,  1.30it/s]detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(3410, device='cuda:0')
before filtering torch.Size([4, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([2773], device='cuda:0')
Working on scene0427_00 class backpack
masks_to_be_merged [[2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 37/132 [00:00<00:00, 364.30it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 74/132 [00:00<00:00, 346.34it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 111/132 [00:00<00:00, 355.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [00:57<00:51,  1.45it/s]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(724, device='cuda:0')
before filtering torch.Size([1, 74074])
after filtering torch.Size([1, 74074])
num_ins_points_after_filtering tensor([711], device='cuda:0')
Working on scene0430_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 17/231 [00:00<00:01, 169.27it/s][A
Calculating viewed counts for every point:  16%|█▌        | 36/231 [00:00<00:01, 175.06it/s][A
Calculating viewed counts for every point:  23%|██▎       | 54/231 [00:00<00:01, 167.38it/s][A
Calculating viewed counts for every point:  31%|███       | 71/231 [00:00<00:00, 165.84it/s][A
Calculating viewed counts for every point:  39%|███▊      | 89/231 [00:00<00:00, 170.09it/s][A
Calculating viewed counts for every point:  46%|████▋     | 107/231 [00:00<00:00, 167.68it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 124/231 [00:00<00:00, 166.16it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 143/231 [00:00<00:00, 172.20it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 161/231 [00:00<00:00, 167.08it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 178/231 [00:01<00:00, 166.82it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 195/231 [00:01<00:00, 162.14it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 214/231 [00:01<00:00, 169.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [00:59<01:08,  1.07it/s]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(1016, device='cuda:0')
before filtering torch.Size([1, 210249])
after filtering torch.Size([1, 210249])
num_ins_points_after_filtering tensor([1016], device='cuda:0')
Working on scene0432_00 class backpack
No 3d masks detected in backprojection!
Working on scene0435_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 5, 17], [6, 7, 8, 9, 10, 11, 12, 13, 14], [15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 16/328 [00:00<00:02, 152.01it/s][A
Calculating viewed counts for every point:  10%|█         | 33/328 [00:00<00:01, 160.46it/s][A
Calculating viewed counts for every point:  15%|█▌        | 50/328 [00:00<00:01, 156.71it/s][A
Calculating viewed counts for every point:  20%|██        | 66/328 [00:00<00:01, 153.02it/s][A
Calculating viewed counts for every point:  26%|██▌       | 84/328 [00:00<00:01, 161.37it/s][A
Calculating viewed counts for every point:  31%|███       | 101/328 [00:00<00:01, 156.51it/s][A
Calculating viewed counts for every point:  36%|███▋      | 119/328 [00:00<00:01, 160.89it/s][A
Calculating viewed counts for every point:  41%|████▏     | 136/328 [00:00<00:01, 156.67it/s][A
Calculating viewed counts for every point:  46%|████▋     | 152/328 [00:00<00:01, 148.36it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 169/328 [00:01<00:01, 153.44it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 185/328 [00:01<00:00, 152.63it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 202/328 [00:01<00:00, 157.29it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 218/328 [00:01<00:00, 156.40it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 236/328 [00:01<00:00, 160.23it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 253/328 [00:01<00:00, 158.87it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 271/328 [00:01<00:00, 162.53it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 290/328 [00:01<00:00, 167.88it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 307/328 [00:01<00:00, 163.50it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 324/328 [00:02<00:00, 165.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [01:01<01:15,  1.06s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2071, device='cuda:0')
before filtering torch.Size([3, 254998])
after filtering torch.Size([2, 254998])
num_ins_points_after_filtering tensor([ 686, 1250], device='cuda:0')
Working on scene0441_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0458_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 26/199 [00:00<00:00, 252.74it/s][A
Calculating viewed counts for every point:  27%|██▋       | 54/199 [00:00<00:00, 262.26it/s][A
Calculating viewed counts for every point:  41%|████      | 81/199 [00:00<00:00, 259.59it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/199 [00:00<00:00, 252.04it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 136/199 [00:00<00:00, 263.73it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 164/199 [00:00<00:00, 265.35it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 192/199 [00:00<00:00, 266.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [01:02<00:57,  1.20it/s]detected_ratio_thres_value tensor(0.0870, device='cuda:0')
final masked points tensor(228, device='cuda:0')
before filtering torch.Size([1, 65264])
after filtering torch.Size([1, 65264])
num_ins_points_after_filtering tensor([195], device='cuda:0')
Working on scene0461_00 class backpack
No 3d masks detected in backprojection!
Working on scene0462_00 class backpack
No 3d masks detected in backprojection!
Working on scene0474_00 class backpack
masks_to_be_merged [[0, 2, 7, 8, 9, 10, 13, 14, 27, 28, 29, 30, 31, 32, 33], [1, 3], [4, 25], [5, 22, 23, 26], [6, 12], [15, 17, 19], [16, 18, 34], [21, 24]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/164 [00:00<00:00, 168.50it/s][A
Calculating viewed counts for every point:  21%|██        | 34/164 [00:00<00:00, 168.23it/s][A
Calculating viewed counts for every point:  31%|███       | 51/164 [00:00<00:00, 166.72it/s][A
Calculating viewed counts for every point:  41%|████▏     | 68/164 [00:00<00:00, 155.55it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/164 [00:00<00:00, 151.89it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 101/164 [00:00<00:00, 155.23it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 117/164 [00:00<00:00, 151.78it/s][A
Calculating viewed counts for every point:  81%|████████  | 133/164 [00:00<00:00, 146.39it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 150/164 [00:00<00:00, 150.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [01:04<00:46,  1.42it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(2419, device='cuda:0')
before filtering torch.Size([8, 182281])
after filtering torch.Size([4, 182281])
num_ins_points_after_filtering tensor([967, 134, 596,  87], device='cuda:0')
Working on scene0488_00 class backpack
No 3d masks detected in backprojection!
Working on scene0490_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0494_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0496_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0500_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0518_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 24/147 [00:00<00:00, 236.76it/s][A
Calculating viewed counts for every point:  35%|███▍      | 51/147 [00:00<00:00, 253.91it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 77/147 [00:00<00:00, 251.97it/s][A
Calculating viewed counts for every point:  70%|███████   | 103/147 [00:00<00:00, 249.37it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 131/147 [00:00<00:00, 257.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [01:05<00:24,  2.42it/s]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(1053, device='cuda:0')
before filtering torch.Size([1, 130180])
after filtering torch.Size([1, 130180])
num_ins_points_after_filtering tensor([1053], device='cuda:0')
Working on scene0527_00 class backpack
No 3d masks detected in backprojection!
Working on scene0535_00 class backpack
masks_to_be_merged [[3, 4]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 21/69 [00:00<00:00, 209.22it/s][A
Calculating viewed counts for every point:  61%|██████    | 42/69 [00:00<00:00, 201.97it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 66/69 [00:00<00:00, 214.56it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [01:05<00:21,  2.73it/s]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(516, device='cuda:0')
before filtering torch.Size([1, 90268])
after filtering torch.Size([1, 90268])
num_ins_points_after_filtering tensor([246], device='cuda:0')
Working on scene0549_00 class backpack
No 3d masks detected in backprojection!
Working on scene0550_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 26/392 [00:00<00:01, 254.06it/s][A
Calculating viewed counts for every point:  14%|█▍        | 56/392 [00:00<00:01, 277.75it/s][A
Calculating viewed counts for every point:  21%|██▏       | 84/392 [00:00<00:01, 270.38it/s][A
Calculating viewed counts for every point:  29%|██▉       | 114/392 [00:00<00:00, 278.83it/s][A
Calculating viewed counts for every point:  36%|███▌      | 142/392 [00:00<00:00, 269.13it/s][A
Calculating viewed counts for every point:  43%|████▎     | 169/392 [00:00<00:00, 260.03it/s][A
Calculating viewed counts for every point:  50%|█████     | 197/392 [00:00<00:00, 265.68it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 224/392 [00:00<00:00, 256.89it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 252/392 [00:00<00:00, 263.21it/s][A
Calculating viewed counts for every point:  71%|███████   | 279/392 [00:01<00:00, 261.87it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 306/392 [00:01<00:00, 263.77it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 336/392 [00:01<00:00, 272.35it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 364/392 [00:01<00:00, 258.58it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 391/392 [00:01<00:00, 260.36it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [01:07<00:26,  2.11it/s]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(802, device='cuda:0')
before filtering torch.Size([1, 127677])
after filtering torch.Size([1, 127677])
num_ins_points_after_filtering tensor([802], device='cuda:0')
Working on scene0552_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0553_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 31/151 [00:00<00:00, 299.13it/s][A
Calculating viewed counts for every point:  40%|████      | 61/151 [00:00<00:00, 288.47it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 90/151 [00:00<00:00, 288.69it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 119/151 [00:00<00:00, 276.63it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 147/151 [00:00<00:00, 277.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [01:08<00:25,  2.10it/s]detected_ratio_thres_value tensor(0.5263, device='cuda:0')
final masked points tensor(1458, device='cuda:0')
before filtering torch.Size([1, 62854])
after filtering torch.Size([1, 62854])
num_ins_points_after_filtering tensor([1458], device='cuda:0')
Working on scene0558_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  46%|████▋     | 33/71 [00:00<00:00, 328.59it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 66/71 [00:00<00:00, 309.46it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [01:08<00:24,  2.19it/s]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(693, device='cuda:0')
before filtering torch.Size([1, 92953])
after filtering torch.Size([1, 92953])
num_ins_points_after_filtering tensor([693], device='cuda:0')
Working on scene0559_00 class backpack
masks_to_be_merged [[1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  48%|████▊     | 28/58 [00:00<00:00, 275.11it/s][A
Calculating viewed counts for every point: 100%|██████████| 58/58 [00:00<00:00, 286.66it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [01:09<00:22,  2.33it/s]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(420, device='cuda:0')
before filtering torch.Size([1, 89796])
after filtering torch.Size([1, 89796])
num_ins_points_after_filtering tensor([363], device='cuda:0')
Working on scene0565_00 class backpack
masks_to_be_merged [[6, 7]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 19/107 [00:00<00:00, 187.89it/s][A
Calculating viewed counts for every point:  40%|████      | 43/107 [00:00<00:00, 215.27it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 66/107 [00:00<00:00, 219.69it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 88/107 [00:00<00:00, 218.58it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [01:09<00:24,  2.07it/s]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(462, device='cuda:0')
before filtering torch.Size([1, 167558])
after filtering torch.Size([1, 167558])
num_ins_points_after_filtering tensor([332], device='cuda:0')
Working on scene0568_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 14/166 [00:00<00:01, 135.48it/s][A
Calculating viewed counts for every point:  17%|█▋        | 28/166 [00:00<00:01, 122.39it/s][A
Calculating viewed counts for every point:  25%|██▍       | 41/166 [00:00<00:01, 124.27it/s][A
Calculating viewed counts for every point:  33%|███▎      | 55/166 [00:00<00:00, 127.84it/s][A
Calculating viewed counts for every point:  42%|████▏     | 69/166 [00:00<00:00, 130.88it/s][A
Calculating viewed counts for every point:  50%|█████     | 83/166 [00:00<00:00, 131.42it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 97/166 [00:00<00:00, 130.01it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 111/166 [00:00<00:00, 131.71it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 125/166 [00:00<00:00, 132.33it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 139/166 [00:01<00:00, 128.00it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 153/166 [00:01<00:00, 131.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [01:11<00:36,  1.37it/s]Projecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [01:12<00:36,  1.36it/s]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(1170, device='cuda:0')
before filtering torch.Size([1, 232453])
after filtering torch.Size([1, 232453])
num_ins_points_after_filtering tensor([1170], device='cuda:0')
Working on scene0574_00 class backpack
No 3d masks detected in backprojection!
Working on scene0575_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/294 [00:00<00:01, 165.63it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/294 [00:00<00:01, 187.67it/s][A
Calculating viewed counts for every point:  20%|██        | 59/294 [00:00<00:01, 197.30it/s][A
Calculating viewed counts for every point:  27%|██▋       | 79/294 [00:00<00:01, 190.05it/s][A
Calculating viewed counts for every point:  35%|███▌      | 103/294 [00:00<00:00, 206.10it/s][A
Calculating viewed counts for every point:  42%|████▏     | 124/294 [00:00<00:00, 199.12it/s][A
Calculating viewed counts for every point:  49%|████▉     | 145/294 [00:00<00:00, 202.30it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 167/294 [00:00<00:00, 206.04it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 188/294 [00:00<00:00, 192.25it/s][A
Calculating viewed counts for every point:  71%|███████   | 208/294 [00:01<00:00, 178.41it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 227/294 [00:01<00:00, 168.30it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 246/294 [00:01<00:00, 173.53it/s][A
Calculating viewed counts for every point:  91%|█████████ | 268/294 [00:01<00:00, 184.37it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 287/294 [00:01<00:00, 179.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [01:14<00:48,  1.00s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(766, device='cuda:0')
before filtering torch.Size([1, 194207])
after filtering torch.Size([1, 194207])
num_ins_points_after_filtering tensor([709], device='cuda:0')
Working on scene0578_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 25/149 [00:00<00:00, 245.97it/s][A
Calculating viewed counts for every point:  34%|███▎      | 50/149 [00:00<00:00, 226.53it/s][A
Calculating viewed counts for every point:  50%|█████     | 75/149 [00:00<00:00, 233.37it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 99/149 [00:00<00:00, 232.79it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 123/149 [00:00<00:00, 227.73it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 146/149 [00:00<00:00, 215.39it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [01:14<00:46,  1.01it/s]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(1110, device='cuda:0')
before filtering torch.Size([1, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([1110], device='cuda:0')
Working on scene0580_00 class backpack
masks_to_be_merged [[0, 16], [2, 3, 4, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57, 58, 59, 60, 61], [11, 12, 13], [48, 49, 50, 51, 52, 53], [55, 56]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/477 [00:00<00:02, 218.94it/s][A
Calculating viewed counts for every point:  10%|█         | 48/477 [00:00<00:01, 237.01it/s][A
Calculating viewed counts for every point:  15%|█▌        | 72/477 [00:00<00:01, 237.29it/s][A
Calculating viewed counts for every point:  20%|██        | 96/477 [00:00<00:01, 228.54it/s][A
Calculating viewed counts for every point:  25%|██▌       | 121/477 [00:00<00:01, 233.71it/s][A
Calculating viewed counts for every point:  30%|███       | 145/477 [00:00<00:01, 229.66it/s][A
Calculating viewed counts for every point:  35%|███▌      | 168/477 [00:00<00:01, 225.85it/s][A
Calculating viewed counts for every point:  40%|████      | 192/477 [00:00<00:01, 229.50it/s][A
Calculating viewed counts for every point:  45%|████▌     | 215/477 [00:00<00:01, 219.99it/s][A
Calculating viewed counts for every point:  50%|█████     | 240/477 [00:01<00:01, 226.88it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 263/477 [00:01<00:00, 223.29it/s][A
Calculating viewed counts for every point:  60%|██████    | 287/477 [00:01<00:00, 226.77it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 312/477 [00:01<00:00, 231.37it/s][A
Calculating viewed counts for every point:  70%|███████   | 336/477 [00:01<00:00, 225.85it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 361/477 [00:01<00:00, 229.60it/s][A
Calculating viewed counts for every point:  81%|████████  | 385/477 [00:01<00:00, 220.80it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 408/477 [00:01<00:00, 218.95it/s][A
Calculating viewed counts for every point:  91%|█████████ | 434/477 [00:01<00:00, 228.95it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 458/477 [00:02<00:00, 230.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [01:18<01:11,  1.56s/it]detected_ratio_thres_value tensor(0.2326, device='cuda:0')
final masked points tensor(1428, device='cuda:0')
before filtering torch.Size([5, 158047])
after filtering torch.Size([1, 158047])
num_ins_points_after_filtering tensor([953], device='cuda:0')
Working on scene0583_00 class backpack
No 3d masks detected in backprojection!
Working on scene0591_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 15/173 [00:00<00:01, 142.47it/s][A
Calculating viewed counts for every point:  17%|█▋        | 30/173 [00:00<00:01, 142.84it/s][A
Calculating viewed counts for every point:  27%|██▋       | 47/173 [00:00<00:00, 151.97it/s][A
Calculating viewed counts for every point:  36%|███▋      | 63/173 [00:00<00:00, 148.56it/s][A
Calculating viewed counts for every point:  46%|████▌     | 79/173 [00:00<00:00, 149.76it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 95/173 [00:00<00:00, 151.71it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 112/173 [00:00<00:00, 157.06it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 128/173 [00:00<00:00, 156.02it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 146/173 [00:00<00:00, 162.27it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 163/173 [00:01<00:00, 159.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [01:19<00:51,  1.16s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(1181, device='cuda:0')
before filtering torch.Size([2, 175600])
after filtering torch.Size([2, 175600])
num_ins_points_after_filtering tensor([954, 193], device='cuda:0')
Working on scene0593_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50], [5, 7, 8, 46, 47], [6, 9, 10], [31, 32]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 17/230 [00:00<00:01, 165.51it/s][A
Calculating viewed counts for every point:  16%|█▌        | 36/230 [00:00<00:01, 177.34it/s][A
Calculating viewed counts for every point:  25%|██▍       | 57/230 [00:00<00:00, 190.16it/s][A
Calculating viewed counts for every point:  33%|███▎      | 77/230 [00:00<00:00, 172.09it/s][A
Calculating viewed counts for every point:  41%|████▏     | 95/230 [00:00<00:00, 167.52it/s][A
Calculating viewed counts for every point:  51%|█████     | 117/230 [00:00<00:00, 181.62it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 136/230 [00:00<00:00, 172.08it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 154/230 [00:00<00:00, 174.13it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 173/230 [00:00<00:00, 177.59it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 191/230 [00:01<00:00, 170.29it/s][A
Calculating viewed counts for every point:  91%|█████████ | 209/230 [00:01<00:00, 167.38it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 227/230 [00:01<00:00, 169.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [01:21<00:59,  1.39s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(1227, device='cuda:0')
before filtering torch.Size([4, 211902])
after filtering torch.Size([1, 211902])
num_ins_points_after_filtering tensor([1219], device='cuda:0')
Working on scene0595_00 class backpack
masks_to_be_merged [[0, 1, 4, 5, 7, 8], [2, 3], [6, 9]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 24/76 [00:00<00:00, 239.69it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 50/76 [00:00<00:00, 250.06it/s][A
Calculating viewed counts for every point: 100%|██████████| 76/76 [00:00<00:00, 250.33it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [01:22<00:50,  1.19s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(537, device='cuda:0')
before filtering torch.Size([3, 142330])
after filtering torch.Size([2, 142330])
num_ins_points_after_filtering tensor([306, 198], device='cuda:0')
Working on scene0598_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 25/101 [00:00<00:00, 242.84it/s][A
Calculating viewed counts for every point:  50%|████▉     | 50/101 [00:00<00:00, 246.40it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 75/101 [00:00<00:00, 231.62it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 100/101 [00:00<00:00, 236.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [01:22<00:43,  1.07s/it]detected_ratio_thres_value tensor(0.3636, device='cuda:0')
final masked points tensor(711, device='cuda:0')
before filtering torch.Size([1, 145562])
after filtering torch.Size([1, 145562])
num_ins_points_after_filtering tensor([711], device='cuda:0')
Working on scene0599_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/189 [00:00<00:00, 246.27it/s][A
Calculating viewed counts for every point:  26%|██▋       | 50/189 [00:00<00:00, 232.53it/s][A
Calculating viewed counts for every point:  41%|████      | 77/189 [00:00<00:00, 246.24it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 102/189 [00:00<00:00, 243.41it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 127/189 [00:00<00:00, 237.44it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 151/189 [00:00<00:00, 230.85it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 175/189 [00:00<00:00, 226.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [01:23<00:42,  1.07s/it]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(1163, device='cuda:0')
before filtering torch.Size([1, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([928], device='cuda:0')
Working on scene0606_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 25/250 [00:00<00:00, 243.10it/s][A
Calculating viewed counts for every point:  21%|██        | 53/250 [00:00<00:00, 260.15it/s][A
Calculating viewed counts for every point:  32%|███▏      | 80/250 [00:00<00:00, 249.16it/s][A
Calculating viewed counts for every point:  42%|████▏     | 105/250 [00:00<00:00, 247.33it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 130/250 [00:00<00:00, 244.49it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 155/250 [00:00<00:00, 224.19it/s][A
Calculating viewed counts for every point:  71%|███████   | 178/250 [00:00<00:00, 213.13it/s][A
Calculating viewed counts for every point:  81%|████████  | 202/250 [00:00<00:00, 219.11it/s][A
Calculating viewed counts for every point:  90%|█████████ | 225/250 [00:00<00:00, 213.67it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 247/250 [00:01<00:00, 199.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [01:25<00:52,  1.35s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(446, device='cuda:0')
before filtering torch.Size([2, 164401])
after filtering torch.Size([1, 164401])
num_ins_points_after_filtering tensor([340], device='cuda:0')
Working on scene0607_00 class backpack
No 3d masks detected in backprojection!
Working on scene0608_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 20/339 [00:00<00:01, 194.86it/s][A
Calculating viewed counts for every point:  12%|█▏        | 40/339 [00:00<00:01, 187.93it/s][A
Calculating viewed counts for every point:  18%|█▊        | 62/339 [00:00<00:01, 201.82it/s][A
Calculating viewed counts for every point:  24%|██▍       | 83/339 [00:00<00:01, 195.76it/s][A
Calculating viewed counts for every point:  31%|███▏      | 106/339 [00:00<00:01, 207.12it/s][A
Calculating viewed counts for every point:  37%|███▋      | 127/339 [00:00<00:01, 204.06it/s][A
Calculating viewed counts for every point:  44%|████▎     | 148/339 [00:00<00:00, 192.74it/s][A
Calculating viewed counts for every point:  50%|█████     | 170/339 [00:00<00:00, 198.22it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 190/339 [00:00<00:00, 198.39it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 211/339 [00:01<00:00, 201.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 232/339 [00:01<00:00, 200.57it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 256/339 [00:01<00:00, 207.98it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 277/339 [00:01<00:00, 203.68it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 298/339 [00:01<00:00, 203.94it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 320/339 [00:01<00:00, 206.24it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [01:27<00:43,  1.19s/it]Projecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [01:28<00:26,  1.34it/s]detected_ratio_thres_value tensor(0.0926, device='cuda:0')
final masked points tensor(1812, device='cuda:0')
before filtering torch.Size([2, 186579])
after filtering torch.Size([1, 186579])
num_ins_points_after_filtering tensor([1812], device='cuda:0')
Working on scene0609_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0616_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0618_00 class backpack
No 3d masks detected in backprojection!
Working on scene0621_00 class backpack
No 3d masks detected in backprojection!
Working on scene0629_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 33, 34, 35], [11, 12], [14, 22, 37, 38, 40], [15, 16], [17, 19, 20], [24, 41, 42], [29, 30], [31, 32]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 16/275 [00:00<00:01, 150.95it/s][A
Calculating viewed counts for every point:  12%|█▏        | 32/275 [00:00<00:01, 150.34it/s][A
Calculating viewed counts for every point:  18%|█▊        | 49/275 [00:00<00:01, 154.86it/s][A
Calculating viewed counts for every point:  24%|██▎       | 65/275 [00:00<00:01, 156.01it/s][A
Calculating viewed counts for every point:  29%|██▉       | 81/275 [00:00<00:01, 149.55it/s][A
Calculating viewed counts for every point:  36%|███▌      | 98/275 [00:00<00:01, 153.18it/s][A
Calculating viewed counts for every point:  41%|████▏     | 114/275 [00:00<00:01, 148.00it/s][A
Calculating viewed counts for every point:  47%|████▋     | 129/275 [00:00<00:00, 146.33it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 145/275 [00:00<00:00, 148.56it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 160/275 [00:01<00:00, 142.91it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 175/275 [00:01<00:00, 144.05it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 190/275 [00:01<00:00, 140.88it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 205/275 [00:01<00:00, 141.51it/s][A
Calculating viewed counts for every point:  81%|████████  | 222/275 [00:01<00:00, 147.86it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 237/275 [00:01<00:00, 141.23it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 252/275 [00:01<00:00, 142.29it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 269/275 [00:01<00:00, 147.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [01:30<00:25,  1.25it/s]detected_ratio_thres_value tensor(0.1081, device='cuda:0')
final masked points tensor(4255, device='cuda:0')
before filtering torch.Size([8, 255083])
after filtering torch.Size([3, 255083])
num_ins_points_after_filtering tensor([3748,  119,   29], device='cuda:0')
Working on scene0633_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/160 [00:00<00:00, 278.36it/s][A
Calculating viewed counts for every point:  38%|███▊      | 60/160 [00:00<00:00, 300.15it/s][A
Calculating viewed counts for every point:  57%|█████▊    | 92/160 [00:00<00:00, 304.70it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 125/160 [00:00<00:00, 312.66it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 157/160 [00:00<00:00, 299.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [01:31<00:24,  1.28it/s]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(715, device='cuda:0')
before filtering torch.Size([1, 101007])
after filtering torch.Size([1, 101007])
num_ins_points_after_filtering tensor([715], device='cuda:0')
Working on scene0643_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/194 [00:00<00:01, 174.69it/s][A
Calculating viewed counts for every point:  19%|█▊        | 36/194 [00:00<00:00, 175.41it/s][A
Calculating viewed counts for every point:  29%|██▉       | 56/194 [00:00<00:00, 185.89it/s][A
Calculating viewed counts for every point:  39%|███▊      | 75/194 [00:00<00:00, 181.86it/s][A
Calculating viewed counts for every point:  48%|████▊     | 94/194 [00:00<00:00, 172.99it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 112/194 [00:00<00:00, 170.83it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 130/194 [00:00<00:00, 172.26it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 148/194 [00:00<00:00, 171.27it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 166/194 [00:00<00:00, 172.70it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 184/194 [00:01<00:00, 169.86it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [01:32<00:28,  1.04it/s]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(1378, device='cuda:0')
before filtering torch.Size([2, 167360])
after filtering torch.Size([1, 167360])
num_ins_points_after_filtering tensor([1173], device='cuda:0')
Working on scene0644_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0645_00 class backpack
masks_to_be_merged [[0, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [1, 4, 6], [2, 3, 5], [7, 8, 10, 11, 12, 13, 16, 21], [9, 14, 15], [17, 18, 20, 22]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 102.44it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 101.24it/s][A
Calculating viewed counts for every point:   8%|▊         | 34/451 [00:00<00:03, 106.70it/s][A
Calculating viewed counts for every point:  10%|█         | 46/451 [00:00<00:03, 108.58it/s][A
Calculating viewed counts for every point:  13%|█▎        | 57/451 [00:00<00:03, 107.29it/s][A
Calculating viewed counts for every point:  15%|█▌        | 68/451 [00:00<00:03, 105.53it/s][A
Calculating viewed counts for every point:  18%|█▊        | 79/451 [00:00<00:03, 102.71it/s][A
Calculating viewed counts for every point:  20%|█▉        | 90/451 [00:00<00:03, 102.82it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/451 [00:00<00:03, 98.20it/s][A
Calculating viewed counts for every point:  25%|██▌       | 113/451 [00:01<00:03, 102.14it/s][A
Calculating viewed counts for every point:  27%|██▋       | 124/451 [00:01<00:03, 101.09it/s][A
Calculating viewed counts for every point:  30%|██▉       | 135/451 [00:01<00:03, 102.08it/s][A
Calculating viewed counts for every point:  32%|███▏      | 146/451 [00:01<00:02, 103.08it/s][A
Calculating viewed counts for every point:  35%|███▍      | 157/451 [00:01<00:02, 104.70it/s][A
Calculating viewed counts for every point:  37%|███▋      | 168/451 [00:01<00:02, 100.78it/s][A
Calculating viewed counts for every point:  40%|███▉      | 179/451 [00:01<00:02, 98.40it/s] [A
Calculating viewed counts for every point:  42%|████▏     | 190/451 [00:01<00:02, 101.58it/s][A
Calculating viewed counts for every point:  45%|████▍     | 202/451 [00:01<00:02, 106.26it/s][A
Calculating viewed counts for every point:  47%|████▋     | 214/451 [00:02<00:02, 109.66it/s][A
Calculating viewed counts for every point:  50%|█████     | 226/451 [00:02<00:02, 111.58it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 238/451 [00:02<00:01, 112.40it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 250/451 [00:02<00:01, 110.61it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 262/451 [00:02<00:01, 107.74it/s][A
Calculating viewed counts for every point:  61%|██████    | 273/451 [00:02<00:01, 104.60it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 284/451 [00:02<00:01, 98.16it/s] [A
Calculating viewed counts for every point:  65%|██████▌   | 294/451 [00:02<00:01, 98.02it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 305/451 [00:02<00:01, 100.39it/s][A
Calculating viewed counts for every point:  70%|███████   | 317/451 [00:03<00:01, 103.52it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 329/451 [00:03<00:01, 107.17it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 342/451 [00:03<00:00, 111.56it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 355/451 [00:03<00:00, 114.65it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 367/451 [00:03<00:00, 113.12it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 379/451 [00:03<00:00, 115.04it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 391/451 [00:03<00:00, 109.70it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 404/451 [00:03<00:00, 114.92it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 416/451 [00:03<00:00, 111.66it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 428/451 [00:04<00:00, 106.75it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 440/451 [00:04<00:00, 107.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [01:37<00:42,  1.52s/it]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(2484, device='cuda:0')
before filtering torch.Size([6, 352477])
after filtering torch.Size([3, 352477])
num_ins_points_after_filtering tensor([1003,  457,  737], device='cuda:0')
Working on scene0647_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 18/110 [00:00<00:00, 176.45it/s][A
Calculating viewed counts for every point:  33%|███▎      | 36/110 [00:00<00:00, 175.50it/s][A
Calculating viewed counts for every point:  51%|█████     | 56/110 [00:00<00:00, 180.47it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 76/110 [00:00<00:00, 187.32it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 96/110 [00:00<00:00, 190.50it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [01:38<00:36,  1.36s/it]detected_ratio_thres_value tensor(0.4444, device='cuda:0')
final masked points tensor(681, device='cuda:0')
before filtering torch.Size([1, 196185])
after filtering torch.Size([1, 196185])
num_ins_points_after_filtering tensor([681], device='cuda:0')
Working on scene0648_00 class backpack
masks_to_be_merged [[0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53, 54, 55, 56, 57, 70, 71], [3, 5, 30, 31, 46, 47, 48, 49, 50, 51], [16, 17, 73, 74], [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 24/419 [00:00<00:01, 238.01it/s][A
Calculating viewed counts for every point:  12%|█▏        | 49/419 [00:00<00:01, 243.19it/s][A
Calculating viewed counts for every point:  18%|█▊        | 74/419 [00:00<00:01, 231.24it/s][A
Calculating viewed counts for every point:  23%|██▎       | 98/419 [00:00<00:01, 221.87it/s][A
Calculating viewed counts for every point:  29%|██▉       | 122/419 [00:00<00:01, 226.05it/s][A
Calculating viewed counts for every point:  35%|███▍      | 145/419 [00:00<00:01, 224.78it/s][A
Calculating viewed counts for every point:  40%|████      | 168/419 [00:00<00:01, 220.64it/s][A
Calculating viewed counts for every point:  46%|████▌     | 191/419 [00:00<00:01, 218.40it/s][A
Calculating viewed counts for every point:  51%|█████     | 214/419 [00:00<00:00, 221.28it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 238/419 [00:01<00:00, 226.63it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 261/419 [00:01<00:00, 227.23it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 284/419 [00:01<00:00, 226.21it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 307/419 [00:01<00:00, 226.85it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 330/419 [00:01<00:00, 227.61it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 353/419 [00:01<00:00, 222.18it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 376/419 [00:01<00:00, 218.94it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 401/419 [00:01<00:00, 225.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [01:41<00:45,  1.75s/it]detected_ratio_thres_value tensor(0.3261, device='cuda:0')
final masked points tensor(2532, device='cuda:0')
before filtering torch.Size([4, 167915])
after filtering torch.Size([2, 167915])
num_ins_points_after_filtering tensor([963, 916], device='cuda:0')
Working on scene0651_00 class backpack
No 3d masks detected in backprojection!
Working on scene0652_00 class backpack
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 29/144 [00:00<00:00, 289.42it/s][A
Calculating viewed counts for every point:  42%|████▏     | 61/144 [00:00<00:00, 304.63it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 92/144 [00:00<00:00, 301.23it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 123/144 [00:00<00:00, 303.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [01:42<00:28,  1.19s/it]detected_ratio_thres_value tensor(0.0615, device='cuda:0')
final masked points tensor(1180, device='cuda:0')
before filtering torch.Size([1, 100286])
after filtering torch.Size([1, 100286])
num_ins_points_after_filtering tensor([1039], device='cuda:0')
Working on scene0653_00 class backpack
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [25, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 137.55it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/388 [00:00<00:02, 136.12it/s][A
Calculating viewed counts for every point:  11%|█         | 43/388 [00:00<00:02, 138.56it/s][A
Calculating viewed counts for every point:  15%|█▍        | 57/388 [00:00<00:02, 132.15it/s][A
Calculating viewed counts for every point:  19%|█▊        | 72/388 [00:00<00:02, 136.55it/s][A
Calculating viewed counts for every point:  22%|██▏       | 86/388 [00:00<00:02, 133.94it/s][A
Calculating viewed counts for every point:  26%|██▌       | 101/388 [00:00<00:02, 135.41it/s][A
Calculating viewed counts for every point:  30%|██▉       | 115/388 [00:00<00:02, 133.22it/s][A
Calculating viewed counts for every point:  34%|███▎      | 130/388 [00:00<00:01, 136.93it/s][A
Calculating viewed counts for every point:  37%|███▋      | 144/388 [00:01<00:01, 136.75it/s][A
Calculating viewed counts for every point:  41%|████      | 159/388 [00:01<00:01, 138.79it/s][A
Calculating viewed counts for every point:  45%|████▍     | 173/388 [00:01<00:01, 137.09it/s][A
Calculating viewed counts for every point:  48%|████▊     | 187/388 [00:01<00:01, 135.85it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 203/388 [00:01<00:01, 141.07it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 218/388 [00:01<00:01, 141.34it/s][A
Calculating viewed counts for every point:  60%|██████    | 233/388 [00:01<00:01, 138.15it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 248/388 [00:01<00:00, 140.77it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 263/388 [00:01<00:00, 139.61it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 277/388 [00:02<00:00, 138.90it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 291/388 [00:02<00:00, 137.93it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 306/388 [00:02<00:00, 139.35it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 322/388 [00:02<00:00, 142.87it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 337/388 [00:02<00:00, 139.12it/s][A
Calculating viewed counts for every point:  90%|█████████ | 351/388 [00:02<00:00, 137.63it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 367/388 [00:02<00:00, 142.85it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 382/388 [00:02<00:00, 135.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [01:45<00:38,  1.68s/it]Projecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [01:46<00:18,  1.11it/s]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(1006, device='cuda:0')
before filtering torch.Size([3, 284951])
after filtering torch.Size([2, 284951])
num_ins_points_after_filtering tensor([772, 230], device='cuda:0')
Working on scene0655_00 class backpack
No 3d masks detected in backprojection!
Working on scene0658_00 class backpack
No 3d masks detected in backprojection!
Working on scene0660_00 class backpack
No 3d masks detected in backprojection!
Working on scene0663_00 class backpack
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 99], [22, 23, 24, 41, 43, 44, 46, 63], [25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 42, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97], [33, 34, 35, 75], [45, 48, 50, 89]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 20/295 [00:00<00:01, 199.45it/s][A
Calculating viewed counts for every point:  14%|█▍        | 42/295 [00:00<00:01, 208.06it/s][A
Calculating viewed counts for every point:  22%|██▏       | 65/295 [00:00<00:01, 215.05it/s][A
Calculating viewed counts for every point:  31%|███       | 90/295 [00:00<00:00, 226.55it/s][A
Calculating viewed counts for every point:  38%|███▊      | 113/295 [00:00<00:00, 213.11it/s][A
Calculating viewed counts for every point:  46%|████▌     | 135/295 [00:00<00:00, 208.74it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 157/295 [00:00<00:00, 210.35it/s][A
Calculating viewed counts for every point:  61%|██████    | 179/295 [00:00<00:00, 206.21it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 201/295 [00:00<00:00, 209.36it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 224/295 [00:01<00:00, 212.66it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 246/295 [00:01<00:00, 211.78it/s][A
Calculating viewed counts for every point:  91%|█████████ | 268/295 [00:01<00:00, 201.53it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 292/295 [00:01<00:00, 208.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [01:49<00:24,  1.30s/it]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(2435, device='cuda:0')
before filtering torch.Size([5, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([1054,  632], device='cuda:0')
Working on scene0664_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 35/144 [00:00<00:00, 342.73it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 76/144 [00:00<00:00, 377.50it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 114/144 [00:00<00:00, 352.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [01:49<00:20,  1.13s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(260, device='cuda:0')
before filtering torch.Size([1, 44585])
after filtering torch.Size([1, 44585])
num_ins_points_after_filtering tensor([260], device='cuda:0')
Working on scene0665_00 class backpack
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 10/104 [00:00<00:01, 92.63it/s][A
Calculating viewed counts for every point:  22%|██▏       | 23/104 [00:00<00:00, 113.57it/s][A
Calculating viewed counts for every point:  34%|███▎      | 35/104 [00:00<00:00, 112.42it/s][A
Calculating viewed counts for every point:  46%|████▌     | 48/104 [00:00<00:00, 117.94it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 61/104 [00:00<00:00, 120.61it/s][A
Calculating viewed counts for every point:  71%|███████   | 74/104 [00:00<00:00, 118.12it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 87/104 [00:00<00:00, 120.43it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 100/104 [00:00<00:00, 119.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [01:50<00:18,  1.09s/it]detected_ratio_thres_value tensor(0.0667, device='cuda:0')
final masked points tensor(233, device='cuda:0')
before filtering torch.Size([1, 252726])
after filtering torch.Size([1, 252726])
num_ins_points_after_filtering tensor([233], device='cuda:0')
Working on scene0670_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/303 [00:00<00:01, 218.19it/s][A
Calculating viewed counts for every point:  15%|█▍        | 44/303 [00:00<00:01, 213.27it/s][A
Calculating viewed counts for every point:  22%|██▏       | 66/303 [00:00<00:01, 202.66it/s][A
Calculating viewed counts for every point:  30%|██▉       | 90/303 [00:00<00:01, 212.82it/s][A
Calculating viewed counts for every point:  37%|███▋      | 112/303 [00:00<00:00, 212.47it/s][A
Calculating viewed counts for every point:  44%|████▍     | 134/303 [00:00<00:00, 208.69it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 156/303 [00:00<00:00, 211.84it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 178/303 [00:00<00:00, 213.58it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 200/303 [00:00<00:00, 207.94it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 223/303 [00:01<00:00, 212.96it/s][A
Calculating viewed counts for every point:  81%|████████  | 245/303 [00:01<00:00, 210.82it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 269/303 [00:01<00:00, 214.83it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 291/303 [00:01<00:00, 214.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [01:52<00:19,  1.22s/it]detected_ratio_thres_value tensor(0.1628, device='cuda:0')
final masked points tensor(763, device='cuda:0')
before filtering torch.Size([1, 176038])
after filtering torch.Size([1, 176038])
num_ins_points_after_filtering tensor([763], device='cuda:0')
Working on scene0671_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 25], [4, 15, 17, 19], [14, 16, 18, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 28/78 [00:00<00:00, 278.76it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 57/78 [00:00<00:00, 280.60it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [01:52<00:15,  1.05s/it]detected_ratio_thres_value tensor(0.2414, device='cuda:0')
final masked points tensor(1424, device='cuda:0')
before filtering torch.Size([3, 81469])
after filtering torch.Size([2, 81469])
num_ins_points_after_filtering tensor([834, 470], device='cuda:0')
Working on scene0678_00 class backpack
masks_to_be_merged [[0, 1, 3, 4, 5, 7, 8, 52], [6, 53], [10, 11, 13], [19, 21, 23, 30, 31], [27, 28, 35], [36, 37, 39, 41, 42, 43, 44, 45], [38, 40, 46, 47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 98.16it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 94.84it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 92.20it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 92.75it/s][A
Calculating viewed counts for every point:  21%|██        | 51/245 [00:00<00:02, 96.52it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 95.99it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/245 [00:00<00:01, 99.66it/s][A
Calculating viewed counts for every point:  33%|███▎      | 82/245 [00:00<00:01, 97.37it/s][A
Calculating viewed counts for every point:  38%|███▊      | 93/245 [00:00<00:01, 98.17it/s][A
Calculating viewed counts for every point:  42%|████▏     | 103/245 [00:01<00:01, 91.00it/s][A
Calculating viewed counts for every point:  46%|████▌     | 113/245 [00:01<00:01, 89.83it/s][A
Calculating viewed counts for every point:  51%|█████     | 124/245 [00:01<00:01, 94.02it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 134/245 [00:01<00:01, 92.68it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 144/245 [00:01<00:01, 93.24it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 154/245 [00:01<00:00, 95.07it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 165/245 [00:01<00:00, 97.89it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 176/245 [00:01<00:00, 100.12it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 187/245 [00:01<00:00, 96.72it/s] [A
Calculating viewed counts for every point:  81%|████████  | 198/245 [00:02<00:00, 97.92it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 208/245 [00:02<00:00, 94.96it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 218/245 [00:02<00:00, 95.67it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 228/245 [00:02<00:00, 95.14it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 238/245 [00:02<00:00, 95.80it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [01:56<00:24,  1.77s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(3614, device='cuda:0')
before filtering torch.Size([7, 364811])
after filtering torch.Size([5, 364811])
num_ins_points_after_filtering tensor([1116,   21,  127, 1091, 1011], device='cuda:0')
Working on scene0684_00 class backpack
masks_to_be_merged [[0, 1, 2, 4, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 32/87 [00:00<00:00, 318.50it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 64/87 [00:00<00:00, 309.85it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [01:56<00:17,  1.37s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(738, device='cuda:0')
before filtering torch.Size([1, 41364])
after filtering torch.Size([1, 41364])
num_ins_points_after_filtering tensor([734], device='cuda:0')
Working on scene0685_00 class backpack
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 27/196 [00:00<00:00, 262.28it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/196 [00:00<00:00, 257.70it/s][A
Calculating viewed counts for every point:  41%|████      | 80/196 [00:00<00:00, 248.37it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 105/196 [00:00<00:00, 243.05it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 134/196 [00:00<00:00, 256.65it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 161/196 [00:00<00:00, 258.28it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 191/196 [00:00<00:00, 269.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [01:57<00:14,  1.23s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(1232, device='cuda:0')
before filtering torch.Size([1, 132720])
after filtering torch.Size([1, 132720])
num_ins_points_after_filtering tensor([601], device='cuda:0')
Working on scene0686_00 class backpack
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 20/153 [00:00<00:00, 194.13it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/153 [00:00<00:00, 205.15it/s][A
Calculating viewed counts for every point:  43%|████▎     | 66/153 [00:00<00:00, 219.08it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 89/153 [00:00<00:00, 220.90it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 113/153 [00:00<00:00, 227.29it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 136/153 [00:00<00:00, 221.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [01:58<00:11,  1.09s/it]Projecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [01:58<00:08,  1.18it/s]Projecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [01:58<00:02,  2.52it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(65, device='cuda:0')
before filtering torch.Size([1, 89776])
after filtering torch.Size([0, 89776])
num_ins_points_after_filtering tensor([], device='cuda:0', dtype=torch.int64)
Working on scene0689_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0690_00 class backpack
No 3d masks detected in backprojection!
Working on scene0693_00 class backpack
No 3d masks detected in backprojection!
Working on scene0695_00 class backpack
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0696_00 class backpack
No 3d masks detected in backprojection!
Working on scene0697_00 class backpack
masks_to_be_merged [[0, 1], [2, 3, 4, 10, 11, 12, 13], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 29/288 [00:00<00:00, 288.42it/s][A
Calculating viewed counts for every point:  20%|██        | 59/288 [00:00<00:00, 291.31it/s][A
Calculating viewed counts for every point:  31%|███       | 89/288 [00:00<00:00, 280.44it/s][A
Calculating viewed counts for every point:  41%|████      | 118/288 [00:00<00:00, 268.39it/s][A
Calculating viewed counts for every point:  50%|█████     | 145/288 [00:00<00:00, 265.91it/s][A
Calculating viewed counts for every point:  60%|██████    | 174/288 [00:00<00:00, 272.76it/s][A
Calculating viewed counts for every point:  71%|███████   | 204/288 [00:00<00:00, 278.88it/s][A
Calculating viewed counts for every point:  81%|████████  | 232/288 [00:00<00:00, 277.45it/s][A
Calculating viewed counts for every point:  90%|█████████ | 260/288 [00:00<00:00, 269.70it/s][A
Calculating viewed counts for every point: 100%|██████████| 288/288 [00:01<00:00, 258.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [02:00<00:02,  1.97it/s]detected_ratio_thres_value tensor(0.0870, device='cuda:0')
final masked points tensor(524, device='cuda:0')
before filtering torch.Size([3, 139300])
after filtering torch.Size([3, 139300])
num_ins_points_after_filtering tensor([ 41, 238, 165], device='cuda:0')
Working on scene0699_00 class backpack
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 21, 22, 23, 24, 25], [8, 9, 12, 13, 14, 16, 17, 30, 32, 34, 36, 39, 42, 45, 46], [10, 27, 28, 29, 31, 33, 37, 38, 40, 41, 43, 44], [11, 15, 18, 19, 20, 26, 35], [47, 48]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/220 [00:00<00:01, 175.76it/s][A
Calculating viewed counts for every point:  16%|█▋        | 36/220 [00:00<00:01, 165.06it/s][A
Calculating viewed counts for every point:  26%|██▌       | 57/220 [00:00<00:00, 182.38it/s][A
Calculating viewed counts for every point:  35%|███▍      | 76/220 [00:00<00:00, 181.99it/s][A
Calculating viewed counts for every point:  44%|████▎     | 96/220 [00:00<00:00, 185.91it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 115/220 [00:00<00:00, 184.55it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 135/220 [00:00<00:00, 187.61it/s][A
Calculating viewed counts for every point:  70%|███████   | 154/220 [00:00<00:00, 179.20it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 172/220 [00:00<00:00, 178.07it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 192/220 [00:01<00:00, 182.38it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 211/220 [00:01<00:00, 181.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [02:02<00:03,  1.24it/s]detected_ratio_thres_value tensor(0.2045, device='cuda:0')
final masked points tensor(2502, device='cuda:0')
before filtering torch.Size([5, 153041])
after filtering torch.Size([3, 153041])
num_ins_points_after_filtering tensor([ 349,  952, 1095], device='cuda:0')
Working on scene0700_00 class backpack
masks_to_be_merged [[0, 1, 2, 3, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40], [4, 6, 33, 34, 35, 36, 37, 38, 72, 93, 94, 99, 104, 106, 107, 108, 109, 111, 113], [5, 7, 8, 9, 10, 12, 41, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 73, 74, 75, 76, 86, 87, 89, 91, 92, 95, 97, 98, 100, 101, 102, 103, 105, 110, 112, 114], [11, 65, 68, 70, 78, 79, 83, 115], [13, 14, 15, 16, 17, 116, 117, 118, 119, 120, 121, 122], [44, 45, 46, 50], [64, 67, 69, 77, 84, 85, 88, 90, 96], [80, 81]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 17/459 [00:00<00:02, 168.80it/s][A
Calculating viewed counts for every point:   7%|▋         | 34/459 [00:00<00:02, 164.60it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/459 [00:00<00:02, 184.31it/s][A
Calculating viewed counts for every point:  17%|█▋        | 76/459 [00:00<00:01, 194.29it/s][A
Calculating viewed counts for every point:  21%|██        | 97/459 [00:00<00:01, 198.41it/s][A
Calculating viewed counts for every point:  25%|██▌       | 117/459 [00:00<00:01, 189.06it/s][A
Calculating viewed counts for every point:  30%|███       | 138/459 [00:00<00:01, 194.31it/s][A
Calculating viewed counts for every point:  34%|███▍      | 158/459 [00:00<00:01, 195.04it/s][A
Calculating viewed counts for every point:  39%|███▉      | 178/459 [00:00<00:01, 194.95it/s][A
Calculating viewed counts for every point:  43%|████▎     | 198/459 [00:01<00:01, 188.64it/s][A
Calculating viewed counts for every point:  48%|████▊     | 220/459 [00:01<00:01, 194.98it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 240/459 [00:01<00:01, 190.34it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 260/459 [00:01<00:01, 188.60it/s][A
Calculating viewed counts for every point:  61%|██████    | 279/459 [00:01<00:00, 183.15it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 298/459 [00:01<00:00, 183.42it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 317/459 [00:01<00:00, 182.65it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 338/459 [00:01<00:00, 188.52it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 357/459 [00:01<00:00, 184.30it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 376/459 [00:02<00:00, 179.58it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 394/459 [00:02<00:00, 173.30it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 412/459 [00:02<00:00, 174.16it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 432/459 [00:02<00:00, 178.96it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 451/459 [00:02<00:00, 180.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [02:06<00:04,  1.66s/it]detected_ratio_thres_value tensor(0.2200, device='cuda:0')
final masked points tensor(2528, device='cuda:0')
before filtering torch.Size([8, 167755])
after filtering torch.Size([2, 167755])
num_ins_points_after_filtering tensor([867, 176], device='cuda:0')
Working on scene0701_00 class backpack
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 35/102 [00:00<00:00, 348.55it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 73/102 [00:00<00:00, 362.09it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [02:07<00:02,  1.35s/it]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(505, device='cuda:0')
before filtering torch.Size([1, 73550])
after filtering torch.Size([1, 73550])
num_ins_points_after_filtering tensor([505], device='cuda:0')
Working on scene0702_00 class backpack
No 3d masks detected in backprojection!
Working on scene0704_00 class backpack
masks_to_be_merged [[2, 3], [5, 7, 9], [6, 8, 11]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/241 [00:00<00:01, 187.22it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/241 [00:00<00:01, 179.22it/s][A
Calculating viewed counts for every point:  23%|██▎       | 56/241 [00:00<00:01, 175.18it/s][A
Calculating viewed counts for every point:  31%|███       | 74/241 [00:00<00:00, 172.00it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/241 [00:00<00:00, 181.29it/s][A
Calculating viewed counts for every point:  48%|████▊     | 116/241 [00:00<00:00, 193.46it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 136/241 [00:00<00:00, 180.58it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 156/241 [00:00<00:00, 185.08it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 178/241 [00:00<00:00, 194.48it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 198/241 [00:01<00:00, 190.72it/s][A
Calculating viewed counts for every point:  90%|█████████ | 218/241 [00:01<00:00, 187.70it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 238/241 [00:01<00:00, 189.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [02:08<00:00,  1.11s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [02:08<00:00,  1.10it/s]
detected_ratio_thres_value tensor(0.0741, device='cuda:0')
final masked points tensor(1720, device='cuda:0')
before filtering torch.Size([3, 183029])
after filtering torch.Size([3, 183029])
num_ins_points_after_filtering tensor([626, 438, 281], device='cuda:0')
Processing class: backpack
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:00<00:19,  7.13it/s]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:52,  1.25it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:09,  2.00it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:47,  2.91it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:01<00:44,  3.08it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:39,  3.42it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:38,  3.47it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:02<00:32,  4.08it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:29,  4.45it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:27,  4.81it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:03<00:25,  5.14it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:03<00:22,  5.76it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:03<00:19,  6.44it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:03<00:19,  6.45it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:03<00:15,  7.83it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:04<00:15,  8.20it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:04<00:14,  8.21it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:04<00:14,  8.14it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:04<00:15,  7.61it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:04<00:14,  7.97it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:04<00:19,  6.04it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:05<00:23,  5.06it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:05<00:22,  5.22it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:05<00:22,  5.08it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:05<00:24,  4.73it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:06<00:27,  4.07it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:06<00:24,  4.51it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:06<00:23,  4.64it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:06<00:23,  4.64it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:07<00:24,  4.45it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:07<00:28,  3.74it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:07<00:29,  3.69it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:07<00:25,  4.20it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:07<00:21,  4.80it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:08<00:19,  5.39it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:08<00:19,  5.18it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:08<00:19,  5.11it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:08<00:17,  5.94it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:08<00:19,  5.04it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:09<00:22,  4.39it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:09<00:20,  4.68it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:09<00:17,  5.48it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:09<00:15,  6.10it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:09<00:14,  6.39it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:10<00:19,  4.73it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:10<00:22,  4.16it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:10<00:19,  4.73it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:10<00:15,  5.95it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:10<00:16,  5.54it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:11<00:18,  4.87it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:11<00:15,  5.46it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:11<00:14,  5.98it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:11<00:13,  6.41it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:11<00:14,  5.89it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:11<00:13,  6.06it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:12<00:15,  5.39it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:12<00:15,  5.27it/s]Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(102)]
DEBUG uniques tensor([102]) tensor([1])
Matched 1 times with 102
iou for matched labels tensor([0.3451])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(181)]
DEBUG uniques tensor([181]) tensor([1])
Matched 1 times with 181
iou for matched labels tensor([0.6164])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(29), tensor(37)]
DEBUG uniques tensor([29, 37]) tensor([1, 1])
Matched 1 times with 29
Matched 1 times with 37
iou for matched labels tensor([0.8017, 0.6372])
Matched labels: ['bag', 'bag']
Clip similarities: [0.84228515625, 0.84228515625]
DEBUG best_match_after_iou_check [tensor(6), tensor(47)]
DEBUG uniques tensor([ 6, 47]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 47
iou for matched labels tensor([0.7007, 0.6781])
Matched labels: ['bag', 'bag']
Clip similarities: [0.84228515625, 0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.5998])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.8319])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(22)]
DEBUG uniques tensor([22]) tensor([1])
Matched 1 times with 22
iou for matched labels tensor([0.7161])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(8)]
DEBUG uniques tensor([8]) tensor([1])
Matched 1 times with 8
iou for matched labels tensor([0.7024])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(15)]
DEBUG uniques tensor([15]) tensor([1])
Matched 1 times with 15
iou for matched labels tensor([0.4674])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
DEBUG best_match_after_iou_check [tensor(76)]
DEBUG uniques tensor([76]) tensor([1])
Matched 1 times with 76
iou for matched labels tensor([0.8270])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(36), tensor(335)]
DEBUG uniques tensor([ 36, 335]) tensor([1, 1])
Matched 1 times with 36
Matched 1 times with 335
iou for matched labels tensor([0.6432, 0.0674])
Matched labels: ['bag', 'bottle']
Clip similarities: [0.84228515625, 0.74365234375]
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.6884])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(11), tensor(72), tensor(6), tensor(197)]
DEBUG uniques tensor([  6,  11,  72, 197]) tensor([1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 11
Matched 1 times with 72
Matched 1 times with 197
iou for matched labels tensor([0.5059, 0.5064, 0.5235, 0.6043])
Matched labels: ['laundry_basket', 'bag', 'bag', 'bag']
Clip similarities: [0.671875, 0.84228515625, 0.84228515625, 0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(81)]
DEBUG uniques tensor([81]) tensor([1])
Matched 1 times with 81
iou for matched labels tensor([0.5528])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(52)]
DEBUG uniques tensor([52]) tensor([1])
Matched 1 times with 52
iou for matched labels tensor([0.2931])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(85)]
DEBUG uniques tensor([85]) tensor([1])
Matched 1 times with 85
iou for matched labels tensor([0.6498])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(12)]
DEBUG uniques tensor([12]) tensor([1])
Matched 1 times with 12
iou for matched labels tensor([0.7075])
Matched labels: ['paper_bag']
Clip similarities: [0.72509765625]
DEBUG best_match_after_iou_check [tensor(96), tensor(32)]
DEBUG uniques tensor([32, 96]) tensor([1, 1])
Matched 1 times with 32
Matched 1 times with 96
iou for matched labels tensor([0.0211, 0.4347])
Matched labels: ['shelf', 'pillow']
Clip similarities: [0.69384765625, 0.73828125]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(161)]
DEBUG uniques tensor([161]) tensor([1])
Matched 1 times with 161
iou for matched labels tensor([0.7671])
Matched labels: ['folded_chair']
Clip similarities: [0.64404296875]
DEBUG best_match_after_iou_check [tensor(93), tensor(97)]
DEBUG uniques tensor([93, 97]) tensor([1, 1])
Matched 1 times with 93
Matched 1 times with 97
iou for matched labels tensor([0.0441, 0.4923])
Matched labels: ['bed', 'folded_chair']
Clip similarities: [0.5947265625, 0.64404296875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(59)]
DEBUG uniques tensor([59]) tensor([1])
Matched 1 times with 59
iou for matched labels tensor([0.7380])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(27)]
DEBUG uniques tensor([27]) tensor([1])
Matched 1 times with 27
iou for matched labels tensor([0.5462])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(9)]
DEBUG uniques tensor([9]) tensor([1])
Matched 1 times with 9
iou for matched labels tensor([0.6274])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(108)]
DEBUG uniques tensor([108]) tensor([1])
Matched 1 times with 108
iou for matched labels tensor([0.6488])
Matched labels: ['couch']
Clip similarities: [0.67431640625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.5599])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(85), tensor(190), tensor(0), tensor(144)]
DEBUG uniques tensor([  0,  85, 144, 190]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 85
Matched 1 times with 144
Matched 1 times with 190
iou for matched labels tensor([0.5169, 0.4473, 0.0000, 0.1456])
Matched labels: ['shelf', 'bag', 'shoe', 'trash_can']
Clip similarities: [0.69384765625, 0.84228515625, 0.72216796875, 0.70263671875]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(2)]
DEBUG uniques tensor([2]) tensor([1])
Matched 1 times with 2
iou for matched labels tensor([0.5100])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(24)]
DEBUG uniques tensor([24]) tensor([1])
Matched 1 times with 24
iou for matched labels tensor([0.6515])
Matched labels: ['pipe']
Clip similarities: [0.64111328125]
DEBUG best_match_after_iou_check [tensor(128), tensor(48), tensor(142)]
DEBUG uniques tensor([ 48, 128, 142]) tensor([1, 1, 1])
Matched 1 times with 48
Matched 1 times with 128
Matched 1 times with 142
iou for matched labels tensor([0.8567, 0.4532, 0.3351])
Matched labels: ['folded_chair', 'bag', 'purse']
Clip similarities: [0.64404296875, 0.84228515625, 0.8251953125]
DEBUG best_match_after_iou_check [tensor(100)]
DEBUG uniques tensor([100]) tensor([1])
Matched 1 times with 100
iou for matched labels tensor([0.7577])
Matched labels: ['mat']
Clip similarities: [0.6552734375]
DEBUG best_match_after_iou_check [tensor(28), tensor(10), tensor(20)]
DEBUG uniques tensor([10, 20, 28]) tensor([1, 1, 1])
Matched 1 times with 10
Matched 1 times with 20
Matched 1 times with 28
iou for matched labels tensor([0.6425, 0.8839, 0.5435])
Matched labels: ['bag', 'bag', 'bag']
Clip similarities: Select thresholds for refinement:  44%|████▎     | 62/142 [00:12<00:18,  4.42it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:13<00:15,  5.10it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:13<00:16,  4.77it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:13<00:15,  4.81it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:13<00:14,  5.06it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:13<00:14,  5.15it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:14<00:15,  4.85it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:14<00:13,  5.15it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:14<00:11,  6.26it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:14<00:10,  6.57it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:14<00:10,  6.40it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:15<00:12,  5.39it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:15<00:12,  5.19it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:15<00:11,  5.74it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:15<00:10,  6.24it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:15<00:09,  6.66it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:15<00:09,  6.65it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:16<00:10,  5.79it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:16<00:09,  6.50it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:16<00:08,  6.52it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:16<00:08,  6.65it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:16<00:10,  5.59it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:16<00:08,  6.25it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:17<00:07,  6.79it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:17<00:08,  6.36it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:17<00:09,  5.72it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:17<00:09,  5.49it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:17<00:10,  4.91it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:18<00:09,  5.28it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:18<00:09,  4.91it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:18<00:10,  4.52it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:18<00:08,  5.13it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:19<00:09,  4.74it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:19<00:09,  4.46it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:19<00:10,  4.17it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:19<00:09,  4.25it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:20<00:09,  4.25it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:20<00:08,  4.43it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:20<00:07,  5.10it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:20<00:08,  4.59it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:20<00:06,  5.31it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:21<00:07,  4.50it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:21<00:06,  5.11it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:21<00:05,  5.57it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:21<00:07,  4.42it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:21<00:06,  4.76it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:22<00:06,  4.77it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:22<00:05,  5.26it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:22<00:06,  4.07it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:22<00:06,  4.15it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:23<00:06,  4.26it/s][0.84228515625, 0.84228515625, 0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(37), tensor(21), tensor(151)]
DEBUG uniques tensor([ 21,  37, 151]) tensor([1, 1, 1])
Matched 1 times with 21
Matched 1 times with 37
Matched 1 times with 151
iou for matched labels tensor([0.6521, 0.4463, 0.1482])
Matched labels: ['bag', 'crate', 'recycling_bin']
Clip similarities: [0.84228515625, 0.69873046875, 0.716796875]
DEBUG best_match_after_iou_check [tensor(83)]
DEBUG uniques tensor([83]) tensor([1])
Matched 1 times with 83
iou for matched labels tensor([0.2210])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(72)]
DEBUG uniques tensor([72]) tensor([1])
Matched 1 times with 72
iou for matched labels tensor([0.5081])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.2304])
Matched labels: ['office_chair']
Clip similarities: [0.70361328125]
DEBUG best_match_after_iou_check [tensor(135)]
DEBUG uniques tensor([135]) tensor([1])
Matched 1 times with 135
iou for matched labels tensor([0.6247])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(17), tensor(167)]
DEBUG uniques tensor([ 17, 167]) tensor([1, 1])
Matched 1 times with 17
Matched 1 times with 167
iou for matched labels tensor([0.8050, 0.6739])
Matched labels: ['bag', 'suitcase']
Clip similarities: [0.84228515625, 0.81591796875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(207)]
DEBUG uniques tensor([207]) tensor([1])
Matched 1 times with 207
iou for matched labels tensor([0.3762])
Matched labels: ['shower_wall']
Clip similarities: [0.5908203125]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(16), tensor(46), tensor(5), tensor(46)]
DEBUG uniques tensor([ 5, 16, 46]) tensor([1, 1, 2])
Matched 1 times with 5
Matched 1 times with 16
Matched 2 times with 46
Merge stage2 masks
iou for matched labels tensor([0.8447, 0.5577, 0.2622])
Matched labels: ['backpack', 'shelf', 'shelf']
Clip similarities: [0.9990234375, 0.69384765625, 0.69384765625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(22)]
DEBUG uniques tensor([22]) tensor([1])
Matched 1 times with 22
iou for matched labels tensor([0.4546])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(200)]
DEBUG uniques tensor([200]) tensor([1])
Matched 1 times with 200
iou for matched labels tensor([0.0607])
Matched labels: ['closet_wall']
Clip similarities: [0.6044921875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(61)]
DEBUG uniques tensor([61]) tensor([1])
Matched 1 times with 61
iou for matched labels tensor([0.4110])
Matched labels: ['paper_towel_dispenser']
Clip similarities: [0.57421875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(61)]
DEBUG uniques tensor([61]) tensor([1])
Matched 1 times with 61
iou for matched labels tensor([0.8055])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
DEBUG best_match_after_iou_check [tensor(36)]
DEBUG uniques tensor([36]) tensor([1])
Matched 1 times with 36
iou for matched labels tensor([0.6901])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
DEBUG best_match_after_iou_check [tensor(50)]
DEBUG uniques tensor([50]) tensor([1])
Matched 1 times with 50
iou for matched labels tensor([0.1917])
Matched labels: ['clothes']
Clip similarities: [0.7099609375]
DEBUG best_match_after_iou_check [tensor(43)]
DEBUG uniques tensor([43]) tensor([1])
Matched 1 times with 43
iou for matched labels tensor([0.2738])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(113)]
DEBUG uniques tensor([113]) tensor([1])
Matched 1 times with 113
iou for matched labels tensor([0.7644])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(100)]
DEBUG uniques tensor([100]) tensor([1])
Matched 1 times with 100
iou for matched labels tensor([0.4321])
Matched labels: ['bin']
Clip similarities: [0.66845703125]
DEBUG best_match_after_iou_check [tensor(46)]
DEBUG uniques tensor([46]) tensor([1])
Matched 1 times with 46
iou for matched labels tensor([0.6477])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(43)]
DEBUG uniques tensor([43]) tensor([1])
Matched 1 times with 43
iou for matched labels tensor([0.7050])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(18), tensor(142)]
DEBUG uniques tensor([ 18, 142]) tensor([1, 1])
Matched 1 times with 18
Matched 1 times with 142
iou for matched labels tensor([0.7308, 0.0328])
Matched labels: ['bag', 'file_cabinet']
Clip similarities: [0.84228515625, 0.67138671875]
DEBUG best_match_after_iou_check [tensor(19)]
DEBUG uniques tensor([19]) tensor([1])
Matched 1 times with 19
iou for matched labels tensor([0.8401])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(3), tensor(143)]
DEBUG uniques tensor([  3, 143]) tensor([1, 1])
Matched 1 times with 3
Matched 1 times with 143
iou for matched labels tensor([0.6683, 0.0123])
Matched labels: ['bag', 'laundry_basket']
Clip similarities: [0.84228515625, 0.671875]
DEBUG best_match_after_iou_check [tensor(71)]
DEBUG uniques tensor([71]) tensor([1])
Matched 1 times with 71
iou for matched labels tensor([0.7229])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(54)]
DEBUG uniques tensor([54]) tensor([1])
Matched 1 times with 54
iou for matched labels tensor([0.5642])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
DEBUG best_match_after_iou_check [tensor(72)]
DEBUG uniques tensor([72]) tensor([1])
Matched 1 times with 72
iou for matched labels tensor([0.8085])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(135)]
DEBUG uniques tensor([135]) tensor([1])
Matched 1 times with 135
iou for matched labels tensor([0.8292])
Matched labels: ['pillow']
Clip similarities: [0.73828125]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(19), tensor(14), tensor(117)]
DEBUG uniques tensor([ 14,  19, 117]) tensor([1, 1, 1])
Matched 1 times with 14
Matched 1 times with 19
Matched 1 times with 117
iou for matched labels tensor([0.3539, 0.4382, 0.0115])
Matched labels: ['chair', 'dumbbell', 'stair_rail']
Clip similarities: [0.7529296875, 0.6953125, 0.55908203125]
DEBUG best_match_after_iou_check [tensor(56)]
DEBUG uniques tensor([56]) tensor([1])
Matched 1 times with 56
iou for matched labels tensor([0.6095])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.6613])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(17), tensor(202), tensor(88)]
DEBUG uniques tensor([ 17,  88, 202]) tensor([1, 1, 1])
Matched 1 times with 17
Matched 1 times with 88
Matched 1 times with 202
iou for matched labels tensor([0.7797, 0.6126, 0.7283])
Matched labels: ['bag', 'bar', 'bag']
Clip similarities: [0.84228515625, 0.6357421875, 0.84228515625]
DEBUG best_match_after_iou_check [tensor(91)]
DEBUG uniques tensor([91]) tensor([1])
Matched 1 times with 91
iou for matched labels tensor([0.7630])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
DEBUG best_match_after_iou_check [tensor(84), tensor(24)]
DEBUG uniques tensor([24, 84]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 84
iou for matched labels tensor([0.6742, 0.6714])
Matched labels: ['backpack', 'backpack']
Clip similarities: [0.9990234375, 0.9990234375]
Select thresholds for refinement:  82%|████████▏ | 117/142 [00:23<00:05,  4.90it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:23<00:04,  5.25it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:23<00:05,  4.20it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:23<00:04,  5.00it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:24<00:03,  5.27it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:24<00:03,  5.83it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:24<00:03,  5.20it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:24<00:03,  5.68it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:24<00:03,  5.02it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:25<00:03,  4.85it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:25<00:02,  5.09it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:25<00:03,  3.83it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:25<00:02,  4.70it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:25<00:02,  4.71it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:26<00:01,  5.53it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:26<00:01,  5.80it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:26<00:01,  6.40it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:26<00:00,  8.15it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:26<00:00,  7.77it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:26<00:00,  6.45it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:27<00:00,  5.82it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:27<00:00,  4.92it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:27<00:00,  5.02it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:27<00:00,  5.70it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:27<00:00,  4.83it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:27<00:00,  5.08it/s]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(60)]
DEBUG uniques tensor([60]) tensor([1])
Matched 1 times with 60
iou for matched labels tensor([0.5157])
Matched labels: ['suitcase']
Clip similarities: [0.81591796875]
DEBUG best_match_after_iou_check [tensor(105), tensor(94)]
DEBUG uniques tensor([ 94, 105]) tensor([1, 1])
Matched 1 times with 94
Matched 1 times with 105
iou for matched labels tensor([0.6078, 0.1910])
Matched labels: ['bag', 'bag']
Clip similarities: [0.84228515625, 0.84228515625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(19), tensor(145)]
DEBUG uniques tensor([ 19, 145]) tensor([1, 1])
Matched 1 times with 19
Matched 1 times with 145
iou for matched labels tensor([0.6946, 0.5653])
Matched labels: ['bag', 'backpack']
Clip similarities: [0.84228515625, 0.9990234375]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.7554])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(9)]
DEBUG uniques tensor([9]) tensor([1])
Matched 1 times with 9
iou for matched labels tensor([0.4154])
Matched labels: ['bag']
Clip similarities: [0.84228515625]
DEBUG best_match_after_iou_check [tensor(8)]
DEBUG uniques tensor([8]) tensor([1])
Matched 1 times with 8
iou for matched labels tensor([0.6766])
Matched labels: ['coat_rack']
Clip similarities: [0.671875]
DEBUG best_match_after_iou_check [tensor(58), tensor(0)]
DEBUG uniques tensor([ 0, 58]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 58
iou for matched labels tensor([0.5663, 0.6959])
Matched labels: ['backpack', 'bag']
Clip similarities: [0.9990234375, 0.84228515625]
DEBUG best_match_after_iou_check [tensor(153), tensor(217), tensor(90), tensor(208), tensor(101)]
DEBUG uniques tensor([ 90, 101, 153, 208, 217]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 90
Matched 1 times with 101
Matched 1 times with 153
Matched 1 times with 208
Matched 1 times with 217
iou for matched labels tensor([0.6294, 0.1397, 0.0500, 0.5239, 0.5027])
Matched labels: ['bag', 'bin', 'person', 'bin', 'bin']
Clip similarities: [0.84228515625, 0.66845703125, 0.69140625, 0.66845703125, 0.66845703125]
DEBUG best_match_after_iou_check [tensor(119)]
DEBUG uniques tensor([119]) tensor([1])
Matched 1 times with 119
iou for matched labels tensor([0.7032])
Matched labels: ['bin']
Clip similarities: [0.66845703125]
DEBUG best_match_after_iou_check [tensor(54)]
DEBUG uniques tensor([54]) tensor([1])
Matched 1 times with 54
iou for matched labels tensor([0.5461])
Matched labels: ['fire_extinguisher']
Clip similarities: [0.66357421875]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(23), tensor(17), tensor(78)]
DEBUG uniques tensor([17, 23, 78]) tensor([1, 1, 1])
Matched 1 times with 17
Matched 1 times with 23
Matched 1 times with 78
iou for matched labels tensor([0.0732, 0.6417, 0.4272])
Matched labels: ['shoe', 'shoe', 'ball']
Clip similarities: [0.72216796875, 0.72216796875, 0.70947265625]
DEBUG best_match_after_iou_check [tensor(2), tensor(3), tensor(18)]
DEBUG uniques tensor([ 2,  3, 18]) tensor([1, 1, 1])
Matched 1 times with 2
Matched 1 times with 3
Matched 1 times with 18
iou for matched labels tensor([0.7826, 0.6365, 0.7023])
Matched labels: ['bag', 'bag', 'bag']
Clip similarities: [0.84228515625, 0.84228515625, 0.84228515625]
DEBUG best_match_after_iou_check [tensor(16), tensor(158)]
DEBUG uniques tensor([ 16, 158]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 158
iou for matched labels tensor([0.7862, 0.4061])
Matched labels: ['bag', 'blanket']
Clip similarities: [0.84228515625, 0.64453125]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.5658])
Matched labels: ['backpack']
Clip similarities: [0.9990234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(129), tensor(113), tensor(30)]
DEBUG uniques tensor([ 30, 113, 129]) tensor([1, 1, 1])
Matched 1 times with 30
Matched 1 times with 113
Matched 1 times with 129
iou for matched labels tensor([0.2122, 0.1806, 0.2017])
Matched labels: ['bin', 'bin', 'dustpan']
Clip similarities: [0.66845703125, 0.66845703125, 0.685546875]
Unique similarities: [0.55908203125, 0.57421875, 0.5908203125, 0.5947265625, 0.6044921875, 0.6357421875, 0.64111328125, 0.64404296875, 0.64453125, 0.6552734375, 0.66357421875, 0.66845703125, 0.67138671875, 0.671875, 0.67431640625, 0.685546875, 0.69140625, 0.69384765625, 0.6953125, 0.69873046875, 0.70263671875, 0.70361328125, 0.70947265625, 0.7099609375, 0.716796875, 0.72216796875, 0.72509765625, 0.73828125, 0.74365234375, 0.7529296875, 0.81591796875, 0.8251953125, 0.84228515625, 0.9990234375]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 101it [00:00, 1000.05it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 906.72it/s] 
DEBUG all ious []
DEBUG all ious tensor([0.3451])
USE STAGE 2 MASK tensor(0.3451)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6164])
USE STAGE 1 MASK tensor(0.6164)
DEBUG all ious tensor([0.8017, 0.6372])
USE STAGE 1 MASK tensor(0.8017)
USE STAGE 1 MASK tensor(0.6372)
DEBUG all ious tensor([0.7007, 0.6781])
USE STAGE 1 MASK tensor(0.7007)
USE STAGE 1 MASK tensor(0.6781)
DEBUG all ious []
DEBUG all ious tensor([0.5998])
USE STAGE 1 MASK tensor(0.5998)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8319])
USE STAGE 1 MASK tensor(0.8319)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.7161])
USE STAGE 1 MASK tensor(0.7161)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.7024])
USE STAGE 1 MASK tensor(0.7024)
DEBUG all ious tensor([0.4674])
USE STAGE 1 MASK tensor(0.4674)
DEBUG all ious tensor([0.8270])
USE STAGE 1 MASK tensor(0.8270)
DEBUG all ious []
DEBUG all ious tensor([0.6432, 0.0674])
USE STAGE 1 MASK tensor(0.6432)
USE STAGE 2 MASK tensor(0.0674)
DEBUG all ious tensor([0.6884])
USE STAGE 1 MASK tensor(0.6884)
DEBUG all ious tensor([0.5059, 0.5064, 0.5235, 0.6043])
USE STAGE 1 MASK tensor(0.5059)
USE STAGE 1 MASK tensor(0.5064)
USE STAGE 1 MASK tensor(0.5235)
USE STAGE 1 MASK tensor(0.6043)
DEBUG all ious []
DEBUG all ious tensor([0.5528])
USE STAGE 1 MASK tensor(0.5528)
DEBUG all ious tensor([0.2931])
USE STAGE 2 MASK tensor(0.2931)
DEBUG all ious tensor([0.6498])
USE STAGE 1 MASK tensor(0.6498)
DEBUG all ious tensor([0.7075])
USE STAGE 1 MASK tensor(0.7075)
DEBUG all ious tensor([0.0211, 0.4347])
USE STAGE 2 MASK tensor(0.0211)
USE STAGE 2 MASK tensor(0.4347)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.7671])
USE STAGE 1 MASK tensor(0.7671)
DEBUG all ious tensor([0.0441, 0.4923])
USE STAGE 2 MASK tensor(0.0441)
USE STAGE 1 MASK tensor(0.4923)
DEBUG all ious []
DEBUG all ious tensor([0.7380])
USE STAGE 1 MASK tensor(0.7380)
DEBUG all ious tensor([0.5462])
USE STAGE 1 MASK tensor(0.5462)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6274])
USE STAGE 1 MASK tensor(0.6274)
DEBUG all ious tensor([0.6488])
USE STAGE 1 MASK tensor(0.6488)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5599])
USE STAGE 1 MASK tensor(0.5599)
DEBUG all ious tensor([0.5169, 0.4473, 0.0000, 0.1456])
USE STAGE 1 MASK tensor(0.5169)
USE STAGE 2 MASK tensor(0.4473)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.1456)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5100])
USE STAGE 1 MASK tensor(0.5100)
DEBUG all ious tensor([0.6515])
USE STAGE 1 MASK tensor(0.6515)
DEBUG all ious tensor([0.8567, 0.4532, 0.3351])
USE STAGE 1 MASK tensor(0.8567)
USE STAGE 1 MASK tensor(0.4532)
USE STAGE 2 MASK tensor(0.3351)
DEBUG all ious tensor([0.7577])
USE STAGE 1 MASK tensor(0.7577)
DEBUG all ious tensor([0.6425, 0.8839, 0.5435])
USE STAGE 1 MASK tensor(0.6425)
USE STAGE 1 MASK tensor(0.8839)
USE STAGE 1 MASK tensor(0.5435)
DEBUG all ious []
DEBUG all ious tensor([0.6521, 0.4463, 0.1482])
USE STAGE 1 MASK tensor(0.6521)
USE STAGE 2 MASK tensor(0.4463)
USE STAGE 2 MASK tensor(0.1482)
DEBUG all ious tensor([0.2210])
USE STAGE 2 MASK tensor(0.2210)
DEBUG all ious []
DEBUG all ious tensor([0.5081])
USE STAGE 1 MASK tensor(0.5081)
DEBUG all ious tensor([0.2304])
USE STAGE 2 MASK tensor(0.2304)
DEBUG all ious tensor([0.6247])
USE STAGE 1 MASK tensor(0.6247)
DEBUG all ious []
DEBUG all ious tensor([0.8050, 0.6739])
USE STAGE 1 MASK tensor(0.8050)
USE STAGE 1 MASK tensor(0.6739)
DEBUG all ious []
DEBUG all ious tensor([0.3762])
USE STAGE 2 MASK tensor(0.3762)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8447, 0.5577, 0.2622])
USE STAGE 1 MASK tensor(0.8447)
USE STAGE 1 MASK tensor(0.5577)
USE STAGE 2 MASK tensor(0.2622)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.4546])
USE STAGE 1 MASK tensor(0.4546)
DEBUG all ious []
DEBUG all ious tensor([0.0607])
USE STAGE 2 MASK tensor(0.0607)
DEBUG all ious []
DEBUG all ious tensor([0.4110])
USE STAGE 2 MASK tensor(0.4110)
DEBUG all ious []
DEBUG all ious tensor([0.8055])
USE STAGE 1 MASK tensor(0.8055)
DEBUG all ious tensor([0.6901])
USE STAGE 1 MASK tensor(0.6901)
DEBUG all ious tensor([0.1917])
USE STAGE 2 MASK tensor(0.1917)
DEBUG all ious tensor([0.2738])
USE STAGE 2 MASK tensor(0.2738)
DEBUG all ious tensor([0.7644])
USE STAGE 1 MASK tensor(0.7644)
DEBUG all ious []
DEBUG all ious tensor([0.4321])
USE STAGE 2 MASK tensor(0.4321)
DEBUG all ious tensor([0.6477])
USE STAGE 1 MASK tensor(0.6477)
DEBUG all ious tensor([0.7050])
USE STAGE 1 MASK tensor(0.7050)
DEBUG all ious []
DEBUG all ious tensor([0.7308, 0.0328])
USE STAGE 1 MASK tensor(0.7308)
USE STAGE 2 MASK tensor(0.0328)
DEBUG all ious tensor([0.8401])
USE STAGE 1 MASK tensor(0.8401)
DEBUG all ious tensor([0.6683, 0.0123])
USE STAGE 1 MASK tensor(0.6683)
USE STAGE 2 MASK tensor(0.0123)
DEBUG all ious tensor([0.7229])
USE STAGE 1 MASK tensor(0.7229)
DEBUG all ious tensor([0.5642])
USE STAGE 1 MASK tensor(0.5642)
DEBUG all ious tensor([0.8085])
USE STAGE 1 MASK tensor(0.8085)
DEBUG all ious []
DEBUG all ious tensor([0.8292])
USE STAGE 1 MASK tensor(0.8292)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.3539, 0.4382, 0.0115])
USE STAGE 2 MASK tensor(0.3539)
USE STAGE 2 MASK tensor(0.4382)
USE STAGE 2 MASK tensor(0.0115)
DEBUG all ious tensor([0.6095])
USE STAGE 1 MASK tensor(0.6095)
DEBUG all ious tensor([0.6613])
USE STAGE 1 MASK tensor(0.6613)
DEBUG all ious []
DEBUG all ious tensor([0.7797, 0.6126, 0.7283])
USE STAGE 1 MASK tensor(0.7797)
USE STAGE 1 MASK tensor(0.6126)
USE STAGE 1 MASK tensor(0.7283)
DEBUG all ious tensor([0.7630])
USE STAGE 1 MASK tensor(0.7630)
DEBUG all ious tensor([0.6742, 0.6714])
USE STAGE 1 MASK tensor(0.6742)
USE STAGE 1 MASK tensor(0.6714)
DEBUG all ious []
DEBUG all ious tensor([0.5157])
USE STAGE 1 MASK tensor(0.5157)
DEBUG all ious tensor([0.6078, 0.1910])
USE STAGE 1 MASK tensor(0.6078)
USE STAGE 2 MASK tensor(0.1910)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6946, 0.5653])
USE STAGE 1 MASK tensor(0.6946)
USE STAGE 1 MASK tensor(0.5653)
DEBUG all ious tensor([0.7554])
USE STAGE 1 MASK tensor(0.7554)
DEBUG all ious tensor([0.4154])
USE STAGE 2 MASK tensor(0.4154)
DEBUG all ious tensor([0.6766])
USE STAGE 1 MASK tensor(0.6766)
DEBUG all ious tensor([0.5663, 0.6959])
USE STAGE 1 MASK tensor(0.5663)
USE STAGE 1 MASK tensor(0.6959)
DEBUG all ious tensor([0.6294, 0.1397, 0.0500, 0.5239, 0.5027])
USE STAGE 1 MASK tensor(0.6294)
USE STAGE 2 MASK tensor(0.1397)
USE STAGE 2 MASK tensor(0.0500)
USE STAGE 1 MASK tensor(0.5239)
USE STAGE 1 MASK tensor(0.5027)
DEBUG all ious tensor([0.7032])
USE STAGE 1 MASK tensor(0.7032)
DEBUG all ious tensor([0.5461])
USE STAGE 1 MASK tensor(0.5461)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.0732, 0.6417, 0.4272])
USE STAGE 2 MASK tensor(0.0732)
USE STAGE 1 MASK tensor(0.6417)
USE STAGE 2 MASK tensor(0.4272)
DEBUG all ious tensor([0.7826, 0.6365, 0.7023])
USE STAGE 1 MASK tensor(0.7826)
USE STAGE 1 MASK tensor(0.6365)
USE STAGE 1 MASK tensor(0.7023)
DEBUG all ious tensor([0.7862, 0.4061])
USE STAGE 1 MASK tensor(0.7862)
USE STAGE 2 MASK tensor(0.4061)
DEBUG all ious tensor([0.5658])
USE STAGE 1 MASK tensor(0.5658)
DEBUG all ious []
DEBUG all ious tensor([0.2122, 0.1806, 0.2017])
USE STAGE 2 MASK tensor(0.2122)
USE STAGE 2 MASK tensor(0.1806)
USE STAGE 2 MASK tensor(0.2017)
Evaluating class backpack...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class backpack...:   1%|▏         | 2/142 [00:00<00:09, 14.43it/s]Evaluating class backpack...:   4%|▎         | 5/142 [00:00<00:09, 15.21it/s]Evaluating class backpack...:   5%|▍         | 7/142 [00:00<00:08, 15.38it/s]Evaluating class backpack...:   7%|▋         | 10/142 [00:00<00:07, 18.28it/s]Evaluating class backpack...:   9%|▉         | 13/142 [00:00<00:06, 19.73it/s]Evaluating class backpack...:  11%|█▏        | 16/142 [00:00<00:05, 21.13it/s]Evaluating class backpack...:  13%|█▎        | 19/142 [00:00<00:05, 22.25it/s]Evaluating class backpack...:  16%|█▌        | 23/142 [00:01<00:04, 24.91it/s]Evaluating class backpack...:  18%|█▊        | 26/142 [00:01<00:04, 23.78it/s]Evaluating class backpack...:  20%|██        | 29/142 [00:01<00:05, 19.06it/s]Evaluating class backpack...:  23%|██▎       | 32/142 [00:01<00:06, 15.85it/s]Evaluating class backpack...:  24%|██▍       | 34/142 [00:01<00:08, 13.18it/s]Evaluating class backpack...:  25%|██▌       | 36/142 [00:02<00:08, 13.15it/s]Evaluating class backpack...:  27%|██▋       | 39/142 [00:02<00:06, 15.41it/s]Evaluating class backpack...:  30%|███       | 43/142 [00:02<00:05, 17.64it/s]Evaluating class backpack...:  32%|███▏      | 45/142 [00:02<00:06, 15.96it/s]Evaluating class backpack...:  34%|███▍      | 48/142 [00:02<00:05, 16.96it/s]Evaluating class backpack...:  35%|███▌      | 50/142 [00:02<00:05, 17.07it/s]Evaluating class backpack...:  37%|███▋      | 53/142 [00:02<00:04, 18.88it/s]Evaluating class backpack...:  39%|███▊      | 55/142 [00:03<00:04, 18.95it/s]Evaluating class backpack...:  41%|████      | 58/142 [00:03<00:03, 21.05it/s]Evaluating class backpack...:  43%|████▎     | 61/142 [00:03<00:03, 22.52it/s]Evaluating class backpack...:  45%|████▌     | 64/142 [00:03<00:03, 22.17it/s]Evaluating class backpack...:  47%|████▋     | 67/142 [00:03<00:03, 22.42it/s]Evaluating class backpack...:  50%|█████     | 71/142 [00:03<00:03, 22.78it/s]Evaluating class backpack...:  53%|█████▎    | 75/142 [00:03<00:02, 23.08it/s]Evaluating class backpack...:  55%|█████▍    | 78/142 [00:04<00:02, 22.64it/s]Evaluating class backpack...:  57%|█████▋    | 81/142 [00:04<00:02, 21.23it/s]Evaluating class backpack...:  60%|█████▉    | 85/142 [00:04<00:02, 23.48it/s]Evaluating class backpack...:  62%|██████▏   | 88/142 [00:04<00:02, 22.63it/s]Evaluating class backpack...:  64%|██████▍   | 91/142 [00:04<00:02, 23.88it/s]Evaluating class backpack...:  66%|██████▌   | 94/142 [00:04<00:02, 22.76it/s]Evaluating class backpack...:  68%|██████▊   | 97/142 [00:04<00:02, 22.01it/s]Evaluating class backpack...:  70%|███████   | 100/142 [00:05<00:02, 18.38it/s]Evaluating class backpack...:  73%|███████▎  | 103/142 [00:05<00:02, 18.35it/s]Evaluating class backpack...:  75%|███████▍  | 106/142 [00:05<00:01, 19.84it/s]Evaluating class backpack...:  77%|███████▋  | 109/142 [00:05<00:01, 16.68it/s]Evaluating class backpack...:  78%|███████▊  | 111/142 [00:05<00:02, 15.22it/s]Evaluating class backpack...:  80%|███████▉  | 113/142 [00:05<00:01, 15.29it/s]Evaluating class backpack...:  81%|████████  | 115/142 [00:06<00:01, 14.21it/s]Evaluating class backpack...:  83%|████████▎ | 118/142 [00:06<00:01, 16.81it/s]Evaluating class backpack...:  85%|████████▍ | 120/142 [00:06<00:01, 16.22it/s]Evaluating class backpack...:  87%|████████▋ | 123/142 [00:06<00:01, 18.22it/s]Evaluating class backpack...:  89%|████████▊ | 126/142 [00:06<00:00, 19.00it/s]Evaluating class backpack...:  90%|█████████ | 128/142 [00:06<00:00, 15.37it/s]Evaluating class backpack...:  92%|█████████▏| 131/142 [00:07<00:00, 17.79it/s]Evaluating class backpack...:  95%|█████████▌| 135/142 [00:07<00:00, 21.32it/s]Evaluating class backpack...:  97%|█████████▋| 138/142 [00:07<00:00, 19.30it/s]Evaluating class backpack...: 100%|██████████| 142/142 [00:07<00:00, 20.63it/s]Evaluating class backpack...: 100%|██████████| 142/142 [00:07<00:00, 18.94it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 11%|█         | 15/142 [00:00<00:01, 119.91it/s] 23%|██▎       | 33/142 [00:00<00:00, 150.30it/s] 37%|███▋      | 53/142 [00:00<00:00, 169.96it/s] 56%|█████▋    | 80/142 [00:00<00:00, 207.24it/s] 74%|███████▍  | 105/142 [00:00<00:00, 217.89it/s] 89%|████████▉ | 127/142 [00:00<00:00, 204.66it/s]100%|██████████| 142/142 [00:00<00:00, 199.00it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.006   0.007   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.000   0.000   0.000
Novel AP       :   0.003   0.004   0.004
------------------------------------------------
AP             :   0.002   0.003   0.003
################################################

DEBUG avg value {'ap': 0.38632711261949404, 'ap50%': 0.44158546968120327, 'ap25%': 0.4645063241494264, 'rc': 0.6863799283154122, 'rc50%': 0.7741935483870968, 'rc25%': 0.8064516129032258}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  20%|██        | 2/10 [15:09<54:07, 405.90s/it]  Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], [38, 39], [42, 43], [51, 52], [53, 54, 55]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 135.13it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/238 [00:00<00:01, 147.60it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/238 [00:00<00:01, 152.71it/s][A
Calculating viewed counts for every point:  26%|██▌       | 62/238 [00:00<00:01, 155.46it/s][A
Calculating viewed counts for every point:  33%|███▎      | 78/238 [00:00<00:01, 149.60it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/238 [00:00<00:01, 137.10it/s][A
Calculating viewed counts for every point:  45%|████▌     | 108/238 [00:00<00:00, 135.42it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 122/238 [00:00<00:00, 133.22it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 137/238 [00:00<00:00, 135.79it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 153/238 [00:01<00:00, 140.61it/s][A
Calculating viewed counts for every point:  71%|███████   | 168/238 [00:01<00:00, 133.96it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/238 [00:01<00:00, 137.89it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 197/238 [00:01<00:00, 130.03it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 211/238 [00:01<00:00, 121.31it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 226/238 [00:01<00:00, 126.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:05<12:01,  5.12s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(8785, device='cuda:0')
before filtering torch.Size([5, 237360])
after filtering torch.Size([3, 237360])
num_ins_points_after_filtering tensor([5687, 1564,  588], device='cuda:0')
Working on scene0015_00 class shower wall
masks_to_be_merged [[1, 2]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/198 [00:00<00:00, 179.93it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/198 [00:00<00:01, 159.52it/s][A
Calculating viewed counts for every point:  29%|██▉       | 57/198 [00:00<00:00, 172.21it/s][A
Calculating viewed counts for every point:  38%|███▊      | 76/198 [00:00<00:00, 178.58it/s][A
Calculating viewed counts for every point:  47%|████▋     | 94/198 [00:00<00:00, 166.41it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 111/198 [00:00<00:00, 167.27it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 130/198 [00:00<00:00, 172.53it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 149/198 [00:00<00:00, 176.93it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

Calculating viewed counts for every point:  84%|████████▍ | 167/198 [00:00<00:00, 173.44it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 187/198 [00:01<00:00, 180.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:06<06:32,  2.81s/it]detected_ratio_thres_value tensor(0.0476, device='cuda:0')
final masked points tensor(6472, device='cuda:0')
before filtering torch.Size([1, 217086])
after filtering torch.Size([1, 217086])
num_ins_points_after_filtering tensor([4915], device='cuda:0')
Working on scene0019_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 17], [4, 5, 6, 7, 8, 9, 10, 12], [11, 13, 14]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  47%|████▋     | 27/58 [00:00<00:00, 265.12it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 54/58 [00:00<00:00, 242.79it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:06<03:59,  1.72s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(23102, device='cuda:0')
before filtering torch.Size([3, 136769])
after filtering torch.Size([3, 136769])
num_ins_points_after_filtering tensor([ 6487, 12437,  3552], device='cuda:0')
Working on scene0025_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [12, 13, 14, 15, 16, 17], [29, 30, 31, 32, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/195 [00:00<00:01, 142.20it/s][A
Calculating viewed counts for every point:  16%|█▋        | 32/195 [00:00<00:01, 157.83it/s][A
Calculating viewed counts for every point:  26%|██▌       | 50/195 [00:00<00:00, 167.46it/s][A
Calculating viewed counts for every point:  34%|███▍      | 67/195 [00:00<00:00, 166.85it/s][A
Calculating viewed counts for every point:  44%|████▎     | 85/195 [00:00<00:00, 168.86it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 102/195 [00:00<00:00, 157.95it/s][A
Calculating viewed counts for every point:  61%|██████    | 118/195 [00:00<00:00, 157.77it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 134/195 [00:00<00:00, 157.36it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 150/195 [00:00<00:00, 157.91it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 166/195 [00:01<00:00, 152.31it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 183/195 [00:01<00:00, 156.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:08<04:00,  1.74s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(7676, device='cuda:0')
before filtering torch.Size([3, 173392])
after filtering torch.Size([1, 173392])
num_ins_points_after_filtering tensor([5290], device='cuda:0')
Working on scene0030_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0046_00 class shower wall
masks_to_be_merged [[0, 1, 2, 5, 6, 7, 8], [4, 81], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 56, 57, 58, 59, 60], [49, 51, 52, 54, 55], [61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], [65, 66, 67]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 15/249 [00:00<00:01, 141.99it/s][A
Calculating viewed counts for every point:  13%|█▎        | 32/249 [00:00<00:01, 156.38it/s][A
Calculating viewed counts for every point:  20%|█▉        | 49/249 [00:00<00:01, 159.80it/s][A
Calculating viewed counts for every point:  27%|██▋       | 66/249 [00:00<00:01, 159.83it/s][A
Calculating viewed counts for every point:  33%|███▎      | 82/249 [00:00<00:01, 156.18it/s][A
Calculating viewed counts for every point:  39%|███▉      | 98/249 [00:00<00:00, 156.67it/s][A
Calculating viewed counts for every point:  46%|████▌     | 115/249 [00:00<00:00, 159.32it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 131/249 [00:00<00:00, 151.48it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 148/249 [00:00<00:00, 155.93it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 164/249 [00:01<00:00, 157.05it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 181/249 [00:01<00:00, 158.29it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 199/249 [00:01<00:00, 163.47it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 218/249 [00:01<00:00, 168.79it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 235/249 [00:01<00:00, 167.98it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:11<03:37,  1.60s/it]detected_ratio_thres_value tensor(0.2286, device='cuda:0')
final masked points tensor(27902, device='cuda:0')
before filtering torch.Size([7, 186857])
after filtering torch.Size([3, 186857])
num_ins_points_after_filtering tensor([ 7915, 10584,  2973], device='cuda:0')
Working on scene0050_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [22, 23], [24, 25, 26, 27, 28, 29], [30, 31, 32, 33], [35, 36, 37, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 198.69it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 199.31it/s][A
Calculating viewed counts for every point:  13%|█▎        | 60/466 [00:00<00:02, 193.86it/s][A
Calculating viewed counts for every point:  17%|█▋        | 81/466 [00:00<00:01, 197.76it/s][A
Calculating viewed counts for every point:  22%|██▏       | 102/466 [00:00<00:01, 200.50it/s][A
Calculating viewed counts for every point:  27%|██▋       | 124/466 [00:00<00:01, 204.84it/s][A
Calculating viewed counts for every point:  31%|███       | 145/466 [00:00<00:01, 194.01it/s][A
Calculating viewed counts for every point:  36%|███▌      | 168/466 [00:00<00:01, 202.25it/s][A
Calculating viewed counts for every point:  41%|████      | 189/466 [00:00<00:01, 190.14it/s][A
Calculating viewed counts for every point:  45%|████▌     | 210/466 [00:01<00:01, 193.18it/s][A
Calculating viewed counts for every point:  49%|████▉     | 230/466 [00:01<00:01, 188.85it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 249/466 [00:01<00:01, 187.99it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 271/466 [00:01<00:00, 195.00it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 292/466 [00:01<00:00, 198.45it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 312/466 [00:01<00:00, 197.65it/s][A
Calculating viewed counts for every point:  71%|███████   | 332/466 [00:01<00:00, 197.52it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 353/466 [00:01<00:00, 199.65it/s][A
Calculating viewed counts for every point:  80%|████████  | 374/466 [00:01<00:00, 202.09it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 395/466 [00:02<00:00, 199.43it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 415/466 [00:02<00:00, 191.71it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 435/466 [00:02<00:00, 193.48it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 456/466 [00:02<00:00, 197.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:14<04:31,  2.01s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(23549, device='cuda:0')
before filtering torch.Size([6, 211406])
after filtering torch.Size([5, 211406])
num_ins_points_after_filtering tensor([2744, 4323, 4611, 5087, 1779], device='cuda:0')
Working on scene0063_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▏     | 35/84 [00:00<00:00, 348.03it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 71/84 [00:00<00:00, 351.09it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:15<03:37,  1.62s/it]detected_ratio_thres_value tensor(0.5333, device='cuda:0')
final masked points tensor(2548, device='cuda:0')
before filtering torch.Size([1, 76966])
after filtering torch.Size([1, 76966])
num_ins_points_after_filtering tensor([2548], device='cuda:0')
Working on scene0064_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0077_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  51%|█████     | 31/61 [00:00<00:00, 304.09it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:15<02:10,  1.01it/s]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(2734, device='cuda:0')
before filtering torch.Size([1, 92807])
after filtering torch.Size([1, 92807])
num_ins_points_after_filtering tensor([2734], device='cuda:0')
Working on scene0081_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0084_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 115], [8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 114, 116, 117, 118], [66, 67, 68, 69, 70, 71, 72, 98, 99, 100, 101, 102, 103, 104, 105], [74, 75, 76, 77, 78], [79, 80, 81, 82], [83, 84, 85, 86, 87, 88, 89, 90], [91, 92, 93, 94]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 231.32it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/198 [00:00<00:00, 233.23it/s][A
Calculating viewed counts for every point:  36%|███▋      | 72/198 [00:00<00:00, 219.74it/s][A
Calculating viewed counts for every point:  48%|████▊     | 95/198 [00:00<00:00, 201.56it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 116/198 [00:00<00:00, 200.45it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 137/198 [00:00<00:00, 201.63it/s][A
Calculating viewed counts for every point:  80%|████████  | 159/198 [00:00<00:00, 205.55it/s][A
Calculating viewed counts for every point:  91%|█████████ | 180/198 [00:00<00:00, 200.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:18<02:40,  1.24s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(33521, device='cuda:0')
before filtering torch.Size([8, 116845])
after filtering torch.Size([5, 116845])
num_ins_points_after_filtering tensor([17985,  1582,  2656,  5645,  3234], device='cuda:0')
Working on scene0086_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 27], [12, 13, 14, 15, 16, 17, 18], [19, 48, 49, 50, 51, 52], [28, 29, 53, 54, 55, 56], [30, 31], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/143 [00:00<00:00, 205.25it/s][A
Calculating viewed counts for every point:  29%|██▉       | 42/143 [00:00<00:00, 200.75it/s][A
Calculating viewed counts for every point:  44%|████▍     | 63/143 [00:00<00:00, 199.72it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 83/143 [00:00<00:00, 193.57it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 103/143 [00:00<00:00, 193.44it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 123/143 [00:00<00:00, 191.24it/s][A
Calculating viewed counts for every point: 100%|██████████| 143/143 [00:00<00:00, 186.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:20<02:56,  1.36s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(28421, device='cuda:0')
before filtering torch.Size([6, 124572])
after filtering torch.Size([4, 124572])
num_ins_points_after_filtering tensor([ 8742,  2637,  2773, 11976], device='cuda:0')
Working on scene0088_00 class shower wall
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 16/110 [00:00<00:00, 149.86it/s][A
Calculating viewed counts for every point:  33%|███▎      | 36/110 [00:00<00:00, 177.16it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 60/110 [00:00<00:00, 201.93it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 81/110 [00:00<00:00, 196.77it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 101/110 [00:00<00:00, 189.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [00:21<02:34,  1.20s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1811, device='cuda:0')
before filtering torch.Size([1, 166872])
after filtering torch.Size([1, 166872])
num_ins_points_after_filtering tensor([1811], device='cuda:0')
Working on scene0095_00 class shower wall
masks_to_be_merged [[0, 1], [3, 4, 5], [6, 7, 8], [9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/166 [00:00<00:00, 162.80it/s][A
Calculating viewed counts for every point:  20%|██        | 34/166 [00:00<00:00, 162.78it/s][A
Calculating viewed counts for every point:  33%|███▎      | 54/166 [00:00<00:00, 177.04it/s][A
Calculating viewed counts for every point:  43%|████▎     | 72/166 [00:00<00:00, 175.96it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 91/166 [00:00<00:00, 177.95it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 109/166 [00:00<00:00, 175.04it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 127/166 [00:00<00:00, 173.33it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 146/166 [00:00<00:00, 173.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:23<02:47,  1.32s/it]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(9349, device='cuda:0')
before filtering torch.Size([4, 214895])
after filtering torch.Size([3, 214895])
num_ins_points_after_filtering tensor([1894,  483, 6328], device='cuda:0')
Working on scene0100_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/102 [00:00<00:00, 249.85it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 58/102 [00:00<00:00, 286.38it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 88/102 [00:00<00:00, 289.18it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:23<02:21,  1.12s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(6137, device='cuda:0')
before filtering torch.Size([2, 52304])
after filtering torch.Size([1, 52304])
num_ins_points_after_filtering tensor([5609], device='cuda:0')
Working on scene0131_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0139_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 61, 62], [5, 6], [9, 10, 12], [11, 15, 21], [13, 14, 16, 18], [19, 20, 22], [55, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 37/136 [00:00<00:00, 360.04it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 74/136 [00:00<00:00, 328.97it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 122/136 [00:00<00:00, 392.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:24<01:41,  1.22it/s]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(14581, device='cuda:0')
before filtering torch.Size([7, 72007])
after filtering torch.Size([7, 72007])
num_ins_points_after_filtering tensor([3052,  982, 1828,  726, 3988,  724, 2334], device='cuda:0')
Working on scene0144_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3], [6, 7], [9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/144 [00:00<00:00, 207.34it/s][A
Calculating viewed counts for every point:  33%|███▎      | 47/144 [00:00<00:00, 232.61it/s][A
Calculating viewed counts for every point:  49%|████▉     | 71/144 [00:00<00:00, 231.62it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 95/144 [00:00<00:00, 226.64it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 122/144 [00:00<00:00, 240.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:25<01:41,  1.22it/s]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(4804, device='cuda:0')
before filtering torch.Size([3, 126879])
after filtering torch.Size([3, 126879])
num_ins_points_after_filtering tensor([3111, 1378,   51], device='cuda:0')
Working on scene0146_00 class shower wall
masks_to_be_merged [[0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 106, 107], [1, 5, 6, 7, 105], [28, 29, 30, 31], [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 58], [49, 51, 53, 54, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 89, 91, 93, 94, 95, 96, 100], [66, 69, 71, 81, 82, 83, 84, 86, 87, 88, 90, 92, 97, 98, 99, 101, 102, 103, 104]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 32/141 [00:00<00:00, 318.73it/s][A
Calculating viewed counts for every point:  50%|█████     | 71/141 [00:00<00:00, 356.18it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 107/141 [00:00<00:00, 352.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:27<02:13,  1.09s/it]detected_ratio_thres_value tensor(0.2973, device='cuda:0')
final masked points tensor(14618, device='cuda:0')
before filtering torch.Size([6, 60438])
after filtering torch.Size([3, 60438])
num_ins_points_after_filtering tensor([3466, 3802, 3650], device='cuda:0')
Working on scene0149_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 17, 18, 19, 20], [7, 9], [11, 12], [21, 22]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/141 [00:00<00:00, 230.10it/s][A
Calculating viewed counts for every point:  34%|███▍      | 48/141 [00:00<00:00, 211.23it/s][A
Calculating viewed counts for every point:  51%|█████     | 72/141 [00:00<00:00, 221.78it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 97/141 [00:00<00:00, 225.42it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 121/141 [00:00<00:00, 229.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:28<02:13,  1.10s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(6095, device='cuda:0')
before filtering torch.Size([4, 162396])
after filtering torch.Size([2, 162396])
num_ins_points_after_filtering tensor([2866, 1593], device='cuda:0')
Working on scene0153_00 class shower wall
masks_to_be_merged [[0, 1, 21, 22, 23, 24, 25, 26], [2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 35/59 [00:00<00:00, 346.41it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:28<01:54,  1.05it/s]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(14442, device='cuda:0')
before filtering torch.Size([3, 47709])
after filtering torch.Size([2, 47709])
num_ins_points_after_filtering tensor([4421, 9844], device='cuda:0')
Working on scene0164_00 class shower wall
masks_to_be_merged [[0, 1], [2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [30, 31, 32, 33, 48]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/189 [00:00<00:00, 326.66it/s][A
Calculating viewed counts for every point:  35%|███▍      | 66/189 [00:00<00:00, 313.71it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 99/189 [00:00<00:00, 319.38it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 131/189 [00:00<00:00, 285.00it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 165/189 [00:00<00:00, 300.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:30<02:00,  1.01s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(3578, device='cuda:0')
before filtering torch.Size([4, 94315])
after filtering torch.Size([1, 94315])
num_ins_points_after_filtering tensor([3342], device='cuda:0')
Working on scene0169_00 class shower wall
masks_to_be_merged [[0, 19], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 14/204 [00:00<00:01, 134.66it/s][A
Calculating viewed counts for every point:  14%|█▍        | 29/204 [00:00<00:01, 142.66it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/204 [00:00<00:01, 132.11it/s][A
Calculating viewed counts for every point:  28%|██▊       | 58/204 [00:00<00:01, 130.48it/s][A
Calculating viewed counts for every point:  35%|███▌      | 72/204 [00:00<00:01, 131.79it/s][A
Calculating viewed counts for every point:  42%|████▏     | 86/204 [00:00<00:00, 132.88it/s][A
Calculating viewed counts for every point:  49%|████▉     | 100/204 [00:00<00:00, 129.28it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 114/204 [00:00<00:00, 130.19it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 128/204 [00:00<00:00, 130.08it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 142/204 [00:01<00:00, 126.53it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 156/204 [00:01<00:00, 128.19it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 169/204 [00:01<00:00, 122.88it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 182/204 [00:01<00:00, 124.07it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 196/204 [00:01<00:00, 126.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:31<02:29,  1.27s/it]Projecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:32<01:48,  1.07it/s]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(10984, device='cuda:0')
before filtering torch.Size([3, 239354])
after filtering torch.Size([2, 239354])
num_ins_points_after_filtering tensor([9642, 1262], device='cuda:0')
Working on scene0187_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0193_00 class shower wall
masks_to_be_merged [[2, 3, 4, 5, 6, 7], [8, 9, 10, 11], [12, 13]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/72 [00:00<00:00, 174.31it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 41/72 [00:00<00:00, 203.99it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 62/72 [00:00<00:00, 198.73it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [00:32<01:38,  1.17it/s]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(7859, device='cuda:0')
before filtering torch.Size([3, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([4287, 2180], device='cuda:0')
Working on scene0196_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 24/192 [00:00<00:00, 230.68it/s][A
Calculating viewed counts for every point:  25%|██▌       | 48/192 [00:00<00:00, 223.49it/s][A
Calculating viewed counts for every point:  37%|███▋      | 71/192 [00:00<00:00, 223.41it/s][A
Calculating viewed counts for every point:  49%|████▉     | 94/192 [00:00<00:00, 216.40it/s][A
Calculating viewed counts for every point:  60%|██████    | 116/192 [00:00<00:00, 215.36it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 143/192 [00:00<00:00, 231.58it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 167/192 [00:00<00:00, 232.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [00:33<01:40,  1.14it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(2999, device='cuda:0')
before filtering torch.Size([1, 146032])
after filtering torch.Size([1, 146032])
num_ins_points_after_filtering tensor([2999], device='cuda:0')
Working on scene0203_00 class shower wall
masks_to_be_merged [[6, 7], [8, 9]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 18/146 [00:00<00:00, 179.15it/s][A
Calculating viewed counts for every point:  25%|██▌       | 37/146 [00:00<00:00, 182.32it/s][A
Calculating viewed counts for every point:  39%|███▉      | 57/146 [00:00<00:00, 189.61it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 76/146 [00:00<00:00, 178.51it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 96/146 [00:00<00:00, 184.19it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 116/146 [00:00<00:00, 187.67it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 135/146 [00:00<00:00, 183.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:34<01:44,  1.10it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(11223, device='cuda:0')
before filtering torch.Size([2, 205756])
after filtering torch.Size([2, 205756])
num_ins_points_after_filtering tensor([3148,  917], device='cuda:0')
Working on scene0207_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6, 7, 8], [9, 10, 11, 12, 13], [14, 15, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 114.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 112.60it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:01, 118.03it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:01, 114.99it/s][A
Calculating viewed counts for every point:  31%|███       | 61/199 [00:00<00:01, 109.46it/s][A
Calculating viewed counts for every point:  37%|███▋      | 73/199 [00:00<00:01, 110.09it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/199 [00:00<00:01, 104.86it/s][A
Calculating viewed counts for every point:  48%|████▊     | 96/199 [00:00<00:01, 102.00it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 109/199 [00:01<00:00, 107.13it/s][A
Calculating viewed counts for every point:  61%|██████    | 121/199 [00:01<00:00, 109.02it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 133/199 [00:01<00:00, 109.79it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 145/199 [00:01<00:00, 110.42it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 157/199 [00:01<00:00, 110.28it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 169/199 [00:01<00:00, 109.53it/s][A
Calculating viewed counts for every point:  90%|█████████ | 180/199 [00:01<00:00, 108.99it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 191/199 [00:01<00:00, 107.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:36<02:26,  1.30s/it]detected_ratio_thres_value tensor(0.1379, device='cuda:0')
final masked points tensor(19202, device='cuda:0')
before filtering torch.Size([4, 304396])
after filtering torch.Size([4, 304396])
num_ins_points_after_filtering tensor([1942, 3124, 7423, 6609], device='cuda:0')
Working on scene0208_00 class shower wall
masks_to_be_merged [[5, 6, 7], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/239 [00:00<00:02, 98.23it/s][A
Calculating viewed counts for every point:   9%|▉         | 21/239 [00:00<00:02, 100.81it/s][A
Calculating viewed counts for every point:  13%|█▎        | 32/239 [00:00<00:02, 103.46it/s][A
Calculating viewed counts for every point:  18%|█▊        | 43/239 [00:00<00:01, 103.41it/s][A
Calculating viewed counts for every point:  23%|██▎       | 54/239 [00:00<00:01, 102.22it/s][A
Calculating viewed counts for every point:  27%|██▋       | 65/239 [00:00<00:01, 100.02it/s][A
Calculating viewed counts for every point:  32%|███▏      | 76/239 [00:00<00:01, 95.82it/s] [A
Calculating viewed counts for every point:  36%|███▌      | 86/239 [00:00<00:01, 96.41it/s][A
Calculating viewed counts for every point:  41%|████      | 97/239 [00:00<00:01, 99.35it/s][A
Calculating viewed counts for every point:  45%|████▌     | 108/239 [00:01<00:01, 100.88it/s][A
Calculating viewed counts for every point:  50%|████▉     | 119/239 [00:01<00:01, 103.49it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 130/239 [00:01<00:01, 101.04it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 141/239 [00:01<00:00, 98.02it/s] [A
Calculating viewed counts for every point:  64%|██████▍   | 153/239 [00:01<00:00, 104.09it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 164/239 [00:01<00:00, 99.21it/s] [A
Calculating viewed counts for every point:  73%|███████▎  | 175/239 [00:01<00:00, 97.19it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 186/239 [00:01<00:00, 100.12it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 197/239 [00:01<00:00, 101.96it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 208/239 [00:02<00:00, 100.08it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 219/239 [00:02<00:00, 99.71it/s] [A
Calculating viewed counts for every point:  96%|█████████▌| 230/239 [00:02<00:00, 98.12it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [00:39<03:12,  1.72s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(29541, device='cuda:0')
before filtering torch.Size([2, 407386])
after filtering torch.Size([2, 407386])
num_ins_points_after_filtering tensor([12076,   167], device='cuda:0')
Working on scene0217_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 6], [5, 7, 8, 9, 10, 11, 12, 13], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 19/125 [00:00<00:00, 183.10it/s][A
Calculating viewed counts for every point:  30%|███       | 38/125 [00:00<00:00, 178.61it/s][A
Calculating viewed counts for every point:  46%|████▌     | 57/125 [00:00<00:00, 182.60it/s][A
Calculating viewed counts for every point:  61%|██████    | 76/125 [00:00<00:00, 181.51it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 96/125 [00:00<00:00, 184.54it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 117/125 [00:00<00:00, 192.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [00:40<02:41,  1.46s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(7515, device='cuda:0')
before filtering torch.Size([3, 126385])
after filtering torch.Size([2, 126385])
num_ins_points_after_filtering tensor([2642, 4866], device='cuda:0')
Working on scene0221_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 18], [4, 5, 6, 7], [8, 9], [10, 11, 12, 13], [14, 16], [15, 17]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/98 [00:00<00:00, 218.88it/s][A
Calculating viewed counts for every point:  45%|████▍     | 44/98 [00:00<00:00, 208.42it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 66/98 [00:00<00:00, 210.98it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 88/98 [00:00<00:00, 194.35it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [00:41<02:20,  1.28s/it]detected_ratio_thres_value tensor(0.1500, device='cuda:0')
final masked points tensor(17156, device='cuda:0')
before filtering torch.Size([6, 185828])
after filtering torch.Size([4, 185828])
num_ins_points_after_filtering tensor([7944, 3062, 3363, 2244], device='cuda:0')
Working on scene0222_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 9, 12, 13, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [10, 11, 41, 42], [43, 44, 45, 50, 51, 52, 53, 54], [46, 47, 49, 55, 56, 57, 58, 59, 60, 61], [62, 64, 69], [63, 65], [67, 68]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 18/543 [00:00<00:03, 172.48it/s][A
Calculating viewed counts for every point:   7%|▋         | 39/543 [00:00<00:02, 190.66it/s][A
Calculating viewed counts for every point:  11%|█         | 59/543 [00:00<00:02, 180.73it/s][A
Calculating viewed counts for every point:  14%|█▍        | 78/543 [00:00<00:02, 179.68it/s][A
Calculating viewed counts for every point:  18%|█▊        | 97/543 [00:00<00:02, 169.70it/s][A
Calculating viewed counts for every point:  21%|██        | 115/543 [00:00<00:02, 169.04it/s][A
Calculating viewed counts for every point:  24%|██▍       | 133/543 [00:00<00:02, 170.93it/s][A
Calculating viewed counts for every point:  28%|██▊       | 152/543 [00:00<00:02, 175.45it/s][A
Calculating viewed counts for every point:  31%|███▏      | 171/543 [00:00<00:02, 177.74it/s][A
Calculating viewed counts for every point:  35%|███▌      | 192/543 [00:01<00:01, 186.76it/s][A
Calculating viewed counts for every point:  39%|███▉      | 211/543 [00:01<00:01, 183.78it/s][A
Calculating viewed counts for every point:  43%|████▎     | 231/543 [00:01<00:01, 186.66it/s][A
Calculating viewed counts for every point:  46%|████▌     | 250/543 [00:01<00:01, 183.38it/s][A
Calculating viewed counts for every point:  50%|████▉     | 269/543 [00:01<00:01, 171.29it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 288/543 [00:01<00:01, 173.01it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 306/543 [00:01<00:01, 172.43it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 324/543 [00:01<00:01, 167.67it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 341/543 [00:01<00:01, 166.21it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 359/543 [00:02<00:01, 169.00it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 376/543 [00:02<00:01, 164.87it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 394/543 [00:02<00:00, 167.37it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 411/543 [00:02<00:00, 161.02it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 431/543 [00:02<00:00, 171.09it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 449/543 [00:02<00:00, 170.38it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 467/543 [00:02<00:00, 165.64it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 486/543 [00:02<00:00, 169.54it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 504/543 [00:02<00:00, 160.63it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 521/543 [00:03<00:00, 156.45it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 539/543 [00:03<00:00, 160.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [00:45<03:46,  2.08s/it]detected_ratio_thres_value tensor(0.1951, device='cuda:0')
final masked points tensor(9858, device='cuda:0')
before filtering torch.Size([7, 234831])
after filtering torch.Size([3, 234831])
num_ins_points_after_filtering tensor([4094, 2710, 1999], device='cuda:0')
Working on scene0231_00 class shower wall
masks_to_be_merged [[3, 4], [7, 8, 9, 10, 11, 12, 13, 14, 21, 22, 23, 24, 59], [15, 16], [17, 18, 51], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [46, 50], [47, 48, 56, 57], [52, 53, 54, 55], [60, 61]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 9/444 [00:00<00:04, 89.87it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/444 [00:00<00:04, 103.87it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 108.66it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 108.76it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 100.59it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/444 [00:00<00:03, 98.61it/s] [A
Calculating viewed counts for every point:  18%|█▊        | 78/444 [00:00<00:03, 104.37it/s][A
Calculating viewed counts for every point:  20%|██        | 90/444 [00:00<00:03, 108.33it/s][A
Calculating viewed counts for every point:  23%|██▎       | 101/444 [00:00<00:03, 101.52it/s][A
Calculating viewed counts for every point:  25%|██▌       | 112/444 [00:01<00:03, 99.84it/s] [A
Calculating viewed counts for every point:  28%|██▊       | 123/444 [00:01<00:03, 101.24it/s][A
Calculating viewed counts for every point:  30%|███       | 134/444 [00:01<00:03, 99.91it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 145/444 [00:01<00:02, 102.31it/s][A
Calculating viewed counts for every point:  35%|███▌      | 156/444 [00:01<00:02, 103.48it/s][A
Calculating viewed counts for every point:  38%|███▊      | 167/444 [00:01<00:02, 100.96it/s][A
Calculating viewed counts for every point:  40%|████      | 178/444 [00:01<00:02, 101.36it/s][A
Calculating viewed counts for every point:  43%|████▎     | 189/444 [00:01<00:02, 102.70it/s][A
Calculating viewed counts for every point:  45%|████▌     | 200/444 [00:01<00:02, 101.76it/s][A
Calculating viewed counts for every point:  48%|████▊     | 211/444 [00:02<00:02, 101.29it/s][A
Calculating viewed counts for every point:  50%|█████     | 222/444 [00:02<00:02, 98.57it/s] [A
Calculating viewed counts for every point:  52%|█████▏    | 233/444 [00:02<00:02, 99.90it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 244/444 [00:02<00:02, 99.02it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 255/444 [00:02<00:01, 101.87it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 266/444 [00:02<00:01, 99.77it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 278/444 [00:02<00:01, 102.71it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 289/444 [00:02<00:01, 102.19it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 300/444 [00:02<00:01, 103.15it/s][A
Calculating viewed counts for every point:  70%|███████   | 311/444 [00:03<00:01, 97.56it/s] [A
Calculating viewed counts for every point:  72%|███████▏  | 321/444 [00:03<00:01, 94.54it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 331/444 [00:03<00:01, 95.68it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 341/444 [00:03<00:01, 93.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 352/444 [00:03<00:00, 97.82it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 363/444 [00:03<00:00, 99.97it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 374/444 [00:03<00:00, 100.08it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 385/444 [00:03<00:00, 99.29it/s] [A
Calculating viewed counts for every point:  89%|████████▉ | 396/444 [00:03<00:00, 98.35it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 407/444 [00:04<00:00, 101.20it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 418/444 [00:04<00:00, 101.87it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 429/444 [00:04<00:00, 101.43it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 440/444 [00:04<00:00, 100.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [00:51<05:47,  3.22s/it]detected_ratio_thres_value tensor(0.2286, device='cuda:0')
final masked points tensor(6444, device='cuda:0')
before filtering torch.Size([9, 419537])
after filtering torch.Size([3, 419537])
num_ins_points_after_filtering tensor([1434,   95, 4437], device='cuda:0')
Working on scene0246_00 class shower wall
masks_to_be_merged [[2, 3, 4, 5, 90, 91, 92, 93, 94, 95, 96, 97], [7, 8, 9], [12, 13, 14, 15, 16, 17, 18, 44, 46, 49, 51, 52, 54, 55, 58, 59, 60, 61, 62, 67, 68, 69, 70, 74], [19, 20, 21, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 45, 48], [39, 41, 43, 47, 50], [53, 56, 57], [63, 65, 66, 75, 80, 81, 82, 83, 85], [71, 72, 73], [76, 77, 78, 79], [88, 89], [98, 99]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/296 [00:00<00:01, 168.19it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/296 [00:00<00:01, 189.25it/s][A
Calculating viewed counts for every point:  20%|█▉        | 58/296 [00:00<00:01, 193.92it/s][A
Calculating viewed counts for every point:  27%|██▋       | 79/296 [00:00<00:01, 197.49it/s][A
Calculating viewed counts for every point:  34%|███▍      | 100/296 [00:00<00:00, 199.42it/s][A
Calculating viewed counts for every point:  41%|████      | 120/296 [00:00<00:01, 172.08it/s][A
Calculating viewed counts for every point:  48%|████▊     | 142/296 [00:00<00:00, 183.81it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 163/296 [00:00<00:00, 191.18it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 184/296 [00:00<00:00, 194.45it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 206/296 [00:01<00:00, 199.72it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 229/296 [00:01<00:00, 206.30it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 251/296 [00:01<00:00, 208.19it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 274/296 [00:01<00:00, 213.98it/s][A
Calculating viewed counts for every point: 100%|██████████| 296/296 [00:01<00:00, 204.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [00:54<05:49,  3.27s/it]detected_ratio_thres_value tensor(0.1489, device='cuda:0')
final masked points tensor(25687, device='cuda:0')
before filtering torch.Size([12, 201062])
after filtering torch.Size([7, 201062])
num_ins_points_after_filtering tensor([4307, 5724, 1880, 7514, 1189,  432, 2085], device='cuda:0')
Working on scene0249_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 19, 20, 21], [11, 23, 24, 25], [12, 13, 14, 26, 27, 28, 29], [16, 17]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/274 [00:00<00:01, 145.04it/s][A
Calculating viewed counts for every point:  11%|█         | 30/274 [00:00<00:01, 128.76it/s][A
Calculating viewed counts for every point:  16%|█▌        | 43/274 [00:00<00:01, 119.97it/s][A
Calculating viewed counts for every point:  20%|██        | 56/274 [00:00<00:01, 113.45it/s][A
Calculating viewed counts for every point:  26%|██▌       | 70/274 [00:00<00:01, 119.00it/s][A
Calculating viewed counts for every point:  31%|███       | 84/274 [00:00<00:01, 124.56it/s][A
Calculating viewed counts for every point:  35%|███▌      | 97/274 [00:00<00:01, 122.58it/s][A
Calculating viewed counts for every point:  40%|████      | 110/274 [00:00<00:01, 123.09it/s][A
Calculating viewed counts for every point:  45%|████▍     | 123/274 [00:00<00:01, 124.85it/s][A
Calculating viewed counts for every point:  50%|████▉     | 136/274 [00:01<00:01, 121.53it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 149/274 [00:01<00:01, 123.16it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 162/274 [00:01<00:00, 124.66it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 175/274 [00:01<00:00, 121.28it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 188/274 [00:01<00:00, 120.06it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 201/274 [00:01<00:00, 116.02it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 213/274 [00:01<00:00, 115.09it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 226/274 [00:01<00:00, 116.95it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 241/274 [00:01<00:00, 125.35it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 255/274 [00:02<00:00, 126.86it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 269/274 [00:02<00:00, 127.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [00:57<05:28,  3.10s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(7767, device='cuda:0')
before filtering torch.Size([4, 331031])
after filtering torch.Size([2, 331031])
num_ins_points_after_filtering tensor([4852, 2646], device='cuda:0')
Working on scene0251_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/155 [00:00<00:01, 126.17it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 122.54it/s][A
Calculating viewed counts for every point:  26%|██▌       | 40/155 [00:00<00:00, 129.47it/s][A
Calculating viewed counts for every point:  35%|███▌      | 55/155 [00:00<00:00, 136.79it/s][A
Calculating viewed counts for every point:  45%|████▌     | 70/155 [00:00<00:00, 140.21it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 85/155 [00:00<00:00, 135.81it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 100/155 [00:00<00:00, 138.58it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 114/155 [00:00<00:00, 138.57it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 128/155 [00:00<00:00, 127.16it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 143/155 [00:01<00:00, 131.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [00:58<04:29,  2.57s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(8070, device='cuda:0')
before filtering torch.Size([1, 226765])
after filtering torch.Size([1, 226765])
num_ins_points_after_filtering tensor([3734], device='cuda:0')
Working on scene0256_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [13, 14, 15, 16, 17, 18], [19, 20], [32, 33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:00, 254.67it/s][A
Calculating viewed counts for every point:  33%|███▎      | 52/156 [00:00<00:00, 250.88it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 84/156 [00:00<00:00, 278.89it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 115/156 [00:00<00:00, 289.87it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 145/156 [00:00<00:00, 290.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [00:59<03:39,  2.11s/it]detected_ratio_thres_value tensor(0.1522, device='cuda:0')
final masked points tensor(15781, device='cuda:0')
before filtering torch.Size([4, 108517])
after filtering torch.Size([3, 108517])
num_ins_points_after_filtering tensor([8825, 2909, 2551], device='cuda:0')
Working on scene0257_00 class shower wall
masks_to_be_merged [[0, 1], [2, 6, 7], [4, 5], [8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/165 [00:00<00:00, 165.65it/s][A
Calculating viewed counts for every point:  21%|██        | 35/165 [00:00<00:00, 171.61it/s][A
Calculating viewed counts for every point:  34%|███▍      | 56/165 [00:00<00:00, 186.79it/s][A
Calculating viewed counts for every point:  48%|████▊     | 79/165 [00:00<00:00, 201.15it/s][A
Calculating viewed counts for every point:  61%|██████    | 100/165 [00:00<00:00, 203.25it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 121/165 [00:00<00:00, 196.36it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 145/165 [00:00<00:00, 209.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [01:00<03:05,  1.80s/it]detected_ratio_thres_value tensor(0.1190, device='cuda:0')
final masked points tensor(12770, device='cuda:0')
before filtering torch.Size([4, 180928])
after filtering torch.Size([3, 180928])
num_ins_points_after_filtering tensor([5463, 3997, 3049], device='cuda:0')
Working on scene0277_00 class shower wall
masks_to_be_merged [[5, 6, 7, 19, 20, 21, 22, 23, 24, 25], [8, 9, 10, 26, 27, 28], [11, 12, 30, 31], [13, 14, 15, 16, 33, 34, 35, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/115 [00:00<00:00, 245.56it/s][A
Calculating viewed counts for every point:  43%|████▎     | 50/115 [00:00<00:00, 229.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 77/115 [00:00<00:00, 243.79it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 102/115 [00:00<00:00, 239.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [01:01<02:37,  1.54s/it]detected_ratio_thres_value tensor(0.1515, device='cuda:0')
final masked points tensor(10904, device='cuda:0')
before filtering torch.Size([4, 79184])
after filtering torch.Size([4, 79184])
num_ins_points_after_filtering tensor([5629, 3686,  548,  803], device='cuda:0')
Working on scene0278_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▎     | 34/80 [00:00<00:00, 339.83it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 73/80 [00:00<00:00, 363.20it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [01:01<01:58,  1.17s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(3381, device='cuda:0')
before filtering torch.Size([1, 77020])
after filtering torch.Size([1, 77020])
num_ins_points_after_filtering tensor([3381], device='cuda:0')
Working on scene0300_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 28, 29, 30, 31, 32, 33, 34], [7, 11, 12, 13, 14, 15, 26, 27], [17, 18, 19], [20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 27/175 [00:00<00:00, 265.35it/s][A
Calculating viewed counts for every point:  31%|███       | 54/175 [00:00<00:00, 243.88it/s][A
Calculating viewed counts for every point:  46%|████▋     | 81/175 [00:00<00:00, 254.18it/s][A
Calculating viewed counts for every point:  61%|██████    | 107/175 [00:00<00:00, 242.30it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 135/175 [00:00<00:00, 252.48it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 161/175 [00:00<00:00, 236.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [01:03<01:57,  1.17s/it]detected_ratio_thres_value tensor(0.1316, device='cuda:0')
final masked points tensor(10981, device='cuda:0')
before filtering torch.Size([4, 140216])
after filtering torch.Size([3, 140216])
num_ins_points_after_filtering tensor([4523, 3214, 3064], device='cuda:0')
Working on scene0304_00 class shower wall
masks_to_be_merged [[0, 1, 3, 5, 8, 10, 12, 14, 17, 20, 25, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 128, 132, 133, 134, 136], [2, 4, 6, 7, 9, 11, 13, 15, 18, 21, 23, 27, 28, 87, 90, 93, 98, 101, 103, 106, 110, 112, 114, 117, 118, 120, 123, 124, 127, 130], [31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 65, 66, 67, 69, 70, 71, 72, 73, 76, 81, 85, 88, 91, 94, 96, 99, 102, 107, 108, 113, 138, 139, 140, 141, 142, 144, 145], [56, 59], [77, 79, 82, 83, 86, 89, 92, 95, 97, 100, 104, 105, 109, 111, 115, 116, 119], [121, 122, 125, 126, 129, 131]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 21/178 [00:00<00:00, 206.74it/s][A
Calculating viewed counts for every point:  24%|██▎       | 42/178 [00:00<00:00, 199.68it/s][A
Calculating viewed counts for every point:  37%|███▋      | 66/178 [00:00<00:00, 214.71it/s][A
Calculating viewed counts for every point:  49%|████▉     | 88/178 [00:00<00:00, 211.39it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 110/178 [00:00<00:00, 205.33it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 131/178 [00:00<00:00, 203.56it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 152/178 [00:00<00:00, 202.68it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 175/178 [00:00<00:00, 210.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [01:05<02:41,  1.64s/it]detected_ratio_thres_value tensor(0.3462, device='cuda:0')
final masked points tensor(40899, device='cuda:0')
before filtering torch.Size([6, 164016])
after filtering torch.Size([5, 164016])
num_ins_points_after_filtering tensor([ 6329, 15108, 10340,  5520,  3468], device='cuda:0')
Working on scene0307_00 class shower wall
masks_to_be_merged [[1, 63], [2, 3, 4, 5, 19, 20, 21, 22, 23], [6, 7, 8, 9], [11, 12, 13, 49, 51, 57, 58, 59, 60, 61], [14, 62], [17, 18], [24, 25, 26, 28, 30], [27, 29, 31, 32, 33, 44, 45], [34, 35, 36, 37, 38, 39], [40, 41, 42, 43, 46], [50, 52], [53, 54, 55, 56]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 107.58it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 99.61it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 33/205 [00:00<00:01, 90.69it/s][A
Calculating viewed counts for every point:  21%|██▏       | 44/205 [00:00<00:01, 95.79it/s][A
Calculating viewed counts for every point:  26%|██▋       | 54/205 [00:00<00:01, 93.54it/s][A
Calculating viewed counts for every point:  31%|███       | 64/205 [00:00<00:01, 90.88it/s][A
Calculating viewed counts for every point:  37%|███▋      | 75/205 [00:00<00:01, 96.53it/s][A
Calculating viewed counts for every point:  41%|████▏     | 85/205 [00:00<00:01, 93.17it/s][A
Calculating viewed counts for every point:  46%|████▋     | 95/205 [00:01<00:01, 92.18it/s][A
Calculating viewed counts for every point:  51%|█████     | 105/205 [00:01<00:01, 91.82it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 115/205 [00:01<00:01, 88.21it/s][A
Calculating viewed counts for every point:  61%|██████    | 125/205 [00:01<00:00, 89.25it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 136/205 [00:01<00:00, 92.87it/s][A
Calculating viewed counts for every point:  71%|███████   | 146/205 [00:01<00:00, 90.02it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 156/205 [00:01<00:00, 89.79it/s][A
Calculating viewed counts for every point:  81%|████████  | 166/205 [00:01<00:00, 87.62it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 176/205 [00:01<00:00, 89.04it/s][A
Calculating viewed counts for every point:  90%|█████████ | 185/205 [00:02<00:00, 88.31it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 195/205 [00:02<00:00, 91.38it/s][A
Calculating viewed counts for every point: 100%|██████████| 205/205 [00:02<00:00, 92.87it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [01:09<03:36,  2.21s/it]detected_ratio_thres_value tensor(0.1351, device='cuda:0')
final masked points tensor(39174, device='cuda:0')
before filtering torch.Size([12, 371616])
after filtering torch.Size([9, 371616])
num_ins_points_after_filtering tensor([5212, 4774, 3398, 2192, 3835, 2341, 5154, 5370, 3163], device='cuda:0')
Working on scene0314_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0316_00 class shower wall
masks_to_be_merged [[0, 1], [2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 20/77 [00:00<00:00, 199.24it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 46/77 [00:00<00:00, 230.59it/s][A
Calculating viewed counts for every point:  91%|█████████ | 70/77 [00:00<00:00, 226.13it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [01:09<02:05,  1.30s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(4566, device='cuda:0')
before filtering torch.Size([2, 78769])
after filtering torch.Size([2, 78769])
num_ins_points_after_filtering tensor([1986, 2501], device='cuda:0')
Working on scene0328_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9], [12, 13, 14, 15, 16, 17, 31, 32, 33, 34, 35, 36, 37, 38], [22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 27/142 [00:00<00:00, 262.50it/s][A
Calculating viewed counts for every point:  40%|████      | 57/142 [00:00<00:00, 280.83it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 88/142 [00:00<00:00, 289.26it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 118/142 [00:00<00:00, 291.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [01:10<01:56,  1.22s/it]detected_ratio_thres_value tensor(0.1944, device='cuda:0')
final masked points tensor(9615, device='cuda:0')
before filtering torch.Size([4, 111467])
after filtering torch.Size([3, 111467])
num_ins_points_after_filtering tensor([2552, 2640, 2319], device='cuda:0')
Working on scene0329_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 28, 30, 31, 32, 33, 35], [6, 36], [8, 9], [11, 12], [13, 14, 15, 16], [18, 19], [20, 22, 26], [21, 23, 24, 25, 27, 29]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/156 [00:00<00:01, 134.18it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:00, 129.60it/s][A
Calculating viewed counts for every point:  26%|██▋       | 41/156 [00:00<00:00, 129.50it/s][A
Calculating viewed counts for every point:  35%|███▍      | 54/156 [00:00<00:00, 126.53it/s][A
Calculating viewed counts for every point:  43%|████▎     | 67/156 [00:00<00:00, 122.73it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 80/156 [00:00<00:00, 122.87it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 93/156 [00:00<00:00, 120.26it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 106/156 [00:00<00:00, 122.73it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 119/156 [00:00<00:00, 121.16it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 132/156 [00:01<00:00, 121.95it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 145/156 [00:01<00:00, 122.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [01:12<02:11,  1.40s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(27573, device='cuda:0')
before filtering torch.Size([8, 355413])
after filtering torch.Size([5, 355413])
num_ins_points_after_filtering tensor([3482,  727, 6203, 9284, 4157], device='cuda:0')
Working on scene0334_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/119 [00:00<00:00, 154.92it/s][A
Calculating viewed counts for every point:  27%|██▋       | 32/119 [00:00<00:00, 152.25it/s][A
Calculating viewed counts for every point:  40%|████      | 48/119 [00:00<00:00, 146.98it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 63/119 [00:00<00:00, 128.09it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 78/119 [00:00<00:00, 133.95it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 92/119 [00:00<00:00, 133.61it/s][A
Calculating viewed counts for every point:  91%|█████████ | 108/119 [00:00<00:00, 138.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [01:13<02:01,  1.31s/it]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(30209, device='cuda:0')
before filtering torch.Size([2, 197174])
after filtering torch.Size([2, 197174])
num_ins_points_after_filtering tensor([18720, 11457], device='cuda:0')
Working on scene0338_00 class shower wall
masks_to_be_merged [[1, 10], [3, 4, 5], [6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 30/81 [00:00<00:00, 296.02it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 60/81 [00:00<00:00, 281.81it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [01:14<01:37,  1.06s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(16641, device='cuda:0')
before filtering torch.Size([3, 106339])
after filtering torch.Size([3, 106339])
num_ins_points_after_filtering tensor([ 1975, 11491,  1091], device='cuda:0')
Working on scene0342_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0343_00 class shower wall
masks_to_be_merged [[0, 1, 6], [3, 4]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 22/124 [00:00<00:00, 210.58it/s][A
Calculating viewed counts for every point:  35%|███▌      | 44/124 [00:00<00:00, 202.67it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 69/124 [00:00<00:00, 219.43it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 91/124 [00:00<00:00, 213.98it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 114/124 [00:00<00:00, 217.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [01:14<01:08,  1.31it/s]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(18347, device='cuda:0')
before filtering torch.Size([2, 165618])
after filtering torch.Size([2, 165618])
num_ins_points_after_filtering tensor([5007, 9189], device='cuda:0')
Working on scene0351_00 class shower wall
masks_to_be_merged [[0, 1, 2, 10, 11, 12, 15, 16], [3, 4, 5, 6, 7, 8, 9], [13, 14], [17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 15/147 [00:00<00:00, 145.68it/s][A
Calculating viewed counts for every point:  20%|██        | 30/147 [00:00<00:00, 146.70it/s][A
Calculating viewed counts for every point:  33%|███▎      | 48/147 [00:00<00:00, 160.96it/s][A
Calculating viewed counts for every point:  44%|████▍     | 65/147 [00:00<00:00, 155.13it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 82/147 [00:00<00:00, 157.24it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 98/147 [00:00<00:00, 156.22it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 114/147 [00:00<00:00, 155.05it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 132/147 [00:00<00:00, 159.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [01:16<01:18,  1.14it/s]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(12172, device='cuda:0')
before filtering torch.Size([4, 172134])
after filtering torch.Size([3, 172134])
num_ins_points_after_filtering tensor([4996, 3212, 3570], device='cuda:0')
Working on scene0353_00 class shower wall
masks_to_be_merged [[0, 1], [3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13, 14], [15, 16]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/299 [00:00<00:01, 171.43it/s][A
Calculating viewed counts for every point:  12%|█▏        | 37/299 [00:00<00:01, 179.18it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/299 [00:00<00:01, 186.68it/s][A
Calculating viewed counts for every point:  25%|██▌       | 76/299 [00:00<00:01, 172.41it/s][A
Calculating viewed counts for every point:  31%|███▏      | 94/299 [00:00<00:01, 166.35it/s][A
Calculating viewed counts for every point:  38%|███▊      | 114/299 [00:00<00:01, 176.91it/s][A
Calculating viewed counts for every point:  44%|████▍     | 133/299 [00:00<00:00, 178.33it/s][A
Calculating viewed counts for every point:  51%|█████     | 151/299 [00:00<00:00, 178.59it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 171/299 [00:00<00:00, 183.76it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 190/299 [00:01<00:00, 184.06it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 209/299 [00:01<00:00, 180.53it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 228/299 [00:01<00:00, 182.63it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 247/299 [00:01<00:00, 178.30it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 267/299 [00:01<00:00, 182.47it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 286/299 [00:01<00:00, 183.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [01:18<01:42,  1.16s/it]detected_ratio_thres_value tensor(0.0930, device='cuda:0')
final masked points tensor(12580, device='cuda:0')
before filtering torch.Size([4, 208782])
after filtering torch.Size([3, 208782])
num_ins_points_after_filtering tensor([4894, 5261, 2239], device='cuda:0')
Working on scene0354_00 class shower wall
masks_to_be_merged [[6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 27/113 [00:00<00:00, 266.80it/s][A
Calculating viewed counts for every point:  48%|████▊     | 54/113 [00:00<00:00, 256.67it/s][A
Calculating viewed counts for every point:  71%|███████   | 80/113 [00:00<00:00, 244.56it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 107/113 [00:00<00:00, 252.32it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [01:18<01:29,  1.03s/it]Projecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [01:19<01:08,  1.25it/s]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(1544, device='cuda:0')
before filtering torch.Size([1, 110569])
after filtering torch.Size([1, 110569])
num_ins_points_after_filtering tensor([857], device='cuda:0')
Working on scene0355_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0356_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31], [12, 13], [14, 15, 16, 18, 32, 33], [17, 19, 20, 21, 22, 34, 35, 36]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 234.14it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 230.66it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 72/136 [00:00<00:00, 234.71it/s][A
Calculating viewed counts for every point:  71%|███████   | 96/136 [00:00<00:00, 236.34it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 120/136 [00:00<00:00, 230.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [01:20<01:14,  1.15it/s]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(6391, device='cuda:0')
before filtering torch.Size([4, 81172])
after filtering torch.Size([3, 81172])
num_ins_points_after_filtering tensor([3210, 1035, 2135], device='cuda:0')
Working on scene0357_00 class shower wall
masks_to_be_merged [[0, 1, 2, 13, 14, 15, 16, 17, 18, 24, 25, 26], [4, 5, 6, 7, 8, 19], [9, 10], [11, 12], [20, 21, 22, 23]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 168.28it/s][A
Calculating viewed counts for every point:  40%|███▉      | 36/91 [00:00<00:00, 175.44it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 54/91 [00:00<00:00, 170.79it/s][A
Calculating viewed counts for every point:  80%|████████  | 73/91 [00:00<00:00, 173.75it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [01:21<01:15,  1.12it/s]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(6800, device='cuda:0')
before filtering torch.Size([5, 136945])
after filtering torch.Size([3, 136945])
num_ins_points_after_filtering tensor([3403, 2319,  800], device='cuda:0')
Working on scene0377_00 class shower wall
masks_to_be_merged [[1, 7], [2, 8], [3, 4, 14], [5, 6], [10, 11, 12, 13], [16, 17]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 161.71it/s][A
Calculating viewed counts for every point:  40%|███▉      | 36/91 [00:00<00:00, 175.97it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 57/91 [00:00<00:00, 187.53it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 76/91 [00:00<00:00, 177.94it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [01:21<01:12,  1.15it/s]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(22556, device='cuda:0')
before filtering torch.Size([6, 111811])
after filtering torch.Size([6, 111811])
num_ins_points_after_filtering tensor([3897, 2898, 2958, 2048, 1604, 4639], device='cuda:0')
Working on scene0378_00 class shower wall
masks_to_be_merged [[0, 1, 13, 14], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [15, 16], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 16/190 [00:00<00:01, 158.37it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/190 [00:00<00:00, 160.51it/s][A
Calculating viewed counts for every point:  27%|██▋       | 51/190 [00:00<00:00, 168.42it/s][A
Calculating viewed counts for every point:  36%|███▋      | 69/190 [00:00<00:00, 171.04it/s][A
Calculating viewed counts for every point:  46%|████▌     | 87/190 [00:00<00:00, 173.59it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 105/190 [00:00<00:00, 170.57it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 124/190 [00:00<00:00, 175.12it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 142/190 [00:00<00:00, 170.53it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 160/190 [00:00<00:00, 170.77it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 178/190 [00:01<00:00, 168.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [01:23<01:29,  1.09s/it]detected_ratio_thres_value tensor(0.2069, device='cuda:0')
final masked points tensor(9552, device='cuda:0')
before filtering torch.Size([4, 156298])
after filtering torch.Size([2, 156298])
num_ins_points_after_filtering tensor([5869, 3477], device='cuda:0')
Working on scene0382_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8], [9, 10, 11, 12], [13, 14, 15, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 21/113 [00:00<00:00, 206.04it/s][A
Calculating viewed counts for every point:  38%|███▊      | 43/113 [00:00<00:00, 212.13it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 66/113 [00:00<00:00, 219.91it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 94/113 [00:00<00:00, 240.40it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [01:24<01:26,  1.06s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(5612, device='cuda:0')
before filtering torch.Size([4, 100285])
after filtering torch.Size([3, 100285])
num_ins_points_after_filtering tensor([1417, 1937, 2258], device='cuda:0')
Working on scene0389_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 27, 28], [7, 8], [9, 10, 11, 12, 14], [15, 16, 18, 20, 21], [17, 19], [22, 23], [25, 26]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/142 [00:00<00:00, 195.58it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/142 [00:00<00:00, 186.13it/s][A
Calculating viewed counts for every point:  44%|████▎     | 62/142 [00:00<00:00, 198.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 82/142 [00:00<00:00, 197.16it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 103/142 [00:00<00:00, 199.63it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 124/142 [00:00<00:00, 201.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [01:25<01:26,  1.08s/it]detected_ratio_thres_value tensor(0.1200, device='cuda:0')
final masked points tensor(36508, device='cuda:0')
before filtering torch.Size([7, 201003])
after filtering torch.Size([7, 201003])
num_ins_points_after_filtering tensor([6649, 2431, 9531, 3167, 4110, 4150, 4236], device='cuda:0')
Working on scene0406_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 45, 46, 47, 48, 49, 50, 51], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 29/142 [00:00<00:00, 287.23it/s][A
Calculating viewed counts for every point:  41%|████      | 58/142 [00:00<00:00, 283.38it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 87/142 [00:00<00:00, 279.61it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 119/142 [00:00<00:00, 293.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [01:26<01:23,  1.05s/it]detected_ratio_thres_value tensor(0.2281, device='cuda:0')
final masked points tensor(9365, device='cuda:0')
before filtering torch.Size([2, 48864])
after filtering torch.Size([2, 48864])
num_ins_points_after_filtering tensor([7517, 1848], device='cuda:0')
Working on scene0412_00 class shower wall
masks_to_be_merged [[1, 2, 3, 28], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], [26, 27, 87, 88], [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 24/237 [00:00<00:00, 238.77it/s][A
Calculating viewed counts for every point:  20%|██        | 48/237 [00:00<00:00, 223.07it/s][A
Calculating viewed counts for every point:  30%|██▉       | 71/237 [00:00<00:00, 225.86it/s][A
Calculating viewed counts for every point:  40%|███▉      | 94/237 [00:00<00:00, 215.22it/s][A
Calculating viewed counts for every point:  49%|████▉     | 116/237 [00:00<00:00, 205.98it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 141/237 [00:00<00:00, 218.32it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 164/237 [00:00<00:00, 221.79it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 187/237 [00:00<00:00, 219.91it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 210/237 [00:00<00:00, 213.68it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 232/237 [00:01<00:00, 209.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [01:29<02:05,  1.61s/it]Projecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [01:29<01:34,  1.22s/it]detected_ratio_thres_value tensor(0.2791, device='cuda:0')
final masked points tensor(8841, device='cuda:0')
before filtering torch.Size([4, 175557])
after filtering torch.Size([2, 175557])
num_ins_points_after_filtering tensor([5629, 2251], device='cuda:0')
Working on scene0414_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0423_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0426_00 class shower wall
masks_to_be_merged [[1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 27/231 [00:00<00:00, 268.36it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/231 [00:00<00:00, 279.01it/s][A
Calculating viewed counts for every point:  38%|███▊      | 87/231 [00:00<00:00, 289.56it/s][A
Calculating viewed counts for every point:  51%|█████     | 118/231 [00:00<00:00, 294.24it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 148/231 [00:00<00:00, 282.60it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 177/231 [00:00<00:00, 267.66it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 205/231 [00:00<00:00, 270.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [01:30<01:07,  1.11it/s]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(7353, device='cuda:0')
before filtering torch.Size([1, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([4505], device='cuda:0')
Working on scene0427_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 14, 15, 16], [6, 8, 9, 11], [10, 12, 13], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 40/132 [00:00<00:00, 393.35it/s][A
Calculating viewed counts for every point:  61%|██████    | 80/132 [00:00<00:00, 339.55it/s][A
Calculating viewed counts for every point:  90%|█████████ | 119/132 [00:00<00:00, 357.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [01:31<01:03,  1.17it/s]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(5109, device='cuda:0')
before filtering torch.Size([4, 74074])
after filtering torch.Size([2, 74074])
num_ins_points_after_filtering tensor([1715, 2239], device='cuda:0')
Working on scene0430_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19], [7, 8], [10, 20]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/231 [00:00<00:01, 187.65it/s][A
Calculating viewed counts for every point:  16%|█▋        | 38/231 [00:00<00:01, 185.53it/s][A
Calculating viewed counts for every point:  25%|██▍       | 57/231 [00:00<00:00, 182.92it/s][A
Calculating viewed counts for every point:  33%|███▎      | 76/231 [00:00<00:00, 180.57it/s][A
Calculating viewed counts for every point:  41%|████      | 95/231 [00:00<00:00, 183.79it/s][A
Calculating viewed counts for every point:  49%|████▉     | 114/231 [00:00<00:00, 177.14it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 133/231 [00:00<00:00, 180.09it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 152/231 [00:00<00:00, 172.40it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 170/231 [00:00<00:00, 172.03it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 188/231 [00:01<00:00, 167.49it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 207/231 [00:01<00:00, 172.83it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 228/231 [00:01<00:00, 180.98it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [01:33<01:20,  1.10s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(6078, device='cuda:0')
before filtering torch.Size([3, 210249])
after filtering torch.Size([2, 210249])
num_ins_points_after_filtering tensor([4786, 1173], device='cuda:0')
Working on scene0432_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0435_00 class shower wall
masks_to_be_merged [[0, 4], [5, 31, 32], [6, 7, 8, 9, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30], [10, 11, 12, 13], [22, 23]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 16/328 [00:00<00:01, 157.95it/s][A
Calculating viewed counts for every point:  10%|▉         | 32/328 [00:00<00:01, 156.02it/s][A
Calculating viewed counts for every point:  15%|█▍        | 48/328 [00:00<00:01, 156.06it/s][A
Calculating viewed counts for every point:  20%|█▉        | 64/328 [00:00<00:01, 147.86it/s][A
Calculating viewed counts for every point:  25%|██▍       | 81/328 [00:00<00:01, 152.40it/s][A
Calculating viewed counts for every point:  30%|██▉       | 98/328 [00:00<00:01, 156.16it/s][A
Calculating viewed counts for every point:  35%|███▍      | 114/328 [00:00<00:01, 152.66it/s][A
Calculating viewed counts for every point:  40%|████      | 132/328 [00:00<00:01, 157.22it/s][A
Calculating viewed counts for every point:  45%|████▌     | 148/328 [00:00<00:01, 151.79it/s][A
Calculating viewed counts for every point:  50%|█████     | 164/328 [00:01<00:01, 150.57it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 181/328 [00:01<00:00, 154.11it/s][A
Calculating viewed counts for every point:  60%|██████    | 198/328 [00:01<00:00, 157.39it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 216/328 [00:01<00:00, 160.25it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 235/328 [00:01<00:00, 168.82it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 253/328 [00:01<00:00, 170.67it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 271/328 [00:01<00:00, 164.50it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 290/328 [00:01<00:00, 169.10it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 307/328 [00:01<00:00, 165.41it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 324/328 [00:02<00:00, 159.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [01:35<01:24,  1.19s/it]detected_ratio_thres_value tensor(0.1296, device='cuda:0')
final masked points tensor(5993, device='cuda:0')
before filtering torch.Size([5, 254998])
after filtering torch.Size([1, 254998])
num_ins_points_after_filtering tensor([2642], device='cuda:0')
Working on scene0441_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8], [9, 11, 18, 26], [10, 12, 23, 24, 25], [13, 15, 16, 17, 27], [19, 20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 21/77 [00:00<00:00, 208.76it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 42/77 [00:00<00:00, 192.76it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 65/77 [00:00<00:00, 206.29it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [01:36<01:17,  1.11s/it]detected_ratio_thres_value tensor(0.1290, device='cuda:0')
final masked points tensor(22789, device='cuda:0')
before filtering torch.Size([5, 86191])
after filtering torch.Size([4, 86191])
num_ins_points_after_filtering tensor([15752,   860,  3714,  1849], device='cuda:0')
Working on scene0458_00 class shower wall
masks_to_be_merged [[0, 28], [1, 24, 25, 26, 27, 29, 30, 31, 37, 38, 39, 41, 42, 43], [4, 5, 6, 44, 45, 46, 47], [7, 8, 9, 10, 12, 48, 49, 50], [11, 13, 14, 15, 17, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], [18, 80, 81, 82, 83], [19, 20, 21, 22, 23], [32, 33, 34, 35], [60, 64, 65]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 26/199 [00:00<00:00, 253.60it/s][A
Calculating viewed counts for every point:  29%|██▊       | 57/199 [00:00<00:00, 281.76it/s][A
Calculating viewed counts for every point:  43%|████▎     | 86/199 [00:00<00:00, 266.84it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 114/199 [00:00<00:00, 267.78it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 144/199 [00:00<00:00, 277.45it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 173/199 [00:00<00:00, 278.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [01:38<01:29,  1.29s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(10993, device='cuda:0')
before filtering torch.Size([9, 65264])
after filtering torch.Size([3, 65264])
num_ins_points_after_filtering tensor([1192, 3970, 1223], device='cuda:0')
Working on scene0461_00 class shower wall
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 19/52 [00:00<00:00, 186.53it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 40/52 [00:00<00:00, 197.66it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [01:38<01:10,  1.03s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(756, device='cuda:0')
before filtering torch.Size([1, 59134])
after filtering torch.Size([1, 59134])
num_ins_points_after_filtering tensor([756], device='cuda:0')
Working on scene0462_00 class shower wall
masks_to_be_merged [[0, 1, 2, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], [3, 4, 5, 6, 54], [7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24], [28, 29], [30, 31, 32, 33, 34, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/114 [00:00<00:00, 247.86it/s][A
Calculating viewed counts for every point:  44%|████▍     | 50/114 [00:00<00:00, 233.96it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 75/114 [00:00<00:00, 237.91it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 99/114 [00:00<00:00, 234.04it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [01:40<01:13,  1.09s/it]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(30938, device='cuda:0')
before filtering torch.Size([6, 156714])
after filtering torch.Size([4, 156714])
num_ins_points_after_filtering tensor([ 6797,  1635, 12022,  9585], device='cuda:0')
Working on scene0474_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 12, 14, 15, 16, 17, 18, 20, 22], [4, 5], [6, 7, 8, 9, 10, 11, 13, 21, 23, 24, 25, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/164 [00:00<00:00, 162.76it/s][A
Calculating viewed counts for every point:  21%|██        | 34/164 [00:00<00:00, 162.48it/s][A
Calculating viewed counts for every point:  31%|███       | 51/164 [00:00<00:00, 165.01it/s][A
Calculating viewed counts for every point:  41%|████▏     | 68/164 [00:00<00:00, 153.91it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/164 [00:00<00:00, 153.03it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 101/164 [00:00<00:00, 157.53it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 117/164 [00:00<00:00, 156.10it/s][A
Calculating viewed counts for every point:  81%|████████  | 133/164 [00:00<00:00, 151.32it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 150/164 [00:00<00:00, 154.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [01:41<01:21,  1.23s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(6250, device='cuda:0')
before filtering torch.Size([3, 182281])
after filtering torch.Size([2, 182281])
num_ins_points_after_filtering tensor([3159, 3084], device='cuda:0')
Working on scene0488_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 15, 17, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44], [9, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 18/60 [00:00<00:00, 177.42it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 37/60 [00:00<00:00, 180.57it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 56/60 [00:00<00:00, 184.68it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [01:42<01:14,  1.14s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(9007, device='cuda:0')
before filtering torch.Size([2, 108319])
after filtering torch.Size([2, 108319])
num_ins_points_after_filtering tensor([4452, 4555], device='cuda:0')
Working on scene0490_00 class shower wall
masks_to_be_merged [[0, 3, 11, 12, 13, 14, 15, 16, 17, 18], [2, 6, 7, 8, 9], [4, 5]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 24/129 [00:00<00:00, 237.05it/s][A
Calculating viewed counts for every point:  40%|███▉      | 51/129 [00:00<00:00, 252.49it/s][A
Calculating viewed counts for every point:  61%|██████    | 79/129 [00:00<00:00, 262.20it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 106/129 [00:00<00:00, 255.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [01:43<01:04,  1.01s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(10132, device='cuda:0')
before filtering torch.Size([3, 131283])
after filtering torch.Size([2, 131283])
num_ins_points_after_filtering tensor([7316, 2606], device='cuda:0')
Working on scene0494_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3], [4, 16], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 27/75 [00:00<00:00, 261.15it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 56/75 [00:00<00:00, 276.41it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [01:43<00:53,  1.17it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(8222, device='cuda:0')
before filtering torch.Size([3, 62048])
after filtering torch.Size([2, 62048])
num_ins_points_after_filtering tensor([1301, 5658], device='cuda:0')
Working on scene0496_00 class shower wall
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 17/134 [00:00<00:00, 167.40it/s][A
Calculating viewed counts for every point:  25%|██▌       | 34/134 [00:00<00:00, 150.19it/s][A
Calculating viewed counts for every point:  37%|███▋      | 50/134 [00:00<00:00, 149.74it/s][A
Calculating viewed counts for every point:  49%|████▉     | 66/134 [00:00<00:00, 146.10it/s][A
Calculating viewed counts for every point:  60%|██████    | 81/134 [00:00<00:00, 144.28it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 99/134 [00:00<00:00, 154.80it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 115/134 [00:00<00:00, 149.91it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 131/134 [00:00<00:00, 151.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [01:44<00:57,  1.07it/s]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(6991, device='cuda:0')
before filtering torch.Size([1, 192962])
after filtering torch.Size([1, 192962])
num_ins_points_after_filtering tensor([6991], device='cuda:0')
Working on scene0500_00 class shower wall
masks_to_be_merged [[2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 8/219 [00:00<00:02, 78.72it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/219 [00:00<00:02, 83.26it/s][A
Calculating viewed counts for every point:  12%|█▏        | 27/219 [00:00<00:02, 90.44it/s][A
Calculating viewed counts for every point:  17%|█▋        | 37/219 [00:00<00:01, 92.12it/s][A
Calculating viewed counts for every point:  22%|██▏       | 48/219 [00:00<00:01, 97.71it/s][A
Calculating viewed counts for every point:  26%|██▋       | 58/219 [00:00<00:01, 91.68it/s][A
Calculating viewed counts for every point:  31%|███       | 68/219 [00:00<00:01, 84.34it/s][A
Calculating viewed counts for every point:  35%|███▌      | 77/219 [00:00<00:01, 81.21it/s][A
Calculating viewed counts for every point:  39%|███▉      | 86/219 [00:00<00:01, 82.95it/s][A
Calculating viewed counts for every point:  43%|████▎     | 95/219 [00:01<00:01, 80.96it/s][A
Calculating viewed counts for every point:  47%|████▋     | 104/219 [00:01<00:01, 78.37it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 113/219 [00:01<00:01, 79.36it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 124/219 [00:01<00:01, 87.17it/s][A
Calculating viewed counts for every point:  61%|██████    | 133/219 [00:01<00:00, 86.39it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 142/219 [00:01<00:00, 86.05it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 152/219 [00:01<00:00, 87.94it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 162/219 [00:01<00:00, 90.45it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 172/219 [00:01<00:00, 93.14it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 182/219 [00:02<00:00, 90.17it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 192/219 [00:02<00:00, 81.08it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 201/219 [00:02<00:00, 81.70it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 210/219 [00:02<00:00, 77.65it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 218/219 [00:02<00:00, 77.27it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [01:47<01:30,  1.48s/it]detected_ratio_thres_value tensor(0.0870, device='cuda:0')
final masked points tensor(11352, device='cuda:0')
before filtering torch.Size([1, 396942])
after filtering torch.Size([1, 396942])
num_ins_points_after_filtering tensor([10751], device='cuda:0')
Working on scene0518_00 class shower wall
masks_to_be_merged [[0, 1], [3, 7]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 22/147 [00:00<00:00, 215.93it/s][A
Calculating viewed counts for every point:  31%|███▏      | 46/147 [00:00<00:00, 224.28it/s][A
Calculating viewed counts for every point:  50%|█████     | 74/147 [00:00<00:00, 247.87it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 99/147 [00:00<00:00, 243.06it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 129/147 [00:00<00:00, 260.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [01:48<01:14,  1.25s/it]detected_ratio_thres_value tensor(0.0455, device='cuda:0')
final masked points tensor(7243, device='cuda:0')
before filtering torch.Size([2, 130180])
after filtering torch.Size([2, 130180])
num_ins_points_after_filtering tensor([1209,  886], device='cuda:0')
Working on scene0527_00 class shower wall
masks_to_be_merged [[0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [1, 2], [4, 5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 37/68 [00:00<00:00, 369.69it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [01:48<00:59,  1.01s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(9392, device='cuda:0')
before filtering torch.Size([3, 65893])
after filtering torch.Size([2, 65893])
num_ins_points_after_filtering tensor([8306, 1061], device='cuda:0')
Working on scene0535_00 class shower wall
masks_to_be_merged [[0, 1], [2, 3], [5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 21/69 [00:00<00:00, 203.03it/s][A
Calculating viewed counts for every point:  61%|██████    | 42/69 [00:00<00:00, 204.39it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 66/69 [00:00<00:00, 216.62it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [01:49<00:49,  1.17it/s]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(6351, device='cuda:0')
before filtering torch.Size([3, 90268])
after filtering torch.Size([3, 90268])
num_ins_points_after_filtering tensor([ 697, 3369, 1714], device='cuda:0')
Working on scene0549_00 class shower wall
masks_to_be_merged [[1, 2]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 22/83 [00:00<00:00, 219.22it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 44/83 [00:00<00:00, 202.90it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 68/83 [00:00<00:00, 216.67it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [01:49<00:41,  1.36it/s]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1969, device='cuda:0')
before filtering torch.Size([1, 161973])
after filtering torch.Size([1, 161973])
num_ins_points_after_filtering tensor([1589], device='cuda:0')
Working on scene0550_00 class shower wall
masks_to_be_merged [[0, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 81, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], [1, 2], [3, 4, 5, 6], [7, 9, 10, 11, 12, 13, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], [14, 15, 16, 17, 18, 20, 22, 24, 32], [19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [59, 60, 61, 62], [63, 67], [68, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98], [211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], [220, 221]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/392 [00:00<00:01, 276.78it/s][A
Calculating viewed counts for every point:  15%|█▍        | 57/392 [00:00<00:01, 282.23it/s][A
Calculating viewed counts for every point:  23%|██▎       | 89/392 [00:00<00:01, 298.32it/s][A
Calculating viewed counts for every point:  30%|███       | 119/392 [00:00<00:00, 296.98it/s][A
Calculating viewed counts for every point:  38%|███▊      | 150/392 [00:00<00:00, 298.73it/s][A
Calculating viewed counts for every point:  46%|████▌     | 180/392 [00:00<00:00, 288.22it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 209/392 [00:00<00:00, 288.64it/s][A
Calculating viewed counts for every point:  61%|██████    | 238/392 [00:00<00:00, 278.64it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 270/392 [00:00<00:00, 289.79it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 300/392 [00:01<00:00, 283.77it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 330/392 [00:01<00:00, 286.59it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 361/392 [00:01<00:00, 292.33it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 391/392 [00:01<00:00, 278.52it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [01:58<02:45,  2.95s/it]detected_ratio_thres_value tensor(0.3061, device='cuda:0')
final masked points tensor(35974, device='cuda:0')
before filtering torch.Size([11, 127677])
after filtering torch.Size([5, 127677])
num_ins_points_after_filtering tensor([11044,  2561, 15277,  1606,   665], device='cuda:0')
Working on scene0552_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 6]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 24/89 [00:00<00:00, 232.40it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 51/89 [00:00<00:00, 251.22it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 78/89 [00:00<00:00, 259.42it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [01:58<02:02,  2.22s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(5667, device='cuda:0')
before filtering torch.Size([1, 123103])
after filtering torch.Size([1, 123103])
num_ins_points_after_filtering tensor([5000], device='cuda:0')
Working on scene0553_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 30, 32, 35], [23, 25, 27, 28, 29, 31, 34, 37, 39, 40, 43, 45, 47, 49, 54, 55], [33, 36, 38, 41, 42, 44, 46, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77], [71, 72, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [78, 79, 80, 82], [94, 95, 96, 97]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 34/151 [00:00<00:00, 333.22it/s][A
Calculating viewed counts for every point:  45%|████▌     | 68/151 [00:00<00:00, 332.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 102/151 [00:00<00:00, 298.08it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 133/151 [00:00<00:00, 288.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [02:00<01:58,  2.20s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(19545, device='cuda:0')
before filtering torch.Size([7, 62854])
after filtering torch.Size([5, 62854])
num_ins_points_after_filtering tensor([3492, 8194, 1031, 3352, 2577], device='cuda:0')
Working on scene0558_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0559_00 class shower wall
masks_to_be_merged [[2, 3], [4, 5, 6], [7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 31/58 [00:00<00:00, 300.76it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [02:01<01:06,  1.28s/it]detected_ratio_thres_value tensor(0.1154, device='cuda:0')
final masked points tensor(10828, device='cuda:0')
before filtering torch.Size([3, 89796])
after filtering torch.Size([3, 89796])
num_ins_points_after_filtering tensor([1697, 2710, 1854], device='cuda:0')
Working on scene0565_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0568_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/166 [00:00<00:01, 127.62it/s][A
Calculating viewed counts for every point:  16%|█▌        | 26/166 [00:00<00:01, 128.66it/s][A
Calculating viewed counts for every point:  23%|██▎       | 39/166 [00:00<00:01, 120.60it/s][A
Calculating viewed counts for every point:  32%|███▏      | 53/166 [00:00<00:00, 124.63it/s][A
Calculating viewed counts for every point:  40%|███▉      | 66/166 [00:00<00:00, 122.82it/s][A
Calculating viewed counts for every point:  48%|████▊     | 79/166 [00:00<00:00, 123.02it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 93/166 [00:00<00:00, 127.67it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 106/166 [00:00<00:00, 125.15it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 119/166 [00:00<00:00, 125.78it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 132/166 [00:01<00:00, 125.95it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 145/166 [00:01<00:00, 125.47it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 158/166 [00:01<00:00, 126.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [02:02<00:53,  1.07s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(12031, device='cuda:0')
before filtering torch.Size([1, 232453])
after filtering torch.Size([1, 232453])
num_ins_points_after_filtering tensor([12031], device='cuda:0')
Working on scene0574_00 class shower wall
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [15, 16, 17, 18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 39, 40, 41, 42, 43], [32, 34, 36, 37, 38], [44, 45, 46, 47, 48]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 32/103 [00:00<00:00, 317.81it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 64/103 [00:00<00:00, 289.84it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 94/103 [00:00<00:00, 268.33it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [02:03<00:50,  1.03s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(12980, device='cuda:0')
before filtering torch.Size([5, 55521])
after filtering torch.Size([4, 55521])
num_ins_points_after_filtering tensor([4012, 5871, 1583, 1033], device='cuda:0')
Working on scene0575_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [40, 41, 42, 43, 44, 45, 46], [47, 48]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 19/294 [00:00<00:01, 183.93it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/294 [00:00<00:01, 177.90it/s][A
Calculating viewed counts for every point:  20%|██        | 59/294 [00:00<00:01, 191.29it/s][A
Calculating viewed counts for every point:  27%|██▋       | 79/294 [00:00<00:01, 190.89it/s][A
Calculating viewed counts for every point:  34%|███▍      | 101/294 [00:00<00:00, 196.84it/s][A
Calculating viewed counts for every point:  41%|████      | 121/294 [00:00<00:00, 195.68it/s][A
Calculating viewed counts for every point:  49%|████▉     | 145/294 [00:00<00:00, 207.84it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 166/294 [00:00<00:00, 207.00it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 187/294 [00:00<00:00, 194.63it/s][A
Calculating viewed counts for every point:  70%|███████   | 207/294 [00:01<00:00, 184.50it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 226/294 [00:01<00:00, 175.29it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 245/294 [00:01<00:00, 179.20it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 264/294 [00:01<00:00, 176.64it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 282/294 [00:01<00:00, 177.22it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [02:05<01:02,  1.31s/it]detected_ratio_thres_value tensor(0.1321, device='cuda:0')
final masked points tensor(21047, device='cuda:0')
before filtering torch.Size([4, 194207])
after filtering torch.Size([3, 194207])
num_ins_points_after_filtering tensor([5683, 6384, 7066], device='cuda:0')
Working on scene0578_00 class shower wall
masks_to_be_merged [[0, 3, 5, 6, 10], [1, 2], [8, 9]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 25/149 [00:00<00:00, 248.12it/s][A
Calculating viewed counts for every point:  34%|███▍      | 51/149 [00:00<00:00, 250.21it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 77/149 [00:00<00:00, 240.48it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 102/149 [00:00<00:00, 236.58it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 126/149 [00:00<00:00, 232.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [02:06<00:55,  1.19s/it]detected_ratio_thres_value tensor(0.0606, device='cuda:0')
final masked points tensor(24941, device='cuda:0')
before filtering torch.Size([3, 147607])
after filtering torch.Size([2, 147607])
num_ins_points_after_filtering tensor([ 7994, 14067], device='cuda:0')
Working on scene0580_00 class shower wall
masks_to_be_merged [[0, 1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 58, 63, 64, 66, 67, 68, 69, 70, 72], [3, 4, 38, 39, 40, 41, 44, 52, 53, 54, 55, 56, 57, 75, 76, 77], [5, 6, 7, 8, 9, 10, 11, 49, 50, 51, 59, 60, 62, 65, 71, 73, 74], [42, 43], [45, 46], [47, 48]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/477 [00:00<00:02, 216.93it/s][A
Calculating viewed counts for every point:   9%|▉         | 44/477 [00:00<00:02, 215.77it/s][A
Calculating viewed counts for every point:  15%|█▍        | 71/477 [00:00<00:01, 237.28it/s][A
Calculating viewed counts for every point:  20%|█▉        | 95/477 [00:00<00:01, 223.69it/s][A
Calculating viewed counts for every point:  25%|██▍       | 118/477 [00:00<00:01, 223.99it/s][A
Calculating viewed counts for every point:  30%|██▉       | 142/477 [00:00<00:01, 228.52it/s][A
Calculating viewed counts for every point:  35%|███▍      | 165/477 [00:00<00:01, 222.43it/s][A
Calculating viewed counts for every point:  40%|███▉      | 189/477 [00:00<00:01, 226.81it/s][A
Calculating viewed counts for every point:  44%|████▍     | 212/477 [00:00<00:01, 218.97it/s][A
Calculating viewed counts for every point:  49%|████▉     | 234/477 [00:01<00:01, 218.52it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 259/477 [00:01<00:00, 226.07it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 282/477 [00:01<00:00, 221.92it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 306/477 [00:01<00:00, 223.81it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 329/477 [00:01<00:00, 223.34it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 352/477 [00:01<00:00, 219.83it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 377/477 [00:01<00:00, 228.43it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 400/477 [00:01<00:00, 221.83it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 423/477 [00:01<00:00, 223.37it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 450/477 [00:01<00:00, 235.27it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 474/477 [00:02<00:00, 234.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [02:09<01:16,  1.67s/it]detected_ratio_thres_value tensor(0.3111, device='cuda:0')
final masked points tensor(8778, device='cuda:0')
before filtering torch.Size([6, 158047])
after filtering torch.Size([2, 158047])
num_ins_points_after_filtering tensor([3053, 3180], device='cuda:0')
Working on scene0583_00 class shower wall
masks_to_be_merged [[0, 10, 11, 12, 13, 14, 15, 16, 17], [1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [63, 64], [66, 67, 68]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 239.55it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/198 [00:00<00:00, 225.12it/s][A
Calculating viewed counts for every point:  36%|███▌      | 71/198 [00:00<00:00, 225.26it/s][A
Calculating viewed counts for every point:  49%|████▉     | 97/198 [00:00<00:00, 237.44it/s][A
Calculating viewed counts for every point:  61%|██████    | 121/198 [00:00<00:00, 228.09it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 145/198 [00:00<00:00, 227.26it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 168/198 [00:00<00:00, 224.82it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 191/198 [00:00<00:00, 222.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [02:11<01:15,  1.68s/it]detected_ratio_thres_value tensor(0.2326, device='cuda:0')
final masked points tensor(21798, device='cuda:0')
before filtering torch.Size([4, 146782])
after filtering torch.Size([1, 146782])
num_ins_points_after_filtering tensor([18868], device='cuda:0')
Working on scene0591_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19], [14, 15], [20, 40, 41, 42, 43, 45, 46, 47, 48], [21, 22, 23, 24, 25, 35, 36, 37, 38, 39], [26, 31, 32, 33, 34], [27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 15/173 [00:00<00:01, 149.27it/s][A
Calculating viewed counts for every point:  17%|█▋        | 30/173 [00:00<00:00, 146.20it/s][A
Calculating viewed counts for every point:  28%|██▊       | 48/173 [00:00<00:00, 161.15it/s][A
Calculating viewed counts for every point:  38%|███▊      | 65/173 [00:00<00:00, 152.16it/s][A
Calculating viewed counts for every point:  47%|████▋     | 81/173 [00:00<00:00, 148.07it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 99/173 [00:00<00:00, 155.65it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 115/173 [00:00<00:00, 151.74it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 131/173 [00:00<00:00, 152.43it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 148/173 [00:00<00:00, 156.37it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 164/173 [00:01<00:00, 153.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [02:13<01:17,  1.76s/it]detected_ratio_thres_value tensor(0.1400, device='cuda:0')
final masked points tensor(26809, device='cuda:0')
before filtering torch.Size([6, 175600])
after filtering torch.Size([5, 175600])
num_ins_points_after_filtering tensor([ 6274,  1945,  5322, 10340,  2623], device='cuda:0')
Working on scene0593_00 class shower wall
masks_to_be_merged [[0, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 36], [3, 4, 7], [5, 8, 9, 10], [6, 11, 27, 28, 29, 30, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/230 [00:00<00:01, 159.08it/s][A
Calculating viewed counts for every point:  15%|█▌        | 35/230 [00:00<00:01, 176.78it/s][A
Calculating viewed counts for every point:  24%|██▍       | 55/230 [00:00<00:00, 185.12it/s][A
Calculating viewed counts for every point:  32%|███▏      | 74/230 [00:00<00:00, 168.63it/s][A
Calculating viewed counts for every point:  40%|████      | 92/230 [00:00<00:00, 165.29it/s][A
Calculating viewed counts for every point:  50%|████▉     | 114/230 [00:00<00:00, 181.56it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 133/230 [00:00<00:00, 174.56it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 151/230 [00:00<00:00, 170.36it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 172/230 [00:00<00:00, 181.67it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 191/230 [00:01<00:00, 173.27it/s][A
Calculating viewed counts for every point:  91%|█████████ | 209/230 [00:01<00:00, 171.41it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 228/230 [00:01<00:00, 176.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [02:14<01:15,  1.76s/it]Projecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [02:15<00:53,  1.28s/it]detected_ratio_thres_value tensor(0.1837, device='cuda:0')
final masked points tensor(36492, device='cuda:0')
before filtering torch.Size([4, 211902])
after filtering torch.Size([4, 211902])
num_ins_points_after_filtering tensor([27848,  1866,  3298,  3353], device='cuda:0')
Working on scene0595_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0598_00 class shower wall
masks_to_be_merged [[5, 6], [9, 10, 11, 12, 13], [14, 15, 16], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/101 [00:00<00:00, 218.18it/s][A
Calculating viewed counts for every point:  44%|████▎     | 44/101 [00:00<00:00, 217.09it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 66/101 [00:00<00:00, 210.74it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 88/101 [00:00<00:00, 194.31it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [02:15<00:45,  1.12s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(36221, device='cuda:0')
before filtering torch.Size([4, 145562])
after filtering torch.Size([4, 145562])
num_ins_points_after_filtering tensor([   30, 24402,  4765,  6964], device='cuda:0')
Working on scene0599_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [17, 18, 19, 20, 21, 22, 37], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41], [38, 39]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 26/189 [00:00<00:00, 258.69it/s][A
Calculating viewed counts for every point:  28%|██▊       | 52/189 [00:00<00:00, 237.66it/s][A
Calculating viewed counts for every point:  42%|████▏     | 79/189 [00:00<00:00, 248.59it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 104/189 [00:00<00:00, 243.05it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 129/189 [00:00<00:00, 235.74it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 154/189 [00:00<00:00, 239.37it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 178/189 [00:00<00:00, 227.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [02:17<00:47,  1.19s/it]detected_ratio_thres_value tensor(0.1628, device='cuda:0')
final masked points tensor(19577, device='cuda:0')
before filtering torch.Size([5, 141933])
after filtering torch.Size([5, 141933])
num_ins_points_after_filtering tensor([2903, 8410, 4803, 3099,  362], device='cuda:0')
Working on scene0606_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [14, 15], [17, 19]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/250 [00:00<00:01, 214.75it/s][A
Calculating viewed counts for every point:  18%|█▊        | 44/250 [00:00<00:00, 215.42it/s][A
Calculating viewed counts for every point:  28%|██▊       | 69/250 [00:00<00:00, 227.70it/s][A
Calculating viewed counts for every point:  37%|███▋      | 92/250 [00:00<00:00, 219.83it/s][A
Calculating viewed counts for every point:  46%|████▌     | 115/250 [00:00<00:00, 223.14it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 138/250 [00:00<00:00, 215.13it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 160/250 [00:00<00:00, 199.18it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 181/250 [00:00<00:00, 198.22it/s][A
Calculating viewed counts for every point:  81%|████████  | 203/250 [00:00<00:00, 202.44it/s][A
Calculating viewed counts for every point:  90%|█████████ | 225/250 [00:01<00:00, 206.86it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 247/250 [00:01<00:00, 208.45it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [02:18<00:51,  1.31s/it]detected_ratio_thres_value tensor(0.1500, device='cuda:0')
final masked points tensor(5108, device='cuda:0')
before filtering torch.Size([3, 164401])
after filtering torch.Size([1, 164401])
num_ins_points_after_filtering tensor([4248], device='cuda:0')
Working on scene0607_00 class shower wall
masks_to_be_merged [[0, 1, 26, 27, 28, 29, 30], [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25], [7, 8, 13, 14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 24/100 [00:00<00:00, 237.67it/s][A
Calculating viewed counts for every point:  49%|████▉     | 49/100 [00:00<00:00, 243.68it/s][A
Calculating viewed counts for every point:  80%|████████  | 80/100 [00:00<00:00, 271.16it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [02:19<00:44,  1.17s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(11164, device='cuda:0')
before filtering torch.Size([3, 113156])
after filtering torch.Size([2, 113156])
num_ins_points_after_filtering tensor([6797, 2352], device='cuda:0')
Working on scene0608_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0609_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0616_00 class shower wall
masks_to_be_merged [[0, 18, 19, 22], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23], [20, 21]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 105.84it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:02, 108.16it/s][A
Calculating viewed counts for every point:  11%|█         | 34/304 [00:00<00:02, 111.73it/s][A
Calculating viewed counts for every point:  15%|█▌        | 46/304 [00:00<00:02, 110.89it/s][A
Calculating viewed counts for every point:  19%|█▉        | 58/304 [00:00<00:02, 110.00it/s][A
Calculating viewed counts for every point:  23%|██▎       | 70/304 [00:00<00:02, 107.67it/s][A
Calculating viewed counts for every point:  27%|██▋       | 81/304 [00:00<00:02, 105.47it/s][A
Calculating viewed counts for every point:  31%|███       | 93/304 [00:00<00:01, 109.07it/s][A
Calculating viewed counts for every point:  35%|███▍      | 105/304 [00:00<00:01, 111.26it/s][A
Calculating viewed counts for every point:  38%|███▊      | 117/304 [00:01<00:01, 105.75it/s][A
Calculating viewed counts for every point:  42%|████▏     | 129/304 [00:01<00:01, 109.12it/s][A
Calculating viewed counts for every point:  46%|████▋     | 141/304 [00:01<00:01, 111.53it/s][A
Calculating viewed counts for every point:  50%|█████     | 153/304 [00:01<00:01, 110.18it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 165/304 [00:01<00:01, 110.81it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 177/304 [00:01<00:01, 112.68it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 190/304 [00:01<00:00, 115.21it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 202/304 [00:01<00:00, 111.27it/s][A
Calculating viewed counts for every point:  70%|███████   | 214/304 [00:01<00:00, 112.81it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 226/304 [00:02<00:00, 112.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 240/304 [00:02<00:00, 118.57it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 252/304 [00:02<00:00, 118.22it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 264/304 [00:02<00:00, 116.19it/s][A
Calculating viewed counts for every point:  91%|█████████ | 276/304 [00:02<00:00, 114.81it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 288/304 [00:02<00:00, 110.86it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 300/304 [00:02<00:00, 110.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [02:22<00:38,  1.11s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(9070, device='cuda:0')
before filtering torch.Size([3, 310248])
after filtering torch.Size([1, 310248])
num_ins_points_after_filtering tensor([7045], device='cuda:0')
Working on scene0618_00 class shower wall
masks_to_be_merged [[4, 5, 6, 7], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 14/90 [00:00<00:00, 132.59it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 127.83it/s][A
Calculating viewed counts for every point:  46%|████▌     | 41/90 [00:00<00:00, 123.17it/s][A
Calculating viewed counts for every point:  60%|██████    | 54/90 [00:00<00:00, 119.49it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 67/90 [00:00<00:00, 120.13it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 80/90 [00:00<00:00, 117.30it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [02:23<00:37,  1.09s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(14679, device='cuda:0')
before filtering torch.Size([2, 232740])
after filtering torch.Size([2, 232740])
num_ins_points_after_filtering tensor([11585,  1271], device='cuda:0')
Working on scene0621_00 class shower wall
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 15/268 [00:00<00:01, 144.86it/s][A
Calculating viewed counts for every point:  12%|█▏        | 31/268 [00:00<00:01, 151.95it/s][A
Calculating viewed counts for every point:  18%|█▊        | 47/268 [00:00<00:01, 150.48it/s][A
Calculating viewed counts for every point:  24%|██▎       | 63/268 [00:00<00:01, 152.43it/s][A
Calculating viewed counts for every point:  29%|██▉       | 79/268 [00:00<00:01, 153.73it/s][A
Calculating viewed counts for every point:  35%|███▌      | 95/268 [00:00<00:01, 145.38it/s][A
Calculating viewed counts for every point:  41%|████      | 110/268 [00:00<00:01, 146.50it/s][A
Calculating viewed counts for every point:  48%|████▊     | 128/268 [00:00<00:00, 155.17it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 144/268 [00:00<00:00, 154.48it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 160/268 [00:01<00:00, 155.57it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 176/268 [00:01<00:00, 153.86it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 194/268 [00:01<00:00, 158.44it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 210/268 [00:01<00:00, 155.98it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 226/268 [00:01<00:00, 151.73it/s][A
Calculating viewed counts for every point:  91%|█████████ | 244/268 [00:01<00:00, 156.53it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 260/268 [00:01<00:00, 151.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [02:25<00:41,  1.27s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(1048, device='cuda:0')
before filtering torch.Size([1, 250821])
after filtering torch.Size([1, 250821])
num_ins_points_after_filtering tensor([1048], device='cuda:0')
Working on scene0629_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 30, 31, 32, 34], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 37, 39, 40, 41], [21, 22, 23, 45, 46], [25, 26, 27, 28, 29, 47, 48, 49, 50], [35, 36, 38, 42, 43, 44], [51, 52, 53, 54]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/275 [00:00<00:01, 149.92it/s][A
Calculating viewed counts for every point:  11%|█         | 30/275 [00:00<00:01, 144.43it/s][A
Calculating viewed counts for every point:  17%|█▋        | 47/275 [00:00<00:01, 154.03it/s][A
Calculating viewed counts for every point:  23%|██▎       | 63/275 [00:00<00:01, 152.97it/s][A
Calculating viewed counts for every point:  29%|██▉       | 80/275 [00:00<00:01, 155.72it/s][A
Calculating viewed counts for every point:  35%|███▍      | 96/275 [00:00<00:01, 150.70it/s][A
Calculating viewed counts for every point:  41%|████      | 112/275 [00:00<00:01, 149.80it/s][A
Calculating viewed counts for every point:  46%|████▌     | 127/275 [00:00<00:00, 149.23it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 143/275 [00:00<00:00, 150.52it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 159/275 [00:01<00:00, 148.43it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 174/275 [00:01<00:00, 135.92it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 189/275 [00:01<00:00, 139.53it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 204/275 [00:01<00:00, 138.57it/s][A
Calculating viewed counts for every point:  80%|████████  | 221/275 [00:01<00:00, 145.26it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 236/275 [00:01<00:00, 142.76it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 252/275 [00:01<00:00, 146.57it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 268/275 [00:01<00:00, 147.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [02:28<00:54,  1.71s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(37889, device='cuda:0')
before filtering torch.Size([6, 255083])
after filtering torch.Size([5, 255083])
num_ins_points_after_filtering tensor([ 7169,  4772,  4343,  5257, 14948], device='cuda:0')
Working on scene0633_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35], [6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 24, 39], [15, 16, 17, 19, 36, 38], [20, 37]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/160 [00:00<00:00, 278.71it/s][A
Calculating viewed counts for every point:  35%|███▌      | 56/160 [00:00<00:00, 279.35it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 89/160 [00:00<00:00, 300.09it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 120/160 [00:00<00:00, 303.12it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 151/160 [00:00<00:00, 294.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [02:29<00:46,  1.48s/it]detected_ratio_thres_value tensor(0.1562, device='cuda:0')
final masked points tensor(13133, device='cuda:0')
before filtering torch.Size([4, 101007])
after filtering torch.Size([2, 101007])
num_ins_points_after_filtering tensor([8704, 3721], device='cuda:0')
Working on scene0643_00 class shower wall
masks_to_be_merged [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 16/194 [00:00<00:01, 159.90it/s][A
Calculating viewed counts for every point:  18%|█▊        | 34/194 [00:00<00:00, 167.73it/s][A
Calculating viewed counts for every point:  28%|██▊       | 55/194 [00:00<00:00, 183.52it/s][A
Calculating viewed counts for every point:  38%|███▊      | 74/194 [00:00<00:00, 184.73it/s][A
Calculating viewed counts for every point:  48%|████▊     | 93/194 [00:00<00:00, 171.43it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 111/194 [00:00<00:00, 170.45it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 129/194 [00:00<00:00, 173.35it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 147/194 [00:00<00:00, 172.47it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 165/194 [00:00<00:00, 168.24it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 182/194 [00:01<00:00, 164.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [02:30<00:44,  1.47s/it]detected_ratio_thres_value tensor(0.2174, device='cuda:0')
final masked points tensor(5118, device='cuda:0')
before filtering torch.Size([2, 167360])
after filtering torch.Size([2, 167360])
num_ins_points_after_filtering tensor([2175, 2777], device='cuda:0')
Working on scene0644_00 class shower wall
masks_to_be_merged [[0, 11, 12], [1, 3, 13], [4, 5, 6, 7, 8], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/201 [00:00<00:01, 105.20it/s][A
Calculating viewed counts for every point:  11%|█         | 22/201 [00:00<00:01, 101.50it/s][A
Calculating viewed counts for every point:  16%|█▋        | 33/201 [00:00<00:01, 104.95it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/201 [00:00<00:01, 103.24it/s][A
Calculating viewed counts for every point:  27%|██▋       | 55/201 [00:00<00:01, 100.40it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/201 [00:00<00:01, 102.91it/s][A
Calculating viewed counts for every point:  38%|███▊      | 77/201 [00:00<00:01, 103.59it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/201 [00:00<00:01, 105.12it/s][A
Calculating viewed counts for every point:  49%|████▉     | 99/201 [00:00<00:00, 105.92it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 111/201 [00:01<00:00, 107.83it/s][A
Calculating viewed counts for every point:  61%|██████    | 123/201 [00:01<00:00, 110.75it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 135/201 [00:01<00:00, 108.23it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 146/201 [00:01<00:00, 108.58it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 157/201 [00:01<00:00, 107.61it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 168/201 [00:01<00:00, 105.60it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 180/201 [00:01<00:00, 108.92it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 191/201 [00:01<00:00, 104.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [02:33<00:48,  1.67s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(10206, device='cuda:0')
before filtering torch.Size([4, 299472])
after filtering torch.Size([4, 299472])
num_ins_points_after_filtering tensor([1712, 4473, 3019,  832], device='cuda:0')
Working on scene0645_00 class shower wall
masks_to_be_merged [[0, 2, 9, 10, 11, 27, 28], [4, 5], [12, 13], [14, 15, 16, 17], [19, 20, 21, 22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 102.28it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 99.39it/s] [A
Calculating viewed counts for every point:   7%|▋         | 33/451 [00:00<00:04, 99.97it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/451 [00:00<00:04, 99.59it/s][A
Calculating viewed counts for every point:  12%|█▏        | 54/451 [00:00<00:04, 98.47it/s][A
Calculating viewed counts for every point:  14%|█▍        | 65/451 [00:00<00:03, 101.85it/s][A
Calculating viewed counts for every point:  17%|█▋        | 76/451 [00:00<00:03, 100.10it/s][A
Calculating viewed counts for every point:  19%|█▉        | 87/451 [00:00<00:03, 99.57it/s] [A
Calculating viewed counts for every point:  22%|██▏       | 97/451 [00:00<00:03, 99.09it/s][A
Calculating viewed counts for every point:  24%|██▎       | 107/451 [00:01<00:03, 99.27it/s][A
Calculating viewed counts for every point:  26%|██▌       | 117/451 [00:01<00:03, 99.47it/s][A
Calculating viewed counts for every point:  28%|██▊       | 128/451 [00:01<00:03, 100.93it/s][A
Calculating viewed counts for every point:  31%|███       | 139/451 [00:01<00:03, 102.15it/s][A
Calculating viewed counts for every point:  33%|███▎      | 150/451 [00:01<00:03, 99.80it/s] [A
Calculating viewed counts for every point:  35%|███▌      | 160/451 [00:01<00:02, 98.05it/s][A
Calculating viewed counts for every point:  38%|███▊      | 171/451 [00:01<00:02, 98.82it/s][A
Calculating viewed counts for every point:  40%|████      | 181/451 [00:01<00:02, 96.63it/s][A
Calculating viewed counts for every point:  43%|████▎     | 192/451 [00:01<00:02, 99.22it/s][A
Calculating viewed counts for every point:  45%|████▌     | 203/451 [00:02<00:02, 101.89it/s][A
Calculating viewed counts for every point:  48%|████▊     | 215/451 [00:02<00:02, 104.74it/s][A
Calculating viewed counts for every point:  50%|█████     | 227/451 [00:02<00:02, 108.12it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 239/451 [00:02<00:01, 108.89it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 250/451 [00:02<00:01, 105.45it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 261/451 [00:02<00:01, 100.44it/s][A
Calculating viewed counts for every point:  60%|██████    | 272/451 [00:02<00:01, 97.65it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 282/451 [00:02<00:01, 94.48it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 292/451 [00:02<00:01, 95.42it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 302/451 [00:03<00:01, 94.75it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 312/451 [00:03<00:01, 94.46it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 324/451 [00:03<00:01, 99.91it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 337/451 [00:03<00:01, 106.19it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 349/451 [00:03<00:00, 107.77it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 360/451 [00:03<00:00, 107.34it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 372/451 [00:03<00:00, 110.34it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 384/451 [00:03<00:00, 109.03it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 395/451 [00:03<00:00, 108.57it/s][A
Calculating viewed counts for every point:  90%|█████████ | 406/451 [00:03<00:00, 105.67it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 417/451 [00:04<00:00, 105.51it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 428/451 [00:04<00:00, 102.20it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 439/451 [00:04<00:00, 102.58it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 450/451 [00:04<00:00, 103.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [02:38<01:13,  2.64s/it]detected_ratio_thres_value tensor(0.0571, device='cuda:0')
final masked points tensor(30815, device='cuda:0')
before filtering torch.Size([5, 352477])
after filtering torch.Size([5, 352477])
num_ins_points_after_filtering tensor([4190, 4141, 1073, 6306, 4033], device='cuda:0')
Working on scene0647_00 class shower wall
masks_to_be_merged [[1, 2], [10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 186.96it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 184.97it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 57/110 [00:00<00:00, 184.04it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 76/110 [00:00<00:00, 181.97it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 97/110 [00:00<00:00, 190.30it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [02:39<00:57,  2.11s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(9553, device='cuda:0')
before filtering torch.Size([2, 196185])
after filtering torch.Size([2, 196185])
num_ins_points_after_filtering tensor([4915, 3682], device='cuda:0')
Working on scene0648_00 class shower wall
masks_to_be_merged [[0, 1], [2, 5, 6, 7], [3, 4], [8, 9, 10, 11, 12, 13, 14], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 21/419 [00:00<00:01, 209.23it/s][A
Calculating viewed counts for every point:  10%|█         | 42/419 [00:00<00:01, 200.85it/s][A
Calculating viewed counts for every point:  15%|█▌        | 64/419 [00:00<00:01, 208.42it/s][A
Calculating viewed counts for every point:  21%|██        | 86/419 [00:00<00:01, 209.84it/s][A
Calculating viewed counts for every point:  26%|██▌       | 109/419 [00:00<00:01, 213.18it/s][A
Calculating viewed counts for every point:  31%|███▏      | 131/419 [00:00<00:01, 208.31it/s][A
Calculating viewed counts for every point:  36%|███▋      | 152/419 [00:00<00:01, 205.17it/s][A
Calculating viewed counts for every point:  42%|████▏     | 175/419 [00:00<00:01, 211.78it/s][A
Calculating viewed counts for every point:  47%|████▋     | 198/419 [00:00<00:01, 215.35it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 220/419 [00:01<00:00, 211.33it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 242/419 [00:01<00:00, 210.07it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 267/419 [00:01<00:00, 219.53it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 289/419 [00:01<00:00, 211.85it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 311/419 [00:01<00:00, 210.98it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 333/419 [00:01<00:00, 209.55it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 354/419 [00:01<00:00, 205.18it/s][A
Calculating viewed counts for every point:  90%|█████████ | 378/419 [00:01<00:00, 212.69it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 400/419 [00:01<00:00, 208.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [02:41<00:55,  2.14s/it]detected_ratio_thres_value tensor(0.0800, device='cuda:0')
final masked points tensor(5178, device='cuda:0')
before filtering torch.Size([5, 167915])
after filtering torch.Size([4, 167915])
num_ins_points_after_filtering tensor([ 377,  432,  332, 1784], device='cuda:0')
Working on scene0651_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [22, 23, 24, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 244.89it/s][A
Calculating viewed counts for every point:  48%|████▊     | 50/104 [00:00<00:00, 226.05it/s][A
Calculating viewed counts for every point:  70%|███████   | 73/104 [00:00<00:00, 217.76it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 95/104 [00:00<00:00, 204.08it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [02:42<00:45,  1.81s/it]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(4788, device='cuda:0')
before filtering torch.Size([2, 88450])
after filtering torch.Size([1, 88450])
num_ins_points_after_filtering tensor([3938], device='cuda:0')
Working on scene0652_00 class shower wall
masks_to_be_merged [[12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 30/144 [00:00<00:00, 297.14it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/144 [00:00<00:00, 284.14it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 92/144 [00:00<00:00, 296.44it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 122/144 [00:00<00:00, 290.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [02:43<00:36,  1.53s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(5078, device='cuda:0')
before filtering torch.Size([1, 100286])
after filtering torch.Size([1, 100286])
num_ins_points_after_filtering tensor([5046], device='cuda:0')
Working on scene0653_00 class shower wall
masks_to_be_merged [[2, 3], [5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 138.52it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/388 [00:00<00:02, 128.92it/s][A
Calculating viewed counts for every point:  11%|█         | 42/388 [00:00<00:02, 133.46it/s][A
Calculating viewed counts for every point:  14%|█▍        | 56/388 [00:00<00:02, 132.40it/s][A
Calculating viewed counts for every point:  18%|█▊        | 70/388 [00:00<00:02, 130.64it/s][A
Calculating viewed counts for every point:  22%|██▏       | 84/388 [00:00<00:02, 132.38it/s][A
Calculating viewed counts for every point:  25%|██▌       | 98/388 [00:00<00:02, 127.15it/s][A
Calculating viewed counts for every point:  29%|██▊       | 111/388 [00:00<00:02, 127.65it/s][A
Calculating viewed counts for every point:  32%|███▏      | 125/388 [00:00<00:02, 129.14it/s][A
Calculating viewed counts for every point:  36%|███▌      | 138/388 [00:01<00:01, 125.01it/s][A
Calculating viewed counts for every point:  39%|███▉      | 151/388 [00:01<00:01, 123.44it/s][A
Calculating viewed counts for every point:  42%|████▏     | 164/388 [00:01<00:01, 125.32it/s][A
Calculating viewed counts for every point:  46%|████▌     | 178/388 [00:01<00:01, 128.38it/s][A
Calculating viewed counts for every point:  50%|████▉     | 193/388 [00:01<00:01, 134.09it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 207/388 [00:01<00:01, 133.35it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 221/388 [00:01<00:01, 133.01it/s][A
Calculating viewed counts for every point:  61%|██████    | 235/388 [00:01<00:01, 129.14it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 248/388 [00:01<00:01, 129.23it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 262/388 [00:02<00:00, 130.71it/s][A
Calculating viewed counts for every point:  71%|███████   | 276/388 [00:02<00:00, 131.18it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 290/388 [00:02<00:00, 124.63it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 305/388 [00:02<00:00, 130.14it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 319/388 [00:02<00:00, 125.75it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 333/388 [00:02<00:00, 127.53it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 348/388 [00:02<00:00, 133.49it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 362/388 [00:02<00:00, 133.28it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 376/388 [00:02<00:00, 130.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [02:46<00:46,  2.02s/it]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(8254, device='cuda:0')
before filtering torch.Size([2, 284951])
after filtering torch.Size([2, 284951])
num_ins_points_after_filtering tensor([2524, 3657], device='cuda:0')
Working on scene0655_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 17/111 [00:00<00:00, 166.74it/s][A
Calculating viewed counts for every point:  32%|███▏      | 35/111 [00:00<00:00, 170.28it/s][A
Calculating viewed counts for every point:  48%|████▊     | 53/111 [00:00<00:00, 169.72it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 70/111 [00:00<00:00, 166.89it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 94/111 [00:00<00:00, 189.71it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [02:47<00:36,  1.67s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(11737, device='cuda:0')
before filtering torch.Size([1, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([5086], device='cuda:0')
Working on scene0658_00 class shower wall
masks_to_be_merged [[0, 1, 2], [3, 4], [6, 7, 8, 10], [11, 12, 13, 15], [14, 16, 17, 18, 19, 20, 21], [22, 23]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 18/55 [00:00<00:00, 177.22it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 36/55 [00:00<00:00, 178.47it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 54/55 [00:00<00:00, 169.43it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [02:47<00:28,  1.38s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(26688, device='cuda:0')
before filtering torch.Size([6, 129951])
after filtering torch.Size([5, 129951])
num_ins_points_after_filtering tensor([ 2381,  3507,  2173, 14316,  2872], device='cuda:0')
Working on scene0660_00 class shower wall
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0663_00 class shower wall
masks_to_be_merged [[0, 26], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33], [13, 14, 15, 16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 19/295 [00:00<00:01, 187.86it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/295 [00:00<00:01, 184.98it/s][A
Calculating viewed counts for every point:  20%|██        | 60/295 [00:00<00:01, 197.77it/s][A
Calculating viewed counts for every point:  27%|██▋       | 80/295 [00:00<00:01, 189.61it/s][A
Calculating viewed counts for every point:  35%|███▍      | 102/295 [00:00<00:00, 197.07it/s][A
Calculating viewed counts for every point:  41%|████▏     | 122/295 [00:00<00:00, 194.57it/s][A
Calculating viewed counts for every point:  48%|████▊     | 143/295 [00:00<00:00, 198.79it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 164/295 [00:00<00:00, 201.64it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 185/295 [00:00<00:00, 198.80it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 206/295 [00:01<00:00, 198.09it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 229/295 [00:01<00:00, 205.33it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 250/295 [00:01<00:00, 195.20it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 270/295 [00:01<00:00, 188.15it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 293/295 [00:01<00:00, 198.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [02:49<00:22,  1.19s/it]detected_ratio_thres_value tensor(0.1622, device='cuda:0')
final masked points tensor(9467, device='cuda:0')
before filtering torch.Size([3, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([2714, 5780], device='cuda:0')
Working on scene0664_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 48, 49, 50], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 35/144 [00:00<00:00, 348.40it/s][A
Calculating viewed counts for every point:  49%|████▉     | 71/144 [00:00<00:00, 354.93it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 107/144 [00:00<00:00, 334.27it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 141/144 [00:00<00:00, 318.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [02:50<00:19,  1.11s/it]detected_ratio_thres_value tensor(0.2703, device='cuda:0')
final masked points tensor(8102, device='cuda:0')
before filtering torch.Size([2, 44585])
after filtering torch.Size([2, 44585])
num_ins_points_after_filtering tensor([6902, 1200], device='cuda:0')
Working on scene0665_00 class shower wall
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 13/104 [00:00<00:00, 122.00it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/104 [00:00<00:00, 126.14it/s][A
Calculating viewed counts for every point:  38%|███▊      | 39/104 [00:00<00:00, 125.93it/s][A
Calculating viewed counts for every point:  51%|█████     | 53/104 [00:00<00:00, 129.06it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 66/104 [00:00<00:00, 125.56it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 79/104 [00:00<00:00, 121.64it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 92/104 [00:00<00:00, 123.27it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [02:51<00:17,  1.05s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(6756, device='cuda:0')
before filtering torch.Size([1, 252726])
after filtering torch.Size([1, 252726])
num_ins_points_after_filtering tensor([6756], device='cuda:0')
Working on scene0670_00 class shower wall
masks_to_be_merged [[6, 7, 8], [9, 10, 11, 12], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/303 [00:00<00:01, 217.20it/s][A
Calculating viewed counts for every point:  15%|█▍        | 44/303 [00:00<00:01, 193.57it/s][A
Calculating viewed counts for every point:  22%|██▏       | 66/303 [00:00<00:01, 201.26it/s][A
Calculating viewed counts for every point:  29%|██▉       | 88/303 [00:00<00:01, 207.83it/s][A
Calculating viewed counts for every point:  36%|███▋      | 110/303 [00:00<00:00, 211.41it/s][A
Calculating viewed counts for every point:  44%|████▍     | 134/303 [00:00<00:00, 217.79it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 156/303 [00:00<00:00, 208.59it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 177/303 [00:00<00:00, 201.52it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 200/303 [00:00<00:00, 207.49it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 221/303 [00:01<00:00, 203.01it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 242/303 [00:01<00:00, 202.09it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 263/303 [00:01<00:00, 202.96it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 284/303 [00:01<00:00, 199.22it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [02:54<00:24,  1.53s/it]detected_ratio_thres_value tensor(0.5128, device='cuda:0')
final masked points tensor(6845, device='cuda:0')
before filtering torch.Size([3, 176038])
after filtering torch.Size([1, 176038])
num_ins_points_after_filtering tensor([6741], device='cuda:0')
Working on scene0671_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0678_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 11, 12, 13, 14, 15], [6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 97.24it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 90.10it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 87.63it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 89.09it/s][A
Calculating viewed counts for every point:  20%|██        | 49/245 [00:00<00:02, 89.17it/s][A
Calculating viewed counts for every point:  24%|██▍       | 60/245 [00:00<00:01, 93.28it/s][A
Calculating viewed counts for every point:  29%|██▊       | 70/245 [00:00<00:01, 94.59it/s][A
Calculating viewed counts for every point:  33%|███▎      | 80/245 [00:00<00:01, 92.46it/s][A
Calculating viewed counts for every point:  37%|███▋      | 91/245 [00:00<00:01, 95.37it/s][A
Calculating viewed counts for every point:  41%|████      | 101/245 [00:01<00:01, 93.56it/s][A
Calculating viewed counts for every point:  45%|████▌     | 111/245 [00:01<00:01, 86.51it/s][A
Calculating viewed counts for every point:  49%|████▉     | 121/245 [00:01<00:01, 88.47it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 132/245 [00:01<00:01, 91.94it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 142/245 [00:01<00:01, 91.72it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 153/245 [00:01<00:00, 94.34it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 164/245 [00:01<00:00, 97.60it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 175/245 [00:01<00:00, 98.71it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 185/245 [00:01<00:00, 97.74it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 195/245 [00:02<00:00, 94.75it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 205/245 [00:02<00:00, 94.36it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 215/245 [00:02<00:00, 94.94it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 225/245 [00:02<00:00, 94.29it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 236/245 [00:02<00:00, 95.80it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [02:57<00:21,  1.51s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(10076, device='cuda:0')
before filtering torch.Size([3, 364811])
after filtering torch.Size([3, 364811])
num_ins_points_after_filtering tensor([4340,  377, 5215], device='cuda:0')
Working on scene0684_00 class shower wall
masks_to_be_merged [[2, 4], [3, 5, 6, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 35/87 [00:00<00:00, 335.11it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 69/87 [00:00<00:00, 327.01it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [02:57<00:16,  1.24s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(3296, device='cuda:0')
before filtering torch.Size([2, 41364])
after filtering torch.Size([1, 41364])
num_ins_points_after_filtering tensor([2432], device='cuda:0')
Working on scene0685_00 class shower wall
masks_to_be_merged [[0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [2, 3, 4], [9, 10, 11, 12, 13, 14, 15, 16, 17]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 29/196 [00:00<00:00, 283.11it/s][A
Calculating viewed counts for every point:  30%|██▉       | 58/196 [00:00<00:00, 263.67it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/196 [00:00<00:00, 243.63it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 110/196 [00:00<00:00, 236.21it/s][A
Calculating viewed counts for every point:  71%|███████   | 139/196 [00:00<00:00, 252.50it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 166/196 [00:00<00:00, 257.87it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 195/196 [00:00<00:00, 266.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [02:58<00:14,  1.22s/it]detected_ratio_thres_value tensor(0.1923, device='cuda:0')
final masked points tensor(6240, device='cuda:0')
before filtering torch.Size([3, 132720])
after filtering torch.Size([2, 132720])
num_ins_points_after_filtering tensor([1858, 3149], device='cuda:0')
Working on scene0686_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 112, 113, 114, 115, 116], [16, 17, 18], [19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [71, 72, 73], [74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], [81, 83, 84]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 22/153 [00:00<00:00, 211.74it/s][A
Calculating viewed counts for every point:  29%|██▉       | 45/153 [00:00<00:00, 216.98it/s][A
Calculating viewed counts for every point:  46%|████▌     | 70/153 [00:00<00:00, 229.78it/s][A
Calculating viewed counts for every point:  61%|██████    | 93/153 [00:00<00:00, 221.36it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 116/153 [00:00<00:00, 219.35it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 141/153 [00:00<00:00, 226.02it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [03:01<00:17,  1.64s/it]detected_ratio_thres_value tensor(0.3659, device='cuda:0')
final masked points tensor(19897, device='cuda:0')
before filtering torch.Size([6, 89776])
after filtering torch.Size([3, 89776])
num_ins_points_after_filtering tensor([ 3105, 10068,  5755], device='cuda:0')
Working on scene0689_00 class shower wall
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▋       | 23/87 [00:00<00:00, 229.33it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 48/87 [00:00<00:00, 238.35it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 74/87 [00:00<00:00, 243.92it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [03:02<00:13,  1.35s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(10181, device='cuda:0')
before filtering torch.Size([1, 122129])
after filtering torch.Size([1, 122129])
num_ins_points_after_filtering tensor([4231], device='cuda:0')
Working on scene0690_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 277.45it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 58/90 [00:00<00:00, 289.15it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 89/90 [00:00<00:00, 298.15it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [03:02<00:09,  1.11s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(15162, device='cuda:0')
before filtering torch.Size([1, 106050])
after filtering torch.Size([1, 106050])
num_ins_points_after_filtering tensor([14937], device='cuda:0')
Working on scene0693_00 class shower wall
masks_to_be_merged [[0, 1, 73], [3, 4, 5, 6, 7, 8], [9, 10], [11, 12, 13, 15, 16, 17, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35], [14, 18, 21, 23, 25, 27], [36, 37, 38, 40, 41, 42, 44, 46, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [39, 43, 45, 47, 49, 51, 53]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 34/174 [00:00<00:00, 336.92it/s][A
Calculating viewed counts for every point:  41%|████      | 71/174 [00:00<00:00, 355.60it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 107/174 [00:00<00:00, 320.07it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 142/174 [00:00<00:00, 328.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [03:04<00:09,  1.22s/it]detected_ratio_thres_value tensor(0.1724, device='cuda:0')
final masked points tensor(10793, device='cuda:0')
before filtering torch.Size([7, 41327])
after filtering torch.Size([4, 41327])
num_ins_points_after_filtering tensor([1383, 5532, 2899,  673], device='cuda:0')
Working on scene0695_00 class shower wall
masks_to_be_merged [[0, 1, 2], [3, 4], [6, 31, 32, 36, 37, 38, 39, 41], [24, 25, 26, 27, 28, 29, 30], [33, 34], [42, 43, 44], [45, 46]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 31/182 [00:00<00:00, 307.90it/s][A
Calculating viewed counts for every point:  34%|███▍      | 62/182 [00:00<00:00, 283.29it/s][A
Calculating viewed counts for every point:  50%|█████     | 91/182 [00:00<00:00, 274.06it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 119/182 [00:00<00:00, 273.01it/s][A
Calculating viewed counts for every point:  81%|████████  | 147/182 [00:00<00:00, 271.42it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 175/182 [00:00<00:00, 262.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [03:05<00:08,  1.24s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(18431, device='cuda:0')
before filtering torch.Size([7, 133418])
after filtering torch.Size([5, 133418])
num_ins_points_after_filtering tensor([ 2168, 11000,  1162,  1812,  1118], device='cuda:0')
Working on scene0696_00 class shower wall
masks_to_be_merged [[7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 25, 26, 27, 28, 29], [21, 22], [30, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 13/130 [00:00<00:00, 127.83it/s][A
Calculating viewed counts for every point:  21%|██        | 27/130 [00:00<00:00, 132.91it/s][A
Calculating viewed counts for every point:  32%|███▏      | 41/130 [00:00<00:00, 126.95it/s][A
Calculating viewed counts for every point:  42%|████▏     | 54/130 [00:00<00:00, 117.17it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 67/130 [00:00<00:00, 118.80it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 80/130 [00:00<00:00, 122.03it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 93/130 [00:00<00:00, 119.63it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 106/130 [00:00<00:00, 121.16it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 119/130 [00:00<00:00, 123.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [03:07<00:08,  1.39s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(8228, device='cuda:0')
before filtering torch.Size([3, 231067])
after filtering torch.Size([2, 231067])
num_ins_points_after_filtering tensor([5201, 1314], device='cuda:0')
Working on scene0697_00 class shower wall
masks_to_be_merged [[0, 1], [3, 8], [9, 18], [10, 11, 12, 13, 14, 15, 16, 17], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], [34, 35, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 30/288 [00:00<00:00, 297.48it/s][A
Calculating viewed counts for every point:  21%|██        | 60/288 [00:00<00:00, 276.60it/s][A
Calculating viewed counts for every point:  31%|███       | 88/288 [00:00<00:00, 263.75it/s][A
Calculating viewed counts for every point:  40%|███▉      | 115/288 [00:00<00:00, 252.59it/s][A
Calculating viewed counts for every point:  49%|████▉     | 141/288 [00:00<00:00, 255.04it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 170/288 [00:00<00:00, 265.88it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 200/288 [00:00<00:00, 274.32it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 228/288 [00:00<00:00, 268.76it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 255/288 [00:00<00:00, 255.95it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 281/288 [00:01<00:00, 254.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [03:08<00:07,  1.46s/it]detected_ratio_thres_value tensor(0.1212, device='cuda:0')
final masked points tensor(12170, device='cuda:0')
before filtering torch.Size([6, 139300])
after filtering torch.Size([5, 139300])
num_ins_points_after_filtering tensor([1371,  351, 1576, 4273, 1814], device='cuda:0')
Working on scene0699_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [6, 7, 8, 9, 10, 11, 12, 13, 36, 37, 39], [20, 21], [22, 23], [24, 25]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/220 [00:00<00:01, 161.72it/s][A
Calculating viewed counts for every point:  15%|█▌        | 34/220 [00:00<00:01, 166.30it/s][A
Calculating viewed counts for every point:  25%|██▍       | 54/220 [00:00<00:00, 179.90it/s][A
Calculating viewed counts for every point:  33%|███▎      | 73/220 [00:00<00:00, 181.94it/s][A
Calculating viewed counts for every point:  42%|████▏     | 93/220 [00:00<00:00, 185.08it/s][A
Calculating viewed counts for every point:  51%|█████     | 112/220 [00:00<00:00, 182.47it/s][A
Calculating viewed counts for every point:  60%|██████    | 132/220 [00:00<00:00, 185.84it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 151/220 [00:00<00:00, 175.63it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 169/220 [00:00<00:00, 171.45it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 188/220 [00:01<00:00, 176.55it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 206/220 [00:01<00:00, 177.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [03:10<00:06,  1.55s/it]detected_ratio_thres_value tensor(0.2414, device='cuda:0')
final masked points tensor(14664, device='cuda:0')
before filtering torch.Size([5, 153041])
after filtering torch.Size([3, 153041])
num_ins_points_after_filtering tensor([3298, 7136, 1179], device='cuda:0')
Working on scene0700_00 class shower wall
masks_to_be_merged [[0, 16, 17, 18, 19], [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67], [10, 12, 13, 14, 15], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [31, 32, 41, 42, 43, 44, 45], [33, 34, 35, 36, 37, 38, 39, 40], [47, 48, 49, 50]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/459 [00:00<00:02, 169.66it/s][A
Calculating viewed counts for every point:   8%|▊         | 36/459 [00:00<00:02, 171.38it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/459 [00:00<00:02, 175.21it/s][A
Calculating viewed counts for every point:  16%|█▌        | 74/459 [00:00<00:02, 178.22it/s][A
Calculating viewed counts for every point:  20%|██        | 94/459 [00:00<00:02, 181.77it/s][A
Calculating viewed counts for every point:  25%|██▍       | 114/459 [00:00<00:01, 184.87it/s][A
Calculating viewed counts for every point:  29%|██▉       | 133/459 [00:00<00:01, 184.27it/s][A
Calculating viewed counts for every point:  33%|███▎      | 153/459 [00:00<00:01, 187.65it/s][A
Calculating viewed counts for every point:  37%|███▋      | 172/459 [00:00<00:01, 183.85it/s][A
Calculating viewed counts for every point:  42%|████▏     | 191/459 [00:01<00:01, 175.79it/s][A
Calculating viewed counts for every point:  46%|████▌     | 209/459 [00:01<00:01, 175.92it/s][A
Calculating viewed counts for every point:  49%|████▉     | 227/459 [00:01<00:01, 171.44it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 245/459 [00:01<00:01, 167.39it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 262/459 [00:01<00:01, 162.08it/s][A
Calculating viewed counts for every point:  61%|██████    | 279/459 [00:01<00:01, 162.34it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 299/459 [00:01<00:00, 170.88it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 317/459 [00:01<00:00, 171.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 337/459 [00:01<00:00, 177.01it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 356/459 [00:02<00:00, 178.93it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 374/459 [00:02<00:00, 169.36it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 392/459 [00:02<00:00, 163.07it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 409/459 [00:02<00:00, 164.93it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 427/459 [00:02<00:00, 167.25it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 445/459 [00:02<00:00, 168.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [03:14<00:06,  2.20s/it]detected_ratio_thres_value tensor(0.1020, device='cuda:0')
final masked points tensor(25195, device='cuda:0')
before filtering torch.Size([7, 167755])
after filtering torch.Size([6, 167755])
num_ins_points_after_filtering tensor([4360, 2997, 5386, 2539, 3470, 4462], device='cuda:0')
Working on scene0701_00 class shower wall
No 3d masks detected in backprojection!
Working on scene0702_00 class shower wall
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 41, 42, 43, 44, 45, 46], [17, 18, 19, 20, 21, 34], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36], [37, 38]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 32/84 [00:00<00:00, 313.91it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 64/84 [00:00<00:00, 289.21it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [03:15<00:01,  1.39s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(15148, device='cuda:0')
before filtering torch.Size([4, 54769])
after filtering torch.Size([4, 54769])
num_ins_points_after_filtering tensor([9692,  418, 2396, 1470], device='cuda:0')
Working on scene0704_00 class shower wall
masks_to_be_merged [[1, 36, 37], [2, 9], [3, 4, 5, 6, 7, 8], [16, 18], [20, 50], [25, 26, 27, 28, 29, 30], [31, 32, 33, 34, 35], [43, 44], [54, 55, 59], [56, 57], [62, 63]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/241 [00:00<00:01, 185.13it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/241 [00:00<00:01, 169.32it/s][A
Calculating viewed counts for every point:  23%|██▎       | 56/241 [00:00<00:01, 169.15it/s][A
Calculating viewed counts for every point:  32%|███▏      | 76/241 [00:00<00:00, 179.23it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 185.85it/s][A
Calculating viewed counts for every point:  49%|████▊     | 117/241 [00:00<00:00, 190.85it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 137/241 [00:00<00:00, 175.56it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 159/241 [00:00<00:00, 188.02it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 181/241 [00:00<00:00, 195.05it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 201/241 [00:01<00:00, 185.07it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 221/241 [00:01<00:00, 188.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:17<00:00,  1.58s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:17<00:00,  1.39s/it]
detected_ratio_thres_value tensor(0.1515, device='cuda:0')
final masked points tensor(41206, device='cuda:0')
before filtering torch.Size([11, 183029])
after filtering torch.Size([8, 183029])
num_ins_points_after_filtering tensor([ 1695,  2375, 10708,  9453,  6503,  2001,  1102,  2085],
       device='cuda:0')
Processing class: shower_wall
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<02:30,  1.07s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:24,  1.66it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:01,  2.27it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:48,  2.87it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:01<00:37,  3.65it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:39,  3.46it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:41,  3.23it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:02<00:34,  3.91it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:02<00:31,  4.16it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:32,  4.11it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:29,  4.50it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:03<00:27,  4.69it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:03<00:29,  4.42it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:28,  4.55it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:29,  4.27it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:04<00:25,  4.92it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:04<00:22,  5.48it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:04<00:24,  5.15it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:24,  4.95it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:05<00:22,  5.32it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:05<00:24,  4.93it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:05<00:21,  5.49it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:05<00:21,  5.60it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:25,  4.60it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:24,  4.78it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:06<00:25,  4.60it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:06<00:24,  4.79it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:06<00:26,  4.38it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:07<00:30,  3.75it/s]DEBUG best_match_after_iou_check [tensor(3), tensor(102), tensor(258)]
DEBUG uniques tensor([  3, 102, 258]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 102
Matched 1 times with 258
iou for matched labels tensor([0.6930, 0.1393, 0.4449])
Matched labels: ['refrigerator', 'tv', 'doorframe']
Clip similarities: [0.6962890625, 0.66162109375, 0.67919921875]
DEBUG best_match_after_iou_check [tensor(190)]
DEBUG uniques tensor([190]) tensor([1])
Matched 1 times with 190
iou for matched labels tensor([0.4802])
Matched labels: ['blackboard']
Clip similarities: [0.5986328125]
DEBUG best_match_after_iou_check [tensor(48), tensor(188), tensor(61)]
DEBUG uniques tensor([ 48,  61, 188]) tensor([1, 1, 1])
Matched 1 times with 48
Matched 1 times with 61
Matched 1 times with 188
iou for matched labels tensor([0.7789, 0.8962, 0.6330])
Matched labels: ['couch', 'bathroom_stall', 'trash_can']
Clip similarities: [0.62548828125, 0.798828125, 0.62548828125]
DEBUG best_match_after_iou_check [tensor(25)]
DEBUG uniques tensor([25]) tensor([1])
Matched 1 times with 25
iou for matched labels tensor([0.7257])
Matched labels: ['door']
Clip similarities: [0.72705078125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(9), tensor(95), tensor(183)]
DEBUG uniques tensor([  9,  95, 183]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 95
Matched 1 times with 183
iou for matched labels tensor([0.8632, 0.6449, 0.3915])
Matched labels: ['door', 'shower_wall', 'toilet']
Clip similarities: [0.72705078125, 0.96240234375, 0.77099609375]
DEBUG best_match_after_iou_check [tensor(112), tensor(100), tensor(20), tensor(161), tensor(84)]
DEBUG uniques tensor([ 20,  84, 100, 112, 161]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 84
Matched 1 times with 100
Matched 1 times with 112
Matched 1 times with 161
iou for matched labels tensor([0.6834, 0.7240, 0.6791, 0.3151, 0.5130])
Matched labels: ['closet_door', 'doorframe', 'closet_door', 'blinds', 'light_switch']
Clip similarities: [0.7216796875, 0.67919921875, 0.7216796875, 0.63720703125, 0.66455078125]
DEBUG best_match_after_iou_check [tensor(23)]
DEBUG uniques tensor([23]) tensor([1])
Matched 1 times with 23
iou for matched labels tensor([0.4711])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(62)]
DEBUG uniques tensor([62]) tensor([1])
Matched 1 times with 62
iou for matched labels tensor([0.5825])
Matched labels: ['door']
Clip similarities: [0.72705078125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(56), tensor(122), tensor(135), tensor(13), tensor(79)]
DEBUG uniques tensor([ 13,  56,  79, 122, 135]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 56
Matched 1 times with 79
Matched 1 times with 122
Matched 1 times with 135
iou for matched labels tensor([0.5806, 0.6549, 0.6285, 0.4362, 0.3584])
Matched labels: ['shower_wall', 'toilet_paper_holder', 'shower_door', 'shower_wall', 'shower_wall']
Clip similarities: [0.96240234375, 0.68505859375, 0.85888671875, 0.96240234375, 0.96240234375]
DEBUG best_match_after_iou_check [tensor(21), tensor(21), tensor(23), tensor(146)]
DEBUG uniques tensor([ 21,  23, 146]) tensor([2, 1, 1])
Matched 2 times with 21
Merge stage2 masks
Matched 1 times with 23
Matched 1 times with 146
iou for matched labels tensor([0.4744, 0.5590, 0.2706])
Matched labels: ['bathroom_stall', 'bathroom_stall', 'shower_wall']
Clip similarities: [0.798828125, 0.798828125, 0.96240234375]
DEBUG best_match_after_iou_check [tensor(41)]
DEBUG uniques tensor([41]) tensor([1])
Matched 1 times with 41
iou for matched labels tensor([0.6647])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(111), tensor(0), tensor(111)]
DEBUG uniques tensor([  0, 111]) tensor([1, 2])
Matched 1 times with 0
Matched 2 times with 111
Merge stage2 masks
iou for matched labels tensor([0.3382, 0.7359])
Matched labels: ['radiator', 'blackboard']
Clip similarities: [0.64990234375, 0.5986328125]
DEBUG best_match_after_iou_check [tensor(75)]
DEBUG uniques tensor([75]) tensor([1])
Matched 1 times with 75
iou for matched labels tensor([0.5333])
Matched labels: ['shower_wall']
Clip similarities: [0.96240234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(160), tensor(115), tensor(123), tensor(172), tensor(74), tensor(151), tensor(90)]
DEBUG uniques tensor([ 74,  90, 115, 123, 151, 160, 172]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 74
Matched 1 times with 90
Matched 1 times with 115
Matched 1 times with 123
Matched 1 times with 151
Matched 1 times with 160
Matched 1 times with 172
iou for matched labels tensor([0.1870, 0.1833, 0.3835, 0.2978, 0.2009, 0.7251, 0.6284])
Matched labels: ['bathroom_stall_door', 'washing_machine', 'washing_machine', 'doorframe', 'range_hood', 'closet_door', 'bathroom_stall_door']
Clip similarities: [0.7685546875, 0.7158203125, 0.7158203125, 0.67919921875, 0.56884765625, 0.7216796875, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(142), tensor(6), tensor(109)]
DEBUG uniques tensor([  6, 109, 142]) tensor([1, 1, 1])
Matched 1 times with 6
Matched 1 times with 109
Matched 1 times with 142
iou for matched labels tensor([0.1822, 0.1094, 0.0285])
Matched labels: ['dresser', 'bed', 'closet_door']
Clip similarities: [0.60205078125, 0.6103515625, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(103), tensor(43), tensor(139)]
DEBUG uniques tensor([ 43, 103, 139]) tensor([1, 1, 1])
Matched 1 times with 43
Matched 1 times with 103
Matched 1 times with 139
iou for matched labels tensor([0.5185, 0.6894, 0.8098])
Matched labels: ['toilet_paper_holder', 'door', 'bin']
Clip similarities: [0.68505859375, 0.72705078125, 0.57275390625]
DEBUG best_match_after_iou_check [tensor(3), tensor(159)]
DEBUG uniques tensor([  3, 159]) tensor([1, 1])
Matched 1 times with 3
Matched 1 times with 159
iou for matched labels tensor([0.7029, 0.5746])
Matched labels: ['refrigerator', 'refrigerator']
Clip similarities: [0.6962890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(76), tensor(61)]
DEBUG uniques tensor([61, 76]) tensor([1, 1])
Matched 1 times with 61
Matched 1 times with 76
iou for matched labels tensor([0.0434, 0.1753])
Matched labels: ['towel', 'shower_curtain']
Clip similarities: [0.6962890625, 0.8310546875]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.7983])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
DEBUG best_match_after_iou_check [tensor(184), tensor(184)]
DEBUG uniques tensor([184]) tensor([2])
Matched 2 times with 184
Merge stage2 masks
iou for matched labels tensor([0.6891])
Matched labels: ['bathroom_stall_door']
Clip similarities: [0.7685546875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(87), tensor(120)]
DEBUG uniques tensor([ 87, 120]) tensor([1, 1])
Matched 1 times with 87
Matched 1 times with 120
iou for matched labels tensor([0.8409, 0.7318])
Matched labels: ['door', 'power_outlet']
Clip similarities: [0.72705078125, 0.62548828125]
DEBUG best_match_after_iou_check [tensor(16)]
DEBUG uniques tensor([16]) tensor([1])
Matched 1 times with 16
iou for matched labels tensor([0.6631])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(215), tensor(228)]
DEBUG uniques tensor([215, 228]) tensor([1, 1])
Matched 1 times with 215
Matched 1 times with 228
iou for matched labels tensor([0.2944, 0.1783])
Matched labels: ['shelf', 'person']
Clip similarities: [0.6923828125, 0.6611328125]
DEBUG best_match_after_iou_check [tensor(80), tensor(126), tensor(140), tensor(249)]
DEBUG uniques tensor([ 80, 126, 140, 249]) tensor([1, 1, 1, 1])
Matched 1 times with 80
Matched 1 times with 126
Matched 1 times with 140
Matched 1 times with 249
iou for matched labels tensor([0.9065, 0.6966, 0.5393, 0.4777])
Matched labels: ['refrigerator', 'door', 'shower_wall', 'closet_door']
Clip similarities: [0.6962890625, 0.72705078125, 0.96240234375, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(123), tensor(72)]
Select thresholds for refinement:  21%|██        | 30/142 [00:07<00:34,  3.25it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:07<00:31,  3.57it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:08<00:30,  3.63it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:08<00:29,  3.65it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:08<00:33,  3.22it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:09<00:33,  3.22it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:09<00:34,  3.05it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:09<00:33,  3.17it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:10<00:30,  3.41it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:10<00:29,  3.53it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:10<00:26,  3.88it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:10<00:23,  4.30it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:10<00:25,  3.95it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:11<00:28,  3.52it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:11<00:31,  3.14it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:11<00:24,  3.89it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:12<00:22,  4.20it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:12<00:22,  4.19it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:12<00:27,  3.45it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:12<00:28,  3.32it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:13<00:25,  3.56it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:13<00:21,  4.32it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:13<00:21,  4.15it/s]DEBUG uniques tensor([ 72, 123]) tensor([1, 1])
Matched 1 times with 72
Matched 1 times with 123
iou for matched labels tensor([0.4137, 0.1491])
Matched labels: ['bookshelf', 'shelf']
Clip similarities: [0.65966796875, 0.6923828125]
DEBUG best_match_after_iou_check [tensor(55), tensor(10)]
DEBUG uniques tensor([10, 55]) tensor([1, 1])
Matched 1 times with 10
Matched 1 times with 55
iou for matched labels tensor([0.7327, 0.8272])
Matched labels: ['door', 'closet_door']
Clip similarities: [0.72705078125, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(2), tensor(50), tensor(78), tensor(78)]
DEBUG uniques tensor([ 2, 50, 78]) tensor([1, 1, 2])
Matched 1 times with 2
Matched 1 times with 50
Matched 2 times with 78
Merge stage2 masks
iou for matched labels tensor([0.8874, 0.4808, 0.4624])
Matched labels: ['door', 'bed', 'shower_curtain_rod']
Clip similarities: [0.72705078125, 0.6103515625, 0.75048828125]
DEBUG best_match_after_iou_check [tensor(139), tensor(49), tensor(90)]
DEBUG uniques tensor([ 49,  90, 139]) tensor([1, 1, 1])
Matched 1 times with 49
Matched 1 times with 90
Matched 1 times with 139
iou for matched labels tensor([0.8430, 0.7687, 0.5084])
Matched labels: ['closet_door', 'blinds', 'blinds']
Clip similarities: [0.7216796875, 0.63720703125, 0.63720703125]
DEBUG best_match_after_iou_check [tensor(277), tensor(337), tensor(3)]
DEBUG uniques tensor([  3, 277, 337]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 277
Matched 1 times with 337
iou for matched labels tensor([0.3545, 0.1821, 0.7449])
Matched labels: ['pillar', 'tube', 'refrigerator']
Clip similarities: [0.63330078125, 0.62890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(148), tensor(129), tensor(175), tensor(175), tensor(211), tensor(287), tensor(168)]
DEBUG uniques tensor([129, 148, 168, 175, 211, 287]) tensor([1, 1, 1, 2, 1, 1])
Matched 1 times with 129
Matched 1 times with 148
Matched 1 times with 168
Matched 2 times with 175
Merge stage2 masks
Matched 1 times with 211
Matched 1 times with 287
iou for matched labels tensor([0.8854, 0.7383, 0.2223, 0.1876, 0.0236, 0.4167])
Matched labels: ['refrigerator', 'shower_curtain', 'bathroom_stall_door', 'doorframe', 'picture', 'shower_wall']
Clip similarities: [0.6962890625, 0.8310546875, 0.7685546875, 0.67919921875, 0.6748046875, 0.96240234375]
DEBUG best_match_after_iou_check [tensor(395), tensor(119)]
DEBUG uniques tensor([119, 395]) tensor([1, 1])
Matched 1 times with 119
Matched 1 times with 395
iou for matched labels tensor([0.4454, 0.4866])
Matched labels: ['pillar', 'monitor']
Clip similarities: [0.63330078125, 0.60498046875]
DEBUG best_match_after_iou_check [tensor(43)]
DEBUG uniques tensor([43]) tensor([1])
Matched 1 times with 43
iou for matched labels tensor([0.6167])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(34), tensor(170), tensor(125)]
DEBUG uniques tensor([ 34, 125, 170]) tensor([1, 1, 1])
Matched 1 times with 34
Matched 1 times with 125
Matched 1 times with 170
iou for matched labels tensor([0.6805, 0.2829, 0.1016])
Matched labels: ['curtain', 'lamp', 'lamp']
Clip similarities: [0.70263671875, 0.6162109375, 0.6162109375]
DEBUG best_match_after_iou_check [tensor(10), tensor(103), tensor(9)]
DEBUG uniques tensor([  9,  10, 103]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 10
Matched 1 times with 103
iou for matched labels tensor([0.6788, 0.4553, 0.0823])
Matched labels: ['stair_rail', 'chair', 'blackboard']
Clip similarities: [0.55224609375, 0.615234375, 0.5986328125]
DEBUG best_match_after_iou_check [tensor(131), tensor(47), tensor(3), tensor(2)]
DEBUG uniques tensor([  2,   3,  47, 131]) tensor([1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 3
Matched 1 times with 47
Matched 1 times with 131
iou for matched labels tensor([0.4707, 0.7521, 0.6507, 0.7998])
Matched labels: ['stair_rail', 'closet_door', 'pipe', 'radiator']
Clip similarities: [0.55224609375, 0.7216796875, 0.63671875, 0.64990234375]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.6913])
Matched labels: ['file_cabinet']
Clip similarities: [0.6201171875]
DEBUG best_match_after_iou_check [tensor(208), tensor(104), tensor(14)]
DEBUG uniques tensor([ 14, 104, 208]) tensor([1, 1, 1])
Matched 1 times with 14
Matched 1 times with 104
Matched 1 times with 208
iou for matched labels tensor([0.7847, 0.6397, 0.5479])
Matched labels: ['counter', 'bookshelf', 'blinds']
Clip similarities: [0.654296875, 0.65966796875, 0.63720703125]
DEBUG best_match_after_iou_check [tensor(7), tensor(2), tensor(6), tensor(57), tensor(54)]
DEBUG uniques tensor([ 2,  6,  7, 54, 57]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 6
Matched 1 times with 7
Matched 1 times with 54
Matched 1 times with 57
iou for matched labels tensor([0.4206, 0.6917, 0.7166, 0.6783, 0.3815])
Matched labels: ['mailbox', 'mailbox', 'mailbox', 'file_cabinet', 'door']
Clip similarities: [0.63916015625, 0.63916015625, 0.63916015625, 0.6201171875, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(52), tensor(52), tensor(70), tensor(229), tensor(236), tensor(236), tensor(202), tensor(182), tensor(304)]
DEBUG uniques tensor([ 52,  70, 182, 202, 229, 236, 304]) tensor([2, 1, 1, 1, 1, 2, 1])
Matched 2 times with 52
Merge stage2 masks
Matched 1 times with 70
Matched 1 times with 182
Matched 1 times with 202
Matched 1 times with 229
Matched 2 times with 236
Merge stage2 masks
Matched 1 times with 304
iou for matched labels tensor([0.5903, 0.4667, 0.7757, 0.2116, 0.4925, 0.6056, 0.4478])
Matched labels: ['door', 'doorframe', 'doorframe', 'pipe', 'shower_door', 'shower_door', 'refrigerator']
Clip similarities: [0.72705078125, 0.67919921875, 0.67919921875, 0.63671875, 0.85888671875, 0.85888671875, 0.6962890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(76), tensor(117)]
DEBUG uniques tensor([ 76, 117]) tensor([1, 1])
Matched 1 times with 76
Matched 1 times with 117
iou for matched labels tensor([0.2986, 0.3950])
Matched labels: ['sink', 'door']
Clip similarities: [0.68603515625, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(10), tensor(86), tensor(10)]
DEBUG uniques tensor([10, 86]) tensor([2, 1])
Matched 2 times with 10
Merge stage2 masks
Matched 1 times with 86
iou for matched labels tensor([0.6325, 0.5551])
Matched labels: ['refrigerator', 'refrigerator']
Clip similarities: [0.6962890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(65), tensor(51), tensor(228), tensor(239), tensor(44)]
DEBUG uniques tensor([ 44,  51,  65, 228, 239]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 44
Matched 1 times with 51
Matched 1 times with 65
Matched 1 times with 228
Matched 1 times with 239
iou for matched labels tensor([0.9105, 0.3259, 0.4749, 0.3518, 0.9160])
Matched labels: ['door', 'dustpan', 'poster', 'door', 'door']
Clip similarities: [0.72705078125, 0.59326171875, 0.62158203125, 0.72705078125, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(52), tensor(52)]
DEBUG uniques tensor([52]) tensor([2])
Matched 2 times with 52
Merge stage2 masks
iou for matched labels tensor([0.6669])
Matched labels: ['bookshelf']
Clip similarities: [0.65966796875]
DEBUG best_match_after_iou_check [tensor(41), tensor(8), tensor(27)]
DEBUG uniques tensor([ 8, 27, 41]) tensor([1, 1, 1])
Matched 1 times with 8
Matched 1 times with 27
Matched 1 times with 41
iou for matched labels tensor([0.3701, 0.8488, 0.4471])
Matched labels: ['door', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.72705078125, 0.6201171875, 0.6201171875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(28), tensor(132)]
DEBUG uniques tensor([ 28, 132]) tensor([1, 1])
Matched 1 times with 28
Matched 1 times with 132
iou for matched labels tensor([0.3694, 0.0606])
Matched labels: ['shelf', 'desk']
Clip similarities: [0.6923828125, 0.56689453125]
DEBUG best_match_after_iou_check [tensor(11), tensor(191), tensor(247)]
DEBUG uniques tensor([ 11, 191, 247]) tensor([1, 1, 1])
Matched 1 times with 11
Matched 1 times with 191
Matched 1 times with 247
iou for matched labels Select thresholds for refinement:  37%|███▋      | 53/142 [00:13<00:22,  4.01it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:14<00:22,  3.99it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:14<00:20,  4.18it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:14<00:18,  4.75it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:14<00:18,  4.56it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:14<00:17,  4.75it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:15<00:18,  4.51it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:15<00:18,  4.43it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:15<00:19,  4.25it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:16<00:21,  3.65it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:16<00:17,  4.42it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:16<00:18,  4.24it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:16<00:16,  4.75it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:16<00:15,  4.82it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:16<00:15,  4.88it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:17<00:14,  4.97it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:17<00:16,  4.45it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:17<00:14,  5.06it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:17<00:12,  5.43it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:18<00:12,  5.44it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:18<00:12,  5.55it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:18<00:14,  4.68it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:18<00:14,  4.43it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:19<00:16,  4.05it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:19<00:15,  4.14it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:19<00:14,  4.42it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:19<00:14,  4.33it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:20<00:16,  3.61it/s]tensor([0.7798, 0.7646, 0.1864])
Matched labels: ['whiteboard', 'closet_wall', 'office_chair']
Clip similarities: [0.59130859375, 0.77099609375, 0.591796875]
DEBUG best_match_after_iou_check [tensor(203), tensor(152), tensor(251)]
DEBUG uniques tensor([152, 203, 251]) tensor([1, 1, 1])
Matched 1 times with 152
Matched 1 times with 203
Matched 1 times with 251
iou for matched labels tensor([0.2995, 0.3790, 0.2484])
Matched labels: ['shelf', 'towel', 'bulletin_board']
Clip similarities: [0.6923828125, 0.6962890625, 0.65966796875]
DEBUG best_match_after_iou_check [tensor(62)]
DEBUG uniques tensor([62]) tensor([1])
Matched 1 times with 62
iou for matched labels tensor([0.1047])
Matched labels: ['chair']
Clip similarities: [0.615234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(90), tensor(55), tensor(173)]
DEBUG uniques tensor([ 55,  90, 173]) tensor([1, 1, 1])
Matched 1 times with 55
Matched 1 times with 90
Matched 1 times with 173
iou for matched labels tensor([0.6350, 0.3742, 0.4748])
Matched labels: ['door', 'doorframe', 'door']
Clip similarities: [0.72705078125, 0.67919921875, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(76), tensor(108), tensor(108)]
DEBUG uniques tensor([ 76, 108]) tensor([1, 2])
Matched 1 times with 76
Matched 2 times with 108
Merge stage2 masks
iou for matched labels tensor([0.6818, 0.4007])
Matched labels: ['closet_door', 'closet_door']
Clip similarities: [0.7216796875, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(148), tensor(147), tensor(60), tensor(148), tensor(65), tensor(63)]
DEBUG uniques tensor([ 60,  63,  65, 147, 148]) tensor([1, 1, 1, 1, 2])
Matched 1 times with 60
Matched 1 times with 63
Matched 1 times with 65
Matched 1 times with 147
Matched 2 times with 148
Merge stage2 masks
iou for matched labels tensor([0.2751, 0.3901, 0.7135, 0.1546, 0.3494])
Matched labels: ['doorframe', 'oven', 'door', 'pipe', 'doorframe']
Clip similarities: [0.67919921875, 0.66552734375, 0.72705078125, 0.63671875, 0.67919921875]
DEBUG best_match_after_iou_check [tensor(61), tensor(28)]
DEBUG uniques tensor([28, 61]) tensor([1, 1])
Matched 1 times with 28
Matched 1 times with 61
iou for matched labels tensor([0.5470, 0.8333])
Matched labels: ['blackboard', 'closet_door']
Clip similarities: [0.5986328125, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(1), tensor(84), tensor(78)]
DEBUG uniques tensor([ 1, 78, 84]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 78
Matched 1 times with 84
iou for matched labels tensor([0.7962, 0.6333, 0.5483])
Matched labels: ['radiator', 'mat', 'door']
Clip similarities: [0.64990234375, 0.6123046875, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(102), tensor(21), tensor(65), tensor(29), tensor(120), tensor(95), tensor(95)]
DEBUG uniques tensor([ 21,  29,  65,  95, 102, 120]) tensor([1, 1, 1, 2, 1, 1])
Matched 1 times with 21
Matched 1 times with 29
Matched 1 times with 65
Matched 2 times with 95
Merge stage2 masks
Matched 1 times with 102
Matched 1 times with 120
iou for matched labels tensor([0.7412, 0.2543, 0.6815, 0.8083, 0.3500, 0.4676])
Matched labels: ['closet_wall', 'bed', 'curtain', 'door', 'closet_wall', 'closet_wall']
Clip similarities: [0.77099609375, 0.6103515625, 0.70263671875, 0.72705078125, 0.77099609375, 0.77099609375]
DEBUG best_match_after_iou_check [tensor(135), tensor(25)]
DEBUG uniques tensor([ 25, 135]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 135
iou for matched labels tensor([0.4487, 0.8444])
Matched labels: ['shower_curtain_rod', 'closet_door']
Clip similarities: [0.75048828125, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(50), tensor(225)]
DEBUG uniques tensor([ 50, 225]) tensor([1, 1])
Matched 1 times with 50
Matched 1 times with 225
iou for matched labels tensor([0.6358, 0.7182])
Matched labels: ['refrigerator', 'door']
Clip similarities: [0.6962890625, 0.72705078125]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(211)]
DEBUG uniques tensor([211]) tensor([1])
Matched 1 times with 211
iou for matched labels tensor([0.5208])
Matched labels: ['lamp']
Clip similarities: [0.6162109375]
DEBUG best_match_after_iou_check [tensor(27), tensor(1)]
DEBUG uniques tensor([ 1, 27]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 27
iou for matched labels tensor([0.7041, 0.6764])
Matched labels: ['trash_can', 'door']
Clip similarities: [0.62548828125, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(100), tensor(202)]
DEBUG uniques tensor([100, 202]) tensor([1, 1])
Matched 1 times with 100
Matched 1 times with 202
iou for matched labels tensor([0.7485, 0.3940])
Matched labels: ['door', 'projector_screen']
Clip similarities: [0.72705078125, 0.62841796875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(59)]
DEBUG uniques tensor([59]) tensor([1])
Matched 1 times with 59
iou for matched labels tensor([0.8125])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(66), tensor(125), tensor(35), tensor(66)]
DEBUG uniques tensor([ 35,  66, 125]) tensor([1, 2, 1])
Matched 1 times with 35
Matched 2 times with 66
Merge stage2 masks
Matched 1 times with 125
iou for matched labels tensor([0.2663, 0.5383, 0.4566])
Matched labels: ['bathroom_stall', 'bathroom_stall', 'bathroom_stall']
Clip similarities: [0.798828125, 0.798828125, 0.798828125]
DEBUG best_match_after_iou_check [tensor(175), tensor(200), tensor(177)]
DEBUG uniques tensor([175, 177, 200]) tensor([1, 1, 1])
Matched 1 times with 175
Matched 1 times with 177
Matched 1 times with 200
iou for matched labels tensor([0.3143, 0.7586, 0.2170])
Matched labels: ['closet_door', 'shower_wall', 'shower_wall']
Clip similarities: [0.7216796875, 0.96240234375, 0.96240234375]
DEBUG best_match_after_iou_check [tensor(23)]
DEBUG uniques tensor([23]) tensor([1])
Matched 1 times with 23
iou for matched labels tensor([0.4387])
Matched labels: ['coffee_table']
Clip similarities: [0.55810546875]
DEBUG best_match_after_iou_check [tensor(72), tensor(146), tensor(52), tensor(95)]
DEBUG uniques tensor([ 52,  72,  95, 146]) tensor([1, 1, 1, 1])
Matched 1 times with 52
Matched 1 times with 72
Matched 1 times with 95
Matched 1 times with 146
iou for matched labels tensor([0.8298, 0.2084, 0.6997, 0.2903])
Matched labels: ['closet_door', 'bin', 'bathroom_stall_door', 'mailbox']
Clip similarities: [0.7216796875, 0.57275390625, 0.7685546875, 0.63916015625]
DEBUG best_match_after_iou_check [tensor(166), tensor(95)]
DEBUG uniques tensor([ 95, 166]) tensor([1, 1])
Matched 1 times with 95
Matched 1 times with 166
iou for matched labels tensor([0.6339, 0.8074])
Matched labels: ['doorframe', 'doorframe']
Clip similarities: [0.67919921875, 0.67919921875]
DEBUG best_match_after_iou_check [tensor(45), tensor(12)]
DEBUG uniques tensor([12, 45]) tensor([1, 1])
Matched 1 times with 12
Matched 1 times with 45
iou for matched labels tensor([0.6639, 0.8938])
Matched labels: ['refrigerator', 'refrigerator']
Clip similarities: [0.6962890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(99), tensor(183)]
DEBUG uniques tensor([ 99, 183]) tensor([1, 1])
Matched 1 times with 99
Matched 1 times with 183
iou for matched labels tensor([0.6507, 0.3404])
Matched labels: ['projector_screen', 'blackboard']
Clip similarities: [0.62841796875, 0.5986328125]
DEBUG best_match_after_iou_check [tensor(104), tensor(99)]
DEBUG uniques tensor([ 99, 104]) tensor([1, 1])
Matched 1 times with 99
Matched 1 times with 104
iou for matched labels tensor([0.4709, 0.4916])
Matched labels: ['closet_wall', 'office_chair']
Clip similarities: [0.77099609375, 0.591796875]
DEBUG best_match_after_iou_check [tensor(20)]
DEBUG uniques tensor([20]) tensor([1])
Matched 1 times with 20
iou for matched labels tensor([0.5173])
Matched labels: ['blackboard']
Clip similarities: [0.5986328125]
DEBUG best_match_after_iou_check [tensor(10)]
DEBUG uniques tensor([10]) tensor([1])
Matched 1 times with 10
iou for matched labels tensor([0.7087])
Matched labels: ['blackboard']
Clip similarities: [0.5986328125]
DEBUG best_match_after_iou_check [tensor(187), tensor(87)]
DEBUG uniques tensor([ 87, 187]) tensor([1, 1])
Select thresholds for refinement:  58%|█████▊    | 82/142 [00:20<00:16,  3.71it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:20<00:14,  4.09it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:20<00:13,  4.40it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:21<00:13,  4.32it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:21<00:13,  4.15it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:21<00:12,  4.48it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:21<00:11,  4.60it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:21<00:09,  5.42it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:22<00:10,  4.79it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:22<00:09,  5.12it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:22<00:08,  5.59it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:22<00:10,  4.59it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:23<00:10,  4.41it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:23<00:10,  4.22it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:23<00:10,  4.21it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:23<00:11,  3.85it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:24<00:11,  3.62it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:24<00:10,  4.16it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:24<00:10,  4.09it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:24<00:09,  4.02it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:25<00:09,  4.15it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:25<00:08,  4.35it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:25<00:07,  4.85it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:25<00:06,  5.69it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:26<00:09,  3.74it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:26<00:09,  3.61it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:26<00:09,  3.61it/s]Matched 1 times with 87
Matched 1 times with 187
iou for matched labels tensor([0.3368, 0.0738])
Matched labels: ['pillow', 'printer']
Clip similarities: [0.6611328125, 0.60595703125]
DEBUG best_match_after_iou_check [tensor(117), tensor(75)]
DEBUG uniques tensor([ 75, 117]) tensor([1, 1])
Matched 1 times with 75
Matched 1 times with 117
iou for matched labels tensor([0.5291, 0.3432])
Matched labels: ['towel', 'closet_door']
Clip similarities: [0.6962890625, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(95), tensor(147), tensor(173)]
DEBUG uniques tensor([ 95, 147, 173]) tensor([1, 1, 1])
Matched 1 times with 95
Matched 1 times with 147
Matched 1 times with 173
iou for matched labels tensor([0.3317, 0.3518, 0.2386])
Matched labels: ['office_chair', 'closet_wall', 'desk']
Clip similarities: [0.591796875, 0.77099609375, 0.56689453125]
DEBUG best_match_after_iou_check [tensor(92)]
DEBUG uniques tensor([92]) tensor([1])
Matched 1 times with 92
iou for matched labels tensor([0.4590])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(6), tensor(220), tensor(86), tensor(30), tensor(61)]
DEBUG uniques tensor([  6,  30,  61,  86, 220]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 30
Matched 1 times with 61
Matched 1 times with 86
Matched 1 times with 220
iou for matched labels tensor([0.3260, 0.3803, 0.2660, 0.4992, 0.3412])
Matched labels: ['bathroom_stall_door', 'bathroom_stall_door', 'shower_wall', 'door', 'paper_towel_dispenser']
Clip similarities: [0.7685546875, 0.7685546875, 0.96240234375, 0.72705078125, 0.67431640625]
DEBUG best_match_after_iou_check [tensor(42)]
DEBUG uniques tensor([42]) tensor([1])
Matched 1 times with 42
iou for matched labels tensor([0.6411])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
DEBUG best_match_after_iou_check [tensor(111), tensor(108), tensor(74), tensor(124), tensor(80)]
DEBUG uniques tensor([ 74,  80, 108, 111, 124]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 74
Matched 1 times with 80
Matched 1 times with 108
Matched 1 times with 111
Matched 1 times with 124
iou for matched labels tensor([0.4763, 0.3936, 0.7690, 0.8436, 0.0811])
Matched labels: ['bathroom_counter', 'bathroom_stall', 'paper_towel_dispenser', 'trash_can', 'bag']
Clip similarities: [0.7080078125, 0.798828125, 0.67431640625, 0.62548828125, 0.646484375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(80), tensor(67), tensor(49)]
DEBUG uniques tensor([49, 67, 80]) tensor([1, 1, 1])
Matched 1 times with 49
Matched 1 times with 67
Matched 1 times with 80
iou for matched labels tensor([0.3898, 0.4663, 0.2034])
Matched labels: ['refrigerator', 'stair_rail', 'whiteboard']
Clip similarities: [0.6962890625, 0.55224609375, 0.59130859375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(81)]
DEBUG uniques tensor([81]) tensor([1])
Matched 1 times with 81
iou for matched labels tensor([0.8610])
Matched labels: ['shower_curtain']
Clip similarities: [0.8310546875]
DEBUG best_match_after_iou_check [tensor(88), tensor(88), tensor(101), tensor(186)]
DEBUG uniques tensor([ 88, 101, 186]) tensor([2, 1, 1])
Matched 2 times with 88
Merge stage2 masks
Matched 1 times with 101
Matched 1 times with 186
iou for matched labels tensor([0.6174, 0.2059, 0.5202])
Matched labels: ['door', 'bathroom_counter', 'door']
Clip similarities: [0.72705078125, 0.7080078125, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(239), tensor(127), tensor(19)]
DEBUG uniques tensor([ 19, 127, 239]) tensor([1, 1, 1])
Matched 1 times with 19
Matched 1 times with 127
Matched 1 times with 239
iou for matched labels tensor([0.3870, 0.6252, 0.5394])
Matched labels: ['office_chair', 'light_switch', 'door']
Clip similarities: [0.591796875, 0.66455078125, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(247), tensor(83)]
DEBUG uniques tensor([ 83, 247]) tensor([1, 1])
Matched 1 times with 83
Matched 1 times with 247
iou for matched labels tensor([0.6679, 0.5404])
Matched labels: ['projector_screen', 'power_outlet']
Clip similarities: [0.62841796875, 0.62548828125]
DEBUG best_match_after_iou_check [tensor(95), tensor(95)]
DEBUG uniques tensor([95]) tensor([2])
Matched 2 times with 95
Merge stage2 masks
iou for matched labels tensor([0.4353])
Matched labels: ['closet_door']
Clip similarities: [0.7216796875]
DEBUG best_match_after_iou_check [tensor(81)]
DEBUG uniques tensor([81]) tensor([1])
Matched 1 times with 81
iou for matched labels tensor([0.4788])
Matched labels: ['shower_curtain']
Clip similarities: [0.8310546875]
DEBUG best_match_after_iou_check [tensor(1), tensor(128), tensor(151), tensor(320), tensor(178)]
DEBUG uniques tensor([  1, 128, 151, 178, 320]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 128
Matched 1 times with 151
Matched 1 times with 178
Matched 1 times with 320
iou for matched labels tensor([0.8905, 0.3275, 0.3494, 0.0489, 0.4281])
Matched labels: ['door', 'file_cabinet', 'whiteboard', 'desk', 'refrigerator']
Clip similarities: [0.72705078125, 0.6201171875, 0.59130859375, 0.56689453125, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(118), tensor(198), tensor(110), tensor(50)]
DEBUG uniques tensor([ 50, 110, 118, 198]) tensor([1, 1, 1, 1])
Matched 1 times with 50
Matched 1 times with 110
Matched 1 times with 118
Matched 1 times with 198
iou for matched labels tensor([0.6007, 0.5783, 0.4321, 0.5256])
Matched labels: ['file_cabinet', 'bathroom_cabinet', 'fan', 'fan']
Clip similarities: [0.6201171875, 0.70361328125, 0.6591796875, 0.6591796875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(62), tensor(156), tensor(67), tensor(32)]
DEBUG uniques tensor([ 32,  62,  67, 156]) tensor([1, 1, 1, 1])
Matched 1 times with 32
Matched 1 times with 62
Matched 1 times with 67
Matched 1 times with 156
iou for matched labels tensor([0.0020, 0.7274, 0.7108, 0.4023])
Matched labels: ['shelf', 'shelf', 'blinds', 'blinds']
Clip similarities: [0.6923828125, 0.6923828125, 0.63720703125, 0.63720703125]
DEBUG best_match_after_iou_check [tensor(230), tensor(230), tensor(96), tensor(82), tensor(85)]
DEBUG uniques tensor([ 82,  85,  96, 230]) tensor([1, 1, 1, 2])
Matched 1 times with 82
Matched 1 times with 85
Matched 1 times with 96
Matched 2 times with 230
Merge stage2 masks
iou for matched labels tensor([0.5837, 0.6784, 0.2148, 0.7035])
Matched labels: ['blackboard', 'coat_rack', 'door', 'light_switch']
Clip similarities: [0.5986328125, 0.64697265625, 0.72705078125, 0.66455078125]
DEBUG best_match_after_iou_check [tensor(68)]
DEBUG uniques tensor([68]) tensor([1])
Matched 1 times with 68
iou for matched labels tensor([0.5457])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
DEBUG best_match_after_iou_check [tensor(97), tensor(6)]
DEBUG uniques tensor([ 6, 97]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 97
iou for matched labels tensor([0.6161, 0.4534])
Matched labels: ['projector_screen', 'refrigerator']
Clip similarities: [0.62841796875, 0.6962890625]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.6824])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(153), tensor(27)]
DEBUG uniques tensor([ 27, 153]) tensor([1, 1])
Matched 1 times with 27
Matched 1 times with 153
iou for matched labels tensor([0.4977, 0.3437])
Matched labels: ['chair', 'radiator']
Clip similarities: [0.615234375, 0.64990234375]
DEBUG best_match_after_iou_check [tensor(269)]
DEBUG uniques tensor([269]) tensor([1])
Matched 1 times with 269
iou for matched labels tensor([0.1279])
Matched labels: ['chair']
Clip similarities: [0.615234375]
DEBUG best_match_after_iou_check [tensor(2), tensor(114), tensor(62), tensor(50), tensor(85)]
DEBUG uniques tensor([  2,  50,  62,  85, 114]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 50
Matched 1 times with 62
Matched 1 times with 85
Matched 1 times with 114
iou for matched labels tensor([0.6885, 0.9198, 0.7804, 0.4366, 0.2817])
Matched labels: Select thresholds for refinement:  77%|███████▋  | 110/142 [00:27<00:09,  3.28it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:27<00:08,  3.69it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:27<00:07,  3.82it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:27<00:08,  3.56it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:28<00:08,  3.26it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:28<00:08,  3.37it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:28<00:07,  3.64it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:28<00:06,  4.01it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:28<00:05,  4.44it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:29<00:05,  3.90it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:29<00:05,  4.12it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:29<00:05,  3.88it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:30<00:04,  4.59it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:30<00:03,  4.92it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:30<00:03,  4.51it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:30<00:03,  4.51it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:30<00:02,  5.32it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:31<00:03,  3.89it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:31<00:02,  4.69it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:31<00:02,  4.56it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:31<00:02,  4.71it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:32<00:02,  4.28it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:32<00:01,  4.50it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:32<00:01,  4.92it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:32<00:01,  4.74it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:33<00:01,  4.19it/s]['mattress', 'door', 'closet_door', 'chair', 'ceiling_light']
Clip similarities: [0.6708984375, 0.72705078125, 0.7216796875, 0.615234375, 0.65087890625]
DEBUG best_match_after_iou_check [tensor(101), tensor(24)]
DEBUG uniques tensor([ 24, 101]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 101
iou for matched labels tensor([0.6927, 0.5827])
Matched labels: ['curtain', 'closet_door']
Clip similarities: [0.70263671875, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(51), tensor(147)]
DEBUG uniques tensor([ 51, 147]) tensor([1, 1])
Matched 1 times with 51
Matched 1 times with 147
iou for matched labels tensor([0.4515, 0.6316])
Matched labels: ['closet_wall', 'closet_door']
Clip similarities: [0.77099609375, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(187), tensor(38), tensor(327), tensor(152)]
DEBUG uniques tensor([ 38, 152, 187, 327]) tensor([1, 1, 1, 1])
Matched 1 times with 38
Matched 1 times with 152
Matched 1 times with 187
Matched 1 times with 327
iou for matched labels tensor([0.1981, 0.3467, 0.4605, 0.3165])
Matched labels: ['whiteboard', 'door', 'power_outlet', 'shower_curtain_rod']
Clip similarities: [0.59130859375, 0.72705078125, 0.62548828125, 0.75048828125]
DEBUG best_match_after_iou_check [tensor(167), tensor(62), tensor(352), tensor(124), tensor(352)]
DEBUG uniques tensor([ 62, 124, 167, 352]) tensor([1, 1, 1, 2])
Matched 1 times with 62
Matched 1 times with 124
Matched 1 times with 167
Matched 2 times with 352
Merge stage2 masks
iou for matched labels tensor([0.2281, 0.7082, 0.6505, 0.3947])
Matched labels: ['shower_curtain', 'curtain', 'shower_door', 'doorframe']
Clip similarities: [0.8310546875, 0.70263671875, 0.85888671875, 0.67919921875]
DEBUG best_match_after_iou_check [tensor(33), tensor(126)]
DEBUG uniques tensor([ 33, 126]) tensor([1, 1])
Matched 1 times with 33
Matched 1 times with 126
iou for matched labels tensor([0.4938, 0.7722])
Matched labels: ['door', 'closet_wall']
Clip similarities: [0.72705078125, 0.77099609375]
DEBUG best_match_after_iou_check [tensor(119), tensor(42), tensor(120), tensor(42)]
DEBUG uniques tensor([ 42, 119, 120]) tensor([2, 1, 1])
Matched 2 times with 42
Merge stage2 masks
Matched 1 times with 119
Matched 1 times with 120
iou for matched labels tensor([0.2644, 0.1552, 0.3059])
Matched labels: ['doorframe', 'closet_door', 'closet_door']
Clip similarities: [0.67919921875, 0.7216796875, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.8854])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
DEBUG best_match_after_iou_check [tensor(203)]
DEBUG uniques tensor([203]) tensor([1])
Matched 1 times with 203
iou for matched labels tensor([0.6346])
Matched labels: ['closet_door']
Clip similarities: [0.7216796875]
DEBUG best_match_after_iou_check [tensor(208), tensor(152)]
DEBUG uniques tensor([152, 208]) tensor([1, 1])
Matched 1 times with 152
Matched 1 times with 208
iou for matched labels tensor([0.1979, 0.5927])
Matched labels: ['office_chair', 'clock']
Clip similarities: [0.591796875, 0.68798828125]
DEBUG best_match_after_iou_check [tensor(60)]
DEBUG uniques tensor([60]) tensor([1])
Matched 1 times with 60
iou for matched labels tensor([0.7025])
Matched labels: ['closet_wall']
Clip similarities: [0.77099609375]
DEBUG best_match_after_iou_check [tensor(44), tensor(37), tensor(116), tensor(72), tensor(84)]
DEBUG uniques tensor([ 37,  44,  72,  84, 116]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 37
Matched 1 times with 44
Matched 1 times with 72
Matched 1 times with 84
Matched 1 times with 116
iou for matched labels tensor([0.3852, 0.2739, 0.3891, 0.5790, 0.4456])
Matched labels: ['tv_stand', 'bed', 'tv_stand', 'shelf', 'tv_stand']
Clip similarities: [0.61767578125, 0.6103515625, 0.61767578125, 0.6923828125, 0.61767578125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(62), tensor(53)]
DEBUG uniques tensor([53, 62]) tensor([1, 1])
Matched 1 times with 53
Matched 1 times with 62
iou for matched labels tensor([0.4650, 0.3636])
Matched labels: ['door', 'shelf']
Clip similarities: [0.72705078125, 0.6923828125]
DEBUG best_match_after_iou_check [tensor(176), tensor(117)]
DEBUG uniques tensor([117, 176]) tensor([1, 1])
Matched 1 times with 117
Matched 1 times with 176
iou for matched labels tensor([0.4503, 0.3997])
Matched labels: ['shower_wall', 'closet_door']
Clip similarities: [0.96240234375, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.8438])
Matched labels: ['door']
Clip similarities: [0.72705078125]
DEBUG best_match_after_iou_check [tensor(5)]
DEBUG uniques tensor([5]) tensor([1])
Matched 1 times with 5
iou for matched labels tensor([0.7459])
Matched labels: ['refrigerator']
Clip similarities: [0.6962890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(230), tensor(441), tensor(67)]
DEBUG uniques tensor([ 67, 230, 441]) tensor([1, 1, 1])
Matched 1 times with 67
Matched 1 times with 230
Matched 1 times with 441
iou for matched labels tensor([0.4602, 0.1260, 0.7572])
Matched labels: ['trash_can', 'person', 'door']
Clip similarities: [0.62548828125, 0.6611328125, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(113)]
DEBUG uniques tensor([113]) tensor([1])
Matched 1 times with 113
iou for matched labels tensor([0.0530])
Matched labels: ['paper']
Clip similarities: [0.67822265625]
DEBUG best_match_after_iou_check [tensor(173), tensor(64)]
DEBUG uniques tensor([ 64, 173]) tensor([1, 1])
Matched 1 times with 64
Matched 1 times with 173
iou for matched labels tensor([0.2659, 0.5612])
Matched labels: ['closet_door', 'closet_door']
Clip similarities: [0.7216796875, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(80), tensor(86), tensor(105)]
DEBUG uniques tensor([ 80,  86, 105]) tensor([1, 1, 1])
Matched 1 times with 80
Matched 1 times with 86
Matched 1 times with 105
iou for matched labels tensor([0.6492, 0.4117, 0.7915])
Matched labels: ['shower_wall', 'shower_wall', 'bathroom_stall']
Clip similarities: [0.96240234375, 0.96240234375, 0.798828125]
DEBUG best_match_after_iou_check [tensor(97)]
DEBUG uniques tensor([97]) tensor([1])
Matched 1 times with 97
iou for matched labels tensor([0.3108])
Matched labels: ['power_outlet']
Clip similarities: [0.62548828125]
DEBUG best_match_after_iou_check [tensor(39)]
DEBUG uniques tensor([39]) tensor([1])
Matched 1 times with 39
iou for matched labels tensor([0.5499])
Matched labels: ['cabinet']
Clip similarities: [0.6513671875]
DEBUG best_match_after_iou_check [tensor(39), tensor(61), tensor(63), tensor(29)]
DEBUG uniques tensor([29, 39, 61, 63]) tensor([1, 1, 1, 1])
Matched 1 times with 29
Matched 1 times with 39
Matched 1 times with 61
Matched 1 times with 63
iou for matched labels tensor([0.5090, 0.7127, 0.7317, 0.4160])
Matched labels: ['bathroom_counter', 'shower_wall', 'shower_wall', 'shower_door']
Clip similarities: [0.7080078125, 0.96240234375, 0.96240234375, 0.85888671875]
DEBUG best_match_after_iou_check [tensor(113), tensor(100), tensor(98), tensor(71), tensor(73)]
DEBUG uniques tensor([ 71,  73,  98, 100, 113]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 71
Matched 1 times with 73
Matched 1 times with 98
Matched 1 times with 100
Matched 1 times with 113
iou for matched labels tensor([0.3651, 0.5275, 0.5417, 0.5239, 0.4539])
Matched labels: ['lamp', 'closet_wall', 'doorframe', 'radiator', 'rail']
Clip similarities: [0.6162109375, 0.77099609375, 0.67919921875, 0.64990234375, 0.57177734375]
DEBUG best_match_after_iou_check [tensor(217), tensor(27)]
DEBUG uniques tensor([ 27, 217]) tensor([1, 1])
Matched 1 times with 27
Matched 1 times with 217
iou for matched labels tensor([0.3563, 0.1349])
Matched labels: ['bar', 'doorframe']
Clip similarities: [0.6474609375, 0.67919921875]
DEBUG best_match_after_iou_check [tensor(161), tensor(161), tensor(40), tensor(69), tensor(48)]
DEBUG uniques tensor([ 40,  48,  69, 161]) tensor([1, 1, 1, 2])
Matched 1 times with 40
Matched 1 times with 48
Matched 1 times with 69
Matched 2 times with 161
Merge stage2 masks
Select thresholds for refinement:  96%|█████████▋| 137/142 [00:33<00:01,  4.32it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:33<00:00,  4.29it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:33<00:00,  3.93it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:33<00:00,  4.50it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:34<00:00,  4.68it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:34<00:00,  3.96it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:34<00:00,  4.12it/s]
iou for matched labels tensor([0.6173, 0.5251, 0.4436, 0.3524])
Matched labels: ['radiator', 'dresser', 'bed', 'dresser']
Clip similarities: [0.64990234375, 0.60205078125, 0.6103515625, 0.60205078125]
DEBUG best_match_after_iou_check [tensor(81), tensor(185), tensor(147)]
DEBUG uniques tensor([ 81, 147, 185]) tensor([1, 1, 1])
Matched 1 times with 81
Matched 1 times with 147
Matched 1 times with 185
iou for matched labels tensor([0.7815, 0.8017, 0.4762])
Matched labels: ['radiator', 'coat_rack', 'closet_door']
Clip similarities: [0.64990234375, 0.64697265625, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(52), tensor(40), tensor(155), tensor(220), tensor(1), tensor(110)]
DEBUG uniques tensor([  1,  40,  52, 110, 155, 220]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 40
Matched 1 times with 52
Matched 1 times with 110
Matched 1 times with 155
Matched 1 times with 220
iou for matched labels tensor([0.7938, 0.6675, 0.4300, 0.2342, 0.7821, 0.2420])
Matched labels: ['closet_door', 'door', 'shelf', 'whiteboard', 'whiteboard', 'blinds']
Clip similarities: [0.7216796875, 0.72705078125, 0.6923828125, 0.59130859375, 0.59130859375, 0.63720703125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(65), tensor(85), tensor(90), tensor(49)]
DEBUG uniques tensor([49, 65, 85, 90]) tensor([1, 1, 1, 1])
Matched 1 times with 49
Matched 1 times with 65
Matched 1 times with 85
Matched 1 times with 90
iou for matched labels tensor([0.5382, 0.1437, 0.7401, 0.2177])
Matched labels: ['shower_wall', 'toilet_paper_holder', 'bathroom_stall_door', 'shower_door']
Clip similarities: [0.96240234375, 0.68505859375, 0.7685546875, 0.85888671875]
DEBUG best_match_after_iou_check [tensor(31), tensor(31), tensor(183), tensor(183), tensor(160), tensor(199), tensor(184), tensor(199)]
DEBUG uniques tensor([ 31, 160, 183, 184, 199]) tensor([2, 1, 2, 1, 2])
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 160
Matched 2 times with 183
Merge stage2 masks
Matched 1 times with 184
Matched 2 times with 199
Merge stage2 masks
iou for matched labels tensor([0.3537, 0.3742, 0.4314, 0.6547, 0.1619])
Matched labels: ['printer', 'paper_towel_roll', 'copier', 'closet_door', 'case_of_water_bottles']
Clip similarities: [0.60595703125, 0.60595703125, 0.60693359375, 0.7216796875, 0.61767578125]
Unique similarities: [0.55224609375, 0.55810546875, 0.56689453125, 0.56884765625, 0.57177734375, 0.57275390625, 0.59130859375, 0.591796875, 0.59326171875, 0.5986328125, 0.60205078125, 0.60498046875, 0.60595703125, 0.60693359375, 0.6103515625, 0.6123046875, 0.615234375, 0.6162109375, 0.61767578125, 0.6201171875, 0.62158203125, 0.62548828125, 0.62841796875, 0.62890625, 0.63330078125, 0.63671875, 0.63720703125, 0.63916015625, 0.646484375, 0.64697265625, 0.6474609375, 0.64990234375, 0.65087890625, 0.6513671875, 0.654296875, 0.6591796875, 0.65966796875, 0.6611328125, 0.66162109375, 0.66455078125, 0.66552734375, 0.6708984375, 0.67431640625, 0.6748046875, 0.67822265625, 0.67919921875, 0.68505859375, 0.68603515625, 0.68798828125, 0.6923828125, 0.6962890625, 0.70263671875, 0.70361328125, 0.7080078125, 0.7158203125, 0.7216796875, 0.72705078125, 0.75048828125, 0.7685546875, 0.77099609375, 0.798828125, 0.8310546875, 0.85888671875, 0.96240234375]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 58it [00:00, 579.85it/s]DEBUG all ious tensor([0.6930, 0.1393, 0.4449])
USE STAGE 1 MASK tensor(0.6930)
USE STAGE 2 MASK tensor(0.1393)
USE STAGE 2 MASK tensor(0.4449)
DEBUG all ious tensor([0.4802])
USE STAGE 1 MASK tensor(0.4802)
DEBUG all ious tensor([0.7789, 0.8962, 0.6330])
USE STAGE 1 MASK tensor(0.7789)
USE STAGE 1 MASK tensor(0.8962)
USE STAGE 1 MASK tensor(0.6330)
DEBUG all ious tensor([0.7257])
USE STAGE 1 MASK tensor(0.7257)
DEBUG all ious []
DEBUG all ious tensor([0.8632, 0.6449, 0.3915])
USE STAGE 1 MASK tensor(0.8632)
USE STAGE 1 MASK tensor(0.6449)
USE STAGE 2 MASK tensor(0.3915)
DEBUG all ious tensor([0.6834, 0.7240, 0.6791, 0.3151, 0.5130])
USE STAGE 1 MASK tensor(0.6834)
USE STAGE 1 MASK tensor(0.7240)
USE STAGE 1 MASK tensor(0.6791)
USE STAGE 2 MASK tensor(0.3151)
USE STAGE 1 MASK tensor(0.5130)
DEBUG all ious tensor([0.4711])
USE STAGE 1 MASK tensor(0.4711)
DEBUG all ious []
DEBUG all ious tensor([0.5825])
USE STAGE 1 MASK tensor(0.5825)
DEBUG all ious []
DEBUG all ious tensor([0.5806, 0.6549, 0.6285, 0.4362, 0.3584])
USE STAGE 1 MASK tensor(0.5806)
USE STAGE 1 MASK tensor(0.6549)
USE STAGE 1 MASK tensor(0.6285)
USE STAGE 2 MASK tensor(0.4362)
USE STAGE 2 MASK tensor(0.3584)
DEBUG all ious tensor([0.4744, 0.5590, 0.2706])
USE STAGE 1 MASK tensor(0.4744)
USE STAGE 1 MASK tensor(0.5590)
USE STAGE 2 MASK tensor(0.2706)
DEBUG all ious tensor([0.6647])
USE STAGE 1 MASK tensor(0.6647)
DEBUG all ious tensor([0.3382, 0.7359])
USE STAGE 2 MASK tensor(0.3382)
USE STAGE 1 MASK tensor(0.7359)
DEBUG all ious tensor([0.5333])
USE STAGE 1 MASK tensor(0.5333)
DEBUG all ious []
DEBUG all ious tensor([0.1870, 0.1833, 0.3835, 0.2978, 0.2009, 0.7251, 0.6284])
USE STAGE 2 MASK tensor(0.1870)
USE STAGE 2 MASK tensor(0.1833)
USE STAGE 2 MASK tensor(0.3835)
USE STAGE 2 MASK tensor(0.2978)
USE STAGE 2 MASK tensor(0.2009)
USE STAGE 1 MASK tensor(0.7251)
USE STAGE 1 MASK tensor(0.6284)
DEBUG all ious tensor([0.1822, 0.1094, 0.0285])
USE STAGE 2 MASK tensor(0.1822)
USE STAGE 2 MASK tensor(0.1094)
USE STAGE 2 MASK tensor(0.0285)
DEBUG all ious tensor([0.5185, 0.6894, 0.8098])
USE STAGE 1 MASK tensor(0.5185)
USE STAGE 1 MASK tensor(0.6894)
USE STAGE 1 MASK tensor(0.8098)
DEBUG all ious tensor([0.7029, 0.5746])
USE STAGE 1 MASK tensor(0.7029)
USE STAGE 1 MASK tensor(0.5746)
DEBUG all ious tensor([0.0434, 0.1753])
USE STAGE 2 MASK tensor(0.0434)
USE STAGE 2 MASK tensor(0.1753)
DEBUG all ious tensor([0.7983])
USE STAGE 1 MASK tensor(0.7983)
DEBUG all ious tensor([0.6891])
USE STAGE 1 MASK tensor(0.6891)
DEBUG all ious []
DEBUG all ious tensor([0.8409, 0.7318])
USE STAGE 1 MASK tensor(0.8409)
USE STAGE 1 MASK tensor(0.7318)
DEBUG all ious tensor([0.6631])
USE STAGE 1 MASK tensor(0.6631)
DEBUG all ious tensor([0.2944, 0.1783])
USE STAGE 2 MASK tensor(0.2944)
USE STAGE 2 MASK tensor(0.1783)
DEBUG all ious tensor([0.9065, 0.6966, 0.5393, 0.4777])
USE STAGE 1 MASK tensor(0.9065)
USE STAGE 1 MASK tensor(0.6966)
USE STAGE 1 MASK tensor(0.5393)
USE STAGE 1 MASK tensor(0.4777)
DEBUG all ious tensor([0.4137, 0.1491])
USE STAGE 2 MASK tensor(0.4137)
USE STAGE 2 MASK tensor(0.1491)
DEBUG all ious tensor([0.7327, 0.8272])
USE STAGE 1 MASK tensor(0.7327)
USE STAGE 1 MASK tensor(0.8272)
DEBUG all ious tensor([0.8874, 0.4808, 0.4624])
USE STAGE 1 MASK tensor(0.8874)
USE STAGE 1 MASK tensor(0.4808)
USE STAGE 1 MASK tensor(0.4624)
DEBUG all ious tensor([0.8430, 0.7687, 0.5084])
USE STAGE 1 MASK tensor(0.8430)
USE STAGE 1 MASK tensor(0.7687)
USE STAGE 1 MASK tensor(0.5084)
DEBUG all ious tensor([0.3545, 0.1821, 0.7449])
USE STAGE 2 MASK tensor(0.3545)
USE STAGE 2 MASK tensor(0.1821)
USE STAGE 1 MASK tensor(0.7449)
DEBUG all ious tensor([0.8854, 0.7383, 0.2223, 0.1876, 0.0236, 0.4167])
USE STAGE 1 MASK tensor(0.8854)
USE STAGE 1 MASK tensor(0.7383)
USE STAGE 2 MASK tensor(0.2223)
USE STAGE 2 MASK tensor(0.1876)
USE STAGE 2 MASK tensor(0.0236)
USE STAGE 2 MASK tensor(0.4167)
DEBUG all ious tensor([0.4454, 0.4866])
USE STAGE 2 MASK tensor(0.4454)
USE STAGE 1 MASK tensor(0.4866)
DEBUG all ious tensor([0.6167])
USE STAGE 1 MASK tensor(0.6167)
DEBUG all ious tensor([0.6805, 0.2829, 0.1016])
USE STAGE 1 MASK tensor(0.6805)
USE STAGE 2 MASK tensor(0.2829)
USE STAGE 2 MASK tensor(0.1016)
DEBUG all ious tensor([0.6788, 0.4553, 0.0823])
USE STAGE 1 MASK tensor(0.6788)
USE STAGE 1 MASK tensor(0.4553)
USE STAGE 2 MASK tensor(0.0823)
DEBUG all ious tensor([0.4707, 0.7521, 0.6507, 0.7998])
USE STAGE 1 MASK tensor(0.4707)
USE STAGE 1 MASK tensor(0.7521)
USE STAGE 1 MASK tensor(0.6507)
USE STAGE 1 MASK tensor(0.7998)
DEBUG all ious tensor([0.6913])
USE STAGE 1 MASK tensor(0.6913)
DEBUG all ious tensor([0.7847, 0.6397, 0.5479])
USE STAGE 1 MASK tensor(0.7847)
USE STAGE 1 MASK tensor(0.6397)
USE STAGE 1 MASK tensor(0.5479)
DEBUG all ious tensor([0.4206, 0.6917, 0.7166, 0.6783, 0.3815])
USE STAGE 2 MASK tensor(0.4206)
USE STAGE 1 MASK tensor(0.6917)
USE STAGE 1 MASK tensor(0.7166)
USE STAGE 1 MASK tensor(0.6783)
USE STAGE 2 MASK tensor(0.3815)
DEBUG all ious tensor([0.5903, 0.4667, 0.7757, 0.2116, 0.4925, 0.6056, 0.4478])
USE STAGE 1 MASK tensor(0.5903)
USE STAGE 1 MASK tensor(0.4667)
USE STAGE 1 MASK tensor(0.7757)
USE STAGE 2 MASK tensor(0.2116)
USE STAGE 1 MASK tensor(0.4925)
USE STAGE 1 MASK tensor(0.6056)
USE STAGE 2 MASK tensor(0.4478)
DEBUG all ious []
DEBUG all ious tensor([0.2986, 0.3950])
USE STAGE 2 MASK tensor(0.2986)
USE STAGE 2 MASK tensor(0.3950)
DEBUG all ious tensor([0.6325, 0.5551])
USE STAGE 1 MASK tensor(0.6325)
USE STAGE 1 MASK tensor(0.5551)
DEBUG all ious tensor([0.9105, 0.3259, 0.4749, 0.3518, 0.9160])
USE STAGE 1 MASK tensor(0.9105)
USE STAGE 2 MASK tensor(0.3259)
USE STAGE 1 MASK tensor(0.4749)
USE STAGE 2 MASK tensor(0.3518)
USE STAGE 1 MASK tensor(0.9160)
DEBUG all ious tensor([0.6669])
USE STAGE 1 MASK tensor(0.6669)
DEBUG all ious tensor([0.3701, 0.8488, 0.4471])
USE STAGE 2 MASK tensor(0.3701)
USE STAGE 1 MASK tensor(0.8488)
USE STAGE 2 MASK tensor(0.4471)
DEBUG all ious []
DEBUG all ious tensor([0.3694, 0.0606])
USE STAGE 2 MASK tensor(0.3694)
USE STAGE 2 MASK tensor(0.0606)
DEBUG all ious tensor([0.7798, 0.7646, 0.1864])
USE STAGE 1 MASK tensor(0.7798)
USE STAGE 1 MASK tensor(0.7646)
USE STAGE 2 MASK tensor(0.1864)
DEBUG all ious tensor([0.2995, 0.3790, 0.2484])
USE STAGE 2 MASK tensor(0.2995)
USE STAGE 2 MASK tensor(0.3790)
USE STAGE 2 MASK tensor(0.2484)
DEBUG all ious tensor([0.1047])
USE STAGE 2 MASK tensor(0.1047)
DEBUG all ious []
DEBUG all ious tensor([0.6350, 0.3742, 0.4748])
USE STAGE 1 MASK tensor(0.6350)
USE STAGE 2 MASK tensor(0.3742)
USE STAGE 1 MASK tensor(0.4748)
DEBUG all ious tensor([0.6818, 0.4007])
USE STAGE 1 MASK tensor(0.6818)
USE STAGE 2 MASK tensor(0.4007)
DEBUG all ious tensor([0.2751, 0.3901, 0.7135, 0.1546, 0.3494])
USE STAGE 2 MASK tensor(0.2751)
USE STAGE 2 MASK tensor(0.3901)
USE STAGE 1 MASK tensor(0.7135)
USE STAGE 2 MASK tensor(0.1546)
USE STAGE 2 MASK tensor(0.3494)
DEBUG all ious tensor([0.5470, 0.8333])
USE STAGE 1 MASK tensor(0.5470)
USE STAGE 1 MASK tensor(0.8333)
DEBUG all ious tensor([0.7962, 0.6333, 0.5483])
USE STAGE 1 MASK tensor(0.7962)
USE STAGE 1 MASK tensor(0.6333)
USE STAGE 1 MASK tensor(0.5483)
DEBUG all ious tensor([0.7412, 0.2543, 0.6815, 0.8083, 0.3500, 0.4676])
USE STAGE 1 MASK tensor(0.7412)
USE STAGE 2 MASK tensor(0.2543)
USE STAGE 1 MASK tensor(0.6815)
USE STAGE 1 MASK tensor(0.8083)
USE STAGE 2 MASK tensor(0.3500)
USE STAGE 1 MASK tensor(0.4676)
DEBUG all ious tensor([0.4487, 0.8444])
USE STAGE 2 MASK tensor(0.4487)
USE STAGE 1 MASK tensor(0.8444)
DEBUG all ious tensor([0.6358, 0.7182])
USE STAGE 1 MASK tensor(0.6358)
USE STAGE 1 MASK tensor(0.7182)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5208])
USE STAGE 1 MASK tensor(0.5208)
DEBUG all ious tensor([0.7041, 0.6764])
USE STAGE 1 MASK tensor(0.7041)
USE STAGE 1 MASK tensor(0.6764)
DEBUG all ious tensor([0.7485, 0.3940])
USE STAGE 1 MASK tensor(0.7485)
USE STAGE 2 MASK tensor(0.3940)
DEBUG all ious []
DEBUG all ious tensor([0.8125])
USE STAGE 1 MASK tensor(0.8125)
DEBUG all ious tensor([0.2663, 0.5383, 0.4566])
USE STAGE 2 MASK tensor(0.2663)
USE STAGE 1 MASK tensor(0.5383)
USE STAGE 1 MASK tensor(0.4566)
DEBUG all ious tensor([0.3143, 0.7586, 0.2170])
Refining stage1 output with stage2 outcomes: 116it [00:00, 524.46it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 477.95it/s]
USE STAGE 2 MASK tensor(0.3143)
USE STAGE 1 MASK tensor(0.7586)
USE STAGE 2 MASK tensor(0.2170)
DEBUG all ious tensor([0.4387])
USE STAGE 2 MASK tensor(0.4387)
DEBUG all ious tensor([0.8298, 0.2084, 0.6997, 0.2903])
USE STAGE 1 MASK tensor(0.8298)
USE STAGE 2 MASK tensor(0.2084)
USE STAGE 1 MASK tensor(0.6997)
USE STAGE 2 MASK tensor(0.2903)
DEBUG all ious tensor([0.6339, 0.8074])
USE STAGE 1 MASK tensor(0.6339)
USE STAGE 1 MASK tensor(0.8074)
DEBUG all ious tensor([0.6639, 0.8938])
USE STAGE 1 MASK tensor(0.6639)
USE STAGE 1 MASK tensor(0.8938)
DEBUG all ious tensor([0.6507, 0.3404])
USE STAGE 1 MASK tensor(0.6507)
USE STAGE 2 MASK tensor(0.3404)
DEBUG all ious tensor([0.4709, 0.4916])
USE STAGE 1 MASK tensor(0.4709)
USE STAGE 1 MASK tensor(0.4916)
DEBUG all ious tensor([0.5173])
USE STAGE 1 MASK tensor(0.5173)
DEBUG all ious tensor([0.7087])
USE STAGE 1 MASK tensor(0.7087)
DEBUG all ious tensor([0.3368, 0.0738])
USE STAGE 2 MASK tensor(0.3368)
USE STAGE 2 MASK tensor(0.0738)
DEBUG all ious tensor([0.5291, 0.3432])
USE STAGE 1 MASK tensor(0.5291)
USE STAGE 2 MASK tensor(0.3432)
DEBUG all ious tensor([0.3317, 0.3518, 0.2386])
USE STAGE 2 MASK tensor(0.3317)
USE STAGE 2 MASK tensor(0.3518)
USE STAGE 2 MASK tensor(0.2386)
DEBUG all ious tensor([0.4590])
USE STAGE 1 MASK tensor(0.4590)
DEBUG all ious tensor([0.3260, 0.3803, 0.2660, 0.4992, 0.3412])
USE STAGE 2 MASK tensor(0.3260)
USE STAGE 2 MASK tensor(0.3803)
USE STAGE 2 MASK tensor(0.2660)
USE STAGE 1 MASK tensor(0.4992)
USE STAGE 2 MASK tensor(0.3412)
DEBUG all ious tensor([0.6411])
USE STAGE 1 MASK tensor(0.6411)
DEBUG all ious tensor([0.4763, 0.3936, 0.7690, 0.8436, 0.0811])
USE STAGE 1 MASK tensor(0.4763)
USE STAGE 2 MASK tensor(0.3936)
USE STAGE 1 MASK tensor(0.7690)
USE STAGE 1 MASK tensor(0.8436)
USE STAGE 2 MASK tensor(0.0811)
DEBUG all ious []
DEBUG all ious tensor([0.3898, 0.4663, 0.2034])
USE STAGE 2 MASK tensor(0.3898)
USE STAGE 1 MASK tensor(0.4663)
USE STAGE 2 MASK tensor(0.2034)
DEBUG all ious []
DEBUG all ious tensor([0.8610])
USE STAGE 1 MASK tensor(0.8610)
DEBUG all ious tensor([0.6174, 0.2059, 0.5202])
USE STAGE 1 MASK tensor(0.6174)
USE STAGE 2 MASK tensor(0.2059)
USE STAGE 1 MASK tensor(0.5202)
DEBUG all ious tensor([0.3870, 0.6252, 0.5394])
USE STAGE 2 MASK tensor(0.3870)
USE STAGE 1 MASK tensor(0.6252)
USE STAGE 1 MASK tensor(0.5394)
DEBUG all ious tensor([0.6679, 0.5404])
USE STAGE 1 MASK tensor(0.6679)
USE STAGE 1 MASK tensor(0.5404)
DEBUG all ious tensor([0.4353])
USE STAGE 2 MASK tensor(0.4353)
DEBUG all ious tensor([0.4788])
USE STAGE 1 MASK tensor(0.4788)
DEBUG all ious tensor([0.8905, 0.3275, 0.3494, 0.0489, 0.4281])
USE STAGE 1 MASK tensor(0.8905)
USE STAGE 2 MASK tensor(0.3275)
USE STAGE 2 MASK tensor(0.3494)
USE STAGE 2 MASK tensor(0.0489)
USE STAGE 2 MASK tensor(0.4281)
DEBUG all ious tensor([0.6007, 0.5783, 0.4321, 0.5256])
USE STAGE 1 MASK tensor(0.6007)
USE STAGE 1 MASK tensor(0.5783)
USE STAGE 2 MASK tensor(0.4321)
USE STAGE 1 MASK tensor(0.5256)
DEBUG all ious []
DEBUG all ious tensor([0.0020, 0.7274, 0.7108, 0.4023])
USE STAGE 2 MASK tensor(0.0020)
USE STAGE 1 MASK tensor(0.7274)
USE STAGE 1 MASK tensor(0.7108)
USE STAGE 2 MASK tensor(0.4023)
DEBUG all ious tensor([0.5837, 0.6784, 0.2148, 0.7035])
USE STAGE 1 MASK tensor(0.5837)
USE STAGE 1 MASK tensor(0.6784)
USE STAGE 2 MASK tensor(0.2148)
USE STAGE 1 MASK tensor(0.7035)
DEBUG all ious tensor([0.5457])
USE STAGE 1 MASK tensor(0.5457)
DEBUG all ious tensor([0.6161, 0.4534])
USE STAGE 1 MASK tensor(0.6161)
USE STAGE 1 MASK tensor(0.4534)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6824])
USE STAGE 1 MASK tensor(0.6824)
DEBUG all ious tensor([0.4977, 0.3437])
USE STAGE 1 MASK tensor(0.4977)
USE STAGE 2 MASK tensor(0.3437)
DEBUG all ious tensor([0.1279])
USE STAGE 2 MASK tensor(0.1279)
DEBUG all ious tensor([0.6885, 0.9198, 0.7804, 0.4366, 0.2817])
USE STAGE 1 MASK tensor(0.6885)
USE STAGE 1 MASK tensor(0.9198)
USE STAGE 1 MASK tensor(0.7804)
USE STAGE 2 MASK tensor(0.4366)
USE STAGE 2 MASK tensor(0.2817)
DEBUG all ious tensor([0.6927, 0.5827])
USE STAGE 1 MASK tensor(0.6927)
USE STAGE 1 MASK tensor(0.5827)
DEBUG all ious tensor([0.4515, 0.6316])
USE STAGE 1 MASK tensor(0.4515)
USE STAGE 1 MASK tensor(0.6316)
DEBUG all ious tensor([0.1981, 0.3467, 0.4605, 0.3165])
USE STAGE 2 MASK tensor(0.1981)
USE STAGE 2 MASK tensor(0.3467)
USE STAGE 1 MASK tensor(0.4605)
USE STAGE 2 MASK tensor(0.3165)
DEBUG all ious tensor([0.2281, 0.7082, 0.6505, 0.3947])
USE STAGE 2 MASK tensor(0.2281)
USE STAGE 1 MASK tensor(0.7082)
USE STAGE 1 MASK tensor(0.6505)
USE STAGE 2 MASK tensor(0.3947)
DEBUG all ious tensor([0.4938, 0.7722])
USE STAGE 1 MASK tensor(0.4938)
USE STAGE 1 MASK tensor(0.7722)
DEBUG all ious tensor([0.2644, 0.1552, 0.3059])
USE STAGE 2 MASK tensor(0.2644)
USE STAGE 2 MASK tensor(0.1552)
USE STAGE 2 MASK tensor(0.3059)
DEBUG all ious tensor([0.8854])
USE STAGE 1 MASK tensor(0.8854)
DEBUG all ious tensor([0.6346])
USE STAGE 1 MASK tensor(0.6346)
DEBUG all ious tensor([0.1979, 0.5927])
USE STAGE 2 MASK tensor(0.1979)
USE STAGE 1 MASK tensor(0.5927)
DEBUG all ious tensor([0.7025])
USE STAGE 1 MASK tensor(0.7025)
DEBUG all ious tensor([0.3852, 0.2739, 0.3891, 0.5790, 0.4456])
USE STAGE 2 MASK tensor(0.3852)
USE STAGE 2 MASK tensor(0.2739)
USE STAGE 2 MASK tensor(0.3891)
USE STAGE 1 MASK tensor(0.5790)
USE STAGE 2 MASK tensor(0.4456)
DEBUG all ious []
DEBUG all ious tensor([0.4650, 0.3636])
USE STAGE 1 MASK tensor(0.4650)
USE STAGE 2 MASK tensor(0.3636)
DEBUG all ious tensor([0.4503, 0.3997])
USE STAGE 1 MASK tensor(0.4503)
USE STAGE 2 MASK tensor(0.3997)
DEBUG all ious tensor([0.8438])
USE STAGE 1 MASK tensor(0.8438)
DEBUG all ious tensor([0.7459])
USE STAGE 1 MASK tensor(0.7459)
DEBUG all ious []
DEBUG all ious tensor([0.4602, 0.1260, 0.7572])
USE STAGE 1 MASK tensor(0.4602)
USE STAGE 2 MASK tensor(0.1260)
USE STAGE 1 MASK tensor(0.7572)
DEBUG all ious tensor([0.0530])
USE STAGE 2 MASK tensor(0.0530)
DEBUG all ious tensor([0.2659, 0.5612])
USE STAGE 2 MASK tensor(0.2659)
USE STAGE 1 MASK tensor(0.5612)
DEBUG all ious tensor([0.6492, 0.4117, 0.7915])
USE STAGE 1 MASK tensor(0.6492)
USE STAGE 2 MASK tensor(0.4117)
USE STAGE 1 MASK tensor(0.7915)
DEBUG all ious tensor([0.3108])
USE STAGE 2 MASK tensor(0.3108)
DEBUG all ious tensor([0.5499])
USE STAGE 1 MASK tensor(0.5499)
DEBUG all ious tensor([0.5090, 0.7127, 0.7317, 0.4160])
USE STAGE 1 MASK tensor(0.5090)
USE STAGE 1 MASK tensor(0.7127)
USE STAGE 1 MASK tensor(0.7317)
USE STAGE 2 MASK tensor(0.4160)
DEBUG all ious tensor([0.3651, 0.5275, 0.5417, 0.5239, 0.4539])
USE STAGE 2 MASK tensor(0.3651)
USE STAGE 1 MASK tensor(0.5275)
USE STAGE 1 MASK tensor(0.5417)
USE STAGE 1 MASK tensor(0.5239)
USE STAGE 1 MASK tensor(0.4539)
DEBUG all ious tensor([0.3563, 0.1349])
USE STAGE 2 MASK tensor(0.3563)
USE STAGE 2 MASK tensor(0.1349)
DEBUG all ious tensor([0.6173, 0.5251, 0.4436, 0.3524])
USE STAGE 1 MASK tensor(0.6173)
USE STAGE 1 MASK tensor(0.5251)
USE STAGE 2 MASK tensor(0.4436)
USE STAGE 2 MASK tensor(0.3524)
DEBUG all ious tensor([0.7815, 0.8017, 0.4762])
USE STAGE 1 MASK tensor(0.7815)
USE STAGE 1 MASK tensor(0.8017)
USE STAGE 1 MASK tensor(0.4762)
DEBUG all ious tensor([0.7938, 0.6675, 0.4300, 0.2342, 0.7821, 0.2420])
USE STAGE 1 MASK tensor(0.7938)
USE STAGE 1 MASK tensor(0.6675)
USE STAGE 2 MASK tensor(0.4300)
USE STAGE 2 MASK tensor(0.2342)
USE STAGE 1 MASK tensor(0.7821)
USE STAGE 2 MASK tensor(0.2420)
DEBUG all ious []
DEBUG all ious tensor([0.5382, 0.1437, 0.7401, 0.2177])
USE STAGE 1 MASK tensor(0.5382)
USE STAGE 2 MASK tensor(0.1437)
USE STAGE 1 MASK tensor(0.7401)
USE STAGE 2 MASK tensor(0.2177)
DEBUG all ious tensor([0.3537, 0.3742, 0.4314, 0.6547, 0.1619])
USE STAGE 2 MASK tensor(0.3537)
USE STAGE 2 MASK tensor(0.3742)
USE STAGE 2 MASK tensor(0.4314)
USE STAGE 1 MASK tensor(0.6547)
USE STAGE 2 MASK tensor(0.1619)
Evaluating class shower wall...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class shower wall...:   1%|▏         | 2/142 [00:00<00:11, 12.40it/s]Evaluating class shower wall...:   4%|▎         | 5/142 [00:00<00:09, 14.54it/s]Evaluating class shower wall...:   5%|▍         | 7/142 [00:00<00:09, 14.66it/s]Evaluating class shower wall...:   6%|▋         | 9/142 [00:00<00:08, 16.14it/s]Evaluating class shower wall...:   9%|▉         | 13/142 [00:00<00:06, 19.20it/s]Evaluating class shower wall...:  11%|█         | 15/142 [00:00<00:06, 19.06it/s]Evaluating class shower wall...:  13%|█▎        | 18/142 [00:00<00:05, 20.76it/s]Evaluating class shower wall...:  15%|█▍        | 21/142 [00:01<00:05, 22.38it/s]Evaluating class shower wall...:  17%|█▋        | 24/142 [00:01<00:05, 22.39it/s]Evaluating class shower wall...:  19%|█▉        | 27/142 [00:01<00:04, 23.44it/s]Evaluating class shower wall...:  21%|██        | 30/142 [00:01<00:07, 15.19it/s]Evaluating class shower wall...:  23%|██▎       | 32/142 [00:01<00:06, 15.84it/s]Evaluating class shower wall...:  24%|██▍       | 34/142 [00:02<00:08, 12.77it/s]Evaluating class shower wall...:  25%|██▌       | 36/142 [00:02<00:08, 12.75it/s]Evaluating class shower wall...:  27%|██▋       | 39/142 [00:02<00:06, 15.02it/s]Evaluating class shower wall...:  30%|███       | 43/142 [00:02<00:05, 17.10it/s]Evaluating class shower wall...:  32%|███▏      | 45/142 [00:02<00:06, 15.28it/s]Evaluating class shower wall...:  34%|███▍      | 48/142 [00:02<00:05, 16.10it/s]Evaluating class shower wall...:  35%|███▌      | 50/142 [00:03<00:05, 16.24it/s]Evaluating class shower wall...:  37%|███▋      | 53/142 [00:03<00:04, 18.17it/s]Evaluating class shower wall...:  39%|███▊      | 55/142 [00:03<00:04, 18.20it/s]Evaluating class shower wall...:  41%|████      | 58/142 [00:03<00:04, 20.31it/s]Evaluating class shower wall...:  43%|████▎     | 61/142 [00:03<00:03, 21.73it/s]Evaluating class shower wall...:  45%|████▌     | 64/142 [00:03<00:03, 21.34it/s]Evaluating class shower wall...:  47%|████▋     | 67/142 [00:03<00:03, 21.74it/s]Evaluating class shower wall...:  50%|█████     | 71/142 [00:03<00:03, 21.99it/s]Evaluating class shower wall...:  53%|█████▎    | 75/142 [00:04<00:03, 21.80it/s]Evaluating class shower wall...:  55%|█████▍    | 78/142 [00:04<00:02, 21.49it/s]Evaluating class shower wall...:  57%|█████▋    | 81/142 [00:04<00:03, 20.19it/s]Evaluating class shower wall...:  60%|█████▉    | 85/142 [00:04<00:02, 21.92it/s]Evaluating class shower wall...:  62%|██████▏   | 88/142 [00:04<00:02, 21.06it/s]Evaluating class shower wall...:  64%|██████▍   | 91/142 [00:04<00:02, 22.46it/s]Evaluating class shower wall...:  66%|██████▌   | 94/142 [00:05<00:02, 21.61it/s]Evaluating class shower wall...:  68%|██████▊   | 97/142 [00:05<00:02, 21.21it/s]Evaluating class shower wall...:  70%|███████   | 100/142 [00:05<00:02, 17.66it/s]Evaluating class shower wall...:  72%|███████▏  | 102/142 [00:05<00:02, 18.08it/s]Evaluating class shower wall...:  73%|███████▎  | 104/142 [00:05<00:02, 18.40it/s]Evaluating class shower wall...:  75%|███████▌  | 107/142 [00:05<00:02, 16.60it/s]Evaluating class shower wall...:  77%|███████▋  | 109/142 [00:05<00:02, 15.95it/s]Evaluating class shower wall...:  78%|███████▊  | 111/142 [00:06<00:02, 14.50it/s]Evaluating class shower wall...:  80%|███████▉  | 113/142 [00:06<00:01, 14.59it/s]Evaluating class shower wall...:  81%|████████  | 115/142 [00:06<00:01, 13.60it/s]Evaluating class shower wall...:  83%|████████▎ | 118/142 [00:06<00:01, 16.38it/s]Evaluating class shower wall...:  85%|████████▍ | 120/142 [00:06<00:01, 15.80it/s]Evaluating class shower wall...:  87%|████████▋ | 123/142 [00:06<00:01, 17.73it/s]Evaluating class shower wall...:  89%|████████▊ | 126/142 [00:06<00:00, 18.51it/s]Evaluating class shower wall...:  90%|█████████ | 128/142 [00:07<00:00, 15.10it/s]Evaluating class shower wall...:  92%|█████████▏| 131/142 [00:07<00:00, 17.51it/s]Evaluating class shower wall...:  95%|█████████▌| 135/142 [00:07<00:00, 20.60it/s]Evaluating class shower wall...:  97%|█████████▋| 138/142 [00:07<00:00, 18.76it/s]Evaluating class shower wall...:  99%|█████████▉| 141/142 [00:07<00:00, 21.01it/s]Evaluating class shower wall...: 100%|██████████| 142/142 [00:07<00:00, 18.17it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 10%|▉         | 14/142 [00:00<00:01, 118.36it/s] 23%|██▎       | 32/142 [00:00<00:00, 148.52it/s] 35%|███▍      | 49/142 [00:00<00:00, 156.54it/s] 54%|█████▎    | 76/142 [00:00<00:00, 197.39it/s] 71%|███████   | 101/142 [00:00<00:00, 215.16it/s] 87%|████████▋ | 123/142 [00:00<00:00, 200.61it/s]100%|██████████| 142/142 [00:00<00:00, 195.02it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.004   0.005   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.005   0.006   0.008
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.002   0.002   0.002
################################################

DEBUG avg value {'ap': 0.27044918946067986, 'ap50%': 0.32217334636689476, 'ap25%': 0.4163101604278075, 'rc': 0.5353535353535352, 'rc50%': 0.6363636363636364, 'rc25%': 0.8181818181818182}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  30%|███       | 3/10 [19:23<39:16, 336.58s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class toilet
masks_to_be_merged [[0, 1, 35, 36, 37], [2, 7, 8, 9], [4, 5, 6], [10, 28], [21, 22, 23, 24, 26], [29, 30, 31, 32, 34], [38, 39, 40, 41, 42, 43, 44], [46, 47], [48, 49]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 134.18it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/238 [00:00<00:01, 144.39it/s][A
Calculating viewed counts for every point:  20%|█▉        | 47/238 [00:00<00:01, 154.34it/s][A
Calculating viewed counts for every point:  26%|██▋       | 63/238 [00:00<00:01, 154.26it/s][A
Calculating viewed counts for every point:  33%|███▎      | 79/238 [00:00<00:01, 147.46it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/238 [00:00<00:01, 138.96it/s][A
Calculating viewed counts for every point:  45%|████▌     | 108/238 [00:00<00:00, 138.92it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 122/238 [00:00<00:00, 133.31it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 137/238 [00:00<00:00, 136.33it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 153/238 [00:01<00:00, 140.95it/s][A
Calculating viewed counts for every point:  71%|███████   | 168/238 [00:01<00:00, 134.61it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/238 [00:01<00:00, 138.45it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 197/238 [00:01<00:00, 131.34it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 211/238 [00:01<00:00, 129.33it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 227/238 [00:01<00:00, 135.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:05<12:48,  5.45s/it]detected_ratio_thres_value tensor(0.0732, device='cuda:0')
final masked points tensor(17323, device='cuda:0')
before filtering torch.Size([9, 237360])
after filtering torch.Size([8, 237360])
num_ins_points_after_filtering tensor([2439,  213, 2746, 2064, 1834, 1316,  896,  719], device='cuda:0')
Working on scene0015_00 class toilet
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 9]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 20/198 [00:00<00:00, 190.60it/s][A
Calculating viewed counts for every point:  21%|██        | 41/198 [00:00<00:00, 197.91it/s][A
Calculating viewed counts for every point:  32%|███▏      | 63/198 [00:00<00:00, 204.26it/s][A
Calculating viewed counts for every point:  42%|████▏     | 84/198 [00:00<00:00, 198.32it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 104/198 [00:00<00:00, 187.45it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 123/198 [00:00<00:00, 185.42it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 142/198 [00:00<00:00, 184.49it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 161/198 [00:00<00:00, 174.87it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

Calculating viewed counts for every point:  91%|█████████▏| 181/198 [00:00<00:00, 181.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:07<07:24,  3.18s/it]detected_ratio_thres_value tensor(0.0741, device='cuda:0')
final masked points tensor(3853, device='cuda:0')
before filtering torch.Size([2, 217086])
after filtering torch.Size([2, 217086])
num_ins_points_after_filtering tensor([1170, 1921], device='cuda:0')
Working on scene0019_00 class toilet
masks_to_be_merged [[0, 14, 15], [1, 2, 16], [3, 4, 5], [6, 7, 8, 9, 10], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  47%|████▋     | 27/58 [00:00<00:00, 269.93it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 54/58 [00:00<00:00, 267.05it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:07<04:26,  1.91s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(8457, device='cuda:0')
before filtering torch.Size([5, 136769])
after filtering torch.Size([4, 136769])
num_ins_points_after_filtering tensor([2754,  762, 3546,  983], device='cuda:0')
Working on scene0025_00 class toilet
masks_to_be_merged [[0, 1, 4, 5, 7], [2, 3, 6, 22, 23], [9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 24, 25, 28, 29], [17, 20, 26, 27, 30, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/195 [00:00<00:01, 143.20it/s][A
Calculating viewed counts for every point:  16%|█▋        | 32/195 [00:00<00:01, 153.82it/s][A
Calculating viewed counts for every point:  25%|██▌       | 49/195 [00:00<00:00, 160.57it/s][A
Calculating viewed counts for every point:  34%|███▍      | 66/195 [00:00<00:00, 159.68it/s][A
Calculating viewed counts for every point:  43%|████▎     | 83/195 [00:00<00:00, 161.67it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 100/195 [00:00<00:00, 156.62it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 116/195 [00:00<00:00, 156.00it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 133/195 [00:00<00:00, 158.70it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 149/195 [00:00<00:00, 158.24it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 165/195 [00:01<00:00, 151.53it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 182/195 [00:01<00:00, 156.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:09<04:10,  1.81s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(5943, device='cuda:0')
before filtering torch.Size([4, 173392])
after filtering torch.Size([3, 173392])
num_ins_points_after_filtering tensor([ 752, 3680,  962], device='cuda:0')
Working on scene0030_00 class toilet
masks_to_be_merged [[2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/250 [00:00<00:02, 116.75it/s][A
Calculating viewed counts for every point:  10%|█         | 25/250 [00:00<00:01, 122.76it/s][A
Calculating viewed counts for every point:  15%|█▌        | 38/250 [00:00<00:01, 118.84it/s][A
Calculating viewed counts for every point:  20%|██        | 50/250 [00:00<00:01, 118.14it/s][A
Calculating viewed counts for every point:  25%|██▌       | 63/250 [00:00<00:01, 120.66it/s][A
Calculating viewed counts for every point:  30%|███       | 76/250 [00:00<00:01, 121.29it/s][A
Calculating viewed counts for every point:  36%|███▌      | 89/250 [00:00<00:01, 118.41it/s][A
Calculating viewed counts for every point:  40%|████      | 101/250 [00:00<00:01, 116.16it/s][A
Calculating viewed counts for every point:  45%|████▌     | 113/250 [00:00<00:01, 116.98it/s][A
Calculating viewed counts for every point:  50%|█████     | 126/250 [00:01<00:01, 117.32it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 139/250 [00:01<00:00, 118.56it/s][A
Calculating viewed counts for every point:  60%|██████    | 151/250 [00:01<00:00, 118.47it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 164/250 [00:01<00:00, 120.36it/s][A
Calculating viewed counts for every point:  71%|███████   | 177/250 [00:01<00:00, 116.22it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 189/250 [00:01<00:00, 115.00it/s][A
Calculating viewed counts for every point:  80%|████████  | 201/250 [00:01<00:00, 116.17it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 213/250 [00:01<00:00, 113.08it/s][A
Calculating viewed counts for every point:  90%|█████████ | 225/250 [00:01<00:00, 110.92it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 237/250 [00:02<00:00, 111.33it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 249/250 [00:02<00:00, 109.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:11<04:33,  2.00s/it]detected_ratio_thres_value tensor(0.0690, device='cuda:0')
final masked points tensor(4274, device='cuda:0')
before filtering torch.Size([1, 293811])
after filtering torch.Size([1, 293811])
num_ins_points_after_filtering tensor([3028], device='cuda:0')
Working on scene0046_00 class toilet
masks_to_be_merged [[2, 3, 4, 5], [6, 12], [7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/249 [00:00<00:01, 138.31it/s][A
Calculating viewed counts for every point:  12%|█▏        | 29/249 [00:00<00:01, 143.01it/s][A
Calculating viewed counts for every point:  18%|█▊        | 46/249 [00:00<00:01, 150.59it/s][A
Calculating viewed counts for every point:  25%|██▍       | 62/249 [00:00<00:01, 149.79it/s][A
Calculating viewed counts for every point:  31%|███       | 77/249 [00:00<00:01, 148.00it/s][A
Calculating viewed counts for every point:  38%|███▊      | 94/249 [00:00<00:01, 154.75it/s][A
Calculating viewed counts for every point:  44%|████▍     | 110/249 [00:00<00:00, 153.67it/s][A
Calculating viewed counts for every point:  51%|█████     | 126/249 [00:00<00:00, 147.17it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 143/249 [00:00<00:00, 152.13it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 160/249 [00:01<00:00, 155.60it/s][A
Calculating viewed counts for every point:  71%|███████   | 176/249 [00:01<00:00, 152.69it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 193/249 [00:01<00:00, 155.65it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 210/249 [00:01<00:00, 159.40it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 229/249 [00:01<00:00, 165.22it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 246/249 [00:01<00:00, 154.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:13<04:41,  2.07s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(1677, device='cuda:0')
before filtering torch.Size([3, 186857])
after filtering torch.Size([1, 186857])
num_ins_points_after_filtering tensor([1677], device='cuda:0')
Working on scene0050_00 class toilet
masks_to_be_merged [[0, 1, 13], [2, 3, 4, 5, 31, 32, 33, 34, 35, 36, 75, 76], [6, 7, 8, 9], [11, 12], [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 38, 39], [15, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [53, 54, 55, 56, 57, 58], [59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 198.54it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 187.74it/s][A
Calculating viewed counts for every point:  13%|█▎        | 62/466 [00:00<00:02, 198.11it/s][A
Calculating viewed counts for every point:  18%|█▊        | 82/466 [00:00<00:01, 193.39it/s][A
Calculating viewed counts for every point:  22%|██▏       | 102/466 [00:00<00:01, 187.55it/s][A
Calculating viewed counts for every point:  27%|██▋       | 124/466 [00:00<00:01, 197.27it/s][A
Calculating viewed counts for every point:  31%|███       | 144/466 [00:00<00:01, 182.80it/s][A
Calculating viewed counts for every point:  36%|███▌      | 166/466 [00:00<00:01, 191.38it/s][A
Calculating viewed counts for every point:  40%|███▉      | 186/466 [00:00<00:01, 184.25it/s][A
Calculating viewed counts for every point:  44%|████▍     | 205/466 [00:01<00:01, 183.94it/s][A
Calculating viewed counts for every point:  48%|████▊     | 225/466 [00:01<00:01, 186.35it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 244/466 [00:01<00:01, 183.21it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 266/466 [00:01<00:01, 192.73it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 286/466 [00:01<00:00, 188.24it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 307/466 [00:01<00:00, 193.53it/s][A
Calculating viewed counts for every point:  70%|███████   | 328/466 [00:01<00:00, 196.89it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 348/466 [00:01<00:00, 192.66it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 369/466 [00:01<00:00, 196.25it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 389/466 [00:02<00:00, 188.76it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 408/466 [00:02<00:00, 188.38it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 428/466 [00:02<00:00, 191.06it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 448/466 [00:02<00:00, 188.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:17<05:42,  2.54s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(11169, device='cuda:0')
before filtering torch.Size([8, 211406])
after filtering torch.Size([4, 211406])
num_ins_points_after_filtering tensor([1370,  493, 4999, 2414], device='cuda:0')
Working on scene0063_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0064_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 8, 10, 21], [6, 7, 9, 11, 12, 13, 22, 23], [14, 15], [17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/121 [00:00<00:00, 155.62it/s][A
Calculating viewed counts for every point:  26%|██▋       | 32/121 [00:00<00:00, 157.58it/s][A
Calculating viewed counts for every point:  42%|████▏     | 51/121 [00:00<00:00, 172.21it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 69/121 [00:00<00:00, 149.82it/s][A
Calculating viewed counts for every point:  70%|███████   | 85/121 [00:00<00:00, 144.45it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 103/121 [00:00<00:00, 153.74it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 119/121 [00:00<00:00, 147.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [00:18<03:37,  1.63s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(10393, device='cuda:0')
before filtering torch.Size([4, 230672])
after filtering torch.Size([4, 230672])
num_ins_points_after_filtering tensor([4726, 3802,  527, 1007], device='cuda:0')
Working on scene0077_00 class toilet
masks_to_be_merged [[0, 20, 21], [2, 3, 4, 6, 7], [5, 8, 9, 10, 11], [12, 13, 14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  46%|████▌     | 28/61 [00:00<00:00, 279.67it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 58/61 [00:00<00:00, 290.15it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:18<02:55,  1.33s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(3302, device='cuda:0')
before filtering torch.Size([4, 92807])
after filtering torch.Size([4, 92807])
num_ins_points_after_filtering tensor([750, 720, 873, 922], device='cuda:0')
Working on scene0081_00 class toilet
masks_to_be_merged [[0, 1, 5, 6, 7], [2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 28/30 [00:00<00:00, 269.07it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [00:19<02:15,  1.03s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(7632, device='cuda:0')
before filtering torch.Size([2, 51381])
after filtering torch.Size([2, 51381])
num_ins_points_after_filtering tensor([1175, 6250], device='cuda:0')
Working on scene0084_00 class toilet
masks_to_be_merged [[0, 1, 13], [2, 3, 5, 6, 7, 8, 9, 10, 11, 12], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [76, 77, 78, 79], [80, 81, 83]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 22/198 [00:00<00:00, 212.90it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/198 [00:00<00:00, 206.11it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/198 [00:00<00:00, 210.95it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/198 [00:00<00:00, 191.89it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 108/198 [00:00<00:00, 180.63it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 128/198 [00:00<00:00, 186.49it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 147/198 [00:00<00:00, 182.94it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 170/198 [00:00<00:00, 192.55it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 190/198 [00:00<00:00, 189.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:21<02:54,  1.34s/it]detected_ratio_thres_value tensor(0.2917, device='cuda:0')
final masked points tensor(3656, device='cuda:0')
before filtering torch.Size([7, 116845])
after filtering torch.Size([3, 116845])
num_ins_points_after_filtering tensor([ 901, 1703,  912], device='cuda:0')
Working on scene0086_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [45, 46]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/143 [00:00<00:00, 195.05it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/143 [00:00<00:00, 192.80it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/143 [00:00<00:00, 194.51it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 80/143 [00:00<00:00, 186.15it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 99/143 [00:00<00:00, 182.42it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 119/143 [00:00<00:00, 187.82it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 138/143 [00:00<00:00, 187.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:22<02:51,  1.33s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(2700, device='cuda:0')
before filtering torch.Size([3, 124572])
after filtering torch.Size([2, 124572])
num_ins_points_after_filtering tensor([ 883, 1792], device='cuda:0')
Working on scene0088_00 class toilet
No 3d masks detected in backprojection!
Working on scene0095_00 class toilet
masks_to_be_merged [[0, 1], [2, 4], [3, 5, 6], [7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 16/166 [00:00<00:00, 152.48it/s][A
Calculating viewed counts for every point:  19%|█▉        | 32/166 [00:00<00:00, 154.55it/s][A
Calculating viewed counts for every point:  31%|███▏      | 52/166 [00:00<00:00, 172.93it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 164.32it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 89/166 [00:00<00:00, 169.00it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 106/166 [00:00<00:00, 167.31it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 123/166 [00:00<00:00, 157.79it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 141/166 [00:00<00:00, 163.36it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 158/166 [00:00<00:00, 163.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:23<02:08,  1.01s/it]detected_ratio_thres_value tensor(0.0833, device='cuda:0')
final masked points tensor(6300, device='cuda:0')
before filtering torch.Size([4, 214895])
after filtering torch.Size([4, 214895])
num_ins_points_after_filtering tensor([ 571,  410,  881, 4438], device='cuda:0')
Working on scene0100_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35], [26, 27, 28], [29, 30]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/102 [00:00<00:00, 258.72it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 59/102 [00:00<00:00, 300.13it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 90/102 [00:00<00:00, 285.48it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:24<01:59,  1.06it/s]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(1617, device='cuda:0')
before filtering torch.Size([3, 52304])
after filtering torch.Size([1, 52304])
num_ins_points_after_filtering tensor([1444], device='cuda:0')
Working on scene0131_00 class toilet
masks_to_be_merged [[0, 1, 2], [4, 5]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 20/108 [00:00<00:00, 196.29it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/108 [00:00<00:00, 206.02it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 63/108 [00:00<00:00, 189.09it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 83/108 [00:00<00:00, 191.98it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 103/108 [00:00<00:00, 194.45it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [00:25<01:50,  1.14it/s]detected_ratio_thres_value tensor(0.0645, device='cuda:0')
final masked points tensor(2122, device='cuda:0')
before filtering torch.Size([2, 177091])
after filtering torch.Size([2, 177091])
num_ins_points_after_filtering tensor([ 735, 1069], device='cuda:0')
Working on scene0139_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 38, 39, 40, 41, 42], [8, 9, 10], [11, 12, 13], [14, 15], [16, 17, 18, 19, 21, 22], [23, 24, 25], [36, 37]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 34/136 [00:00<00:00, 333.37it/s][A
Calculating viewed counts for every point:  50%|█████     | 68/136 [00:00<00:00, 336.62it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 114/136 [00:00<00:00, 391.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:26<01:47,  1.15it/s]Projecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:26<01:25,  1.43it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(11027, device='cuda:0')
before filtering torch.Size([7, 72007])
after filtering torch.Size([5, 72007])
num_ins_points_after_filtering tensor([1878, 2143,  519, 1841, 2267], device='cuda:0')
Working on scene0144_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0146_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 73, 74, 75, 76, 77, 78, 79], [37, 38, 39, 40, 41, 42, 43], [44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 72], [57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 34/141 [00:00<00:00, 331.12it/s][A
Calculating viewed counts for every point:  48%|████▊     | 68/141 [00:00<00:00, 280.31it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 105/141 [00:00<00:00, 314.91it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 138/141 [00:00<00:00, 309.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:27<01:48,  1.12it/s]detected_ratio_thres_value tensor(0.4074, device='cuda:0')
final masked points tensor(2929, device='cuda:0')
before filtering torch.Size([4, 60438])
after filtering torch.Size([1, 60438])
num_ins_points_after_filtering tensor([2131], device='cuda:0')
Working on scene0149_00 class toilet
masks_to_be_merged [[0, 1], [2, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/141 [00:00<00:00, 230.67it/s][A
Calculating viewed counts for every point:  34%|███▍      | 48/141 [00:00<00:00, 220.08it/s][A
Calculating viewed counts for every point:  50%|█████     | 71/141 [00:00<00:00, 216.18it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 94/141 [00:00<00:00, 217.19it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 118/141 [00:00<00:00, 222.05it/s][A
Calculating viewed counts for every point: 100%|██████████| 141/141 [00:00<00:00, 213.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:28<01:45,  1.15it/s]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(2862, device='cuda:0')
before filtering torch.Size([2, 162396])
after filtering torch.Size([2, 162396])
num_ins_points_after_filtering tensor([ 511, 2351], device='cuda:0')
Working on scene0153_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 33/59 [00:00<00:00, 325.91it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:28<01:23,  1.44it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(6588, device='cuda:0')
before filtering torch.Size([2, 47709])
after filtering torch.Size([1, 47709])
num_ins_points_after_filtering tensor([1518], device='cuda:0')
Working on scene0164_00 class toilet
masks_to_be_merged [[0, 2, 3], [1, 41], [4, 5], [6, 9, 10, 11], [7, 8, 12, 13, 14, 15, 29, 30, 31, 32], [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 30/189 [00:00<00:00, 292.80it/s][A
Calculating viewed counts for every point:  32%|███▏      | 60/189 [00:00<00:00, 293.23it/s][A
Calculating viewed counts for every point:  50%|████▉     | 94/189 [00:00<00:00, 310.52it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 126/189 [00:00<00:00, 298.97it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 159/189 [00:00<00:00, 309.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:29<01:34,  1.26it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(3614, device='cuda:0')
before filtering torch.Size([6, 94315])
after filtering torch.Size([2, 94315])
num_ins_points_after_filtering tensor([ 390, 2482], device='cuda:0')
Working on scene0169_00 class toilet
masks_to_be_merged [[0, 1, 2, 3], [7, 10, 27], [8, 9], [11, 12, 13], [15, 16, 17, 18, 19, 20, 21], [24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 14/204 [00:00<00:01, 138.70it/s][A
Calculating viewed counts for every point:  14%|█▎        | 28/204 [00:00<00:01, 128.55it/s][A
Calculating viewed counts for every point:  21%|██        | 42/204 [00:00<00:01, 130.71it/s][A
Calculating viewed counts for every point:  27%|██▋       | 56/204 [00:00<00:01, 129.46it/s][A
Calculating viewed counts for every point:  34%|███▍      | 70/204 [00:00<00:01, 132.45it/s][A
Calculating viewed counts for every point:  41%|████      | 84/204 [00:00<00:00, 133.67it/s][A
Calculating viewed counts for every point:  48%|████▊     | 98/204 [00:00<00:00, 129.00it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 111/204 [00:00<00:00, 127.71it/s][A
Calculating viewed counts for every point:  61%|██████    | 124/204 [00:00<00:00, 127.23it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 137/204 [00:01<00:00, 122.81it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 151/204 [00:01<00:00, 125.93it/s][A
Calculating viewed counts for every point:  80%|████████  | 164/204 [00:01<00:00, 124.28it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 177/204 [00:01<00:00, 121.00it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 191/204 [00:01<00:00, 126.33it/s][A
Calculating viewed counts for every point: 100%|██████████| 204/204 [00:01<00:00, 124.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:31<02:16,  1.15s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(8028, device='cuda:0')
before filtering torch.Size([6, 239354])
after filtering torch.Size([5, 239354])
num_ins_points_after_filtering tensor([1388,  650, 1263, 1916,  680], device='cuda:0')
Working on scene0187_00 class toilet
masks_to_be_merged [[0, 18, 21, 22, 23, 24, 25, 26, 27, 28], [1, 2, 3, 4, 5, 6, 7, 8, 48, 50, 52], [10, 11, 12, 13, 14, 15, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [46, 47, 49, 51]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 21/227 [00:00<00:00, 208.31it/s][A
Calculating viewed counts for every point:  19%|█▊        | 42/227 [00:00<00:00, 198.22it/s][A
Calculating viewed counts for every point:  29%|██▉       | 66/227 [00:00<00:00, 213.77it/s][A
Calculating viewed counts for every point:  39%|███▉      | 88/227 [00:00<00:00, 213.01it/s][A
Calculating viewed counts for every point:  48%|████▊     | 110/227 [00:00<00:00, 200.76it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 133/227 [00:00<00:00, 208.09it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 155/227 [00:00<00:00, 210.74it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 177/227 [00:00<00:00, 204.21it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 200/227 [00:00<00:00, 209.00it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 221/227 [00:01<00:00, 207.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:33<02:31,  1.30s/it]detected_ratio_thres_value tensor(0.1795, device='cuda:0')
final masked points tensor(7084, device='cuda:0')
before filtering torch.Size([4, 173752])
after filtering torch.Size([2, 173752])
num_ins_points_after_filtering tensor([1295, 4142], device='cuda:0')
Working on scene0193_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 8], [7, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/72 [00:00<00:00, 172.15it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 40/72 [00:00<00:00, 198.38it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 60/72 [00:00<00:00, 196.81it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [00:34<02:04,  1.08s/it]Projecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:34<01:09,  1.64it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(3084, device='cuda:0')
before filtering torch.Size([2, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([1066, 1762], device='cuda:0')
Working on scene0196_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0203_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0207_00 class toilet
masks_to_be_merged [[0, 1, 2], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [28, 29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 111.22it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 110.41it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:01, 117.35it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:01, 110.83it/s][A
Calculating viewed counts for every point:  31%|███       | 61/199 [00:00<00:01, 109.06it/s][A
Calculating viewed counts for every point:  37%|███▋      | 73/199 [00:00<00:01, 111.70it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/199 [00:00<00:01, 110.42it/s][A
Calculating viewed counts for every point:  49%|████▊     | 97/199 [00:00<00:00, 110.90it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 110/199 [00:00<00:00, 114.37it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 122/199 [00:01<00:00, 113.81it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 134/199 [00:01<00:00, 113.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 146/199 [00:01<00:00, 113.69it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 158/199 [00:01<00:00, 112.03it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 170/199 [00:01<00:00, 110.91it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 182/199 [00:01<00:00, 112.07it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 194/199 [00:01<00:00, 110.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:36<01:57,  1.04s/it]Projecting 2d masks to 3d point cloud:  21%|██        | 30/142 [00:36<01:30,  1.24it/s]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(4232, device='cuda:0')
before filtering torch.Size([3, 304396])
after filtering torch.Size([2, 304396])
num_ins_points_after_filtering tensor([2867,  449], device='cuda:0')
Working on scene0208_00 class toilet
No 3d masks detected in backprojection!
Working on scene0217_00 class toilet
masks_to_be_merged [[0, 5, 6, 7], [2, 8, 10, 12, 13], [3, 4], [11, 14]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 20/125 [00:00<00:00, 194.70it/s][A
Calculating viewed counts for every point:  32%|███▏      | 40/125 [00:00<00:00, 187.18it/s][A
Calculating viewed counts for every point:  48%|████▊     | 60/125 [00:00<00:00, 191.56it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 80/125 [00:00<00:00, 187.69it/s][A
Calculating viewed counts for every point:  80%|████████  | 100/125 [00:00<00:00, 185.24it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 121/125 [00:00<00:00, 190.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [00:37<01:31,  1.22it/s]detected_ratio_thres_value tensor(0.0938, device='cuda:0')
final masked points tensor(7256, device='cuda:0')
before filtering torch.Size([4, 126385])
after filtering torch.Size([4, 126385])
num_ins_points_after_filtering tensor([1157, 1111, 4049,  655], device='cuda:0')
Working on scene0221_00 class toilet
masks_to_be_merged [[3, 4]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██▏       | 21/98 [00:00<00:00, 208.36it/s][A
Calculating viewed counts for every point:  47%|████▋     | 46/98 [00:00<00:00, 227.52it/s][A
Calculating viewed counts for every point:  70%|███████   | 69/98 [00:00<00:00, 202.19it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 90/98 [00:00<00:00, 189.52it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [00:38<01:24,  1.30it/s]detected_ratio_thres_value tensor(0.0833, device='cuda:0')
final masked points tensor(4767, device='cuda:0')
before filtering torch.Size([1, 185828])
after filtering torch.Size([1, 185828])
num_ins_points_after_filtering tensor([2639], device='cuda:0')
Working on scene0222_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 23, 24, 25, 26], [11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], [20, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77], [21, 22], [35, 36, 37, 38, 39, 40, 41], [53, 55, 56, 57, 58], [59, 60, 61, 62], [72, 73]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/543 [00:00<00:03, 154.43it/s][A
Calculating viewed counts for every point:   6%|▋         | 34/543 [00:00<00:03, 168.52it/s][A
Calculating viewed counts for every point:  10%|▉         | 54/543 [00:00<00:02, 179.82it/s][A
Calculating viewed counts for every point:  13%|█▎        | 72/543 [00:00<00:02, 165.71it/s][A
Calculating viewed counts for every point:  16%|█▋        | 89/543 [00:00<00:02, 160.47it/s][A
Calculating viewed counts for every point:  20%|█▉        | 108/543 [00:00<00:02, 167.43it/s][A
Calculating viewed counts for every point:  23%|██▎       | 125/543 [00:00<00:02, 165.69it/s][A
Calculating viewed counts for every point:  26%|██▌       | 142/543 [00:00<00:02, 163.14it/s][A
Calculating viewed counts for every point:  30%|██▉       | 162/543 [00:00<00:02, 173.32it/s][A
Calculating viewed counts for every point:  33%|███▎      | 180/543 [00:01<00:02, 168.59it/s][A
Calculating viewed counts for every point:  37%|███▋      | 202/543 [00:01<00:01, 181.39it/s][A
Calculating viewed counts for every point:  41%|████      | 221/543 [00:01<00:01, 182.35it/s][A
Calculating viewed counts for every point:  44%|████▍     | 240/543 [00:01<00:01, 175.92it/s][A
Calculating viewed counts for every point:  48%|████▊     | 258/543 [00:01<00:01, 174.82it/s][A
Calculating viewed counts for every point:  51%|█████     | 276/543 [00:01<00:01, 169.75it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 294/543 [00:01<00:01, 170.53it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 312/543 [00:01<00:01, 172.94it/s][A
Calculating viewed counts for every point:  61%|██████    | 330/543 [00:01<00:01, 168.32it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 349/543 [00:02<00:01, 172.92it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 367/543 [00:02<00:01, 166.98it/s][A
Calculating viewed counts for every point:  71%|███████   | 384/543 [00:02<00:01, 157.04it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 405/543 [00:02<00:00, 169.28it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 424/543 [00:02<00:00, 172.70it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 442/543 [00:02<00:00, 167.97it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 459/543 [00:02<00:00, 165.06it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 479/543 [00:02<00:00, 172.96it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 497/543 [00:02<00:00, 164.38it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 514/543 [00:03<00:00, 156.60it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 530/543 [00:03<00:00, 150.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [00:42<03:17,  1.81s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(8841, device='cuda:0')
before filtering torch.Size([8, 234831])
after filtering torch.Size([3, 234831])
num_ins_points_after_filtering tensor([1520, 2167, 2536], device='cuda:0')
Working on scene0231_00 class toilet
masks_to_be_merged [[0, 68, 69], [1, 2, 3, 4, 5, 9, 10, 11, 12, 30, 31, 32, 33, 38, 39, 40, 41, 65, 66, 70, 71, 72], [7, 8], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 34, 35, 36, 37, 52, 53, 54, 55, 56, 57, 58, 63, 64, 73, 74], [24, 25, 47, 48, 49, 50, 51, 67], [43, 44, 45, 46], [60, 61]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 94.92it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/444 [00:00<00:04, 98.88it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 105.68it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 104.70it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 100.09it/s][A
Calculating viewed counts for every point:  15%|█▌        | 67/444 [00:00<00:03, 105.72it/s][A
Calculating viewed counts for every point:  18%|█▊        | 78/444 [00:00<00:03, 105.81it/s][A
Calculating viewed counts for every point:  20%|██        | 89/444 [00:00<00:03, 106.49it/s][A
Calculating viewed counts for every point:  23%|██▎       | 100/444 [00:00<00:03, 100.73it/s][A
Calculating viewed counts for every point:  25%|██▌       | 111/444 [00:01<00:03, 100.81it/s][A
Calculating viewed counts for every point:  28%|██▊       | 123/444 [00:01<00:03, 103.40it/s][A
Calculating viewed counts for every point:  30%|███       | 134/444 [00:01<00:03, 100.33it/s][A
Calculating viewed counts for every point:  33%|███▎      | 145/444 [00:01<00:03, 99.24it/s] [A
Calculating viewed counts for every point:  35%|███▌      | 156/444 [00:01<00:02, 101.84it/s][A
Calculating viewed counts for every point:  38%|███▊      | 167/444 [00:01<00:02, 100.33it/s][A
Calculating viewed counts for every point:  40%|████      | 178/444 [00:01<00:02, 100.16it/s][A
Calculating viewed counts for every point:  43%|████▎     | 190/444 [00:01<00:02, 103.52it/s][A
Calculating viewed counts for every point:  45%|████▌     | 201/444 [00:01<00:02, 102.15it/s][A
Calculating viewed counts for every point:  48%|████▊     | 212/444 [00:02<00:02, 99.63it/s] [A
Calculating viewed counts for every point:  50%|█████     | 222/444 [00:02<00:02, 98.76it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 233/444 [00:02<00:02, 100.29it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 245/444 [00:02<00:01, 105.54it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 256/444 [00:02<00:01, 105.37it/s][A
Calculating viewed counts for every point:  60%|██████    | 267/444 [00:02<00:01, 104.06it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 278/444 [00:02<00:01, 105.48it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 289/444 [00:02<00:01, 103.46it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 300/444 [00:02<00:01, 104.61it/s][A
Calculating viewed counts for every point:  70%|███████   | 311/444 [00:03<00:01, 100.69it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 322/444 [00:03<00:01, 96.20it/s] [A
Calculating viewed counts for every point:  75%|███████▍  | 332/444 [00:03<00:01, 93.88it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 343/444 [00:03<00:01, 96.72it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 354/444 [00:03<00:00, 99.56it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 365/444 [00:03<00:00, 99.93it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 376/444 [00:03<00:00, 100.99it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 387/444 [00:03<00:00, 102.90it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 398/444 [00:03<00:00, 102.78it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 409/444 [00:04<00:00, 104.49it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 420/444 [00:04<00:00, 104.97it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 432/444 [00:04<00:00, 107.77it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 443/444 [00:04<00:00, 103.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [00:48<05:18,  2.95s/it]detected_ratio_thres_value tensor(0.2059, device='cuda:0')
final masked points tensor(5858, device='cuda:0')
before filtering torch.Size([7, 419537])
after filtering torch.Size([3, 419537])
num_ins_points_after_filtering tensor([3209, 2146,  244], device='cuda:0')
Working on scene0246_00 class toilet
masks_to_be_merged [[0, 1, 2, 3], [5, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54, 55, 56], [6, 7], [9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 33, 34, 35, 36, 37], [27, 28, 29, 30], [47, 48, 49], [57, 58], [61, 64, 66]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 16/296 [00:00<00:01, 155.25it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/296 [00:00<00:01, 171.85it/s][A
Calculating viewed counts for every point:  19%|█▉        | 56/296 [00:00<00:01, 188.71it/s][A
Calculating viewed counts for every point:  26%|██▌       | 77/296 [00:00<00:01, 190.85it/s][A
Calculating viewed counts for every point:  33%|███▎      | 97/296 [00:00<00:01, 191.86it/s][A
Calculating viewed counts for every point:  40%|███▉      | 117/296 [00:00<00:00, 188.54it/s][A
Calculating viewed counts for every point:  47%|████▋     | 138/296 [00:00<00:00, 193.33it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 159/296 [00:00<00:00, 197.35it/s][A
Calculating viewed counts for every point:  60%|██████    | 179/296 [00:00<00:00, 197.98it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 200/296 [00:01<00:00, 198.79it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 223/296 [00:01<00:00, 205.92it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 244/296 [00:01<00:00, 200.26it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 266/296 [00:01<00:00, 205.96it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 287/296 [00:01<00:00, 201.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [00:51<05:09,  2.89s/it]detected_ratio_thres_value tensor(0.1154, device='cuda:0')
final masked points tensor(8254, device='cuda:0')
before filtering torch.Size([9, 201062])
after filtering torch.Size([6, 201062])
num_ins_points_after_filtering tensor([ 797, 2575,  109, 2146, 1347,  718], device='cuda:0')
Working on scene0249_00 class toilet
masks_to_be_merged [[0, 10, 11], [1, 2], [3, 4, 5, 6, 7, 8, 15], [12, 13], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [29, 30, 31, 32, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/274 [00:00<00:01, 145.35it/s][A
Calculating viewed counts for every point:  11%|█         | 30/274 [00:00<00:01, 137.54it/s][A
Calculating viewed counts for every point:  16%|█▌        | 44/274 [00:00<00:01, 123.19it/s][A
Calculating viewed counts for every point:  21%|██        | 57/274 [00:00<00:01, 119.04it/s][A
Calculating viewed counts for every point:  26%|██▌       | 70/274 [00:00<00:01, 120.24it/s][A
Calculating viewed counts for every point:  31%|███       | 84/274 [00:00<00:01, 125.29it/s][A
Calculating viewed counts for every point:  35%|███▌      | 97/274 [00:00<00:01, 123.21it/s][A
Calculating viewed counts for every point:  40%|████      | 110/274 [00:00<00:01, 122.95it/s][A
Calculating viewed counts for every point:  45%|████▍     | 123/274 [00:00<00:01, 124.14it/s][A
Calculating viewed counts for every point:  50%|████▉     | 136/274 [00:01<00:01, 120.17it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 149/274 [00:01<00:01, 118.49it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 162/274 [00:01<00:00, 119.32it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 174/274 [00:01<00:00, 117.66it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 186/274 [00:01<00:00, 111.98it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 198/274 [00:01<00:00, 110.41it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 210/274 [00:01<00:00, 111.06it/s][A
Calculating viewed counts for every point:  81%|████████  | 222/274 [00:01<00:00, 109.82it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 236/274 [00:01<00:00, 116.06it/s][A
Calculating viewed counts for every point:  91%|█████████ | 250/274 [00:02<00:00, 122.22it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 264/274 [00:02<00:00, 126.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [00:53<05:06,  2.89s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(7092, device='cuda:0')
before filtering torch.Size([6, 331031])
after filtering torch.Size([4, 331031])
num_ins_points_after_filtering tensor([ 987,  799, 3593,  904], device='cuda:0')
Working on scene0251_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18], [5, 9, 11, 19, 20, 21, 22, 25, 26, 28], [23, 24, 27, 29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/155 [00:00<00:01, 123.14it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 120.27it/s][A
Calculating viewed counts for every point:  26%|██▌       | 40/155 [00:00<00:00, 127.10it/s][A
Calculating viewed counts for every point:  35%|███▍      | 54/155 [00:00<00:00, 131.71it/s][A
Calculating viewed counts for every point:  45%|████▍     | 69/155 [00:00<00:00, 138.04it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 83/155 [00:00<00:00, 132.82it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 97/155 [00:00<00:00, 132.82it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 113/155 [00:00<00:00, 139.01it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 127/155 [00:00<00:00, 130.92it/s][A
Calculating viewed counts for every point:  91%|█████████ | 141/155 [00:01<00:00, 132.98it/s][A
Calculating viewed counts for every point: 100%|██████████| 155/155 [00:01<00:00, 129.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [00:55<04:23,  2.51s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(4286, device='cuda:0')
before filtering torch.Size([3, 226765])
after filtering torch.Size([3, 226765])
num_ins_points_after_filtering tensor([1054, 1689, 1458], device='cuda:0')
Working on scene0256_00 class toilet
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:00, 255.29it/s][A
Calculating viewed counts for every point:  34%|███▍      | 53/156 [00:00<00:00, 259.04it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 84/156 [00:00<00:00, 281.21it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 113/156 [00:00<00:00, 271.31it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 145/156 [00:00<00:00, 282.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [00:56<03:28,  2.00s/it]detected_ratio_thres_value tensor(0.0652, device='cuda:0')
final masked points tensor(1776, device='cuda:0')
before filtering torch.Size([2, 108517])
after filtering torch.Size([2, 108517])
num_ins_points_after_filtering tensor([822, 389], device='cuda:0')
Working on scene0257_00 class toilet
masks_to_be_merged [[2, 3], [11, 12, 14, 15, 16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/165 [00:00<00:00, 168.81it/s][A
Calculating viewed counts for every point:  21%|██        | 35/165 [00:00<00:00, 173.67it/s][A
Calculating viewed counts for every point:  33%|███▎      | 54/165 [00:00<00:00, 180.92it/s][A
Calculating viewed counts for every point:  44%|████▍     | 73/165 [00:00<00:00, 181.08it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 97/165 [00:00<00:00, 199.19it/s][A
Calculating viewed counts for every point:  71%|███████   | 117/165 [00:00<00:00, 195.29it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 140/165 [00:00<00:00, 204.64it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 163/165 [00:00<00:00, 211.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [00:57<02:58,  1.74s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(3845, device='cuda:0')
before filtering torch.Size([2, 180928])
after filtering torch.Size([1, 180928])
num_ins_points_after_filtering tensor([2002], device='cuda:0')
Working on scene0277_00 class toilet
masks_to_be_merged [[0, 2, 3, 22, 23, 24, 32, 33, 34, 35, 36], [1, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38], [4, 5], [11, 28, 29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 27/115 [00:00<00:00, 261.08it/s][A
Calculating viewed counts for every point:  47%|████▋     | 54/115 [00:00<00:00, 245.96it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 79/115 [00:00<00:00, 244.66it/s][A
Calculating viewed counts for every point:  90%|█████████ | 104/115 [00:00<00:00, 234.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [00:58<02:33,  1.50s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(5690, device='cuda:0')
before filtering torch.Size([4, 79184])
after filtering torch.Size([3, 79184])
num_ins_points_after_filtering tensor([1105,  498, 3654], device='cuda:0')
Working on scene0278_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 32/80 [00:00<00:00, 315.79it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 68/80 [00:00<00:00, 339.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [00:58<01:57,  1.16s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(2720, device='cuda:0')
before filtering torch.Size([2, 77020])
after filtering torch.Size([2, 77020])
num_ins_points_after_filtering tensor([ 397, 1297], device='cuda:0')
Working on scene0300_00 class toilet
No 3d masks detected in backprojection!
Working on scene0304_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 10, 11, 12, 13], [15, 16]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 18/178 [00:00<00:00, 179.36it/s][A
Calculating viewed counts for every point:  21%|██        | 37/178 [00:00<00:00, 185.13it/s][A
Calculating viewed counts for every point:  33%|███▎      | 59/178 [00:00<00:00, 196.77it/s][A
Calculating viewed counts for every point:  46%|████▌     | 81/178 [00:00<00:00, 204.13it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 104/178 [00:00<00:00, 209.85it/s][A
Calculating viewed counts for every point:  70%|███████   | 125/178 [00:00<00:00, 206.94it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 149/178 [00:00<00:00, 215.75it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 171/178 [00:00<00:00, 214.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [00:59<01:28,  1.12it/s]detected_ratio_thres_value tensor(0.0606, device='cuda:0')
final masked points tensor(5295, device='cuda:0')
before filtering torch.Size([2, 164016])
after filtering torch.Size([2, 164016])
num_ins_points_after_filtering tensor([2680, 1098], device='cuda:0')
Working on scene0307_00 class toilet
masks_to_be_merged [[1, 2], [3, 20], [4, 5, 6, 7, 8, 10], [9, 11, 12, 13], [15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 105.12it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 104.30it/s][A
Calculating viewed counts for every point:  16%|█▌        | 33/205 [00:00<00:01, 94.33it/s] [A
Calculating viewed counts for every point:  21%|██        | 43/205 [00:00<00:01, 92.82it/s][A
Calculating viewed counts for every point:  26%|██▋       | 54/205 [00:00<00:01, 97.36it/s][A
Calculating viewed counts for every point:  31%|███       | 64/205 [00:00<00:01, 96.38it/s][A
Calculating viewed counts for every point:  37%|███▋      | 76/205 [00:00<00:01, 100.96it/s][A
Calculating viewed counts for every point:  42%|████▏     | 87/205 [00:00<00:01, 95.69it/s] [A
Calculating viewed counts for every point:  47%|████▋     | 97/205 [00:01<00:01, 94.38it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 107/205 [00:01<00:01, 94.03it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 117/205 [00:01<00:00, 91.94it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 128/205 [00:01<00:00, 95.33it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 138/205 [00:01<00:00, 92.63it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 148/205 [00:01<00:00, 90.40it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 158/205 [00:01<00:00, 92.14it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 168/205 [00:01<00:00, 89.59it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 178/205 [00:01<00:00, 91.26it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 188/205 [00:02<00:00, 90.97it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 199/205 [00:02<00:00, 95.66it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [01:02<02:07,  1.30s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(6589, device='cuda:0')
before filtering torch.Size([5, 371616])
after filtering torch.Size([2, 371616])
num_ins_points_after_filtering tensor([2826, 2808], device='cuda:0')
Working on scene0314_00 class toilet
No 3d masks detected in backprojection!
Working on scene0316_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 5, 7, 8, 11, 14, 51, 53, 54, 57], [4, 6, 9, 10, 12, 13, 15, 46, 47, 48, 49, 50, 52, 55, 56, 58, 59, 60], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 61, 62, 63, 64, 66, 68, 69], [27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 65, 67, 70], [44, 45]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 24/77 [00:00<00:00, 237.36it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 48/77 [00:00<00:00, 233.02it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 73/77 [00:00<00:00, 238.35it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [01:03<01:32,  1.04it/s]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(10102, device='cuda:0')
before filtering torch.Size([5, 78769])
after filtering torch.Size([4, 78769])
num_ins_points_after_filtering tensor([2232, 1724, 2932, 3173], device='cuda:0')
Working on scene0328_00 class toilet
masks_to_be_merged [[4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/142 [00:00<00:00, 259.74it/s][A
Calculating viewed counts for every point:  39%|███▊      | 55/142 [00:00<00:00, 275.20it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 85/142 [00:00<00:00, 283.35it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 117/142 [00:00<00:00, 294.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [01:04<01:26,  1.10it/s]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(1378, device='cuda:0')
before filtering torch.Size([1, 111467])
after filtering torch.Size([1, 111467])
num_ins_points_after_filtering tensor([499], device='cuda:0')
Working on scene0329_00 class toilet
masks_to_be_merged [[0, 1, 11, 12], [5, 6, 7], [9, 10, 13], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/156 [00:00<00:01, 138.18it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:00, 137.73it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/156 [00:00<00:00, 132.04it/s][A
Calculating viewed counts for every point:  36%|███▌      | 56/156 [00:00<00:00, 132.39it/s][A
Calculating viewed counts for every point:  45%|████▍     | 70/156 [00:00<00:00, 129.14it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 83/156 [00:00<00:00, 123.43it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 97/156 [00:00<00:00, 127.76it/s][A
Calculating viewed counts for every point:  71%|███████   | 110/156 [00:00<00:00, 126.22it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 123/156 [00:00<00:00, 124.63it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 136/156 [00:01<00:00, 124.30it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 150/156 [00:01<00:00, 127.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [01:05<01:40,  1.07s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(9541, device='cuda:0')
before filtering torch.Size([4, 355413])
after filtering torch.Size([4, 355413])
num_ins_points_after_filtering tensor([5164, 1259, 1367, 1224], device='cuda:0')
Working on scene0334_00 class toilet
masks_to_be_merged [[1, 2, 4], [5, 6], [7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 15/119 [00:00<00:00, 147.23it/s][A
Calculating viewed counts for every point:  25%|██▌       | 30/119 [00:00<00:00, 135.61it/s][A
Calculating viewed counts for every point:  38%|███▊      | 45/119 [00:00<00:00, 141.81it/s][A
Calculating viewed counts for every point:  50%|█████     | 60/119 [00:00<00:00, 134.01it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 74/119 [00:00<00:00, 135.78it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 88/119 [00:00<00:00, 131.07it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 105/119 [00:00<00:00, 140.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [01:06<01:39,  1.07s/it]detected_ratio_thres_value tensor(0.0833, device='cuda:0')
final masked points tensor(6131, device='cuda:0')
before filtering torch.Size([3, 197174])
after filtering torch.Size([2, 197174])
num_ins_points_after_filtering tensor([1516, 2858], device='cuda:0')
Working on scene0338_00 class toilet
masks_to_be_merged [[0, 1, 2, 18, 19, 21, 22, 24, 25], [3, 4, 5, 6, 26, 27], [7, 8, 9, 28, 29, 31, 32, 33, 34], [10, 11, 12, 13, 14, 15, 16], [20, 23], [30, 35, 36]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 30/81 [00:00<00:00, 297.16it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 60/81 [00:00<00:00, 297.04it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [01:07<01:28,  1.04it/s]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(10418, device='cuda:0')
before filtering torch.Size([6, 106339])
after filtering torch.Size([4, 106339])
num_ins_points_after_filtering tensor([2948, 3915,  942, 1424], device='cuda:0')
Working on scene0342_00 class toilet
No 3d masks detected in backprojection!
Working on scene0343_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0351_00 class toilet
masks_to_be_merged [[2, 7]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 17/147 [00:00<00:00, 166.50it/s][A
Calculating viewed counts for every point:  24%|██▍       | 35/147 [00:00<00:00, 173.99it/s][A
Calculating viewed counts for every point:  36%|███▌      | 53/147 [00:00<00:00, 168.87it/s][A
Calculating viewed counts for every point:  48%|████▊     | 70/147 [00:00<00:00, 166.14it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 87/147 [00:00<00:00, 164.67it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 105/147 [00:00<00:00, 167.11it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 122/147 [00:00<00:00, 165.15it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 139/147 [00:00<00:00, 164.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [01:08<00:58,  1.52it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(1523, device='cuda:0')
before filtering torch.Size([1, 172134])
after filtering torch.Size([1, 172134])
num_ins_points_after_filtering tensor([587], device='cuda:0')
Working on scene0353_00 class toilet
masks_to_be_merged [[0, 2, 3, 4, 5, 17], [6, 7, 8], [9, 10, 11, 12, 13], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/299 [00:00<00:01, 166.85it/s][A
Calculating viewed counts for every point:  12%|█▏        | 37/299 [00:00<00:01, 181.83it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/299 [00:00<00:01, 187.66it/s][A
Calculating viewed counts for every point:  25%|██▌       | 76/299 [00:00<00:01, 177.00it/s][A
Calculating viewed counts for every point:  32%|███▏      | 96/299 [00:00<00:01, 181.35it/s][A
Calculating viewed counts for every point:  39%|███▉      | 116/299 [00:00<00:00, 185.93it/s][A
Calculating viewed counts for every point:  45%|████▌     | 135/299 [00:00<00:00, 179.79it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 155/299 [00:00<00:00, 184.73it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 178/299 [00:00<00:00, 196.02it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 198/299 [00:01<00:00, 190.09it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 218/299 [00:01<00:00, 190.95it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 239/299 [00:01<00:00, 194.20it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 259/299 [00:01<00:00, 192.13it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 279/299 [00:01<00:00, 194.32it/s][A
Calculating viewed counts for every point: 100%|██████████| 299/299 [00:01<00:00, 189.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [01:10<01:20,  1.10it/s]detected_ratio_thres_value tensor(0.0698, device='cuda:0')
final masked points tensor(5224, device='cuda:0')
before filtering torch.Size([4, 208782])
after filtering torch.Size([4, 208782])
num_ins_points_after_filtering tensor([1201, 1588, 1017,  973], device='cuda:0')
Working on scene0354_00 class toilet
masks_to_be_merged [[1, 2], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 26/113 [00:00<00:00, 256.75it/s][A
Calculating viewed counts for every point:  46%|████▌     | 52/113 [00:00<00:00, 240.05it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 78/113 [00:00<00:00, 245.49it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 104/113 [00:00<00:00, 249.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [01:11<01:13,  1.19it/s]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(2457, device='cuda:0')
before filtering torch.Size([2, 110569])
after filtering torch.Size([2, 110569])
num_ins_points_after_filtering tensor([860, 170], device='cuda:0')
Working on scene0355_00 class toilet
masks_to_be_merged [[0, 1], [2, 8], [3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 24/115 [00:00<00:00, 231.69it/s][A
Calculating viewed counts for every point:  42%|████▏     | 48/115 [00:00<00:00, 234.33it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 75/115 [00:00<00:00, 249.17it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 100/115 [00:00<00:00, 232.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [01:11<01:11,  1.20it/s]detected_ratio_thres_value tensor(0.0606, device='cuda:0')
final masked points tensor(8161, device='cuda:0')
before filtering torch.Size([3, 136135])
after filtering torch.Size([3, 136135])
num_ins_points_after_filtering tensor([ 915, 1731, 1258], device='cuda:0')
Working on scene0356_00 class toilet
masks_to_be_merged [[0, 1, 2, 4, 5, 13, 14, 15, 16, 17], [6, 7, 8, 9, 10, 20, 21, 22], [11, 23], [18, 19]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 230.74it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 218.44it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 73/136 [00:00<00:00, 231.24it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 97/136 [00:00<00:00, 228.49it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 121/136 [00:00<00:00, 231.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [01:12<01:11,  1.19it/s]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(3497, device='cuda:0')
before filtering torch.Size([4, 81172])
after filtering torch.Size([2, 81172])
num_ins_points_after_filtering tensor([1333, 1692], device='cuda:0')
Working on scene0357_00 class toilet
No 3d masks detected in backprojection!
Working on scene0377_00 class toilet
masks_to_be_merged [[0, 1, 6], [2, 3, 18, 20, 21, 23, 24, 25], [4, 5, 7, 11, 12, 13, 14, 15, 16], [9, 10], [17, 19, 22]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 167.37it/s][A
Calculating viewed counts for every point:  38%|███▊      | 35/91 [00:00<00:00, 172.40it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 57/91 [00:00<00:00, 190.21it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 76/91 [00:00<00:00, 180.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [01:13<00:54,  1.51it/s]detected_ratio_thres_value tensor(0.1290, device='cuda:0')
final masked points tensor(6467, device='cuda:0')
before filtering torch.Size([5, 111811])
after filtering torch.Size([5, 111811])
num_ins_points_after_filtering tensor([ 384, 1748, 3188,  237,  901], device='cuda:0')
Working on scene0378_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/190 [00:00<00:01, 148.28it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/190 [00:00<00:00, 162.97it/s][A
Calculating viewed counts for every point:  26%|██▋       | 50/190 [00:00<00:00, 165.34it/s][A
Calculating viewed counts for every point:  35%|███▌      | 67/190 [00:00<00:00, 165.56it/s][A
Calculating viewed counts for every point:  46%|████▌     | 87/190 [00:00<00:00, 175.99it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 105/190 [00:00<00:00, 172.37it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 123/190 [00:00<00:00, 165.60it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 141/190 [00:00<00:00, 168.37it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 158/190 [00:00<00:00, 164.00it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 175/190 [00:01<00:00, 160.32it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [01:15<01:12,  1.13it/s]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(1764, device='cuda:0')
before filtering torch.Size([2, 156298])
after filtering torch.Size([1, 156298])
num_ins_points_after_filtering tensor([1738], device='cuda:0')
Working on scene0382_00 class toilet
masks_to_be_merged [[0, 1, 2, 12, 13, 14, 15], [4, 6], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/113 [00:00<00:00, 186.43it/s][A
Calculating viewed counts for every point:  36%|███▋      | 41/113 [00:00<00:00, 205.64it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 62/113 [00:00<00:00, 207.20it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 87/113 [00:00<00:00, 220.82it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 110/113 [00:00<00:00, 222.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [01:16<01:09,  1.17it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(3546, device='cuda:0')
before filtering torch.Size([3, 100285])
after filtering torch.Size([2, 100285])
num_ins_points_after_filtering tensor([1654, 1364], device='cuda:0')
Working on scene0389_00 class toilet
masks_to_be_merged [[0, 1, 2, 46, 47, 48], [3, 4, 5, 6, 7], [8, 9], [11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [18, 19, 21, 22, 25, 27, 29], [44, 45]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/142 [00:00<00:00, 194.44it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/142 [00:00<00:00, 192.75it/s][A
Calculating viewed counts for every point:  44%|████▍     | 63/142 [00:00<00:00, 208.59it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 84/142 [00:00<00:00, 204.95it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 105/142 [00:00<00:00, 201.66it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 127/142 [00:00<00:00, 205.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [01:17<01:23,  1.04s/it]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(3863, device='cuda:0')
before filtering torch.Size([6, 201003])
after filtering torch.Size([1, 201003])
num_ins_points_after_filtering tensor([1112], device='cuda:0')
Working on scene0406_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], [27, 28], [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 35/142 [00:00<00:00, 342.88it/s][A
Calculating viewed counts for every point:  49%|████▉     | 70/142 [00:00<00:00, 287.63it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 103/142 [00:00<00:00, 304.63it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 134/142 [00:00<00:00, 291.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [01:19<01:31,  1.16s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(2724, device='cuda:0')
before filtering torch.Size([4, 48864])
after filtering torch.Size([2, 48864])
num_ins_points_after_filtering tensor([1512,  552], device='cuda:0')
Working on scene0412_00 class toilet
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6], [7, 22, 23], [8, 10, 11, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32], [9, 12], [15, 17, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63, 64, 65], [19, 61], [44, 45, 46, 47, 48, 50, 51, 52, 53], [55, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 21/237 [00:00<00:01, 209.79it/s][A
Calculating viewed counts for every point:  18%|█▊        | 42/237 [00:00<00:00, 199.23it/s][A
Calculating viewed counts for every point:  27%|██▋       | 63/237 [00:00<00:00, 203.86it/s][A
Calculating viewed counts for every point:  35%|███▌      | 84/237 [00:00<00:00, 195.78it/s][A
Calculating viewed counts for every point:  45%|████▍     | 106/237 [00:00<00:00, 197.62it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 129/237 [00:00<00:00, 207.17it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 151/237 [00:00<00:00, 209.48it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 176/237 [00:00<00:00, 219.38it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 198/237 [00:00<00:00, 208.58it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 219/237 [00:01<00:00, 206.72it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [01:21<01:47,  1.37s/it]detected_ratio_thres_value tensor(0.1591, device='cuda:0')
final masked points tensor(6271, device='cuda:0')
before filtering torch.Size([9, 175557])
after filtering torch.Size([5, 175557])
num_ins_points_after_filtering tensor([ 592,  595, 1468,  540, 1358], device='cuda:0')
Working on scene0414_00 class toilet
masks_to_be_merged [[0, 1], [15, 16], [19, 20], [23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 16/117 [00:00<00:00, 155.88it/s][A
Calculating viewed counts for every point:  31%|███       | 36/117 [00:00<00:00, 176.51it/s][A
Calculating viewed counts for every point:  47%|████▋     | 55/117 [00:00<00:00, 180.06it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 73/117 [00:00<00:00, 164.09it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 90/117 [00:00<00:00, 155.94it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 107/117 [00:00<00:00, 158.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [01:22<01:40,  1.30s/it]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(9606, device='cuda:0')
before filtering torch.Size([4, 192685])
after filtering torch.Size([4, 192685])
num_ins_points_after_filtering tensor([1346,  944, 2149,  978], device='cuda:0')
Working on scene0423_00 class toilet
masks_to_be_merged [[0, 1, 2, 50, 51, 53, 55, 56, 58, 61, 69, 71, 74, 77, 84, 88], [3, 4, 5, 6, 7, 9, 12, 14, 16, 24, 25, 27, 29, 57, 59, 62, 64, 68, 76, 80, 83, 86, 87], [8, 17, 19, 21, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 60, 63, 66, 70, 72, 73, 75, 78, 81, 82, 85], [10, 11, 13, 15, 18, 20, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 65, 67, 79]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 26/77 [00:00<00:00, 259.26it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 52/77 [00:00<00:00, 258.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  46%|████▋     | 66/142 [01:23<01:35,  1.26s/it]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(13406, device='cuda:0')
before filtering torch.Size([4, 53074])
after filtering torch.Size([4, 53074])
num_ins_points_after_filtering tensor([2540, 4808, 3386, 2672], device='cuda:0')
Working on scene0426_00 class toilet
masks_to_be_merged [[4, 5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 24/231 [00:00<00:00, 238.83it/s][A
Calculating viewed counts for every point:  21%|██        | 49/231 [00:00<00:00, 241.47it/s][A
Calculating viewed counts for every point:  32%|███▏      | 75/231 [00:00<00:00, 247.05it/s][A
Calculating viewed counts for every point:  44%|████▎     | 101/231 [00:00<00:00, 249.83it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 128/231 [00:00<00:00, 255.87it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 154/231 [00:00<00:00, 242.66it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 180/231 [00:00<00:00, 243.94it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 207/231 [00:00<00:00, 250.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [01:24<01:32,  1.23s/it]detected_ratio_thres_value tensor(0.0833, device='cuda:0')
final masked points tensor(4364, device='cuda:0')
before filtering torch.Size([1, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([1463], device='cuda:0')
Working on scene0427_00 class toilet
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 8, 54, 55, 56, 57, 58], [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60], [9, 40, 53], [10, 11, 12, 14, 50, 51, 52], [13, 15, 16, 17, 18, 19, 41, 42, 43, 44, 45, 46, 47, 48, 49], [20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 37/132 [00:00<00:00, 363.57it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 74/132 [00:00<00:00, 352.27it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 112/132 [00:00<00:00, 361.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [01:25<01:23,  1.13s/it]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(8420, device='cuda:0')
before filtering torch.Size([6, 74074])
after filtering torch.Size([3, 74074])
num_ins_points_after_filtering tensor([2841, 2521, 1896], device='cuda:0')
Working on scene0430_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 17/231 [00:00<00:01, 166.69it/s][A
Calculating viewed counts for every point:  16%|█▌        | 36/231 [00:00<00:01, 174.95it/s][A
Calculating viewed counts for every point:  23%|██▎       | 54/231 [00:00<00:01, 176.82it/s][A
Calculating viewed counts for every point:  31%|███       | 72/231 [00:00<00:00, 172.83it/s][A
Calculating viewed counts for every point:  39%|███▉      | 91/231 [00:00<00:00, 175.33it/s][A
Calculating viewed counts for every point:  47%|████▋     | 109/231 [00:00<00:00, 167.29it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 126/231 [00:00<00:00, 167.84it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 146/231 [00:00<00:00, 174.97it/s][A
Calculating viewed counts for every point:  71%|███████   | 164/231 [00:00<00:00, 170.73it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 182/231 [00:01<00:00, 168.08it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 199/231 [00:01<00:00, 164.87it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 221/231 [00:01<00:00, 178.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [01:26<01:29,  1.23s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(2141, device='cuda:0')
before filtering torch.Size([1, 210249])
after filtering torch.Size([1, 210249])
num_ins_points_after_filtering tensor([1990], device='cuda:0')
Working on scene0432_00 class toilet
masks_to_be_merged [[0, 1, 2, 5, 7], [3, 4, 6]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 38/52 [00:00<00:00, 368.96it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [01:27<01:07,  1.06it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(3038, device='cuda:0')
before filtering torch.Size([2, 39529])
after filtering torch.Size([2, 39529])
num_ins_points_after_filtering tensor([1990, 1048], device='cuda:0')
Working on scene0435_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 40, 41, 42], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39], [43, 44]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 14/328 [00:00<00:02, 139.75it/s][A
Calculating viewed counts for every point:   9%|▉         | 30/328 [00:00<00:02, 146.75it/s][A
Calculating viewed counts for every point:  14%|█▎        | 45/328 [00:00<00:01, 144.78it/s][A
Calculating viewed counts for every point:  18%|█▊        | 60/328 [00:00<00:01, 143.20it/s][A
Calculating viewed counts for every point:  23%|██▎       | 77/328 [00:00<00:01, 148.66it/s][A
Calculating viewed counts for every point:  28%|██▊       | 93/328 [00:00<00:01, 151.95it/s][A
Calculating viewed counts for every point:  33%|███▎      | 109/328 [00:00<00:01, 151.17it/s][A
Calculating viewed counts for every point:  38%|███▊      | 126/328 [00:00<00:01, 155.88it/s][A
Calculating viewed counts for every point:  43%|████▎     | 142/328 [00:00<00:01, 151.95it/s][A
Calculating viewed counts for every point:  48%|████▊     | 158/328 [00:01<00:01, 151.45it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 175/328 [00:01<00:00, 154.08it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 191/328 [00:01<00:00, 154.94it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 208/328 [00:01<00:00, 157.56it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 224/328 [00:01<00:00, 155.73it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 240/328 [00:01<00:00, 156.08it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 259/328 [00:01<00:00, 164.08it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 276/328 [00:01<00:00, 157.86it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 292/328 [00:01<00:00, 155.65it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 310/328 [00:02<00:00, 160.73it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 327/328 [00:02<00:00, 155.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [01:29<01:45,  1.49s/it]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(1843, device='cuda:0')
before filtering torch.Size([3, 254998])
after filtering torch.Size([1, 254998])
num_ins_points_after_filtering tensor([1736], device='cuda:0')
Working on scene0441_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51], [20, 21], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|██▉       | 23/77 [00:00<00:00, 222.22it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 46/77 [00:00<00:00, 207.58it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 68/77 [00:00<00:00, 211.92it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [01:31<01:40,  1.43s/it]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(3723, device='cuda:0')
before filtering torch.Size([4, 86191])
after filtering torch.Size([3, 86191])
num_ins_points_after_filtering tensor([ 904, 1723, 1049], device='cuda:0')
Working on scene0458_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [8, 9, 10, 11], [13, 14, 15, 16, 17], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 28/199 [00:00<00:00, 276.07it/s][A
Calculating viewed counts for every point:  29%|██▊       | 57/199 [00:00<00:00, 283.91it/s][A
Calculating viewed counts for every point:  43%|████▎     | 86/199 [00:00<00:00, 259.57it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 114/199 [00:00<00:00, 263.35it/s][A
Calculating viewed counts for every point:  71%|███████   | 141/199 [00:00<00:00, 264.02it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 172/199 [00:00<00:00, 278.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [01:32<01:40,  1.45s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(4578, device='cuda:0')
before filtering torch.Size([5, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([2652, 1923], device='cuda:0')
Working on scene0461_00 class toilet
masks_to_be_merged [[0, 7, 9, 17], [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 23], [18, 19, 20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 17/52 [00:00<00:00, 166.70it/s][A
Calculating viewed counts for every point:  71%|███████   | 37/52 [00:00<00:00, 183.96it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [01:33<01:19,  1.17s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(4222, device='cuda:0')
before filtering torch.Size([3, 59134])
after filtering torch.Size([2, 59134])
num_ins_points_after_filtering tensor([3002, 1071], device='cuda:0')
Working on scene0462_00 class toilet
masks_to_be_merged [[0, 26, 34, 35, 36], [1, 28, 29, 30, 31, 32, 33], [2, 3, 4, 5, 6, 7, 27, 37, 38, 39, 40], [8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], [23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/114 [00:00<00:00, 241.30it/s][A
Calculating viewed counts for every point:  44%|████▍     | 50/114 [00:00<00:00, 218.01it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 75/114 [00:00<00:00, 230.62it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 99/114 [00:00<00:00, 215.74it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [01:34<01:16,  1.15s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(8457, device='cuda:0')
before filtering torch.Size([6, 156714])
after filtering torch.Size([4, 156714])
num_ins_points_after_filtering tensor([ 813, 3514, 1942, 2058], device='cuda:0')
Working on scene0474_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 4, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 16/164 [00:00<00:00, 155.27it/s][A
Calculating viewed counts for every point:  20%|█▉        | 32/164 [00:00<00:00, 152.95it/s][A
Calculating viewed counts for every point:  30%|██▉       | 49/164 [00:00<00:00, 158.20it/s][A
Calculating viewed counts for every point:  40%|███▉      | 65/164 [00:00<00:00, 147.19it/s][A
Calculating viewed counts for every point:  49%|████▉     | 81/164 [00:00<00:00, 150.13it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 97/164 [00:00<00:00, 152.22it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 113/164 [00:00<00:00, 151.98it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 129/164 [00:00<00:00, 152.44it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 145/164 [00:00<00:00, 151.98it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 161/164 [00:01<00:00, 151.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [01:35<01:17,  1.18s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1444, device='cuda:0')
before filtering torch.Size([2, 182281])
after filtering torch.Size([1, 182281])
num_ins_points_after_filtering tensor([1408], device='cuda:0')
Working on scene0488_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0490_00 class toilet
masks_to_be_merged [[1, 10, 11, 12, 13, 14, 16], [2, 18, 19, 20, 21], [3, 5], [4, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 26/129 [00:00<00:00, 254.81it/s][A
Calculating viewed counts for every point:  42%|████▏     | 54/129 [00:00<00:00, 264.35it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 81/129 [00:00<00:00, 266.59it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 108/129 [00:00<00:00, 262.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [01:36<00:53,  1.19it/s]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(4768, device='cuda:0')
before filtering torch.Size([4, 131283])
after filtering torch.Size([4, 131283])
num_ins_points_after_filtering tensor([ 973, 1956,  814, 1024], device='cuda:0')
Working on scene0494_00 class toilet
masks_to_be_merged [[0, 1], [2, 3]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 25/75 [00:00<00:00, 248.81it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 52/75 [00:00<00:00, 259.12it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [01:36<00:45,  1.38it/s]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(1862, device='cuda:0')
before filtering torch.Size([2, 62048])
after filtering torch.Size([2, 62048])
num_ins_points_after_filtering tensor([1182,  680], device='cuda:0')
Working on scene0496_00 class toilet
masks_to_be_merged [[2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 18/134 [00:00<00:00, 172.98it/s][A
Calculating viewed counts for every point:  27%|██▋       | 36/134 [00:00<00:00, 160.51it/s][A
Calculating viewed counts for every point:  40%|███▉      | 53/134 [00:00<00:00, 150.13it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 69/134 [00:00<00:00, 145.43it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 86/134 [00:00<00:00, 153.28it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 103/134 [00:00<00:00, 156.62it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 119/134 [00:00<00:00, 150.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [01:37<00:48,  1.27it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(3344, device='cuda:0')
before filtering torch.Size([1, 192962])
after filtering torch.Size([1, 192962])
num_ins_points_after_filtering tensor([805], device='cuda:0')
Working on scene0500_00 class toilet
No 3d masks detected in backprojection!
Working on scene0518_00 class toilet
masks_to_be_merged [[0, 5, 9, 19], [1, 2, 3, 4, 7], [10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26], [27, 28], [29, 30]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 22/147 [00:00<00:00, 212.00it/s][A
Calculating viewed counts for every point:  31%|███▏      | 46/147 [00:00<00:00, 224.53it/s][A
Calculating viewed counts for every point:  51%|█████     | 75/147 [00:00<00:00, 250.67it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 101/147 [00:00<00:00, 253.75it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 127/147 [00:00<00:00, 253.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [01:38<00:39,  1.53it/s]detected_ratio_thres_value tensor(0.1200, device='cuda:0')
final masked points tensor(2433, device='cuda:0')
before filtering torch.Size([5, 130180])
after filtering torch.Size([1, 130180])
num_ins_points_after_filtering tensor([1106], device='cuda:0')
Working on scene0527_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6, 7], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 38/68 [00:00<00:00, 373.55it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [01:39<00:34,  1.71it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(4145, device='cuda:0')
before filtering torch.Size([3, 65893])
after filtering torch.Size([3, 65893])
num_ins_points_after_filtering tensor([ 522,  364, 3054], device='cuda:0')
Working on scene0535_00 class toilet
masks_to_be_merged [[3, 4, 5], [11, 12], [13, 14, 19], [15, 16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 22/69 [00:00<00:00, 211.11it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 44/69 [00:00<00:00, 198.19it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 68/69 [00:00<00:00, 212.21it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [01:39<00:33,  1.76it/s]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(6783, device='cuda:0')
before filtering torch.Size([4, 90268])
after filtering torch.Size([4, 90268])
num_ins_points_after_filtering tensor([1351, 2300, 2087,  404], device='cuda:0')
Working on scene0549_00 class toilet
masks_to_be_merged [[2, 3, 4], [6, 7]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 23/83 [00:00<00:00, 225.23it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 46/83 [00:00<00:00, 206.77it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 69/83 [00:00<00:00, 213.05it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [01:40<00:32,  1.74it/s]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(9488, device='cuda:0')
before filtering torch.Size([2, 161973])
after filtering torch.Size([2, 161973])
num_ins_points_after_filtering tensor([3697, 2737], device='cuda:0')
Working on scene0550_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [21, 26, 27, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [22, 23, 24, 25], [28, 29, 30], [32, 33], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61], [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], [94, 95], [187, 189, 190], [188, 191], [192, 193, 194], [195, 196, 197, 198, 199]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 26/392 [00:00<00:01, 259.35it/s][A
Calculating viewed counts for every point:  14%|█▍        | 55/392 [00:00<00:01, 268.35it/s][A
Calculating viewed counts for every point:  22%|██▏       | 86/392 [00:00<00:01, 284.04it/s][A
Calculating viewed counts for every point:  29%|██▉       | 115/392 [00:00<00:01, 266.11it/s][A
Calculating viewed counts for every point:  37%|███▋      | 144/392 [00:00<00:00, 273.46it/s][A
Calculating viewed counts for every point:  44%|████▍     | 172/392 [00:00<00:00, 264.00it/s][A
Calculating viewed counts for every point:  51%|█████     | 199/392 [00:00<00:00, 257.44it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 226/392 [00:00<00:00, 259.94it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 253/392 [00:00<00:00, 247.04it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 282/392 [00:01<00:00, 255.99it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 309/392 [00:01<00:00, 259.26it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 340/392 [00:01<00:00, 272.87it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 368/392 [00:01<00:00, 269.26it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [01:44<01:29,  1.60s/it]detected_ratio_thres_value tensor(0.3800, device='cuda:0')
final masked points tensor(8626, device='cuda:0')
before filtering torch.Size([12, 127677])
after filtering torch.Size([2, 127677])
num_ins_points_after_filtering tensor([1904, 1514], device='cuda:0')
Working on scene0552_00 class toilet
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███▏      | 28/89 [00:00<00:00, 271.70it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 56/89 [00:00<00:00, 260.43it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 83/89 [00:00<00:00, 255.90it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [01:44<01:09,  1.27s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(1438, device='cuda:0')
before filtering torch.Size([1, 123103])
after filtering torch.Size([1, 123103])
num_ins_points_after_filtering tensor([1438], device='cuda:0')
Working on scene0553_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], [22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 40, 45, 46], [29, 31, 34, 36, 38, 39, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [68, 69, 70, 71, 72]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 32/151 [00:00<00:00, 317.93it/s][A
Calculating viewed counts for every point:  44%|████▍     | 67/151 [00:00<00:00, 331.30it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 101/151 [00:00<00:00, 305.54it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 132/151 [00:00<00:00, 296.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [01:46<01:19,  1.47s/it]detected_ratio_thres_value tensor(0.4062, device='cuda:0')
final masked points tensor(5189, device='cuda:0')
before filtering torch.Size([4, 62854])
after filtering torch.Size([3, 62854])
num_ins_points_after_filtering tensor([1740,  785, 2647], device='cuda:0')
Working on scene0558_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0559_00 class toilet
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 34/58 [00:00<00:00, 335.54it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [01:47<00:47,  1.10it/s]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(1044, device='cuda:0')
before filtering torch.Size([1, 89796])
after filtering torch.Size([1, 89796])
num_ins_points_after_filtering tensor([629], device='cuda:0')
Working on scene0565_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 21/107 [00:00<00:00, 206.57it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/107 [00:00<00:00, 204.17it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 67/107 [00:00<00:00, 220.44it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 90/107 [00:00<00:00, 209.79it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [01:48<00:43,  1.16it/s]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(1175, device='cuda:0')
before filtering torch.Size([1, 167558])
after filtering torch.Size([1, 167558])
num_ins_points_after_filtering tensor([1168], device='cuda:0')
Working on scene0568_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 20, 22, 24, 26, 27, 32, 34, 36], [13, 14, 15, 17, 19, 21, 23, 25, 28, 29, 30, 31, 33, 35, 37], [38, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/166 [00:00<00:01, 128.89it/s][A
Calculating viewed counts for every point:  16%|█▌        | 26/166 [00:00<00:01, 117.99it/s][A
Calculating viewed counts for every point:  24%|██▍       | 40/166 [00:00<00:01, 122.69it/s][A
Calculating viewed counts for every point:  33%|███▎      | 54/166 [00:00<00:00, 128.40it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 137.38it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/166 [00:00<00:00, 136.99it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 98/166 [00:00<00:00, 136.23it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 112/166 [00:00<00:00, 130.33it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 126/166 [00:00<00:00, 132.50it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 140/166 [00:01<00:00, 134.67it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 155/166 [00:01<00:00, 135.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [01:50<00:59,  1.19s/it]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(3041, device='cuda:0')
before filtering torch.Size([3, 232453])
after filtering torch.Size([2, 232453])
num_ins_points_after_filtering tensor([1280, 1627], device='cuda:0')
Working on scene0574_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 21, 22, 23, 24], [12, 14, 15, 16, 17, 18, 19], [20, 25]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 33/103 [00:00<00:00, 328.26it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 66/103 [00:00<00:00, 301.13it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 97/103 [00:00<00:00, 277.07it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [01:50<00:51,  1.06s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(3262, device='cuda:0')
before filtering torch.Size([4, 55521])
after filtering torch.Size([2, 55521])
num_ins_points_after_filtering tensor([ 796, 1830], device='cuda:0')
Working on scene0575_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 36], [6, 7, 8, 9, 10, 11, 12, 13, 16], [14, 15], [17, 18, 19], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 176.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 36/294 [00:00<00:01, 174.84it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/294 [00:00<00:01, 187.62it/s][A
Calculating viewed counts for every point:  26%|██▌       | 76/294 [00:00<00:01, 183.95it/s][A
Calculating viewed counts for every point:  33%|███▎      | 98/294 [00:00<00:01, 195.80it/s][A
Calculating viewed counts for every point:  40%|████      | 118/294 [00:00<00:00, 186.32it/s][A
Calculating viewed counts for every point:  47%|████▋     | 139/294 [00:00<00:00, 191.42it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 162/294 [00:00<00:00, 201.61it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 183/294 [00:00<00:00, 185.90it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 202/294 [00:01<00:00, 172.37it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 220/294 [00:01<00:00, 169.76it/s][A
Calculating viewed counts for every point:  81%|████████  | 238/294 [00:01<00:00, 165.00it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 257/294 [00:01<00:00, 171.12it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 277/294 [00:01<00:00, 179.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [01:53<01:06,  1.38s/it]detected_ratio_thres_value tensor(0.1167, device='cuda:0')
final masked points tensor(4440, device='cuda:0')
before filtering torch.Size([5, 194207])
after filtering torch.Size([3, 194207])
num_ins_points_after_filtering tensor([ 964, 1691, 1083], device='cuda:0')
Working on scene0578_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 27/149 [00:00<00:00, 262.43it/s][A
Calculating viewed counts for every point:  38%|███▊      | 56/149 [00:00<00:00, 273.29it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 84/149 [00:00<00:00, 272.39it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 112/149 [00:00<00:00, 251.75it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 140/149 [00:00<00:00, 260.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [01:55<01:11,  1.53s/it]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(2365, device='cuda:0')
before filtering torch.Size([1, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([929], device='cuda:0')
Working on scene0580_00 class toilet
masks_to_be_merged [[1, 2, 7, 8, 9, 10], [3, 4, 5, 6, 18], [13, 14, 16]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/477 [00:00<00:02, 211.36it/s][A
Calculating viewed counts for every point:   9%|▉         | 45/477 [00:00<00:01, 218.69it/s][A
Calculating viewed counts for every point:  15%|█▍        | 71/477 [00:00<00:01, 236.14it/s][A
Calculating viewed counts for every point:  20%|█▉        | 95/477 [00:00<00:01, 230.78it/s][A
Calculating viewed counts for every point:  25%|██▍       | 119/477 [00:00<00:01, 228.27it/s][A
Calculating viewed counts for every point:  30%|██▉       | 142/477 [00:00<00:01, 228.42it/s][A
Calculating viewed counts for every point:  35%|███▍      | 165/477 [00:00<00:01, 223.62it/s][A
Calculating viewed counts for every point:  40%|███▉      | 189/477 [00:00<00:01, 228.48it/s][A
Calculating viewed counts for every point:  44%|████▍     | 212/477 [00:00<00:01, 228.61it/s][A
Calculating viewed counts for every point:  49%|████▉     | 235/477 [00:01<00:01, 227.50it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 258/477 [00:01<00:00, 219.29it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 283/477 [00:01<00:00, 226.35it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 306/477 [00:01<00:00, 222.67it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 329/477 [00:01<00:00, 222.31it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 353/477 [00:01<00:00, 225.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 376/477 [00:01<00:00, 223.50it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 401/477 [00:01<00:00, 228.04it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 424/477 [00:01<00:00, 224.05it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 448/477 [00:01<00:00, 227.39it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 474/477 [00:02<00:00, 234.45it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [01:57<01:22,  1.79s/it]detected_ratio_thres_value tensor(0.0441, device='cuda:0')
final masked points tensor(5439, device='cuda:0')
before filtering torch.Size([3, 158047])
after filtering torch.Size([3, 158047])
num_ins_points_after_filtering tensor([1561,  949,  981], device='cuda:0')
Working on scene0583_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 95, 96, 97, 98, 99, 100, 101, 102, 103], [31, 87, 88, 94], [53, 55], [72, 73, 74, 76, 77, 78, 89, 90, 91], [79, 80], [81, 82, 83, 84, 85, 86]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/198 [00:00<00:00, 240.79it/s][A
Calculating viewed counts for every point:  25%|██▌       | 50/198 [00:00<00:00, 231.16it/s][A
Calculating viewed counts for every point:  38%|███▊      | 76/198 [00:00<00:00, 239.38it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 103/198 [00:00<00:00, 247.95it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 129/198 [00:00<00:00, 249.86it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 155/198 [00:00<00:00, 239.18it/s][A
Calculating viewed counts for every point:  91%|█████████ | 180/198 [00:00<00:00, 237.54it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [01:59<01:25,  1.89s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(5568, device='cuda:0')
before filtering torch.Size([6, 146782])
after filtering torch.Size([3, 146782])
num_ins_points_after_filtering tensor([2091,  460, 2805], device='cuda:0')
Working on scene0591_00 class toilet
masks_to_be_merged [[0, 3], [6, 7, 8, 9, 10, 11], [12, 13, 14]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/173 [00:00<00:01, 129.04it/s][A
Calculating viewed counts for every point:  16%|█▌        | 27/173 [00:00<00:01, 132.12it/s][A
Calculating viewed counts for every point:  26%|██▌       | 45/173 [00:00<00:00, 152.21it/s][A
Calculating viewed counts for every point:  35%|███▌      | 61/173 [00:00<00:00, 143.92it/s][A
Calculating viewed counts for every point:  44%|████▍     | 76/173 [00:00<00:00, 144.52it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 92/173 [00:00<00:00, 149.46it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 108/173 [00:00<00:00, 147.37it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 124/173 [00:00<00:00, 150.20it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 141/173 [00:00<00:00, 154.41it/s][A
Calculating viewed counts for every point:  91%|█████████ | 157/173 [00:01<00:00, 147.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [02:00<01:17,  1.75s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(1740, device='cuda:0')
before filtering torch.Size([3, 175600])
after filtering torch.Size([2, 175600])
num_ins_points_after_filtering tensor([804, 276], device='cuda:0')
Working on scene0593_00 class toilet
masks_to_be_merged [[0, 1, 20], [2, 4, 5, 6, 45], [7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 36, 37, 38, 39, 40, 41, 42, 43, 44], [19, 27, 28, 29, 30], [22, 23, 24, 25, 31, 32, 33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/230 [00:00<00:01, 159.50it/s][A
Calculating viewed counts for every point:  16%|█▌        | 36/230 [00:00<00:01, 175.01it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/230 [00:00<00:00, 183.76it/s][A
Calculating viewed counts for every point:  33%|███▎      | 75/230 [00:00<00:00, 172.02it/s][A
Calculating viewed counts for every point:  40%|████      | 93/230 [00:00<00:00, 163.95it/s][A
Calculating viewed counts for every point:  50%|█████     | 115/230 [00:00<00:00, 179.02it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 134/230 [00:00<00:00, 171.22it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 152/230 [00:00<00:00, 167.69it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 173/230 [00:00<00:00, 178.75it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 192/230 [00:01<00:00, 168.54it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 210/230 [00:01<00:00, 165.25it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 229/230 [00:01<00:00, 169.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [02:02<01:17,  1.80s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(6831, device='cuda:0')
before filtering torch.Size([5, 211902])
after filtering torch.Size([2, 211902])
num_ins_points_after_filtering tensor([3649, 2239], device='cuda:0')
Working on scene0595_00 class toilet
masks_to_be_merged [[0, 1], [2, 3]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 25/76 [00:00<00:00, 242.86it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 50/76 [00:00<00:00, 231.96it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 74/76 [00:00<00:00, 234.24it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [02:03<00:59,  1.41s/it]detected_ratio_thres_value tensor(0.0541, device='cuda:0')
final masked points tensor(8358, device='cuda:0')
before filtering torch.Size([2, 142330])
after filtering torch.Size([2, 142330])
num_ins_points_after_filtering tensor([4182, 1371], device='cuda:0')
Working on scene0598_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0599_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/189 [00:00<00:00, 246.87it/s][A
Calculating viewed counts for every point:  26%|██▋       | 50/189 [00:00<00:00, 236.77it/s][A
Calculating viewed counts for every point:  39%|███▉      | 74/189 [00:00<00:00, 233.54it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 98/189 [00:00<00:00, 222.72it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 125/189 [00:00<00:00, 237.06it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 149/189 [00:00<00:00, 237.46it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 173/189 [00:00<00:00, 236.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [02:04<00:42,  1.05s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(1640, device='cuda:0')
before filtering torch.Size([1, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([1640], device='cuda:0')
Working on scene0606_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10], [11, 12, 13, 14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 21/250 [00:00<00:01, 202.41it/s][A
Calculating viewed counts for every point:  19%|█▉        | 48/250 [00:00<00:00, 237.73it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/250 [00:00<00:00, 234.42it/s][A
Calculating viewed counts for every point:  38%|███▊      | 96/250 [00:00<00:00, 231.18it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/250 [00:00<00:00, 228.34it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 143/250 [00:00<00:00, 211.82it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 165/250 [00:00<00:00, 211.83it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 187/250 [00:00<00:00, 209.39it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 211/250 [00:00<00:00, 218.09it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 233/250 [00:01<00:00, 216.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [02:06<00:44,  1.13s/it]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(671, device='cuda:0')
before filtering torch.Size([2, 164401])
after filtering torch.Size([2, 164401])
num_ins_points_after_filtering tensor([407, 249], device='cuda:0')
Working on scene0607_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0608_00 class toilet
masks_to_be_merged [[0, 1, 5, 6, 7], [4, 10, 12, 14, 15, 16, 17, 18], [8, 9], [11, 13]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 19/339 [00:00<00:01, 188.71it/s][A
Calculating viewed counts for every point:  12%|█▏        | 40/339 [00:00<00:01, 195.76it/s][A
Calculating viewed counts for every point:  18%|█▊        | 60/339 [00:00<00:01, 192.77it/s][A
Calculating viewed counts for every point:  24%|██▍       | 82/339 [00:00<00:01, 199.98it/s][A
Calculating viewed counts for every point:  31%|███       | 105/339 [00:00<00:01, 208.50it/s][A
Calculating viewed counts for every point:  38%|███▊      | 128/339 [00:00<00:00, 214.52it/s][A
Calculating viewed counts for every point:  44%|████▍     | 150/339 [00:00<00:00, 201.59it/s][A
Calculating viewed counts for every point:  50%|█████     | 171/339 [00:00<00:00, 202.80it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 193/339 [00:00<00:00, 205.97it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 214/339 [00:01<00:00, 197.22it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 236/339 [00:01<00:00, 202.14it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 259/339 [00:01<00:00, 207.39it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 282/339 [00:01<00:00, 213.74it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 304/339 [00:01<00:00, 203.73it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 326/339 [00:01<00:00, 207.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [02:07<00:38,  1.05s/it]detected_ratio_thres_value tensor(0.0735, device='cuda:0')
final masked points tensor(5136, device='cuda:0')
before filtering torch.Size([4, 186579])
after filtering torch.Size([1, 186579])
num_ins_points_after_filtering tensor([3694], device='cuda:0')
Working on scene0609_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4], [6, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 34/110 [00:00<00:00, 336.76it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 68/110 [00:00<00:00, 315.37it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 102/110 [00:00<00:00, 323.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▍  | 106/142 [02:08<00:33,  1.09it/s]detected_ratio_thres_value tensor(0.0571, device='cuda:0')
final masked points tensor(4708, device='cuda:0')
before filtering torch.Size([2, 78836])
after filtering torch.Size([2, 78836])
num_ins_points_after_filtering tensor([2931, 1541], device='cuda:0')
Working on scene0616_00 class toilet
masks_to_be_merged [[0, 16], [1, 2, 3, 4, 5], [7, 8, 9, 11, 12, 13, 14], [18, 19, 21], [22, 23, 25, 26, 27, 28, 29, 32]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 107.63it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:02, 106.51it/s][A
Calculating viewed counts for every point:  11%|█         | 34/304 [00:00<00:02, 108.66it/s][A
Calculating viewed counts for every point:  15%|█▍        | 45/304 [00:00<00:02, 104.90it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/304 [00:00<00:02, 107.75it/s][A
Calculating viewed counts for every point:  22%|██▏       | 68/304 [00:00<00:02, 100.78it/s][A
Calculating viewed counts for every point:  26%|██▌       | 79/304 [00:00<00:02, 97.44it/s] [A
Calculating viewed counts for every point:  30%|██▉       | 91/304 [00:00<00:02, 103.45it/s][A
Calculating viewed counts for every point:  34%|███▎      | 102/304 [00:00<00:01, 102.15it/s][A
Calculating viewed counts for every point:  37%|███▋      | 113/304 [00:01<00:01, 100.96it/s][A
Calculating viewed counts for every point:  41%|████      | 124/304 [00:01<00:01, 99.66it/s] [A
Calculating viewed counts for every point:  45%|████▍     | 136/304 [00:01<00:01, 104.05it/s][A
Calculating viewed counts for every point:  48%|████▊     | 147/304 [00:01<00:01, 103.44it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 160/304 [00:01<00:01, 109.22it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 171/304 [00:01<00:01, 108.39it/s][A
Calculating viewed counts for every point:  61%|██████    | 184/304 [00:01<00:01, 113.31it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 196/304 [00:01<00:00, 112.57it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 208/304 [00:01<00:00, 113.57it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 220/304 [00:02<00:00, 111.31it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 232/304 [00:02<00:00, 110.48it/s][A
Calculating viewed counts for every point:  81%|████████  | 245/304 [00:02<00:00, 113.93it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 257/304 [00:02<00:00, 109.20it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 268/304 [00:02<00:00, 109.14it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 279/304 [00:02<00:00, 105.32it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 291/304 [00:02<00:00, 108.42it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 302/304 [00:02<00:00, 102.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [02:12<00:55,  1.59s/it]detected_ratio_thres_value tensor(0.0758, device='cuda:0')
final masked points tensor(7121, device='cuda:0')
before filtering torch.Size([5, 310248])
after filtering torch.Size([4, 310248])
num_ins_points_after_filtering tensor([1874,  988,  933, 1516], device='cuda:0')
Working on scene0618_00 class toilet
masks_to_be_merged [[0, 1], [2, 3, 13], [7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 14/90 [00:00<00:00, 137.70it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 120.83it/s][A
Calculating viewed counts for every point:  46%|████▌     | 41/90 [00:00<00:00, 123.34it/s][A
Calculating viewed counts for every point:  61%|██████    | 55/90 [00:00<00:00, 127.33it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 68/90 [00:00<00:00, 125.05it/s][A
Calculating viewed counts for every point:  90%|█████████ | 81/90 [00:00<00:00, 120.58it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [02:13<00:49,  1.44s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(3554, device='cuda:0')
before filtering torch.Size([3, 232740])
after filtering torch.Size([2, 232740])
num_ins_points_after_filtering tensor([ 952, 1894], device='cuda:0')
Working on scene0621_00 class toilet
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16], [18, 19, 20], [21, 22], [23, 24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 19/268 [00:00<00:01, 180.82it/s][A
Calculating viewed counts for every point:  14%|█▍        | 38/268 [00:00<00:01, 158.58it/s][A
Calculating viewed counts for every point:  21%|██        | 55/268 [00:00<00:01, 158.65it/s][A
Calculating viewed counts for every point:  26%|██▋       | 71/268 [00:00<00:01, 153.82it/s][A
Calculating viewed counts for every point:  32%|███▏      | 87/268 [00:00<00:01, 149.36it/s][A
Calculating viewed counts for every point:  39%|███▉      | 105/268 [00:00<00:01, 156.97it/s][A
Calculating viewed counts for every point:  46%|████▌     | 123/268 [00:00<00:00, 161.77it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 141/268 [00:00<00:00, 166.16it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 158/268 [00:00<00:00, 163.46it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 176/268 [00:01<00:00, 166.61it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 195/268 [00:01<00:00, 172.41it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 213/268 [00:01<00:00, 166.14it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 230/268 [00:01<00:00, 162.44it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 248/268 [00:01<00:00, 165.52it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 265/268 [00:01<00:00, 165.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [02:15<00:54,  1.65s/it]detected_ratio_thres_value tensor(0.1034, device='cuda:0')
final masked points tensor(5830, device='cuda:0')
before filtering torch.Size([6, 250821])
after filtering torch.Size([4, 250821])
num_ins_points_after_filtering tensor([1178, 1141, 1055, 1658], device='cuda:0')
Working on scene0629_00 class toilet
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 40, 41], [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 43, 44], [45, 46]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 16/275 [00:00<00:01, 157.78it/s][A
Calculating viewed counts for every point:  12%|█▏        | 32/275 [00:00<00:01, 151.56it/s][A
Calculating viewed counts for every point:  18%|█▊        | 49/275 [00:00<00:01, 159.16it/s][A
Calculating viewed counts for every point:  24%|██▍       | 66/275 [00:00<00:01, 159.90it/s][A
Calculating viewed counts for every point:  30%|███       | 83/275 [00:00<00:01, 150.36it/s][A
Calculating viewed counts for every point:  36%|███▋      | 100/275 [00:00<00:01, 154.27it/s][A
Calculating viewed counts for every point:  42%|████▏     | 116/275 [00:00<00:01, 147.69it/s][A
Calculating viewed counts for every point:  48%|████▊     | 131/275 [00:00<00:00, 148.02it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 147/275 [00:00<00:00, 149.43it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 162/275 [00:01<00:00, 145.41it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 178/275 [00:01<00:00, 148.00it/s][A
Calculating viewed counts for every point:  71%|███████   | 194/275 [00:01<00:00, 149.51it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 211/275 [00:01<00:00, 151.71it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 227/275 [00:01<00:00, 151.79it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 243/275 [00:01<00:00, 144.84it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 261/275 [00:01<00:00, 151.85it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [02:17<01:00,  1.88s/it]detected_ratio_thres_value tensor(0.1951, device='cuda:0')
final masked points tensor(8122, device='cuda:0')
before filtering torch.Size([4, 255083])
after filtering torch.Size([2, 255083])
num_ins_points_after_filtering tensor([5307, 2525], device='cuda:0')
Working on scene0633_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], [11, 12], [30, 32, 33, 34, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 27/160 [00:00<00:00, 269.60it/s][A
Calculating viewed counts for every point:  34%|███▍      | 54/160 [00:00<00:00, 257.11it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 87/160 [00:00<00:00, 288.17it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 118/160 [00:00<00:00, 296.48it/s][A
Calculating viewed counts for every point:  92%|█████████▎| 148/160 [00:00<00:00, 287.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [02:18<00:51,  1.67s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(3050, device='cuda:0')
before filtering torch.Size([3, 101007])
after filtering torch.Size([1, 101007])
num_ins_points_after_filtering tensor([2825], device='cuda:0')
Working on scene0643_00 class toilet
masks_to_be_merged [[1, 2, 3], [5, 13], [6, 7, 8, 16], [9, 10, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/194 [00:00<00:00, 182.48it/s][A
Calculating viewed counts for every point:  20%|█▉        | 38/194 [00:00<00:00, 178.30it/s][A
Calculating viewed counts for every point:  30%|███       | 59/194 [00:00<00:00, 188.07it/s][A
Calculating viewed counts for every point:  40%|████      | 78/194 [00:00<00:00, 167.81it/s][A
Calculating viewed counts for every point:  49%|████▉     | 96/194 [00:00<00:00, 162.64it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 115/194 [00:00<00:00, 169.39it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 134/194 [00:00<00:00, 175.43it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 152/194 [00:00<00:00, 171.02it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 170/194 [00:01<00:00, 164.54it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 188/194 [00:01<00:00, 166.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [02:20<00:49,  1.64s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(6352, device='cuda:0')
before filtering torch.Size([4, 167360])
after filtering torch.Size([4, 167360])
num_ins_points_after_filtering tensor([2721,  484,  906,  717], device='cuda:0')
Working on scene0644_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20], [9, 10, 12, 13, 22]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/201 [00:00<00:01, 115.95it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/201 [00:00<00:01, 114.83it/s][A
Calculating viewed counts for every point:  18%|█▊        | 36/201 [00:00<00:01, 105.95it/s][A
Calculating viewed counts for every point:  23%|██▎       | 47/201 [00:00<00:01, 105.54it/s][A
Calculating viewed counts for every point:  29%|██▉       | 59/201 [00:00<00:01, 108.91it/s][A
Calculating viewed counts for every point:  35%|███▍      | 70/201 [00:00<00:01, 105.39it/s][A
Calculating viewed counts for every point:  40%|████      | 81/201 [00:00<00:01, 104.01it/s][A
Calculating viewed counts for every point:  46%|████▋     | 93/201 [00:00<00:01, 106.45it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 105/201 [00:00<00:00, 109.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 117/201 [00:01<00:00, 112.04it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 129/201 [00:01<00:00, 111.25it/s][A
Calculating viewed counts for every point:  70%|███████   | 141/201 [00:01<00:00, 110.85it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 153/201 [00:01<00:00, 110.83it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 165/201 [00:01<00:00, 112.53it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 177/201 [00:01<00:00, 111.82it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 189/201 [00:01<00:00, 109.69it/s][A
Calculating viewed counts for every point: 100%|██████████| 201/201 [00:01<00:00, 112.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [02:22<00:53,  1.83s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(912, device='cuda:0')
before filtering torch.Size([2, 299472])
after filtering torch.Size([1, 299472])
num_ins_points_after_filtering tensor([594], device='cuda:0')
Working on scene0645_00 class toilet
masks_to_be_merged [[0, 31, 62, 67, 68, 69, 70], [1, 2, 5, 6, 7], [3, 4], [8, 9, 10], [13, 14, 15, 16, 17, 26], [21, 22, 23, 24, 25], [27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], [71, 72, 73, 74, 75], [76, 77, 78, 79], [80, 81]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 9/451 [00:00<00:04, 89.72it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/451 [00:00<00:04, 99.27it/s][A
Calculating viewed counts for every point:   7%|▋         | 30/451 [00:00<00:04, 98.91it/s][A
Calculating viewed counts for every point:   9%|▉         | 40/451 [00:00<00:04, 95.15it/s][A
Calculating viewed counts for every point:  11%|█▏        | 51/451 [00:00<00:04, 98.99it/s][A
Calculating viewed counts for every point:  14%|█▎        | 62/451 [00:00<00:03, 101.04it/s][A
Calculating viewed counts for every point:  16%|█▌        | 73/451 [00:00<00:03, 98.35it/s] [A
Calculating viewed counts for every point:  19%|█▊        | 84/451 [00:00<00:03, 98.99it/s][A
Calculating viewed counts for every point:  21%|██        | 94/451 [00:00<00:03, 98.04it/s][A
Calculating viewed counts for every point:  23%|██▎       | 105/451 [00:01<00:03, 99.24it/s][A
Calculating viewed counts for every point:  26%|██▌       | 116/451 [00:01<00:03, 99.94it/s][A
Calculating viewed counts for every point:  28%|██▊       | 127/451 [00:01<00:03, 101.09it/s][A
Calculating viewed counts for every point:  31%|███       | 138/451 [00:01<00:03, 98.55it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 148/451 [00:01<00:03, 98.81it/s][A
Calculating viewed counts for every point:  35%|███▌      | 159/451 [00:01<00:02, 100.66it/s][A
Calculating viewed counts for every point:  38%|███▊      | 170/451 [00:01<00:02, 99.47it/s] [A
Calculating viewed counts for every point:  40%|███▉      | 180/451 [00:01<00:02, 98.37it/s][A
Calculating viewed counts for every point:  42%|████▏     | 190/451 [00:01<00:02, 98.09it/s][A
Calculating viewed counts for every point:  45%|████▍     | 201/451 [00:02<00:02, 101.48it/s][A
Calculating viewed counts for every point:  47%|████▋     | 212/451 [00:02<00:02, 102.28it/s][A
Calculating viewed counts for every point:  49%|████▉     | 223/451 [00:02<00:02, 103.98it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 235/451 [00:02<00:02, 106.72it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 246/451 [00:02<00:01, 107.29it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 257/451 [00:02<00:01, 104.90it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 268/451 [00:02<00:01, 101.98it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 279/451 [00:02<00:01, 93.73it/s] [A
Calculating viewed counts for every point:  64%|██████▍   | 289/451 [00:02<00:01, 93.86it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 300/451 [00:03<00:01, 96.47it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 311/451 [00:03<00:01, 97.87it/s][A
Calculating viewed counts for every point:  71%|███████   | 321/451 [00:03<00:01, 97.09it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 334/451 [00:03<00:01, 104.89it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 345/451 [00:03<00:00, 106.01it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 356/451 [00:03<00:00, 104.40it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 369/451 [00:03<00:00, 108.85it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 381/451 [00:03<00:00, 109.68it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 393/451 [00:03<00:00, 111.72it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 405/451 [00:03<00:00, 112.10it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 417/451 [00:04<00:00, 108.23it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 428/451 [00:04<00:00, 105.36it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 439/451 [00:04<00:00, 101.00it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 450/451 [00:04<00:00, 102.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [02:29<01:32,  3.30s/it]detected_ratio_thres_value tensor(0.2982, device='cuda:0')
final masked points tensor(4040, device='cuda:0')
before filtering torch.Size([10, 352477])
after filtering torch.Size([2, 352477])
num_ins_points_after_filtering tensor([1865, 1305], device='cuda:0')
Working on scene0647_00 class toilet
masks_to_be_merged [[1, 3, 5, 6, 11, 12, 31], [7, 9, 10], [13, 14, 15, 16, 19, 20, 21, 22], [17, 18], [26, 27]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 180.41it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 174.35it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 59/110 [00:00<00:00, 188.36it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 79/110 [00:00<00:00, 190.30it/s][A
Calculating viewed counts for every point:  90%|█████████ | 99/110 [00:00<00:00, 191.98it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [02:30<01:10,  2.62s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(2118, device='cuda:0')
before filtering torch.Size([5, 196185])
after filtering torch.Size([3, 196185])
num_ins_points_after_filtering tensor([ 161, 1261,  544], device='cuda:0')
Working on scene0648_00 class toilet
masks_to_be_merged [[0, 4, 5, 6, 13, 14, 16, 17, 18, 19, 20, 29, 30, 31, 37], [1, 2, 3, 21, 22, 23, 24, 25, 26, 28], [7, 40], [8, 9, 10, 11, 12, 15], [32, 36]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 22/419 [00:00<00:01, 214.59it/s][A
Calculating viewed counts for every point:  11%|█         | 44/419 [00:00<00:01, 210.19it/s][A
Calculating viewed counts for every point:  16%|█▌        | 67/419 [00:00<00:01, 218.48it/s][A
Calculating viewed counts for every point:  21%|██        | 89/419 [00:00<00:01, 209.75it/s][A
Calculating viewed counts for every point:  26%|██▋       | 111/419 [00:00<00:01, 208.11it/s][A
Calculating viewed counts for every point:  32%|███▏      | 132/419 [00:00<00:01, 207.48it/s][A
Calculating viewed counts for every point:  37%|███▋      | 153/419 [00:00<00:01, 198.21it/s][A
Calculating viewed counts for every point:  42%|████▏     | 176/419 [00:00<00:01, 205.79it/s][A
Calculating viewed counts for every point:  47%|████▋     | 197/419 [00:00<00:01, 196.77it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 219/419 [00:01<00:00, 203.45it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 240/419 [00:01<00:00, 204.37it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 262/419 [00:01<00:00, 208.32it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 286/419 [00:01<00:00, 215.27it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 308/419 [00:01<00:00, 211.71it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 330/419 [00:01<00:00, 211.39it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 352/419 [00:01<00:00, 211.31it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 374/419 [00:01<00:00, 210.14it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 398/419 [00:01<00:00, 216.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [02:33<01:07,  2.58s/it]detected_ratio_thres_value tensor(0.1458, device='cuda:0')
final masked points tensor(4557, device='cuda:0')
before filtering torch.Size([5, 167915])
after filtering torch.Size([3, 167915])
num_ins_points_after_filtering tensor([1089, 1685,  782], device='cuda:0')
Working on scene0651_00 class toilet
masks_to_be_merged [[0, 10, 11], [2, 3, 7], [4, 5, 6, 8]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 249.63it/s][A
Calculating viewed counts for every point:  48%|████▊     | 50/104 [00:00<00:00, 229.86it/s][A
Calculating viewed counts for every point:  71%|███████   | 74/104 [00:00<00:00, 226.63it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 97/104 [00:00<00:00, 207.77it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [02:33<00:50,  2.02s/it]detected_ratio_thres_value tensor(0.0882, device='cuda:0')
final masked points tensor(4125, device='cuda:0')
before filtering torch.Size([3, 88450])
after filtering torch.Size([3, 88450])
num_ins_points_after_filtering tensor([ 283, 1765, 1760], device='cuda:0')
Working on scene0652_00 class toilet
masks_to_be_merged [[0, 1, 2], [6, 7]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 29/144 [00:00<00:00, 285.90it/s][A
Calculating viewed counts for every point:  41%|████      | 59/144 [00:00<00:00, 293.07it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 90/144 [00:00<00:00, 298.38it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 120/144 [00:00<00:00, 291.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [02:34<00:39,  1.63s/it]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(2117, device='cuda:0')
before filtering torch.Size([2, 100286])
after filtering torch.Size([2, 100286])
num_ins_points_after_filtering tensor([ 310, 1173], device='cuda:0')
Working on scene0653_00 class toilet
masks_to_be_merged [[0, 1, 46, 47, 48, 49, 50, 51, 52], [2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40], [20, 23, 35, 37], [39, 41, 42], [43, 44]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 139.64it/s][A
Calculating viewed counts for every point:   7%|▋         | 29/388 [00:00<00:02, 141.95it/s][A
Calculating viewed counts for every point:  11%|█▏        | 44/388 [00:00<00:02, 144.62it/s][A
Calculating viewed counts for every point:  15%|█▌        | 59/388 [00:00<00:02, 144.85it/s][A
Calculating viewed counts for every point:  19%|█▉        | 74/388 [00:00<00:02, 138.64it/s][A
Calculating viewed counts for every point:  23%|██▎       | 88/388 [00:00<00:02, 133.96it/s][A
Calculating viewed counts for every point:  26%|██▋       | 102/388 [00:00<00:02, 133.42it/s][A
Calculating viewed counts for every point:  30%|██▉       | 116/388 [00:00<00:02, 129.75it/s][A
Calculating viewed counts for every point:  34%|███▎      | 130/388 [00:00<00:02, 127.98it/s][A
Calculating viewed counts for every point:  37%|███▋      | 145/388 [00:01<00:01, 133.48it/s][A
Calculating viewed counts for every point:  41%|████      | 159/388 [00:01<00:01, 130.51it/s][A
Calculating viewed counts for every point:  45%|████▍     | 173/388 [00:01<00:01, 129.21it/s][A
Calculating viewed counts for every point:  48%|████▊     | 188/388 [00:01<00:01, 134.68it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 202/388 [00:01<00:01, 132.91it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 216/388 [00:01<00:01, 133.94it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 230/388 [00:01<00:01, 134.62it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 244/388 [00:01<00:01, 133.58it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 259/388 [00:01<00:00, 137.10it/s][A
Calculating viewed counts for every point:  70%|███████   | 273/388 [00:02<00:00, 135.87it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 287/388 [00:02<00:00, 130.53it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 302/388 [00:02<00:00, 135.13it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 316/388 [00:02<00:00, 134.03it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 331/388 [00:02<00:00, 137.28it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 346/388 [00:02<00:00, 139.62it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 360/388 [00:02<00:00, 136.10it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 375/388 [00:02<00:00, 139.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [02:38<00:52,  2.29s/it]detected_ratio_thres_value tensor(0.1778, device='cuda:0')
final masked points tensor(5297, device='cuda:0')
before filtering torch.Size([7, 284951])
after filtering torch.Size([3, 284951])
num_ins_points_after_filtering tensor([2446, 1191, 1250], device='cuda:0')
Working on scene0655_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0658_00 class toilet
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 18/55 [00:00<00:00, 178.56it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 36/55 [00:00<00:00, 172.67it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 54/55 [00:00<00:00, 165.32it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [02:38<00:28,  1.34s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(3187, device='cuda:0')
before filtering torch.Size([1, 129951])
after filtering torch.Size([1, 129951])
num_ins_points_after_filtering tensor([742], device='cuda:0')
Working on scene0660_00 class toilet
masks_to_be_merged [[0, 3, 4, 7, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26], [1, 2, 5, 6, 8, 10, 12, 13, 16], [24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [50, 51, 52], [53, 54, 55, 56, 57]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 29/105 [00:00<00:00, 280.71it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 58/105 [00:00<00:00, 256.25it/s][A
Calculating viewed counts for every point:  81%|████████  | 85/105 [00:00<00:00, 254.21it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [02:39<00:25,  1.28s/it]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(6421, device='cuda:0')
before filtering torch.Size([5, 110960])
after filtering torch.Size([4, 110960])
num_ins_points_after_filtering tensor([1811, 1180, 1910, 1411], device='cuda:0')
Working on scene0663_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19], [10, 11, 12, 13, 14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 21/295 [00:00<00:01, 208.66it/s][A
Calculating viewed counts for every point:  14%|█▍        | 42/295 [00:00<00:01, 205.05it/s][A
Calculating viewed counts for every point:  21%|██▏       | 63/295 [00:00<00:01, 206.73it/s][A
Calculating viewed counts for every point:  29%|██▉       | 85/295 [00:00<00:00, 211.50it/s][A
Calculating viewed counts for every point:  36%|███▋      | 107/295 [00:00<00:00, 212.19it/s][A
Calculating viewed counts for every point:  44%|████▎     | 129/295 [00:00<00:00, 205.06it/s][A
Calculating viewed counts for every point:  51%|█████     | 150/295 [00:00<00:00, 201.13it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 172/295 [00:00<00:00, 205.00it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 193/295 [00:00<00:00, 199.42it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 216/295 [00:01<00:00, 207.87it/s][A
Calculating viewed counts for every point:  80%|████████  | 237/295 [00:01<00:00, 205.95it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 258/295 [00:01<00:00, 195.81it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 281/295 [00:01<00:00, 201.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [02:41<00:27,  1.43s/it]detected_ratio_thres_value tensor(0.1316, device='cuda:0')
final masked points tensor(4393, device='cuda:0')
before filtering torch.Size([2, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([2555, 1774], device='cuda:0')
Working on scene0664_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [22, 23, 24, 25, 26, 27, 28, 29], [30, 31], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [47, 48, 49]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 39/144 [00:00<00:00, 388.36it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 78/144 [00:00<00:00, 346.53it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 114/144 [00:00<00:00, 347.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [02:42<00:24,  1.33s/it]detected_ratio_thres_value tensor(0.2333, device='cuda:0')
final masked points tensor(3150, device='cuda:0')
before filtering torch.Size([5, 44585])
after filtering torch.Size([2, 44585])
num_ins_points_after_filtering tensor([1492,  536], device='cuda:0')
Working on scene0665_00 class toilet
No 3d masks detected in backprojection!
Working on scene0670_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6, 8, 11, 12, 13, 14, 15, 16], [7, 9, 10, 17]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 23/303 [00:00<00:01, 221.36it/s][A
Calculating viewed counts for every point:  15%|█▌        | 46/303 [00:00<00:01, 195.45it/s][A
Calculating viewed counts for every point:  23%|██▎       | 69/303 [00:00<00:01, 206.35it/s][A
Calculating viewed counts for every point:  30%|██▉       | 90/303 [00:00<00:01, 206.14it/s][A
Calculating viewed counts for every point:  37%|███▋      | 111/303 [00:00<00:00, 204.48it/s][A
Calculating viewed counts for every point:  44%|████▍     | 134/303 [00:00<00:00, 212.15it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 156/303 [00:00<00:00, 200.85it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 178/303 [00:00<00:00, 205.16it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 200/303 [00:00<00:00, 207.21it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 221/303 [00:01<00:00, 205.84it/s][A
Calculating viewed counts for every point:  80%|████████  | 243/303 [00:01<00:00, 208.36it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 264/303 [00:01<00:00, 207.35it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 288/303 [00:01<00:00, 214.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [02:44<00:17,  1.12s/it]detected_ratio_thres_value tensor(0.0789, device='cuda:0')
final masked points tensor(1427, device='cuda:0')
before filtering torch.Size([3, 176038])
after filtering torch.Size([2, 176038])
num_ins_points_after_filtering tensor([982, 410], device='cuda:0')
Working on scene0671_00 class toilet
masks_to_be_merged [[2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  35%|███▍      | 27/78 [00:00<00:00, 261.04it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 54/78 [00:00<00:00, 265.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [02:44<00:14,  1.06it/s]detected_ratio_thres_value tensor(0.1212, device='cuda:0')
final masked points tensor(1319, device='cuda:0')
before filtering torch.Size([1, 81469])
after filtering torch.Size([1, 81469])
num_ins_points_after_filtering tensor([857], device='cuda:0')
Working on scene0678_00 class toilet
masks_to_be_merged [[0, 1, 13], [3, 4, 5], [7, 9, 10], [11, 12], [16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 99.64it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 91.90it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 90.64it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 91.47it/s][A
Calculating viewed counts for every point:  21%|██        | 51/245 [00:00<00:02, 94.78it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 93.59it/s][A
Calculating viewed counts for every point:  30%|██▉       | 73/245 [00:00<00:01, 98.86it/s][A
Calculating viewed counts for every point:  34%|███▍      | 83/245 [00:00<00:01, 94.93it/s][A
Calculating viewed counts for every point:  38%|███▊      | 93/245 [00:00<00:01, 96.18it/s][A
Calculating viewed counts for every point:  42%|████▏     | 103/245 [00:01<00:01, 95.45it/s][A
Calculating viewed counts for every point:  46%|████▌     | 113/245 [00:01<00:01, 94.87it/s][A
Calculating viewed counts for every point:  51%|█████     | 124/245 [00:01<00:01, 96.73it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 134/245 [00:01<00:01, 94.15it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 144/245 [00:01<00:01, 95.73it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 156/245 [00:01<00:00, 100.94it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 167/245 [00:01<00:00, 100.82it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 178/245 [00:01<00:00, 100.53it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 189/245 [00:01<00:00, 100.91it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 200/245 [00:02<00:00, 98.09it/s] [A
Calculating viewed counts for every point:  86%|████████▌ | 211/245 [00:02<00:00, 98.74it/s][A
Calculating viewed counts for every point:  90%|█████████ | 221/245 [00:02<00:00, 98.60it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 232/245 [00:02<00:00, 100.95it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 243/245 [00:02<00:00, 99.40it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [02:47<00:20,  1.45s/it]detected_ratio_thres_value tensor(0.0652, device='cuda:0')
final masked points tensor(6590, device='cuda:0')
before filtering torch.Size([5, 364811])
after filtering torch.Size([5, 364811])
num_ins_points_after_filtering tensor([1345, 3844,  852,   13,  258], device='cuda:0')
Working on scene0684_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [11, 12, 13, 14, 36, 37, 38, 39, 40], [15, 16, 17, 18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 34/87 [00:00<00:00, 338.29it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 68/87 [00:00<00:00, 318.52it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [02:48<00:16,  1.27s/it]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(3137, device='cuda:0')
before filtering torch.Size([3, 41364])
after filtering torch.Size([3, 41364])
num_ins_points_after_filtering tensor([1367, 1014,  751], device='cuda:0')
Working on scene0685_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33], [9, 10], [11, 12, 13], [14, 15, 16, 17, 18], [19, 20, 21, 22, 23]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 27/196 [00:00<00:00, 269.73it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/196 [00:00<00:00, 253.09it/s][A
Calculating viewed counts for every point:  41%|████      | 80/196 [00:00<00:00, 250.15it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 106/196 [00:00<00:00, 247.12it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 131/196 [00:00<00:00, 246.61it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 156/196 [00:00<00:00, 242.31it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 186/196 [00:00<00:00, 258.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [02:49<00:15,  1.26s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(7668, device='cuda:0')
before filtering torch.Size([5, 132720])
after filtering torch.Size([4, 132720])
num_ins_points_after_filtering tensor([3351,  376,  908, 1751], device='cuda:0')
Working on scene0686_00 class toilet
masks_to_be_merged [[0, 72, 73, 74, 75, 76, 77, 78, 79, 80], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], [27, 28, 29, 30, 44, 45, 46, 47], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [41, 42], [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [62, 63, 64, 65, 66, 67, 69, 70]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 20/153 [00:00<00:00, 199.91it/s][A
Calculating viewed counts for every point:  26%|██▌       | 40/153 [00:00<00:00, 181.88it/s][A
Calculating viewed counts for every point:  42%|████▏     | 64/153 [00:00<00:00, 204.27it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 86/153 [00:00<00:00, 208.48it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 111/153 [00:00<00:00, 219.63it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 134/153 [00:00<00:00, 219.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [02:51<00:15,  1.41s/it]Projecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [02:51<00:10,  1.03s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(9349, device='cuda:0')
before filtering torch.Size([7, 89776])
after filtering torch.Size([6, 89776])
num_ins_points_after_filtering tensor([1092, 2316, 2338, 1157, 1189, 1253], device='cuda:0')
Working on scene0689_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0690_00 class toilet
No 3d masks detected in backprojection!
Working on scene0693_00 class toilet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 54, 55], [50, 51], [52, 53]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 34/174 [00:00<00:00, 330.40it/s][A
Calculating viewed counts for every point:  39%|███▉      | 68/174 [00:00<00:00, 331.61it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 102/174 [00:00<00:00, 325.29it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 138/174 [00:00<00:00, 337.73it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 172/174 [00:00<00:00, 332.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [02:52<00:06,  1.26it/s]detected_ratio_thres_value tensor(0.4884, device='cuda:0')
final masked points tensor(1350, device='cuda:0')
before filtering torch.Size([3, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([1328], device='cuda:0')
Working on scene0695_00 class toilet
masks_to_be_merged [[2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 30/182 [00:00<00:00, 295.18it/s][A
Calculating viewed counts for every point:  33%|███▎      | 60/182 [00:00<00:00, 276.73it/s][A
Calculating viewed counts for every point:  48%|████▊     | 88/182 [00:00<00:00, 264.18it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 115/182 [00:00<00:00, 254.14it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 141/182 [00:00<00:00, 253.56it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 169/182 [00:00<00:00, 262.02it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [02:53<00:05,  1.27it/s]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(2455, device='cuda:0')
before filtering torch.Size([1, 133418])
after filtering torch.Size([1, 133418])
num_ins_points_after_filtering tensor([1041], device='cuda:0')
Working on scene0696_00 class toilet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0697_00 class toilet
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [27, 28, 29]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 24/288 [00:00<00:01, 239.68it/s][A
Calculating viewed counts for every point:  17%|█▋        | 48/288 [00:00<00:01, 239.81it/s][A
Calculating viewed counts for every point:  27%|██▋       | 77/288 [00:00<00:00, 261.74it/s][A
Calculating viewed counts for every point:  36%|███▌      | 104/288 [00:00<00:00, 245.53it/s][A
Calculating viewed counts for every point:  45%|████▌     | 130/288 [00:00<00:00, 249.95it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 158/288 [00:00<00:00, 257.31it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 187/288 [00:00<00:00, 265.26it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 215/288 [00:00<00:00, 269.65it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 244/288 [00:00<00:00, 274.83it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 272/288 [00:01<00:00, 263.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [02:55<00:04,  1.25it/s]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(2059, device='cuda:0')
before filtering torch.Size([2, 139300])
after filtering torch.Size([1, 139300])
num_ins_points_after_filtering tensor([1999], device='cuda:0')
Working on scene0699_00 class toilet
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [17, 18, 19, 20, 21], [23, 24, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/220 [00:00<00:01, 174.64it/s][A
Calculating viewed counts for every point:  16%|█▋        | 36/220 [00:00<00:01, 169.71it/s][A
Calculating viewed counts for every point:  26%|██▌       | 57/220 [00:00<00:00, 185.34it/s][A
Calculating viewed counts for every point:  35%|███▍      | 76/220 [00:00<00:00, 183.28it/s][A
Calculating viewed counts for every point:  43%|████▎     | 95/220 [00:00<00:00, 180.32it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 115/220 [00:00<00:00, 184.31it/s][A
Calculating viewed counts for every point:  61%|██████    | 134/220 [00:00<00:00, 180.09it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 153/220 [00:00<00:00, 180.12it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 172/220 [00:00<00:00, 179.09it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 190/220 [00:01<00:00, 171.95it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 211/220 [00:01<00:00, 182.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [02:56<00:03,  1.00it/s]detected_ratio_thres_value tensor(0.0930, device='cuda:0')
final masked points tensor(5645, device='cuda:0')
before filtering torch.Size([4, 153041])
after filtering torch.Size([3, 153041])
num_ins_points_after_filtering tensor([ 804, 1497, 2805], device='cuda:0')
Working on scene0700_00 class toilet
masks_to_be_merged [[0, 29, 31], [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 37, 38, 39, 40, 47, 49, 73, 74, 75, 76], [2, 3, 4, 5, 6, 81, 82, 83, 84, 85, 87, 89, 90, 94, 95, 96, 97], [8, 9, 11], [34, 35, 45, 46], [41, 42, 43, 50, 51, 64, 65, 66], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 79, 80, 102, 103, 104, 105, 106, 107, 108, 109, 110], [62, 63], [67, 68], [69, 70, 71], [99, 100]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/459 [00:00<00:02, 175.11it/s][A
Calculating viewed counts for every point:   8%|▊         | 36/459 [00:00<00:02, 170.87it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/459 [00:00<00:02, 177.13it/s][A
Calculating viewed counts for every point:  16%|█▋        | 75/459 [00:00<00:02, 183.92it/s][A
Calculating viewed counts for every point:  21%|██        | 97/459 [00:00<00:01, 193.96it/s][A
Calculating viewed counts for every point:  25%|██▌       | 117/459 [00:00<00:01, 188.93it/s][A
Calculating viewed counts for every point:  30%|██▉       | 137/459 [00:00<00:01, 189.14it/s][A
Calculating viewed counts for every point:  34%|███▍      | 157/459 [00:00<00:01, 191.69it/s][A
Calculating viewed counts for every point:  39%|███▊      | 177/459 [00:00<00:01, 185.24it/s][A
Calculating viewed counts for every point:  43%|████▎     | 196/459 [00:01<00:01, 183.97it/s][A
Calculating viewed counts for every point:  47%|████▋     | 215/459 [00:01<00:01, 185.05it/s][A
Calculating viewed counts for every point:  51%|█████     | 234/459 [00:01<00:01, 181.78it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 253/459 [00:01<00:01, 183.04it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 272/459 [00:01<00:01, 176.90it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 291/459 [00:01<00:00, 177.91it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 312/459 [00:01<00:00, 185.70it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 331/459 [00:01<00:00, 182.19it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 350/459 [00:01<00:00, 182.25it/s][A
Calculating viewed counts for every point:  80%|████████  | 369/459 [00:02<00:00, 182.08it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 388/459 [00:02<00:00, 178.69it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 406/459 [00:02<00:00, 175.24it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 425/459 [00:02<00:00, 177.41it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 443/459 [00:02<00:00, 177.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [03:00<00:05,  1.77s/it]detected_ratio_thres_value tensor(0.1892, device='cuda:0')
final masked points tensor(10903, device='cuda:0')
before filtering torch.Size([11, 167755])
after filtering torch.Size([4, 167755])
num_ins_points_after_filtering tensor([1125, 2060, 3413,  167], device='cuda:0')
Working on scene0701_00 class toilet
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 35/102 [00:00<00:00, 347.03it/s][A
Calculating viewed counts for every point:  71%|███████   | 72/102 [00:00<00:00, 355.46it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [03:01<00:02,  1.41s/it]detected_ratio_thres_value tensor(0.0476, device='cuda:0')
final masked points tensor(1204, device='cuda:0')
before filtering torch.Size([1, 73550])
after filtering torch.Size([1, 73550])
num_ins_points_after_filtering tensor([1204], device='cuda:0')
Working on scene0702_00 class toilet
masks_to_be_merged [[1, 2, 3, 4], [5, 37], [6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [30, 31], [35, 36]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  44%|████▍     | 37/84 [00:00<00:00, 359.25it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 73/84 [00:00<00:00, 335.43it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [03:02<00:01,  1.36s/it]detected_ratio_thres_value tensor(0.5294, device='cuda:0')
final masked points tensor(4276, device='cuda:0')
before filtering torch.Size([6, 54769])
after filtering torch.Size([1, 54769])
num_ins_points_after_filtering tensor([2202], device='cuda:0')
Working on scene0704_00 class toilet
masks_to_be_merged [[17, 18, 87, 88, 89, 90], [26, 27], [28, 29, 30, 60, 61, 62, 64, 66, 73, 74, 75, 76, 77, 78, 79], [31, 32, 33], [41, 42, 43, 44, 45, 46], [47, 48, 50], [55, 56], [57, 58, 59], [63, 65, 67, 68, 70, 71, 72, 80, 81, 82, 83, 84, 85], [93, 94], [97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113], [114, 115], [118, 119]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/241 [00:00<00:01, 193.42it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/241 [00:00<00:01, 176.53it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/241 [00:00<00:01, 172.63it/s][A
Calculating viewed counts for every point:  32%|███▏      | 78/241 [00:00<00:00, 180.90it/s][A
Calculating viewed counts for every point:  40%|████      | 97/241 [00:00<00:00, 177.99it/s][A
Calculating viewed counts for every point:  49%|████▉     | 119/241 [00:00<00:00, 188.00it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 138/241 [00:00<00:00, 173.99it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 158/241 [00:00<00:00, 179.83it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 180/241 [00:00<00:00, 189.40it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 200/241 [00:01<00:00, 181.52it/s][A
Calculating viewed counts for every point:  91%|█████████ | 219/241 [00:01<00:00, 178.40it/s][A
Calculating viewed counts for every point: 100%|██████████| 241/241 [00:01<00:00, 189.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:05<00:00,  1.82s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:05<00:00,  1.31s/it]
detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(8156, device='cuda:0')
before filtering torch.Size([13, 183029])
after filtering torch.Size([3, 183029])
num_ins_points_after_filtering tensor([1693,  864, 1534], device='cuda:0')
Processing class: toilet
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:00<01:47,  1.31it/s]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:08,  2.04it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<00:52,  2.67it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:44,  3.09it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:01<00:44,  3.09it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:41,  3.29it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:40,  3.30it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:02<00:35,  3.75it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:34,  3.78it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:33,  3.90it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:03<00:32,  4.06it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:03<00:30,  4.20it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:03<00:25,  4.96it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:30,  4.14it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:04<00:25,  4.90it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:04<00:27,  4.61it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:04<00:26,  4.68it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:04<00:22,  5.37it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:05<00:20,  5.97it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:05<00:23,  5.13it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:05<00:20,  5.92it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:05<00:20,  5.81it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:05<00:26,  4.38it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:29,  3.95it/s]DEBUG best_match_after_iou_check [tensor(131), tensor(68), tensor(3), tensor(104), tensor(301), tensor(69), tensor(128), tensor(103)]
DEBUG uniques tensor([  3,  68,  69, 103, 104, 128, 131, 301]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 68
Matched 1 times with 69
Matched 1 times with 103
Matched 1 times with 104
Matched 1 times with 128
Matched 1 times with 131
Matched 1 times with 301
iou for matched labels tensor([0.6865, 0.4473, 0.3326, 0.4744, 0.6258, 0.5916, 0.3754, 0.2422])
Matched labels: ['folded_chair', 'kitchen_counter', 'refrigerator', 'chair', 'water_bottle', 'bin', 'folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.68017578125, 0.7021484375, 0.740234375, 0.72509765625, 0.69970703125, 0.61376953125, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(93), tensor(34)]
DEBUG uniques tensor([34, 93]) tensor([1, 1])
Matched 1 times with 34
Matched 1 times with 93
iou for matched labels tensor([0.6171, 0.6180])
Matched labels: ['chair', 'folded_chair']
Clip similarities: [0.740234375, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(49), tensor(74), tensor(31), tensor(21)]
DEBUG uniques tensor([21, 31, 49, 74]) tensor([1, 1, 1, 1])
Matched 1 times with 21
Matched 1 times with 31
Matched 1 times with 49
Matched 1 times with 74
iou for matched labels tensor([0.5101, 0.1638, 0.5537, 0.6104])
Matched labels: ['sofa_chair', 'sofa_chair', 'sofa_chair', 'trash_can']
Clip similarities: [0.63037109375, 0.63037109375, 0.63037109375, 0.77294921875]
DEBUG best_match_after_iou_check [tensor(193), tensor(90), tensor(129)]
DEBUG uniques tensor([ 90, 129, 193]) tensor([1, 1, 1])
Matched 1 times with 90
Matched 1 times with 129
Matched 1 times with 193
iou for matched labels tensor([0.3834, 0.6035, 0.6240])
Matched labels: ['bin', 'couch', 'mini_fridge']
Clip similarities: [0.69970703125, 0.6962890625, 0.7041015625]
DEBUG best_match_after_iou_check [tensor(42)]
DEBUG uniques tensor([42]) tensor([1])
Matched 1 times with 42
iou for matched labels tensor([0.4761])
Matched labels: ['sofa_chair']
Clip similarities: [0.63037109375]
DEBUG best_match_after_iou_check [tensor(15)]
DEBUG uniques tensor([15]) tensor([1])
Matched 1 times with 15
iou for matched labels tensor([0.8461])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(69), tensor(53), tensor(69), tensor(226)]
DEBUG uniques tensor([ 53,  69, 226]) tensor([1, 2, 1])
Matched 1 times with 53
Matched 2 times with 69
Merge stage2 masks
Matched 1 times with 226
iou for matched labels tensor([0.4537, 0.4830, 0.7794])
Matched labels: ['monitor', 'couch', 'sofa_chair']
Clip similarities: [0.7099609375, 0.6962890625, 0.63037109375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(10), tensor(49), tensor(191), tensor(191)]
DEBUG uniques tensor([ 10,  49, 191]) tensor([1, 1, 2])
Matched 1 times with 10
Matched 1 times with 49
Matched 2 times with 191
Merge stage2 masks
iou for matched labels tensor([0.5478, 0.5696, 0.3048])
Matched labels: ['sofa_chair', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.63037109375, 0.63037109375, 0.63037109375]
DEBUG best_match_after_iou_check [tensor(46), tensor(17), tensor(10), tensor(36)]
DEBUG uniques tensor([10, 17, 36, 46]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 17
Matched 1 times with 36
Matched 1 times with 46
iou for matched labels tensor([0.4245, 0.4897, 0.3374, 0.8333])
Matched labels: ['copier', 'copier', 'copier', 'bin']
Clip similarities: [0.74560546875, 0.74560546875, 0.74560546875, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(33), tensor(91)]
DEBUG uniques tensor([33, 91]) tensor([1, 1])
Matched 1 times with 33
Matched 1 times with 91
iou for matched labels tensor([0.7515, 0.5234])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(32), tensor(16), tensor(3)]
DEBUG uniques tensor([ 3, 16, 32]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 16
Matched 1 times with 32
iou for matched labels tensor([0.6252, 0.8186, 0.5488])
Matched labels: ['ironing_board', 'toilet', 'radiator']
Clip similarities: [0.62158203125, 1.0009765625, 0.69091796875]
DEBUG best_match_after_iou_check [tensor(85), tensor(46)]
DEBUG uniques tensor([46, 85]) tensor([1, 1])
Matched 1 times with 46
Matched 1 times with 85
iou for matched labels tensor([0.7828, 0.7810])
Matched labels: ['toilet', 'toilet']
Clip similarities: [1.0009765625, 1.0009765625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(143), tensor(242), tensor(82), tensor(98)]
DEBUG uniques tensor([ 82,  98, 143, 242]) tensor([1, 1, 1, 1])
Matched 1 times with 82
Matched 1 times with 98
Matched 1 times with 143
Matched 1 times with 242
iou for matched labels tensor([0.5477, 0.2827, 0.4922, 0.5608])
Matched labels: ['folded_chair', 'desk', 'desk', 'file_cabinet']
Clip similarities: [0.61376953125, 0.68701171875, 0.68701171875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(2)]
DEBUG uniques tensor([2]) tensor([1])
Matched 1 times with 2
iou for matched labels tensor([0.7852])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(81), tensor(116)]
DEBUG uniques tensor([ 81, 116]) tensor([1, 1])
Matched 1 times with 81
Matched 1 times with 116
iou for matched labels tensor([0.3128, 0.4510])
Matched labels: ['chair', 'refrigerator']
Clip similarities: [0.740234375, 0.7021484375]
DEBUG best_match_after_iou_check [tensor(95), tensor(46), tensor(149), tensor(123), tensor(90)]
DEBUG uniques tensor([ 46,  90,  95, 123, 149]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 46
Matched 1 times with 90
Matched 1 times with 95
Matched 1 times with 123
Matched 1 times with 149
iou for matched labels tensor([0.5656, 0.2972, 0.1601, 0.3855, 0.6800])
Matched labels: ['sink', 'washing_machine', 'laundry_hamper', 'washing_machine', 'bathroom_stall_door']
Clip similarities: [0.80517578125, 0.7783203125, 0.71826171875, 0.7783203125, 0.80712890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(33)]
DEBUG uniques tensor([33]) tensor([1])
Matched 1 times with 33
iou for matched labels tensor([0.8023])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(122), tensor(95)]
DEBUG uniques tensor([ 95, 122]) tensor([1, 1])
Matched 1 times with 95
Matched 1 times with 122
iou for matched labels tensor([0.5896, 0.5145])
Matched labels: ['bin', 'dishwasher']
Clip similarities: [0.69970703125, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(38)]
DEBUG uniques tensor([38]) tensor([1])
Matched 1 times with 38
iou for matched labels tensor([0.8263])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(114), tensor(15)]
DEBUG uniques tensor([ 15, 114]) tensor([1, 1])
Matched 1 times with 15
Matched 1 times with 114
iou for matched labels tensor([0.7427, 0.6419])
Matched labels: ['soap_dispenser', 'refrigerator']
Clip similarities: [0.74462890625, 0.7021484375]
DEBUG best_match_after_iou_check [tensor(104), tensor(118), tensor(143), tensor(133), tensor(50)]
DEBUG uniques tensor([ 50, 104, 118, 133, 143]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 50
Matched 1 times with 104
Matched 1 times with 118
Matched 1 times with 133
Matched 1 times with 143
iou for matched labels tensor([0.3974, 0.1835, 0.2916, 0.6403, 0.3605])
Matched labels: ['chair', 'chair', 'office_chair', 'trash_can', 'folded_chair']
Clip similarities: [0.740234375, 0.740234375, 0.71875, 0.77294921875, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(32), tensor(15)]
DEBUG uniques tensor([15, 32]) tensor([1, 1])
Matched 1 times with 15
Matched 1 times with 32
iou for matched labels tensor([0.7125, 0.8131])
Matched labels: ['stool', 'sofa_chair']
Clip similarities: [0.75244140625, 0.63037109375]
DEBUG best_match_after_iou_check [tensor(72), tensor(25)]
DEBUG uniques tensor([25, 72]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 72
iou for matched labels tensor([0.6795, 0.4211])
Matched labels: ['trash_can', 'folded_chair']
Select thresholds for refinement:  18%|█▊        | 26/142 [00:06<00:29,  3.88it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:06<00:24,  4.68it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:06<00:21,  5.26it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:07<00:26,  4.21it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:07<00:25,  4.46it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:07<00:25,  4.35it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:07<00:25,  4.35it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:08<00:26,  4.04it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:08<00:32,  3.37it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:08<00:32,  3.29it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:09<00:35,  3.02it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:09<00:32,  3.19it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:09<00:30,  3.40it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:09<00:28,  3.65it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:10<00:25,  3.96it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:10<00:23,  4.30it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:10<00:21,  4.58it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:10<00:24,  4.01it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:11<00:29,  3.34it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:11<00:24,  4.03it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:11<00:22,  4.19it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:11<00:22,  4.31it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:12<00:26,  3.55it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:12<00:27,  3.38it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:12<00:26,  3.46it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:12<00:21,  4.20it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:13<00:18,  4.79it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:13<00:19,  4.55it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:13<00:20,  4.30it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:13<00:19,  4.46it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:14<00:20,  4.23it/s]Clip similarities: [0.77294921875, 0.61376953125]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(18), tensor(197)]
DEBUG uniques tensor([ 18, 197]) tensor([1, 1])
Matched 1 times with 18
Matched 1 times with 197
iou for matched labels tensor([0.8354, 0.1753])
Matched labels: ['toilet', 'bag']
Clip similarities: [1.0009765625, 0.73828125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(96), tensor(64), tensor(10), tensor(69)]
DEBUG uniques tensor([10, 64, 69, 96]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 64
Matched 1 times with 69
Matched 1 times with 96
iou for matched labels tensor([0.4640, 0.7306, 0.6768, 0.5031])
Matched labels: ['office_chair', 'bin', 'closet_door', 'bin']
Clip similarities: [0.71875, 0.69970703125, 0.7421875, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.5495])
Matched labels: ['chair']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(184), tensor(46), tensor(124)]
DEBUG uniques tensor([ 46, 124, 184]) tensor([1, 1, 1])
Matched 1 times with 46
Matched 1 times with 124
Matched 1 times with 184
iou for matched labels tensor([0.7019, 0.7338, 0.5233])
Matched labels: ['refrigerator', 'refrigerator', 'closet_door']
Clip similarities: [0.7021484375, 0.7021484375, 0.7421875]
DEBUG best_match_after_iou_check [tensor(114), tensor(41), tensor(149)]
DEBUG uniques tensor([ 41, 114, 149]) tensor([1, 1, 1])
Matched 1 times with 41
Matched 1 times with 114
Matched 1 times with 149
iou for matched labels tensor([0.6605, 0.4162, 0.2007])
Matched labels: ['sofa_chair', 'chair', 'chair']
Clip similarities: [0.63037109375, 0.740234375, 0.740234375]
DEBUG best_match_after_iou_check [tensor(14), tensor(236), tensor(447), tensor(13), tensor(232), tensor(143)]
DEBUG uniques tensor([ 13,  14, 143, 232, 236, 447]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 14
Matched 1 times with 143
Matched 1 times with 232
Matched 1 times with 236
Matched 1 times with 447
iou for matched labels tensor([0.4520, 0.5559, 0.0980, 0.7633, 0.2524, 0.1186])
Matched labels: ['lamp', 'sink', 'chair', 'toilet', 'shower_door', 'shower_wall']
Clip similarities: [0.68115234375, 0.80517578125, 0.740234375, 1.0009765625, 0.77392578125, 0.7490234375]
DEBUG best_match_after_iou_check [tensor(55), tensor(37), tensor(35), tensor(72)]
DEBUG uniques tensor([35, 37, 55, 72]) tensor([1, 1, 1, 1])
Matched 1 times with 35
Matched 1 times with 37
Matched 1 times with 55
Matched 1 times with 72
iou for matched labels tensor([0.3717, 0.3152, 0.3756, 0.4756])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'recycling_bin']
Clip similarities: [0.61376953125, 0.61376953125, 0.61376953125, 0.7646484375]
DEBUG best_match_after_iou_check [tensor(86), tensor(63), tensor(27)]
DEBUG uniques tensor([27, 63, 86]) tensor([1, 1, 1])
Matched 1 times with 27
Matched 1 times with 63
Matched 1 times with 86
iou for matched labels tensor([0.4927, 0.7516, 0.7603])
Matched labels: ['bin', 'trash_can', 'trash_can']
Clip similarities: [0.69970703125, 0.77294921875, 0.77294921875]
DEBUG best_match_after_iou_check [tensor(6), tensor(123)]
DEBUG uniques tensor([  6, 123]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 123
iou for matched labels tensor([0.6080, 0.3696])
Matched labels: ['folded_chair', 'storage_bin']
Clip similarities: [0.61376953125, 0.7421875]
DEBUG best_match_after_iou_check [tensor(166)]
DEBUG uniques tensor([166]) tensor([1])
Matched 1 times with 166
iou for matched labels tensor([0.7416])
Matched labels: ['chair']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(97), tensor(52), tensor(37)]
DEBUG uniques tensor([37, 52, 97]) tensor([1, 1, 1])
Matched 1 times with 37
Matched 1 times with 52
Matched 1 times with 97
iou for matched labels tensor([0.6347, 0.6815, 0.3460])
Matched labels: ['folded_chair', 'bin', 'shelf']
Clip similarities: [0.61376953125, 0.69970703125, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(31), tensor(37)]
DEBUG uniques tensor([31, 37]) tensor([1, 1])
Matched 1 times with 31
Matched 1 times with 37
iou for matched labels tensor([0.3362, 0.8773])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(80), tensor(56)]
DEBUG uniques tensor([56, 80]) tensor([1, 1])
Matched 1 times with 56
Matched 1 times with 80
iou for matched labels tensor([0.6411, 0.3958])
Matched labels: ['bin', 'file_cabinet']
Clip similarities: [0.69970703125, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(470), tensor(5)]
DEBUG uniques tensor([  5, 470]) tensor([1, 1])
Matched 1 times with 5
Matched 1 times with 470
iou for matched labels tensor([0.6142, 0.6193])
Matched labels: ['oven', 'washing_machine']
Clip similarities: [0.751953125, 0.7783203125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(29), tensor(39), tensor(1), tensor(99)]
DEBUG uniques tensor([ 1, 29, 39, 99]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 29
Matched 1 times with 39
Matched 1 times with 99
iou for matched labels tensor([0.6677, 0.6947, 0.8380, 0.8254])
Matched labels: ['water_cooler', 'water_cooler', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.75830078125, 0.75830078125, 0.63037109375, 0.63037109375]
DEBUG best_match_after_iou_check [tensor(92)]
DEBUG uniques tensor([92]) tensor([1])
Matched 1 times with 92
iou for matched labels tensor([0.2653])
Matched labels: ['sink']
Clip similarities: [0.80517578125]
DEBUG best_match_after_iou_check [tensor(75), tensor(20), tensor(103), tensor(98)]
DEBUG uniques tensor([ 20,  75,  98, 103]) tensor([1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 75
Matched 1 times with 98
Matched 1 times with 103
iou for matched labels tensor([0.6073, 0.1232, 0.7481, 0.6013])
Matched labels: ['couch', 'couch', 'office_chair', 'folded_chair']
Clip similarities: [0.6962890625, 0.6962890625, 0.71875, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(91), tensor(58)]
DEBUG uniques tensor([58, 91]) tensor([1, 1])
Matched 1 times with 58
Matched 1 times with 91
iou for matched labels tensor([0.3339, 0.6967])
Matched labels: ['couch', 'folded_chair']
Clip similarities: [0.6962890625, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(68), tensor(28), tensor(39), tensor(81)]
DEBUG uniques tensor([28, 39, 68, 81]) tensor([1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 39
Matched 1 times with 68
Matched 1 times with 81
iou for matched labels tensor([0.8663, 0.6835, 0.8412, 0.7858])
Matched labels: ['file_cabinet', 'copier', 'copier', 'trash_can']
Clip similarities: [0.71337890625, 0.74560546875, 0.74560546875, 0.77294921875]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(147)]
DEBUG uniques tensor([147]) tensor([1])
Matched 1 times with 147
iou for matched labels tensor([0.2057])
Matched labels: ['chair']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(44), tensor(44), tensor(126), tensor(90)]
DEBUG uniques tensor([ 44,  90, 126]) tensor([2, 1, 1])
Matched 2 times with 44
Merge stage2 masks
Matched 1 times with 90
Matched 1 times with 126
iou for matched labels tensor([0.3303, 0.2476, 0.3288])
Matched labels: ['folded_chair', 'chair', 'couch']
Clip similarities: [0.61376953125, 0.740234375, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(157), tensor(22)]
DEBUG uniques tensor([ 22, 157]) tensor([1, 1])
Matched 1 times with 22
Matched 1 times with 157
iou for matched labels tensor([0.0295, 0.0504])
Matched labels: ['chair', 'folded_chair']
Clip similarities: [0.740234375, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(13), tensor(64), tensor(22)]
DEBUG uniques tensor([13, 22, 64]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 22
Matched 1 times with 64
iou for matched labels tensor([0.4634, 0.5914, 0.8220])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125, 0.61376953125]
Select thresholds for refinement:  40%|████      | 57/142 [00:14<00:19,  4.40it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:14<00:16,  5.12it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:14<00:16,  5.17it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:14<00:16,  5.10it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:15<00:17,  4.75it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:15<00:18,  4.26it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:15<00:15,  4.99it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:15<00:17,  4.44it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:16<00:18,  4.11it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:16<00:19,  3.95it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:16<00:17,  4.29it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:16<00:16,  4.49it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:16<00:17,  4.28it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:17<00:14,  5.05it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:17<00:15,  4.45it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:17<00:13,  5.01it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:17<00:12,  5.65it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:17<00:12,  5.53it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:18<00:14,  4.64it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:18<00:15,  4.33it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:18<00:14,  4.39it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:18<00:14,  4.32it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:19<00:14,  4.47it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:19<00:13,  4.47it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:19<00:12,  4.97it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:19<00:12,  4.82it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:19<00:11,  5.01it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:20<00:11,  5.05it/s]DEBUG best_match_after_iou_check [tensor(32), tensor(72)]
DEBUG uniques tensor([32, 72]) tensor([1, 1])
Matched 1 times with 32
Matched 1 times with 72
iou for matched labels tensor([0.3641, 0.7582])
Matched labels: ['bed', 'dresser']
Clip similarities: [0.66552734375, 0.693359375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(24), tensor(35), tensor(72), tensor(42), tensor(72)]
DEBUG uniques tensor([24, 35, 42, 72]) tensor([1, 1, 1, 2])
Matched 1 times with 24
Matched 1 times with 35
Matched 1 times with 42
Matched 2 times with 72
Merge stage2 masks
iou for matched labels tensor([0.5262, 0.4426, 0.6771, 0.5593])
Matched labels: ['pipe', 'chair', 'shelf', 'storage_bin']
Clip similarities: [0.72509765625, 0.740234375, 0.7216796875, 0.7421875]
DEBUG best_match_after_iou_check [tensor(81)]
DEBUG uniques tensor([81]) tensor([1])
Matched 1 times with 81
iou for matched labels tensor([0.7616])
Matched labels: ['folded_chair']
Clip similarities: [0.61376953125]
DEBUG best_match_after_iou_check [tensor(13), tensor(91)]
DEBUG uniques tensor([13, 91]) tensor([1, 1])
Matched 1 times with 13
Matched 1 times with 91
iou for matched labels tensor([0.6197, 0.4424])
Matched labels: ['folded_chair', 'mat']
Clip similarities: [0.61376953125, 0.701171875]
DEBUG best_match_after_iou_check [tensor(86)]
DEBUG uniques tensor([86]) tensor([1])
Matched 1 times with 86
iou for matched labels tensor([0.7324])
Matched labels: ['refrigerator']
Clip similarities: [0.7021484375]
DEBUG best_match_after_iou_check [tensor(30), tensor(50)]
DEBUG uniques tensor([30, 50]) tensor([1, 1])
Matched 1 times with 30
Matched 1 times with 50
iou for matched labels tensor([0.8030, 0.5220])
Matched labels: ['toilet', 'sink']
Clip similarities: [1.0009765625, 0.80517578125]
DEBUG best_match_after_iou_check [tensor(3), tensor(32), tensor(87), tensor(151), tensor(70)]
DEBUG uniques tensor([  3,  32,  70,  87, 151]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 32
Matched 1 times with 70
Matched 1 times with 87
Matched 1 times with 151
iou for matched labels tensor([0.4746, 0.5625, 0.7715, 0.4871, 0.6522])
Matched labels: ['sink', 'washing_machine', 'bin', 'recycling_bin', 'bin']
Clip similarities: [0.80517578125, 0.7783203125, 0.69970703125, 0.7646484375, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(3), tensor(67), tensor(70), tensor(101)]
DEBUG uniques tensor([  3,  67,  70, 101]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 67
Matched 1 times with 70
Matched 1 times with 101
iou for matched labels tensor([0.4383, 0.5131, 0.4889, 0.3101])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'chair']
Clip similarities: [0.61376953125, 0.61376953125, 0.61376953125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(35), tensor(48), tensor(18), tensor(0)]
DEBUG uniques tensor([ 0, 18, 35, 48]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 18
Matched 1 times with 35
Matched 1 times with 48
iou for matched labels tensor([0.5020, 0.8628, 0.6986, 0.4718])
Matched labels: ['sofa_chair', 'sofa_chair', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.63037109375, 0.63037109375, 0.63037109375, 0.63037109375]
DEBUG best_match_after_iou_check [tensor(167)]
DEBUG uniques tensor([167]) tensor([1])
Matched 1 times with 167
iou for matched labels tensor([0.6991])
Matched labels: ['office_chair']
Clip similarities: [0.71875]
DEBUG best_match_after_iou_check [tensor(13), tensor(73), tensor(49)]
DEBUG uniques tensor([13, 49, 73]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 49
Matched 1 times with 73
iou for matched labels tensor([0.8187, 0.7514, 0.5208])
Matched labels: ['chair', 'office_chair', 'chair']
Clip similarities: [0.740234375, 0.71875, 0.740234375]
DEBUG best_match_after_iou_check [tensor(181)]
DEBUG uniques tensor([181]) tensor([1])
Matched 1 times with 181
iou for matched labels tensor([0.6367])
Matched labels: ['chair']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(34), tensor(0)]
DEBUG uniques tensor([ 0, 34]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 34
iou for matched labels tensor([0.6854, 0.3428])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(38)]
DEBUG uniques tensor([38]) tensor([1])
Matched 1 times with 38
iou for matched labels tensor([0.7373])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(78), tensor(36), tensor(48)]
DEBUG uniques tensor([36, 48, 78]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 48
Matched 1 times with 78
iou for matched labels tensor([0.8926, 0.8172, 0.8986])
Matched labels: ['toilet_seat_cover_dispenser', 'bin', 'toilet']
Clip similarities: [0.7255859375, 0.69970703125, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(200), tensor(0)]
DEBUG uniques tensor([  0, 200]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 200
iou for matched labels tensor([0.5516, 0.7893])
Matched labels: ['shower_wall', 'toilet']
Clip similarities: [0.7490234375, 1.0009765625]
DEBUG best_match_after_iou_check [tensor(21), tensor(23)]
DEBUG uniques tensor([21, 23]) tensor([1, 1])
Matched 1 times with 21
Matched 1 times with 23
iou for matched labels tensor([0.6835, 0.6189])
Matched labels: ['sofa_chair', 'coffee_table']
Clip similarities: [0.63037109375, 0.6806640625]
DEBUG best_match_after_iou_check [tensor(198), tensor(42), tensor(20), tensor(66)]
DEBUG uniques tensor([ 20,  42,  66, 198]) tensor([1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 42
Matched 1 times with 66
Matched 1 times with 198
iou for matched labels tensor([0.6653, 0.7842, 0.7692, 0.2293])
Matched labels: ['water_cooler', 'bin', 'laundry_hamper', 'file_cabinet']
Clip similarities: [0.75830078125, 0.69970703125, 0.71826171875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.6381])
Matched labels: ['office_chair']
Clip similarities: [0.71875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(15), tensor(8), tensor(45), tensor(31)]
DEBUG uniques tensor([ 8, 15, 31, 45]) tensor([1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 15
Matched 1 times with 31
Matched 1 times with 45
iou for matched labels tensor([0.4638, 0.7578, 0.3277, 0.5015])
Matched labels: ['chair', 'chair', 'folded_chair', 'chair']
Clip similarities: [0.740234375, 0.740234375, 0.61376953125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(85), tensor(2)]
DEBUG uniques tensor([ 2, 85]) tensor([1, 1])
Matched 1 times with 2
Matched 1 times with 85
iou for matched labels tensor([0.5542, 0.5871])
Matched labels: ['chair', 'trash_can']
Clip similarities: [0.740234375, 0.77294921875]
DEBUG best_match_after_iou_check [tensor(48)]
DEBUG uniques tensor([48]) tensor([1])
Matched 1 times with 48
iou for matched labels tensor([0.5459])
Matched labels: ['chair']
Clip similarities: [0.740234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(33)]
DEBUG uniques tensor([33]) tensor([1])
Matched 1 times with 33
iou for matched labels tensor([0.4603])
Matched labels: ['chair']
Clip similarities: [0.740234375]
DEBUG best_match_after_iou_check [tensor(25), tensor(13), tensor(70)]
DEBUG uniques tensor([13, 25, 70]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 25
Matched 1 times with 70
iou for matched labels tensor([0.3156, 0.2971, 0.3798])
Matched labels: ['sink', 'sink', 'closet_door']
Clip similarities: [0.80517578125, 0.80517578125, 0.7421875]
DEBUG best_match_after_iou_check [tensor(128), tensor(31), tensor(31), tensor(23)]
DEBUG uniques tensor([ 23,  31, 128]) tensor([1, 2, 1])
Matched 1 times with 23
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 128
iou for matched labels tensor([0.7214, 0.6490, 0.3856])
Matched labels: ['box', 'folded_chair', 'desk']
Clip similarities: [0.720703125, 0.61376953125, 0.68701171875]
DEBUG best_match_after_iou_check [tensor(84), tensor(54)]
DEBUG uniques tensor([54, 84]) tensor([1, 1])
Select thresholds for refinement:  60%|█████▉    | 85/142 [00:20<00:12,  4.61it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:20<00:12,  4.31it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:20<00:11,  4.77it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:20<00:10,  5.28it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:20<00:08,  6.03it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:21<00:09,  5.54it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:21<00:09,  5.27it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:21<00:11,  4.53it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:21<00:09,  5.25it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:22<00:10,  4.38it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:22<00:11,  4.16it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:22<00:11,  3.94it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:22<00:11,  3.84it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:23<00:11,  3.86it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:23<00:11,  3.66it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:23<00:11,  3.78it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:23<00:09,  4.43it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:24<00:08,  4.48it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:24<00:09,  4.30it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:24<00:07,  5.05it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:24<00:08,  4.62it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:24<00:07,  4.90it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:25<00:10,  3.42it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:25<00:10,  3.37it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:26<00:09,  3.34it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:26<00:09,  3.20it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:26<00:08,  3.68it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:26<00:07,  3.88it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:27<00:07,  3.69it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:27<00:08,  3.33it/s]Matched 1 times with 54
Matched 1 times with 84
iou for matched labels tensor([0.6632, 0.5143])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(7), tensor(61)]
DEBUG uniques tensor([ 7, 61]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 61
iou for matched labels tensor([0.7030, 0.7344])
Matched labels: ['toilet', 'paper_towel_dispenser']
Clip similarities: [1.0009765625, 0.72900390625]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.1626])
Matched labels: ['copier']
Clip similarities: [0.74560546875]
DEBUG best_match_after_iou_check [tensor(9), tensor(74), tensor(120)]
DEBUG uniques tensor([  9,  74, 120]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 74
Matched 1 times with 120
iou for matched labels tensor([0.8406, 0.5887, 0.7293])
Matched labels: ['toilet', 'paper_towel_dispenser', 'trash_can']
Clip similarities: [1.0009765625, 0.72900390625, 0.77294921875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(31)]
DEBUG uniques tensor([31]) tensor([1])
Matched 1 times with 31
iou for matched labels tensor([0.3450])
Matched labels: ['sofa_chair']
Clip similarities: [0.63037109375]
DEBUG best_match_after_iou_check [tensor(44)]
DEBUG uniques tensor([44]) tensor([1])
Matched 1 times with 44
iou for matched labels tensor([0.4134])
Matched labels: ['office_chair']
Clip similarities: [0.71875]
DEBUG best_match_after_iou_check [tensor(30), tensor(37)]
DEBUG uniques tensor([30, 37]) tensor([1, 1])
Matched 1 times with 30
Matched 1 times with 37
iou for matched labels tensor([0.5623, 0.5288])
Matched labels: ['chair', 'chair']
Clip similarities: [0.740234375, 0.740234375]
DEBUG best_match_after_iou_check [tensor(88), tensor(80)]
DEBUG uniques tensor([80, 88]) tensor([1, 1])
Matched 1 times with 80
Matched 1 times with 88
iou for matched labels tensor([0.0910, 0.8072])
Matched labels: ['door', 'chair']
Clip similarities: [0.8134765625, 0.740234375]
DEBUG best_match_after_iou_check [tensor(84), tensor(29), tensor(100)]
DEBUG uniques tensor([ 29,  84, 100]) tensor([1, 1, 1])
Matched 1 times with 29
Matched 1 times with 84
Matched 1 times with 100
iou for matched labels tensor([0.3549, 0.4366, 0.6580])
Matched labels: ['office_chair', 'office_chair', 'bin']
Clip similarities: [0.71875, 0.71875, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(76)]
DEBUG uniques tensor([76]) tensor([1])
Matched 1 times with 76
iou for matched labels tensor([0.5242])
Matched labels: ['bin']
Clip similarities: [0.69970703125]
DEBUG best_match_after_iou_check [tensor(143), tensor(207), tensor(39)]
DEBUG uniques tensor([ 39, 143, 207]) tensor([1, 1, 1])
Matched 1 times with 39
Matched 1 times with 143
Matched 1 times with 207
iou for matched labels tensor([0.4256, 0.3978, 0.1782])
Matched labels: ['chair', 'lamp', 'bed']
Clip similarities: [0.740234375, 0.68115234375, 0.66552734375]
DEBUG best_match_after_iou_check [tensor(18), tensor(112), tensor(46)]
DEBUG uniques tensor([ 18,  46, 112]) tensor([1, 1, 1])
Matched 1 times with 18
Matched 1 times with 46
Matched 1 times with 112
iou for matched labels tensor([0.9169, 0.7690, 0.4480])
Matched labels: ['toilet', 'toilet', 'shower_curtain']
Clip similarities: [1.0009765625, 1.0009765625, 0.71142578125]
DEBUG best_match_after_iou_check [tensor(74), tensor(121)]
DEBUG uniques tensor([ 74, 121]) tensor([1, 1])
Matched 1 times with 74
Matched 1 times with 121
iou for matched labels tensor([0.8619, 0.1635])
Matched labels: ['file_cabinet', 'file_cabinet']
Clip similarities: [0.71337890625, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(62), tensor(153)]
DEBUG uniques tensor([ 62, 153]) tensor([1, 1])
Matched 1 times with 62
Matched 1 times with 153
iou for matched labels tensor([0.7513, 0.6646])
Matched labels: ['bin', 'mini_fridge']
Clip similarities: [0.69970703125, 0.7041015625]
DEBUG best_match_after_iou_check [tensor(149), tensor(1)]
DEBUG uniques tensor([  1, 149]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 149
iou for matched labels tensor([0.2715, 0.4182])
Matched labels: ['washing_machine', 'washing_machine']
Clip similarities: [0.7783203125, 0.7783203125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.7765])
Matched labels: ['bin']
Clip similarities: [0.69970703125]
DEBUG best_match_after_iou_check [tensor(11), tensor(149)]
DEBUG uniques tensor([ 11, 149]) tensor([1, 1])
Matched 1 times with 11
Matched 1 times with 149
iou for matched labels tensor([0.5310, 0.5225])
Matched labels: ['dustpan', 'dustpan']
Clip similarities: [0.73095703125, 0.73095703125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(51)]
DEBUG uniques tensor([51]) tensor([1])
Matched 1 times with 51
iou for matched labels tensor([0.5760])
Matched labels: ['sofa_chair']
Clip similarities: [0.63037109375]
DEBUG best_match_after_iou_check [tensor(42), tensor(41)]
DEBUG uniques tensor([41, 42]) tensor([1, 1])
Matched 1 times with 41
Matched 1 times with 42
iou for matched labels tensor([0.6260, 0.4775])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.61376953125, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(26), tensor(81), tensor(49), tensor(46)]
DEBUG uniques tensor([26, 46, 49, 81]) tensor([1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 46
Matched 1 times with 49
Matched 1 times with 81
iou for matched labels tensor([0.2146, 0.2856, 0.6797, 0.6560])
Matched labels: ['sofa_chair', 'chair', 'trash_can', 'vacuum_cleaner']
Clip similarities: [0.63037109375, 0.740234375, 0.77294921875, 0.72314453125]
DEBUG best_match_after_iou_check [tensor(65), tensor(127)]
DEBUG uniques tensor([ 65, 127]) tensor([1, 1])
Matched 1 times with 65
Matched 1 times with 127
iou for matched labels tensor([0.2716, 0.4259])
Matched labels: ['folded_chair', 'chair']
Clip similarities: [0.61376953125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(9), tensor(47), tensor(118), tensor(74)]
DEBUG uniques tensor([  9,  47,  74, 118]) tensor([1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 47
Matched 1 times with 74
Matched 1 times with 118
iou for matched labels tensor([0.5089, 0.5637, 0.2606, 0.6694])
Matched labels: ['chair', 'chair', 'chair', 'folded_chair']
Clip similarities: [0.740234375, 0.740234375, 0.740234375, 0.61376953125]
DEBUG best_match_after_iou_check [tensor(69), tensor(306)]
DEBUG uniques tensor([ 69, 306]) tensor([1, 1])
Matched 1 times with 69
Matched 1 times with 306
iou for matched labels tensor([0.4221, 0.4199])
Matched labels: ['chair', 'box']
Clip similarities: [0.740234375, 0.720703125]
DEBUG best_match_after_iou_check [tensor(19)]
DEBUG uniques tensor([19]) tensor([1])
Matched 1 times with 19
iou for matched labels tensor([0.6544])
Matched labels: ['sofa_chair']
Clip similarities: [0.63037109375]
DEBUG best_match_after_iou_check [tensor(230), tensor(101), tensor(76), tensor(101)]
DEBUG uniques tensor([ 76, 101, 230]) tensor([1, 2, 1])
Matched 1 times with 76
Matched 2 times with 101
Merge stage2 masks
Matched 1 times with 230
iou for matched labels tensor([0.6521, 0.6918, 0.4393])
Matched labels: ['trash_can', 'refrigerator', 'chair']
Clip similarities: [0.77294921875, 0.7021484375, 0.740234375]
DEBUG best_match_after_iou_check [tensor(248)]
DEBUG uniques tensor([248]) tensor([1])
Matched 1 times with 248
iou for matched labels tensor([0.5577])
Matched labels: ['bin']
Clip similarities: [0.69970703125]
DEBUG best_match_after_iou_check [tensor(25), tensor(162)]
DEBUG uniques tensor([ 25, 162]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 162
iou for matched labels tensor([0.6397, 0.5091])
Matched labels: ['toilet', 'door']
Clip similarities: [1.0009765625, 0.8134765625]
DEBUG best_match_after_iou_check [tensor(34), tensor(12), tensor(34)]
DEBUG uniques tensor([12, 34]) tensor([1, 2])
Matched 1 times with 12
Matched 2 times with 34
Merge stage2 masks
iou for matched labels tensor([0.5612, 0.3906])
Matched labels: Select thresholds for refinement:  81%|████████  | 115/142 [00:27<00:07,  3.51it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:27<00:07,  3.66it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:28<00:06,  3.99it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:28<00:05,  4.34it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:28<00:05,  3.91it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:28<00:04,  4.64it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:28<00:04,  4.53it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:29<00:04,  4.46it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:29<00:04,  4.21it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:29<00:03,  4.61it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:29<00:03,  5.25it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:30<00:03,  4.78it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:30<00:02,  5.16it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:30<00:03,  3.68it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:30<00:02,  4.40it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:31<00:02,  4.29it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:31<00:02,  4.48it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:31<00:02,  4.94it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:31<00:01,  5.52it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:31<00:01,  5.73it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:31<00:01,  5.58it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:32<00:01,  5.90it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:32<00:00,  5.61it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:32<00:00,  5.09it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:32<00:00,  4.53it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:32<00:00,  4.62it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:33<00:00,  5.11it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:33<00:00,  4.67it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:33<00:00,  4.26it/s]['stool', 'stool']
Clip similarities: [0.75244140625, 0.75244140625]
DEBUG best_match_after_iou_check [tensor(129), tensor(87), tensor(36)]
DEBUG uniques tensor([ 36,  87, 129]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 87
Matched 1 times with 129
iou for matched labels tensor([0.6582, 0.4509, 0.5699])
Matched labels: ['toilet_paper_holder', 'folded_chair', 'ottoman']
Clip similarities: [0.77490234375, 0.61376953125, 0.62255859375]
DEBUG best_match_after_iou_check [tensor(10), tensor(55), tensor(1)]
DEBUG uniques tensor([ 1, 10, 55]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 10
Matched 1 times with 55
iou for matched labels tensor([0.1193, 0.4312, 0.4168])
Matched labels: ['oven', 'folded_chair', 'refrigerator']
Clip similarities: [0.751953125, 0.61376953125, 0.7021484375]
DEBUG best_match_after_iou_check [tensor(58), tensor(73)]
DEBUG uniques tensor([58, 73]) tensor([1, 1])
Matched 1 times with 58
Matched 1 times with 73
iou for matched labels tensor([0.3108, 0.2506])
Matched labels: ['couch', 'couch']
Clip similarities: [0.6962890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(28), tensor(58), tensor(96)]
DEBUG uniques tensor([28, 58, 96]) tensor([1, 1, 1])
Matched 1 times with 28
Matched 1 times with 58
Matched 1 times with 96
iou for matched labels tensor([0.6762, 0.5111, 0.6032])
Matched labels: ['office_chair', 'office_chair', 'bin']
Clip similarities: [0.71875, 0.71875, 0.69970703125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(10)]
DEBUG uniques tensor([10]) tensor([1])
Matched 1 times with 10
iou for matched labels tensor([0.0991])
Matched labels: ['bed']
Clip similarities: [0.66552734375]
DEBUG best_match_after_iou_check [tensor(75), tensor(198), tensor(46), tensor(101)]
DEBUG uniques tensor([ 46,  75, 101, 198]) tensor([1, 1, 1, 1])
Matched 1 times with 46
Matched 1 times with 75
Matched 1 times with 101
Matched 1 times with 198
iou for matched labels tensor([0.5025, 0.5602, 0.6034, 0.4754])
Matched labels: ['folded_chair', 'sofa_chair', 'sofa_chair', 'cup']
Clip similarities: [0.61376953125, 0.63037109375, 0.63037109375, 0.69580078125]
DEBUG best_match_after_iou_check [tensor(44), tensor(82)]
DEBUG uniques tensor([44, 82]) tensor([1, 1])
Matched 1 times with 44
Matched 1 times with 82
iou for matched labels tensor([0.5649, 0.4113])
Matched labels: ['office_chair', 'office_chair']
Clip similarities: [0.71875, 0.71875]
DEBUG best_match_after_iou_check [tensor(34), tensor(52)]
DEBUG uniques tensor([34, 52]) tensor([1, 1])
Matched 1 times with 34
Matched 1 times with 52
iou for matched labels tensor([0.8565, 0.4929])
Matched labels: ['toilet', 'sink']
Clip similarities: [1.0009765625, 0.80517578125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(101), tensor(281)]
DEBUG uniques tensor([101, 281]) tensor([1, 1])
Matched 1 times with 101
Matched 1 times with 281
iou for matched labels tensor([0.7660, 0.6622])
Matched labels: ['bin', 'bin']
Clip similarities: [0.69970703125, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(105)]
DEBUG uniques tensor([105]) tensor([1])
Matched 1 times with 105
iou for matched labels tensor([0.7937])
Matched labels: ['folded_chair']
Clip similarities: [0.61376953125]
DEBUG best_match_after_iou_check [tensor(210), tensor(6), tensor(60), tensor(0), tensor(441)]
DEBUG uniques tensor([  0,   6,  60, 210, 441]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 6
Matched 1 times with 60
Matched 1 times with 210
Matched 1 times with 441
iou for matched labels tensor([0.2617, 0.1997, 0.0820, 0.0000, 0.0863])
Matched labels: ['cup', 'washing_machine', 'washing_machine', 'laundry_basket', 'person']
Clip similarities: [0.69580078125, 0.7783203125, 0.7783203125, 0.69873046875, 0.75390625]
DEBUG best_match_after_iou_check [tensor(76), tensor(40), tensor(113)]
DEBUG uniques tensor([ 40,  76, 113]) tensor([1, 1, 1])
Matched 1 times with 40
Matched 1 times with 76
Matched 1 times with 113
iou for matched labels tensor([0.7370, 0.7230, 0.3442])
Matched labels: ['storage_bin', 'office_chair', 'paper']
Clip similarities: [0.7421875, 0.71875, 0.77880859375]
DEBUG best_match_after_iou_check [tensor(55), tensor(42), tensor(63), tensor(0)]
DEBUG uniques tensor([ 0, 42, 55, 63]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 42
Matched 1 times with 55
Matched 1 times with 63
iou for matched labels tensor([0.7327, 0.3032, 0.7941, 0.4956])
Matched labels: ['bin', 'paper', 'trash_can', 'fire_extinguisher']
Clip similarities: [0.69970703125, 0.77880859375, 0.77294921875, 0.65234375]
DEBUG best_match_after_iou_check [tensor(16), tensor(90), tensor(68), tensor(47), tensor(121), tensor(77)]
DEBUG uniques tensor([ 16,  47,  68,  77,  90, 121]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 16
Matched 1 times with 47
Matched 1 times with 68
Matched 1 times with 77
Matched 1 times with 90
Matched 1 times with 121
iou for matched labels tensor([0.6870, 0.8153, 0.5413, 0.8457, 0.6655, 0.5559])
Matched labels: ['sink', 'toilet', 'bathroom_stall_door', 'toilet_seat_cover_dispenser', 'bathroom_stall', 'paper_towel_dispenser']
Clip similarities: [0.80517578125, 1.0009765625, 0.80712890625, 0.7255859375, 0.8740234375, 0.72900390625]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.7635])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(106)]
DEBUG uniques tensor([106]) tensor([1])
Matched 1 times with 106
iou for matched labels tensor([0.4886])
Matched labels: ['trash_can']
Clip similarities: [0.77294921875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.7620])
Matched labels: ['radiator']
Clip similarities: [0.69091796875]
DEBUG best_match_after_iou_check [tensor(50), tensor(74), tensor(178)]
DEBUG uniques tensor([ 50,  74, 178]) tensor([1, 1, 1])
Matched 1 times with 50
Matched 1 times with 74
Matched 1 times with 178
iou for matched labels tensor([0.3642, 0.6045, 0.6243])
Matched labels: ['chair', 'toilet', 'dresser']
Clip similarities: [0.740234375, 1.0009765625, 0.693359375]
DEBUG best_match_after_iou_check [tensor(48), tensor(107), tensor(83), tensor(189)]
DEBUG uniques tensor([ 48,  83, 107, 189]) tensor([1, 1, 1, 1])
Matched 1 times with 48
Matched 1 times with 83
Matched 1 times with 107
Matched 1 times with 189
iou for matched labels tensor([0.7228, 0.7309, 0.5523, 0.2278])
Matched labels: ['bin', 'file_cabinet', 'office_chair', 'chair']
Clip similarities: [0.69970703125, 0.71337890625, 0.71875, 0.740234375]
DEBUG best_match_after_iou_check [tensor(39)]
DEBUG uniques tensor([39]) tensor([1])
Matched 1 times with 39
iou for matched labels tensor([0.2968])
Matched labels: ['ottoman']
Clip similarities: [0.62255859375]
DEBUG best_match_after_iou_check [tensor(8)]
DEBUG uniques tensor([8]) tensor([1])
Matched 1 times with 8
iou for matched labels tensor([0.8395])
Matched labels: ['toilet']
Clip similarities: [1.0009765625]
DEBUG best_match_after_iou_check [tensor(157), tensor(109), tensor(31)]
DEBUG uniques tensor([ 31, 109, 157]) tensor([1, 1, 1])
Matched 1 times with 31
Matched 1 times with 109
Matched 1 times with 157
iou for matched labels tensor([0.1877, 0.2408, 0.2955])
Matched labels: ['paper_cutter', 'bin', 'copier']
Clip similarities: [0.65478515625, 0.69970703125, 0.74560546875]
Unique similarities: 
[0.61376953125, 0.62158203125, 0.62255859375, 0.63037109375, 0.65234375, 0.65478515625, 0.66552734375, 0.68017578125, 0.6806640625, 0.68115234375, 0.68701171875, 0.69091796875, 0.693359375, 0.69580078125, 0.6962890625, 0.69873046875, 0.69970703125, 0.701171875, 0.7021484375, 0.7041015625, 0.7099609375, 0.71142578125, 0.71337890625, 0.71826171875, 0.71875, 0.720703125, 0.7216796875, 0.72314453125, 0.72509765625, 0.7255859375, 0.72900390625, 0.73095703125, 0.73828125, 0.740234375, 0.7421875, 0.74462890625, 0.74560546875, 0.7490234375, 0.751953125, 0.75244140625, 0.75390625, 0.75830078125, 0.7646484375, 0.77294921875, 0.77392578125, 0.77490234375, 0.7783203125, 0.77880859375, 0.80517578125, 0.80712890625, 0.8134765625, 0.8740234375, 1.0009765625]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 69it [00:00, 687.10it/s]DEBUG all ious tensor([0.6865, 0.4473, 0.3326, 0.4744, 0.6258, 0.5916, 0.3754, 0.2422])
USE STAGE 1 MASK tensor(0.6865)
USE STAGE 2 MASK tensor(0.4473)
USE STAGE 2 MASK tensor(0.3326)
USE STAGE 1 MASK tensor(0.4744)
USE STAGE 1 MASK tensor(0.6258)
USE STAGE 1 MASK tensor(0.5916)
USE STAGE 2 MASK tensor(0.3754)
USE STAGE 2 MASK tensor(0.2422)
DEBUG all ious tensor([0.6171, 0.6180])
USE STAGE 1 MASK tensor(0.6171)
USE STAGE 1 MASK tensor(0.6180)
DEBUG all ious tensor([0.5101, 0.1638, 0.5537, 0.6104])
USE STAGE 1 MASK tensor(0.5101)
USE STAGE 2 MASK tensor(0.1638)
USE STAGE 1 MASK tensor(0.5537)
USE STAGE 1 MASK tensor(0.6104)
DEBUG all ious tensor([0.3834, 0.6035, 0.6240])
USE STAGE 2 MASK tensor(0.3834)
USE STAGE 1 MASK tensor(0.6035)
USE STAGE 1 MASK tensor(0.6240)
DEBUG all ious tensor([0.4761])
USE STAGE 1 MASK tensor(0.4761)
DEBUG all ious tensor([0.8461])
USE STAGE 1 MASK tensor(0.8461)
DEBUG all ious tensor([0.4537, 0.4830, 0.7794])
USE STAGE 1 MASK tensor(0.4537)
USE STAGE 1 MASK tensor(0.4830)
USE STAGE 1 MASK tensor(0.7794)
DEBUG all ious []
DEBUG all ious tensor([0.5478, 0.5696, 0.3048])
USE STAGE 1 MASK tensor(0.5478)
USE STAGE 1 MASK tensor(0.5696)
USE STAGE 2 MASK tensor(0.3048)
DEBUG all ious tensor([0.4245, 0.4897, 0.3374, 0.8333])
USE STAGE 2 MASK tensor(0.4245)
USE STAGE 1 MASK tensor(0.4897)
USE STAGE 2 MASK tensor(0.3374)
USE STAGE 1 MASK tensor(0.8333)
DEBUG all ious tensor([0.7515, 0.5234])
USE STAGE 1 MASK tensor(0.7515)
USE STAGE 1 MASK tensor(0.5234)
DEBUG all ious tensor([0.6252, 0.8186, 0.5488])
USE STAGE 1 MASK tensor(0.6252)
USE STAGE 1 MASK tensor(0.8186)
USE STAGE 1 MASK tensor(0.5488)
DEBUG all ious tensor([0.7828, 0.7810])
USE STAGE 1 MASK tensor(0.7828)
USE STAGE 1 MASK tensor(0.7810)
DEBUG all ious []
DEBUG all ious tensor([0.5477, 0.2827, 0.4922, 0.5608])
USE STAGE 1 MASK tensor(0.5477)
USE STAGE 2 MASK tensor(0.2827)
USE STAGE 1 MASK tensor(0.4922)
USE STAGE 1 MASK tensor(0.5608)
DEBUG all ious tensor([0.7852])
USE STAGE 1 MASK tensor(0.7852)
DEBUG all ious tensor([0.3128, 0.4510])
USE STAGE 2 MASK tensor(0.3128)
USE STAGE 1 MASK tensor(0.4510)
DEBUG all ious tensor([0.5656, 0.2972, 0.1601, 0.3855, 0.6800])
USE STAGE 1 MASK tensor(0.5656)
USE STAGE 2 MASK tensor(0.2972)
USE STAGE 2 MASK tensor(0.1601)
USE STAGE 2 MASK tensor(0.3855)
USE STAGE 1 MASK tensor(0.6800)
DEBUG all ious []
DEBUG all ious tensor([0.8023])
USE STAGE 1 MASK tensor(0.8023)
DEBUG all ious tensor([0.5896, 0.5145])
USE STAGE 1 MASK tensor(0.5896)
USE STAGE 1 MASK tensor(0.5145)
DEBUG all ious tensor([0.8263])
USE STAGE 1 MASK tensor(0.8263)
DEBUG all ious tensor([0.7427, 0.6419])
USE STAGE 1 MASK tensor(0.7427)
USE STAGE 1 MASK tensor(0.6419)
DEBUG all ious tensor([0.3974, 0.1835, 0.2916, 0.6403, 0.3605])
USE STAGE 2 MASK tensor(0.3974)
USE STAGE 2 MASK tensor(0.1835)
USE STAGE 2 MASK tensor(0.2916)
USE STAGE 1 MASK tensor(0.6403)
USE STAGE 2 MASK tensor(0.3605)
DEBUG all ious tensor([0.7125, 0.8131])
USE STAGE 1 MASK tensor(0.7125)
USE STAGE 1 MASK tensor(0.8131)
DEBUG all ious tensor([0.6795, 0.4211])
USE STAGE 1 MASK tensor(0.6795)
USE STAGE 2 MASK tensor(0.4211)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8354, 0.1753])
USE STAGE 1 MASK tensor(0.8354)
USE STAGE 2 MASK tensor(0.1753)
DEBUG all ious []
DEBUG all ious tensor([0.4640, 0.7306, 0.6768, 0.5031])
USE STAGE 1 MASK tensor(0.4640)
USE STAGE 1 MASK tensor(0.7306)
USE STAGE 1 MASK tensor(0.6768)
USE STAGE 1 MASK tensor(0.5031)
DEBUG all ious tensor([0.5495])
USE STAGE 1 MASK tensor(0.5495)
DEBUG all ious tensor([0.7019, 0.7338, 0.5233])
USE STAGE 1 MASK tensor(0.7019)
USE STAGE 1 MASK tensor(0.7338)
USE STAGE 1 MASK tensor(0.5233)
DEBUG all ious tensor([0.6605, 0.4162, 0.2007])
USE STAGE 1 MASK tensor(0.6605)
USE STAGE 2 MASK tensor(0.4162)
USE STAGE 2 MASK tensor(0.2007)
DEBUG all ious tensor([0.4520, 0.5559, 0.0980, 0.7633, 0.2524, 0.1186])
USE STAGE 1 MASK tensor(0.4520)
USE STAGE 1 MASK tensor(0.5559)
USE STAGE 2 MASK tensor(0.0980)
USE STAGE 1 MASK tensor(0.7633)
USE STAGE 2 MASK tensor(0.2524)
USE STAGE 2 MASK tensor(0.1186)
DEBUG all ious tensor([0.3717, 0.3152, 0.3756, 0.4756])
USE STAGE 2 MASK tensor(0.3717)
USE STAGE 2 MASK tensor(0.3152)
USE STAGE 2 MASK tensor(0.3756)
USE STAGE 1 MASK tensor(0.4756)
DEBUG all ious tensor([0.4927, 0.7516, 0.7603])
USE STAGE 1 MASK tensor(0.4927)
USE STAGE 1 MASK tensor(0.7516)
USE STAGE 1 MASK tensor(0.7603)
DEBUG all ious tensor([0.6080, 0.3696])
USE STAGE 1 MASK tensor(0.6080)
USE STAGE 2 MASK tensor(0.3696)
DEBUG all ious tensor([0.7416])
USE STAGE 1 MASK tensor(0.7416)
DEBUG all ious tensor([0.6347, 0.6815, 0.3460])
USE STAGE 1 MASK tensor(0.6347)
USE STAGE 1 MASK tensor(0.6815)
USE STAGE 2 MASK tensor(0.3460)
DEBUG all ious tensor([0.3362, 0.8773])
USE STAGE 2 MASK tensor(0.3362)
USE STAGE 1 MASK tensor(0.8773)
DEBUG all ious []
DEBUG all ious tensor([0.6411, 0.3958])
USE STAGE 1 MASK tensor(0.6411)
USE STAGE 2 MASK tensor(0.3958)
DEBUG all ious tensor([0.6142, 0.6193])
USE STAGE 1 MASK tensor(0.6142)
USE STAGE 1 MASK tensor(0.6193)
DEBUG all ious []
DEBUG all ious tensor([0.6677, 0.6947, 0.8380, 0.8254])
USE STAGE 1 MASK tensor(0.6677)
USE STAGE 1 MASK tensor(0.6947)
USE STAGE 1 MASK tensor(0.8380)
USE STAGE 1 MASK tensor(0.8254)
DEBUG all ious tensor([0.2653])
USE STAGE 2 MASK tensor(0.2653)
DEBUG all ious tensor([0.6073, 0.1232, 0.7481, 0.6013])
USE STAGE 1 MASK tensor(0.6073)
USE STAGE 2 MASK tensor(0.1232)
USE STAGE 1 MASK tensor(0.7481)
USE STAGE 1 MASK tensor(0.6013)
DEBUG all ious tensor([0.3339, 0.6967])
USE STAGE 2 MASK tensor(0.3339)
USE STAGE 1 MASK tensor(0.6967)
DEBUG all ious tensor([0.8663, 0.6835, 0.8412, 0.7858])
USE STAGE 1 MASK tensor(0.8663)
USE STAGE 1 MASK tensor(0.6835)
USE STAGE 1 MASK tensor(0.8412)
USE STAGE 1 MASK tensor(0.7858)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.2057])
USE STAGE 2 MASK tensor(0.2057)
DEBUG all ious tensor([0.3303, 0.2476, 0.3288])
USE STAGE 2 MASK tensor(0.3303)
USE STAGE 2 MASK tensor(0.2476)
USE STAGE 2 MASK tensor(0.3288)
DEBUG all ious tensor([0.0295, 0.0504])
USE STAGE 2 MASK tensor(0.0295)
USE STAGE 2 MASK tensor(0.0504)
DEBUG all ious tensor([0.4634, 0.5914, 0.8220])
USE STAGE 1 MASK tensor(0.4634)
USE STAGE 1 MASK tensor(0.5914)
USE STAGE 1 MASK tensor(0.8220)
DEBUG all ious tensor([0.3641, 0.7582])
USE STAGE 2 MASK tensor(0.3641)
USE STAGE 1 MASK tensor(0.7582)
DEBUG all ious []
DEBUG all ious tensor([0.5262, 0.4426, 0.6771, 0.5593])
USE STAGE 1 MASK tensor(0.5262)
USE STAGE 2 MASK tensor(0.4426)
USE STAGE 1 MASK tensor(0.6771)
USE STAGE 1 MASK tensor(0.5593)
DEBUG all ious tensor([0.7616])
USE STAGE 1 MASK tensor(0.7616)
DEBUG all ious tensor([0.6197, 0.4424])
USE STAGE 1 MASK tensor(0.6197)
USE STAGE 2 MASK tensor(0.4424)
DEBUG all ious tensor([0.7324])
USE STAGE 1 MASK tensor(0.7324)
DEBUG all ious tensor([0.8030, 0.5220])
USE STAGE 1 MASK tensor(0.8030)
USE STAGE 1 MASK tensor(0.5220)
DEBUG all ious tensor([0.4746, 0.5625, 0.7715, 0.4871, 0.6522])
USE STAGE 1 MASK tensor(0.4746)
USE STAGE 1 MASK tensor(0.5625)
USE STAGE 1 MASK tensor(0.7715)
USE STAGE 1 MASK tensor(0.4871)
USE STAGE 1 MASK tensor(0.6522)
DEBUG all ious tensor([0.4383, 0.5131, 0.4889, 0.3101])
USE STAGE 2 MASK tensor(0.4383)
USE STAGE 1 MASK tensor(0.5131)
USE STAGE 1 MASK tensor(0.4889)
USE STAGE 2 MASK tensor(0.3101)
DEBUG all ious tensor([0.5020, 0.8628, 0.6986, 0.4718])
USE STAGE 1 MASK tensor(0.5020)
USE STAGE 1 MASK tensor(0.8628)
USE STAGE 1 MASK tensor(0.6986)
USE STAGE 1 MASK tensor(0.4718)
DEBUG all ious tensor([0.6991])
USE STAGE 1 MASK tensor(0.6991)
DEBUG all ious tensor([0.8187, 0.7514, 0.5208])
USE STAGE 1 MASK tensor(0.8187)
USE STAGE 1 MASK tensor(0.7514)
USE STAGE 1 MASK tensor(0.5208)
DEBUG all ious tensor([0.6367])
USE STAGE 1 MASK tensor(0.6367)
DEBUG all ious tensor([0.6854, 0.3428])
USE STAGE 1 MASK tensor(0.6854)
USE STAGE 2 MASK tensor(0.3428)
DEBUG all ious tensor([0.7373])
USE STAGE 1 MASK tensor(0.7373)
DEBUG all ious tensor([0.8926, 0.8172, 0.8986])
USE STAGE 1 MASK tensor(0.8926)
USE STAGE 1 MASK tensor(0.8172)
USE STAGE 1 MASK tensor(0.8986)
DEBUG all ious tensor([0.5516, 0.7893])
USE STAGE 1 MASK tensor(0.5516)
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 138it [00:00, 547.20it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 556.34it/s]
tensor(0.7893)
DEBUG all ious tensor([0.6835, 0.6189])
USE STAGE 1 MASK tensor(0.6835)
USE STAGE 1 MASK tensor(0.6189)
DEBUG all ious tensor([0.6653, 0.7842, 0.7692, 0.2293])
USE STAGE 1 MASK tensor(0.6653)
USE STAGE 1 MASK tensor(0.7842)
USE STAGE 1 MASK tensor(0.7692)
USE STAGE 2 MASK tensor(0.2293)
DEBUG all ious tensor([0.6381])
USE STAGE 1 MASK tensor(0.6381)
DEBUG all ious []
DEBUG all ious tensor([0.4638, 0.7578, 0.3277, 0.5015])
USE STAGE 1 MASK tensor(0.4638)
USE STAGE 1 MASK tensor(0.7578)
USE STAGE 2 MASK tensor(0.3277)
USE STAGE 1 MASK tensor(0.5015)
DEBUG all ious tensor([0.5542, 0.5871])
USE STAGE 1 MASK tensor(0.5542)
USE STAGE 1 MASK tensor(0.5871)
DEBUG all ious tensor([0.5459])
USE STAGE 1 MASK tensor(0.5459)
DEBUG all ious []
DEBUG all ious tensor([0.4603])
USE STAGE 1 MASK tensor(0.4603)
DEBUG all ious tensor([0.3156, 0.2971, 0.3798])
USE STAGE 2 MASK tensor(0.3156)
USE STAGE 2 MASK tensor(0.2971)
USE STAGE 2 MASK tensor(0.3798)
DEBUG all ious tensor([0.7214, 0.6490, 0.3856])
USE STAGE 1 MASK tensor(0.7214)
USE STAGE 1 MASK tensor(0.6490)
USE STAGE 2 MASK tensor(0.3856)
DEBUG all ious tensor([0.6632, 0.5143])
USE STAGE 1 MASK tensor(0.6632)
USE STAGE 1 MASK tensor(0.5143)
DEBUG all ious tensor([0.7030, 0.7344])
USE STAGE 1 MASK tensor(0.7030)
USE STAGE 1 MASK tensor(0.7344)
DEBUG all ious tensor([0.1626])
USE STAGE 2 MASK tensor(0.1626)
DEBUG all ious tensor([0.8406, 0.5887, 0.7293])
USE STAGE 1 MASK tensor(0.8406)
USE STAGE 1 MASK tensor(0.5887)
USE STAGE 1 MASK tensor(0.7293)
DEBUG all ious []
DEBUG all ious tensor([0.3450])
USE STAGE 2 MASK tensor(0.3450)
DEBUG all ious tensor([0.4134])
USE STAGE 2 MASK tensor(0.4134)
DEBUG all ious tensor([0.5623, 0.5288])
USE STAGE 1 MASK tensor(0.5623)
USE STAGE 1 MASK tensor(0.5288)
DEBUG all ious tensor([0.0910, 0.8072])
USE STAGE 2 MASK tensor(0.0910)
USE STAGE 1 MASK tensor(0.8072)
DEBUG all ious tensor([0.3549, 0.4366, 0.6580])
USE STAGE 2 MASK tensor(0.3549)
USE STAGE 2 MASK tensor(0.4366)
USE STAGE 1 MASK tensor(0.6580)
DEBUG all ious tensor([0.5242])
USE STAGE 1 MASK tensor(0.5242)
DEBUG all ious tensor([0.4256, 0.3978, 0.1782])
USE STAGE 2 MASK tensor(0.4256)
USE STAGE 2 MASK tensor(0.3978)
USE STAGE 2 MASK tensor(0.1782)
DEBUG all ious tensor([0.9169, 0.7690, 0.4480])
USE STAGE 1 MASK tensor(0.9169)
USE STAGE 1 MASK tensor(0.7690)
USE STAGE 2 MASK tensor(0.4480)
DEBUG all ious tensor([0.8619, 0.1635])
USE STAGE 1 MASK tensor(0.8619)
USE STAGE 2 MASK tensor(0.1635)
DEBUG all ious tensor([0.7513, 0.6646])
USE STAGE 1 MASK tensor(0.7513)
USE STAGE 1 MASK tensor(0.6646)
DEBUG all ious tensor([0.2715, 0.4182])
USE STAGE 2 MASK tensor(0.2715)
USE STAGE 2 MASK tensor(0.4182)
DEBUG all ious []
DEBUG all ious tensor([0.7765])
USE STAGE 1 MASK tensor(0.7765)
DEBUG all ious tensor([0.5310, 0.5225])
USE STAGE 1 MASK tensor(0.5310)
USE STAGE 1 MASK tensor(0.5225)
DEBUG all ious []
DEBUG all ious tensor([0.5760])
USE STAGE 1 MASK tensor(0.5760)
DEBUG all ious tensor([0.6260, 0.4775])
USE STAGE 1 MASK tensor(0.6260)
USE STAGE 1 MASK tensor(0.4775)
DEBUG all ious tensor([0.2146, 0.2856, 0.6797, 0.6560])
USE STAGE 2 MASK tensor(0.2146)
USE STAGE 2 MASK tensor(0.2856)
USE STAGE 1 MASK tensor(0.6797)
USE STAGE 1 MASK tensor(0.6560)
DEBUG all ious tensor([0.2716, 0.4259])
USE STAGE 2 MASK tensor(0.2716)
USE STAGE 2 MASK tensor(0.4259)
DEBUG all ious tensor([0.5089, 0.5637, 0.2606, 0.6694])
USE STAGE 1 MASK tensor(0.5089)
USE STAGE 1 MASK tensor(0.5637)
USE STAGE 2 MASK tensor(0.2606)
USE STAGE 1 MASK tensor(0.6694)
DEBUG all ious tensor([0.4221, 0.4199])
USE STAGE 2 MASK tensor(0.4221)
USE STAGE 2 MASK tensor(0.4199)
DEBUG all ious tensor([0.6544])
USE STAGE 1 MASK tensor(0.6544)
DEBUG all ious tensor([0.6521, 0.6918, 0.4393])
USE STAGE 1 MASK tensor(0.6521)
USE STAGE 1 MASK tensor(0.6918)
USE STAGE 2 MASK tensor(0.4393)
DEBUG all ious tensor([0.5577])
USE STAGE 1 MASK tensor(0.5577)
DEBUG all ious tensor([0.6397, 0.5091])
USE STAGE 1 MASK tensor(0.6397)
USE STAGE 1 MASK tensor(0.5091)
DEBUG all ious tensor([0.5612, 0.3906])
USE STAGE 1 MASK tensor(0.5612)
USE STAGE 2 MASK tensor(0.3906)
DEBUG all ious tensor([0.6582, 0.4509, 0.5699])
USE STAGE 1 MASK tensor(0.6582)
USE STAGE 1 MASK tensor(0.4509)
USE STAGE 1 MASK tensor(0.5699)
DEBUG all ious tensor([0.1193, 0.4312, 0.4168])
USE STAGE 2 MASK tensor(0.1193)
USE STAGE 2 MASK tensor(0.4312)
USE STAGE 2 MASK tensor(0.4168)
DEBUG all ious tensor([0.3108, 0.2506])
USE STAGE 2 MASK tensor(0.3108)
USE STAGE 2 MASK tensor(0.2506)
DEBUG all ious tensor([0.6762, 0.5111, 0.6032])
USE STAGE 1 MASK tensor(0.6762)
USE STAGE 1 MASK tensor(0.5111)
USE STAGE 1 MASK tensor(0.6032)
DEBUG all ious []
DEBUG all ious tensor([0.0991])
USE STAGE 2 MASK tensor(0.0991)
DEBUG all ious tensor([0.5025, 0.5602, 0.6034, 0.4754])
USE STAGE 1 MASK tensor(0.5025)
USE STAGE 1 MASK tensor(0.5602)
USE STAGE 1 MASK tensor(0.6034)
USE STAGE 1 MASK tensor(0.4754)
DEBUG all ious tensor([0.5649, 0.4113])
USE STAGE 1 MASK tensor(0.5649)
USE STAGE 2 MASK tensor(0.4113)
DEBUG all ious tensor([0.8565, 0.4929])
USE STAGE 1 MASK tensor(0.8565)
USE STAGE 1 MASK tensor(0.4929)
DEBUG all ious []
DEBUG all ious tensor([0.7660, 0.6622])
USE STAGE 1 MASK tensor(0.7660)
USE STAGE 1 MASK tensor(0.6622)
DEBUG all ious tensor([0.7937])
USE STAGE 1 MASK tensor(0.7937)
DEBUG all ious tensor([0.2617, 0.1997, 0.0820, 0.0000, 0.0863])
USE STAGE 2 MASK tensor(0.2617)
USE STAGE 2 MASK tensor(0.1997)
USE STAGE 2 MASK tensor(0.0820)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.0863)
DEBUG all ious tensor([0.7370, 0.7230, 0.3442])
USE STAGE 1 MASK tensor(0.7370)
USE STAGE 1 MASK tensor(0.7230)
USE STAGE 2 MASK tensor(0.3442)
DEBUG all ious tensor([0.7327, 0.3032, 0.7941, 0.4956])
USE STAGE 1 MASK tensor(0.7327)
USE STAGE 2 MASK tensor(0.3032)
USE STAGE 1 MASK tensor(0.7941)
USE STAGE 1 MASK tensor(0.4956)
DEBUG all ious tensor([0.6870, 0.8153, 0.5413, 0.8457, 0.6655, 0.5559])
USE STAGE 1 MASK tensor(0.6870)
USE STAGE 1 MASK tensor(0.8153)
USE STAGE 1 MASK tensor(0.5413)
USE STAGE 1 MASK tensor(0.8457)
USE STAGE 1 MASK tensor(0.6655)
USE STAGE 1 MASK tensor(0.5559)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.7635])
USE STAGE 1 MASK tensor(0.7635)
DEBUG all ious tensor([0.4886])
USE STAGE 1 MASK tensor(0.4886)
DEBUG all ious []
DEBUG all ious tensor([0.7620])
USE STAGE 1 MASK tensor(0.7620)
DEBUG all ious tensor([0.3642, 0.6045, 0.6243])
USE STAGE 2 MASK tensor(0.3642)
USE STAGE 1 MASK tensor(0.6045)
USE STAGE 1 MASK tensor(0.6243)
DEBUG all ious tensor([0.7228, 0.7309, 0.5523, 0.2278])
USE STAGE 1 MASK tensor(0.7228)
USE STAGE 1 MASK tensor(0.7309)
USE STAGE 1 MASK tensor(0.5523)
USE STAGE 2 MASK tensor(0.2278)
DEBUG all ious tensor([0.2968])
USE STAGE 2 MASK tensor(0.2968)
DEBUG all ious tensor([0.8395])
USE STAGE 1 MASK tensor(0.8395)
DEBUG all ious tensor([0.1877, 0.2408, 0.2955])
USE STAGE 2 MASK tensor(0.1877)
USE STAGE 2 MASK tensor(0.2408)
USE STAGE 2 MASK tensor(0.2955)
Evaluating class toilet...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class toilet...:   1%|▏         | 2/142 [00:00<00:11, 12.67it/s]Evaluating class toilet...:   4%|▎         | 5/142 [00:00<00:09, 14.64it/s]Evaluating class toilet...:   5%|▍         | 7/142 [00:00<00:09, 14.75it/s]Evaluating class toilet...:   6%|▋         | 9/142 [00:00<00:08, 16.17it/s]Evaluating class toilet...:   9%|▉         | 13/142 [00:00<00:06, 19.22it/s]Evaluating class toilet...:  11%|█▏        | 16/142 [00:00<00:06, 20.41it/s]Evaluating class toilet...:  13%|█▎        | 19/142 [00:01<00:05, 21.40it/s]Evaluating class toilet...:  16%|█▌        | 23/142 [00:01<00:05, 23.77it/s]Evaluating class toilet...:  18%|█▊        | 26/142 [00:01<00:05, 22.91it/s]Evaluating class toilet...:  20%|██        | 29/142 [00:01<00:05, 19.12it/s]Evaluating class toilet...:  23%|██▎       | 32/142 [00:01<00:06, 15.95it/s]Evaluating class toilet...:  24%|██▍       | 34/142 [00:02<00:08, 13.23it/s]Evaluating class toilet...:  25%|██▌       | 36/142 [00:02<00:08, 13.18it/s]Evaluating class toilet...:  27%|██▋       | 39/142 [00:02<00:06, 15.38it/s]Evaluating class toilet...:  30%|███       | 43/142 [00:02<00:05, 17.47it/s]Evaluating class toilet...:  32%|███▏      | 45/142 [00:02<00:06, 15.70it/s]Evaluating class toilet...:  34%|███▍      | 48/142 [00:02<00:05, 16.39it/s]Evaluating class toilet...:  35%|███▌      | 50/142 [00:02<00:05, 16.62it/s]Evaluating class toilet...:  37%|███▋      | 53/142 [00:03<00:04, 18.64it/s]Evaluating class toilet...:  39%|███▊      | 55/142 [00:03<00:04, 18.80it/s]Evaluating class toilet...:  41%|████      | 58/142 [00:03<00:04, 20.91it/s]Evaluating class toilet...:  43%|████▎     | 61/142 [00:03<00:03, 22.26it/s]Evaluating class toilet...:  45%|████▌     | 64/142 [00:03<00:03, 21.91it/s]Evaluating class toilet...:  47%|████▋     | 67/142 [00:03<00:03, 22.05it/s]Evaluating class toilet...:  50%|█████     | 71/142 [00:03<00:03, 22.46it/s]Evaluating class toilet...:  53%|█████▎    | 75/142 [00:04<00:02, 22.59it/s]Evaluating class toilet...:  55%|█████▍    | 78/142 [00:04<00:02, 22.25it/s]Evaluating class toilet...:  57%|█████▋    | 81/142 [00:04<00:02, 20.96it/s]Evaluating class toilet...:  60%|█████▉    | 85/142 [00:04<00:02, 23.06it/s]Evaluating class toilet...:  62%|██████▏   | 88/142 [00:04<00:02, 22.23it/s]Evaluating class toilet...:  64%|██████▍   | 91/142 [00:04<00:02, 23.58it/s]Evaluating class toilet...:  66%|██████▌   | 94/142 [00:04<00:02, 22.39it/s]Evaluating class toilet...:  68%|██████▊   | 97/142 [00:05<00:02, 21.84it/s]Evaluating class toilet...:  70%|███████   | 100/142 [00:05<00:02, 18.24it/s]Evaluating class toilet...:  73%|███████▎  | 103/142 [00:05<00:02, 18.31it/s]Evaluating class toilet...:  75%|███████▍  | 106/142 [00:05<00:01, 19.85it/s]Evaluating class toilet...:  77%|███████▋  | 109/142 [00:05<00:02, 16.48it/s]Evaluating class toilet...:  78%|███████▊  | 111/142 [00:05<00:02, 15.14it/s]Evaluating class toilet...:  80%|███████▉  | 113/142 [00:06<00:01, 15.10it/s]Evaluating class toilet...:  81%|████████  | 115/142 [00:06<00:01, 14.11it/s]Evaluating class toilet...:  83%|████████▎ | 118/142 [00:06<00:01, 16.73it/s]Evaluating class toilet...:  85%|████████▍ | 120/142 [00:06<00:01, 16.10it/s]Evaluating class toilet...:  87%|████████▋ | 123/142 [00:06<00:01, 18.14it/s]Evaluating class toilet...:  89%|████████▊ | 126/142 [00:06<00:00, 18.98it/s]Evaluating class toilet...:  90%|█████████ | 128/142 [00:06<00:00, 15.49it/s]Evaluating class toilet...:  92%|█████████▏| 131/142 [00:07<00:00, 17.90it/s]Evaluating class toilet...:  95%|█████████▌| 135/142 [00:07<00:00, 21.41it/s]Evaluating class toilet...:  97%|█████████▋| 138/142 [00:07<00:00, 19.39it/s]Evaluating class toilet...: 100%|██████████| 142/142 [00:07<00:00, 20.56it/s]Evaluating class toilet...: 100%|██████████| 142/142 [00:07<00:00, 18.70it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 10%|▉         | 14/142 [00:00<00:01, 119.26it/s] 23%|██▎       | 32/142 [00:00<00:00, 149.61it/s] 35%|███▍      | 49/142 [00:00<00:00, 158.00it/s] 54%|█████▎    | 76/142 [00:00<00:00, 198.78it/s] 71%|███████   | 101/142 [00:00<00:00, 216.28it/s] 87%|████████▋ | 123/142 [00:00<00:00, 201.01it/s]100%|██████████| 142/142 [00:00<00:00, 196.07it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.008   0.008   0.008
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.010   0.011   0.011
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.003   0.003   0.003
################################################

DEBUG avg value {'ap': 0.5086918463430106, 'ap50%': 0.5252192982456141, 'ap25%': 0.5273809523809524, 'rc': 0.9710144927536233, 'rc50%': 1.0, 'rc25%': 1.0}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  40%|████      | 4/10 [23:23<29:52, 298.67s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4], [6, 7]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 135.37it/s][A
Calculating viewed counts for every point:  12%|█▏        | 29/238 [00:00<00:01, 140.53it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/238 [00:00<00:01, 153.51it/s][A
Calculating viewed counts for every point:  26%|██▋       | 63/238 [00:00<00:01, 155.03it/s][A
Calculating viewed counts for every point:  33%|███▎      | 79/238 [00:00<00:01, 146.12it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/238 [00:00<00:01, 139.93it/s][A
Calculating viewed counts for every point:  46%|████▌     | 109/238 [00:00<00:00, 139.98it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 124/238 [00:00<00:00, 135.33it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 139/238 [00:00<00:00, 139.00it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 154/238 [00:01<00:00, 141.53it/s][A
Calculating viewed counts for every point:  71%|███████   | 169/238 [00:01<00:00, 137.01it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/238 [00:01<00:00, 136.47it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 197/238 [00:01<00:00, 131.47it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 211/238 [00:01<00:00, 130.25it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 225/238 [00:01<00:00, 130.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:04<10:12,  4.35s/it]Projecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:04<04:22,  1.88s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(3320, device='cuda:0')
before filtering torch.Size([2, 237360])
after filtering torch.Size([2, 237360])
num_ins_points_after_filtering tensor([2645,  183], device='cuda:0')
Working on scene0015_00 class copier
No 3d masks detected in backprojection!
Working on scene0019_00 class copier
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  47%|████▋     | 27/58 [00:00<00:00, 263.31it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 54/58 [00:00<00:00, 255.80it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:04<02:40,  1.15s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(1146, device='cuda:0')
before filtering torch.Size([1, 136769])
after filtering torch.Size([1, 136769])
num_ins_points_after_filtering tensor([1146], device='cuda:0')
Working on scene0025_00 class copier
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 13/195 [00:00<00:01, 126.89it/s][A
Calculating viewed counts for every point:  16%|█▌        | 31/195 [00:00<00:01, 154.20it/s][A
Calculating viewed counts for every point:  25%|██▍       | 48/195 [00:00<00:00, 159.88it/s][A
Calculating viewed counts for every point:  33%|███▎      | 64/195 [00:00<00:00, 154.73it/s][A
Calculating viewed counts for every point:  42%|████▏     | 82/195 [00:00<00:00, 162.58it/s][A
Calculating viewed counts for every point:  51%|█████     | 99/195 [00:00<00:00, 155.23it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 115/195 [00:00<00:00, 154.09it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 131/195 [00:00<00:00, 155.35it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 148/195 [00:00<00:00, 158.18it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 164/195 [00:01<00:00, 151.33it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 180/195 [00:01<00:00, 151.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:06<02:49,  1.23s/it]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(4251, device='cuda:0')
before filtering torch.Size([1, 173392])
after filtering torch.Size([1, 173392])
num_ins_points_after_filtering tensor([3442], device='cuda:0')
Working on scene0030_00 class copier
No 3d masks detected in backprojection!
Working on scene0046_00 class copier
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/249 [00:00<00:01, 139.42it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/249 [00:00<00:01, 149.86it/s][A
Calculating viewed counts for every point:  19%|█▉        | 47/249 [00:00<00:01, 156.67it/s][A
Calculating viewed counts for every point:  25%|██▌       | 63/249 [00:00<00:01, 154.61it/s][A
Calculating viewed counts for every point:  32%|███▏      | 79/249 [00:00<00:01, 145.94it/s][A
Calculating viewed counts for every point:  39%|███▉      | 97/249 [00:00<00:00, 154.48it/s][A
Calculating viewed counts for every point:  45%|████▌     | 113/249 [00:00<00:00, 150.01it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 129/249 [00:00<00:00, 142.34it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 146/249 [00:00<00:00, 149.51it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 163/249 [00:01<00:00, 154.35it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 179/249 [00:01<00:00, 153.37it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 195/249 [00:01<00:00, 153.24it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 212/249 [00:01<00:00, 155.99it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 231/249 [00:01<00:00, 163.55it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 248/249 [00:01<00:00, 154.55it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:08<02:37,  1.16s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(1653, device='cuda:0')
before filtering torch.Size([3, 186857])
after filtering torch.Size([1, 186857])
num_ins_points_after_filtering tensor([1644], device='cuda:0')
Working on scene0050_00 class copier
masks_to_be_merged [[0, 14, 15, 16], [1, 2, 3, 4, 72, 73, 74, 75, 76, 77, 78], [5, 6, 7, 8, 9, 10, 11], [12, 13, 79], [17, 18, 19, 20, 21, 22, 37], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [58, 59, 60, 61, 62, 64, 65, 66, 67, 68], [69, 70, 71]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 199.85it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 176.22it/s][A
Calculating viewed counts for every point:  13%|█▎        | 61/466 [00:00<00:02, 187.53it/s][A
Calculating viewed counts for every point:  17%|█▋        | 80/466 [00:00<00:02, 187.67it/s][A
Calculating viewed counts for every point:  21%|██        | 99/466 [00:00<00:01, 187.40it/s][A
Calculating viewed counts for every point:  26%|██▌       | 121/466 [00:00<00:01, 195.84it/s][A
Calculating viewed counts for every point:  30%|███       | 141/466 [00:00<00:01, 188.22it/s][A
Calculating viewed counts for every point:  34%|███▍      | 160/466 [00:00<00:01, 188.71it/s][A
Calculating viewed counts for every point:  38%|███▊      | 179/466 [00:00<00:01, 185.14it/s][A
Calculating viewed counts for every point:  42%|████▏     | 198/466 [00:01<00:01, 177.33it/s][A
Calculating viewed counts for every point:  47%|████▋     | 218/466 [00:01<00:01, 182.18it/s][A
Calculating viewed counts for every point:  51%|█████     | 238/466 [00:01<00:01, 186.40it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 258/466 [00:01<00:01, 189.62it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 279/466 [00:01<00:00, 194.87it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 300/466 [00:01<00:00, 196.47it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 321/466 [00:01<00:00, 198.06it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 341/466 [00:01<00:00, 192.00it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 362/466 [00:01<00:00, 194.43it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 382/466 [00:02<00:00, 190.95it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 402/466 [00:02<00:00, 190.58it/s][A
Calculating viewed counts for every point:  91%|█████████ | 422/466 [00:02<00:00, 192.22it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 442/466 [00:02<00:00, 187.95it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 462/466 [00:02<00:00, 187.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:11<04:02,  1.80s/it]detected_ratio_thres_value tensor(0.1569, device='cuda:0')
final masked points tensor(3802, device='cuda:0')
before filtering torch.Size([8, 211406])
after filtering torch.Size([4, 211406])
num_ins_points_after_filtering tensor([831, 858, 850, 593], device='cuda:0')
Working on scene0063_00 class copier
No 3d masks detected in backprojection!
Working on scene0064_00 class copier
No 3d masks detected in backprojection!
Working on scene0077_00 class copier
masks_to_be_merged [[0, 1, 2, 12, 13, 14, 15], [3, 16, 17, 18], [4, 5], [6, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  49%|████▉     | 30/61 [00:00<00:00, 291.47it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:12<02:00,  1.09it/s]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(3835, device='cuda:0')
before filtering torch.Size([4, 92807])
after filtering torch.Size([3, 92807])
num_ins_points_after_filtering tensor([1192, 1084, 1506], device='cuda:0')
Working on scene0081_00 class copier
No 3d masks detected in backprojection!
Working on scene0084_00 class copier
masks_to_be_merged [[0, 1, 3, 5, 6, 10, 11, 12], [2, 13], [4, 7, 8, 9, 41], [15, 16, 17, 18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], [39, 40]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 21/198 [00:00<00:00, 209.71it/s][A
Calculating viewed counts for every point:  21%|██        | 42/198 [00:00<00:00, 195.05it/s][A
Calculating viewed counts for every point:  33%|███▎      | 65/198 [00:00<00:00, 206.63it/s][A
Calculating viewed counts for every point:  43%|████▎     | 86/198 [00:00<00:00, 190.58it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 106/198 [00:00<00:00, 182.36it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 127/198 [00:00<00:00, 188.17it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 148/198 [00:00<00:00, 192.77it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 170/198 [00:00<00:00, 198.55it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 190/198 [00:00<00:00, 195.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:13<01:52,  1.16it/s]detected_ratio_thres_value tensor(0.2162, device='cuda:0')
final masked points tensor(2882, device='cuda:0')
before filtering torch.Size([6, 116845])
after filtering torch.Size([4, 116845])
num_ins_points_after_filtering tensor([ 321,  622,  701, 1234], device='cuda:0')
Working on scene0086_00 class copier
masks_to_be_merged [[1, 2, 3, 4], [7, 8, 9, 10, 11, 12, 13, 14], [15, 16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/143 [00:00<00:00, 190.83it/s][A
Calculating viewed counts for every point:  29%|██▊       | 41/143 [00:00<00:00, 200.32it/s][A
Calculating viewed counts for every point:  43%|████▎     | 62/143 [00:00<00:00, 186.61it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 81/143 [00:00<00:00, 186.47it/s][A
Calculating viewed counts for every point:  71%|███████   | 101/143 [00:00<00:00, 190.36it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 121/143 [00:00<00:00, 183.15it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 142/143 [00:00<00:00, 188.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:14<01:55,  1.12it/s]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(1689, device='cuda:0')
before filtering torch.Size([3, 124572])
after filtering torch.Size([3, 124572])
num_ins_points_after_filtering tensor([371, 667, 586], device='cuda:0')
Working on scene0088_00 class copier
No 3d masks detected in backprojection!
Working on scene0095_00 class copier
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:01, 145.38it/s][A
Calculating viewed counts for every point:  19%|█▉        | 32/166 [00:00<00:00, 155.45it/s][A
Calculating viewed counts for every point:  31%|███▏      | 52/166 [00:00<00:00, 172.91it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 158.46it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 87/166 [00:00<00:00, 144.20it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 103/166 [00:00<00:00, 147.11it/s][A
Calculating viewed counts for every point:  71%|███████   | 118/166 [00:00<00:00, 146.46it/s][A
Calculating viewed counts for every point:  81%|████████  | 134/166 [00:00<00:00, 148.94it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 152/166 [00:00<00:00, 157.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:16<01:41,  1.25it/s]detected_ratio_thres_value tensor(0.2069, device='cuda:0')
final masked points tensor(4365, device='cuda:0')
before filtering torch.Size([1, 214895])
after filtering torch.Size([1, 214895])
num_ins_points_after_filtering tensor([4193], device='cuda:0')
Working on scene0100_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27], [20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 28/102 [00:00<00:00, 275.00it/s][A
Calculating viewed counts for every point:  61%|██████    | 62/102 [00:00<00:00, 310.85it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 94/102 [00:00<00:00, 299.48it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:16<01:35,  1.32it/s]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(1761, device='cuda:0')
before filtering torch.Size([2, 52304])
after filtering torch.Size([1, 52304])
num_ins_points_after_filtering tensor([1424], device='cuda:0')
Working on scene0131_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 20/108 [00:00<00:00, 193.80it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/108 [00:00<00:00, 208.21it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 63/108 [00:00<00:00, 201.80it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 86/108 [00:00<00:00, 209.68it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 107/108 [00:00<00:00, 202.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [00:17<01:33,  1.33it/s]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(1405, device='cuda:0')
before filtering torch.Size([1, 177091])
after filtering torch.Size([1, 177091])
num_ins_points_after_filtering tensor([1405], device='cuda:0')
Working on scene0139_00 class copier
masks_to_be_merged [[0, 2, 3, 57, 58, 59], [1, 60], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 38/136 [00:00<00:00, 375.15it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 76/136 [00:00<00:00, 357.29it/s][A
Calculating viewed counts for every point:  91%|█████████ | 124/136 [00:00<00:00, 408.52it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:18<01:44,  1.19it/s]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(14304, device='cuda:0')
before filtering torch.Size([4, 72007])
after filtering torch.Size([2, 72007])
num_ins_points_after_filtering tensor([7696, 6067], device='cuda:0')
Working on scene0144_00 class copier
masks_to_be_merged [[0, 1, 5, 6], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/144 [00:00<00:00, 225.52it/s][A
Calculating viewed counts for every point:  33%|███▎      | 47/144 [00:00<00:00, 233.57it/s][A
Calculating viewed counts for every point:  50%|█████     | 72/144 [00:00<00:00, 240.76it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 97/144 [00:00<00:00, 227.08it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 125/144 [00:00<00:00, 244.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:19<01:42,  1.20it/s]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(1249, device='cuda:0')
before filtering torch.Size([2, 126879])
after filtering torch.Size([2, 126879])
num_ins_points_after_filtering tensor([529, 666], device='cuda:0')
Working on scene0146_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 53, 54], [27, 28, 29, 30, 31, 32], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [46, 47, 48, 49, 50, 51, 52]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 28/141 [00:00<00:00, 268.85it/s][A
Calculating viewed counts for every point:  40%|███▉      | 56/141 [00:00<00:00, 274.45it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 84/141 [00:00<00:00, 266.14it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 116/141 [00:00<00:00, 283.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:20<01:52,  1.09it/s]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(3473, device='cuda:0')
before filtering torch.Size([4, 60438])
after filtering torch.Size([2, 60438])
num_ins_points_after_filtering tensor([2016, 1065], device='cuda:0')
Working on scene0149_00 class copier
masks_to_be_merged [[0, 1, 2, 8, 9, 10, 11, 12], [3, 4, 5, 6, 7, 16, 17, 18, 19, 20], [13, 14, 37], [15, 30, 31, 32], [21, 22, 23, 24, 25, 26, 27, 28, 29], [33, 34], [35, 36]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 23/141 [00:00<00:00, 223.24it/s][A
Calculating viewed counts for every point:  33%|███▎      | 46/141 [00:00<00:00, 205.15it/s][A
Calculating viewed counts for every point:  49%|████▉     | 69/141 [00:00<00:00, 213.43it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 91/141 [00:00<00:00, 215.20it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 116/141 [00:00<00:00, 226.09it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 139/141 [00:00<00:00, 219.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:21<01:58,  1.02it/s]detected_ratio_thres_value tensor(0.1154, device='cuda:0')
final masked points tensor(8436, device='cuda:0')
before filtering torch.Size([7, 162396])
after filtering torch.Size([4, 162396])
num_ins_points_after_filtering tensor([1087,  445, 4413,  497], device='cuda:0')
Working on scene0153_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23], [12, 13, 14], [15, 16, 17, 18, 19, 20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 32/59 [00:00<00:00, 313.69it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:22<01:37,  1.23it/s]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(2200, device='cuda:0')
before filtering torch.Size([3, 47709])
after filtering torch.Size([3, 47709])
num_ins_points_after_filtering tensor([1573,  383,  244], device='cuda:0')
Working on scene0164_00 class copier
masks_to_be_merged [[0, 45, 46, 47, 48, 49, 50, 74], [1, 2, 3, 4, 5, 51, 52, 53, 54, 55, 56, 75], [6, 7, 8, 9, 10, 15, 57], [12, 13, 14, 16, 17, 18, 58], [19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 64, 65, 66, 67, 68], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 69, 70, 71, 72, 73], [59, 60, 61, 62, 63]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/189 [00:00<00:00, 326.70it/s][A
Calculating viewed counts for every point:  35%|███▍      | 66/189 [00:00<00:00, 308.12it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 97/189 [00:00<00:00, 301.74it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 128/189 [00:00<00:00, 291.03it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 158/189 [00:00<00:00, 289.55it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 187/189 [00:00<00:00, 287.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:23<02:02,  1.03s/it]Projecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:23<01:33,  1.26it/s]detected_ratio_thres_value tensor(0.2414, device='cuda:0')
final masked points tensor(6106, device='cuda:0')
before filtering torch.Size([7, 94315])
after filtering torch.Size([5, 94315])
num_ins_points_after_filtering tensor([ 589,  726,  841,  407, 2661], device='cuda:0')
Working on scene0169_00 class copier
No 3d masks detected in backprojection!
Working on scene0187_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 24/227 [00:00<00:00, 231.49it/s][A
Calculating viewed counts for every point:  21%|██        | 48/227 [00:00<00:00, 224.17it/s][A
Calculating viewed counts for every point:  31%|███▏      | 71/227 [00:00<00:00, 216.35it/s][A
Calculating viewed counts for every point:  41%|████▏     | 94/227 [00:00<00:00, 217.60it/s][A
Calculating viewed counts for every point:  51%|█████     | 116/227 [00:00<00:00, 218.04it/s][A
Calculating viewed counts for every point:  61%|██████    | 138/227 [00:00<00:00, 210.66it/s][A
Calculating viewed counts for every point:  71%|███████   | 161/227 [00:00<00:00, 214.63it/s][A
Calculating viewed counts for every point:  81%|████████  | 183/227 [00:00<00:00, 199.57it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 204/227 [00:00<00:00, 199.14it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 225/227 [00:01<00:00, 201.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:24<01:44,  1.12it/s]detected_ratio_thres_value tensor(0.0364, device='cuda:0')
final masked points tensor(857, device='cuda:0')
before filtering torch.Size([1, 173752])
after filtering torch.Size([1, 173752])
num_ins_points_after_filtering tensor([857], device='cuda:0')
Working on scene0193_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0196_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0203_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 20/146 [00:00<00:00, 196.40it/s][A
Calculating viewed counts for every point:  27%|██▋       | 40/146 [00:00<00:00, 185.98it/s][A
Calculating viewed counts for every point:  40%|████      | 59/146 [00:00<00:00, 182.30it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 79/146 [00:00<00:00, 188.33it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 98/146 [00:00<00:00, 185.05it/s][A
Calculating viewed counts for every point:  81%|████████  | 118/146 [00:00<00:00, 188.71it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 137/146 [00:00<00:00, 187.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:25<01:03,  1.78it/s]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(3269, device='cuda:0')
before filtering torch.Size([1, 205756])
after filtering torch.Size([1, 205756])
num_ins_points_after_filtering tensor([3269], device='cuda:0')
Working on scene0207_00 class copier
masks_to_be_merged [[1, 2], [3, 4, 5, 6, 7, 8], [9, 17, 18, 19, 20, 21, 22], [10, 11, 12, 13, 14, 16]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 113.56it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 111.34it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:01, 117.65it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:01, 115.54it/s][A
Calculating viewed counts for every point:  31%|███       | 61/199 [00:00<00:01, 111.18it/s][A
Calculating viewed counts for every point:  37%|███▋      | 73/199 [00:00<00:01, 109.72it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/199 [00:00<00:01, 110.80it/s][A
Calculating viewed counts for every point:  49%|████▉     | 98/199 [00:00<00:00, 114.16it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 110/199 [00:00<00:00, 113.59it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 122/199 [00:01<00:00, 111.03it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 135/199 [00:01<00:00, 114.76it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 147/199 [00:01<00:00, 111.31it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 159/199 [00:01<00:00, 111.37it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 171/199 [00:01<00:00, 112.62it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 183/199 [00:01<00:00, 109.20it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 195/199 [00:01<00:00, 109.86it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:28<01:43,  1.10it/s]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(5376, device='cuda:0')
before filtering torch.Size([4, 304396])
after filtering torch.Size([4, 304396])
num_ins_points_after_filtering tensor([ 506, 1906,  871, 1823], device='cuda:0')
Working on scene0208_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 11/239 [00:00<00:02, 102.38it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/239 [00:00<00:02, 99.25it/s] [A
Calculating viewed counts for every point:  14%|█▍        | 33/239 [00:00<00:01, 103.10it/s][A
Calculating viewed counts for every point:  18%|█▊        | 44/239 [00:00<00:01, 101.85it/s][A
Calculating viewed counts for every point:  23%|██▎       | 55/239 [00:00<00:01, 96.97it/s] [A
Calculating viewed counts for every point:  28%|██▊       | 66/239 [00:00<00:01, 99.23it/s][A
Calculating viewed counts for every point:  32%|███▏      | 76/239 [00:00<00:01, 95.58it/s][A
Calculating viewed counts for every point:  36%|███▌      | 86/239 [00:00<00:01, 96.57it/s][A
Calculating viewed counts for every point:  41%|████      | 98/239 [00:00<00:01, 101.70it/s][A
Calculating viewed counts for every point:  46%|████▌     | 109/239 [00:01<00:01, 100.15it/s][A
Calculating viewed counts for every point:  50%|█████     | 120/239 [00:01<00:01, 99.60it/s] [A
Calculating viewed counts for every point:  55%|█████▍    | 131/239 [00:01<00:01, 102.05it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 142/239 [00:01<00:00, 102.73it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 153/239 [00:01<00:00, 104.50it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 164/239 [00:01<00:00, 100.06it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 175/239 [00:01<00:00, 95.57it/s] [A
Calculating viewed counts for every point:  78%|███████▊  | 186/239 [00:01<00:00, 98.36it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 196/239 [00:01<00:00, 98.17it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 206/239 [00:02<00:00, 97.53it/s][A
Calculating viewed counts for every point:  90%|█████████ | 216/239 [00:02<00:00, 95.92it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 227/239 [00:02<00:00, 97.63it/s][A
Calculating viewed counts for every point: 100%|██████████| 239/239 [00:02<00:00, 103.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [00:30<02:22,  1.27s/it]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(11108, device='cuda:0')
before filtering torch.Size([1, 407386])
after filtering torch.Size([1, 407386])
num_ins_points_after_filtering tensor([11108], device='cuda:0')
Working on scene0217_00 class copier
masks_to_be_merged [[0, 4, 5, 6, 7, 8, 9], [1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 18/125 [00:00<00:00, 175.69it/s][A
Calculating viewed counts for every point:  31%|███       | 39/125 [00:00<00:00, 190.43it/s][A
Calculating viewed counts for every point:  47%|████▋     | 59/125 [00:00<00:00, 190.90it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 79/125 [00:00<00:00, 183.35it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 99/125 [00:00<00:00, 187.51it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 120/125 [00:00<00:00, 194.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [00:31<02:09,  1.17s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(2153, device='cuda:0')
before filtering torch.Size([2, 126385])
after filtering torch.Size([2, 126385])
num_ins_points_after_filtering tensor([1385,  768], device='cuda:0')
Working on scene0221_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0222_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 20], [6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [14, 15, 34, 35, 36, 37, 38], [16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/543 [00:00<00:03, 155.44it/s][A
Calculating viewed counts for every point:   6%|▋         | 35/543 [00:00<00:02, 173.12it/s][A
Calculating viewed counts for every point:  10%|█         | 55/543 [00:00<00:02, 181.49it/s][A
Calculating viewed counts for every point:  14%|█▎        | 74/543 [00:00<00:02, 172.46it/s][A
Calculating viewed counts for every point:  17%|█▋        | 92/543 [00:00<00:02, 159.85it/s][A
Calculating viewed counts for every point:  20%|██        | 109/543 [00:00<00:02, 161.74it/s][A
Calculating viewed counts for every point:  23%|██▎       | 126/543 [00:00<00:02, 161.32it/s][A
Calculating viewed counts for every point:  27%|██▋       | 145/543 [00:00<00:02, 168.12it/s][A
Calculating viewed counts for every point:  31%|███       | 166/543 [00:00<00:02, 178.95it/s][A
Calculating viewed counts for every point:  34%|███▍      | 184/543 [00:01<00:02, 178.35it/s][A
Calculating viewed counts for every point:  37%|███▋      | 203/543 [00:01<00:01, 180.89it/s][A
Calculating viewed counts for every point:  41%|████      | 223/543 [00:01<00:01, 186.32it/s][A
Calculating viewed counts for every point:  45%|████▍     | 244/543 [00:01<00:01, 190.40it/s][A
Calculating viewed counts for every point:  49%|████▊     | 264/543 [00:01<00:01, 174.78it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 282/543 [00:01<00:01, 172.47it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 301/543 [00:01<00:01, 175.10it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 319/543 [00:01<00:01, 172.84it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 337/543 [00:01<00:01, 172.72it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 355/543 [00:02<00:01, 172.95it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 373/543 [00:02<00:00, 171.53it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 392/543 [00:02<00:00, 174.86it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 411/543 [00:02<00:00, 177.65it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 431/543 [00:02<00:00, 182.65it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 450/543 [00:02<00:00, 179.42it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 468/543 [00:02<00:00, 175.25it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 486/543 [00:02<00:00, 176.31it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 504/543 [00:02<00:00, 171.63it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 522/543 [00:03<00:00, 161.41it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 539/543 [00:03<00:00, 160.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [00:35<02:38,  1.45s/it]detected_ratio_thres_value tensor(0.1707, device='cuda:0')
final masked points tensor(4593, device='cuda:0')
before filtering torch.Size([4, 234831])
after filtering torch.Size([2, 234831])
num_ins_points_after_filtering tensor([ 985, 2050], device='cuda:0')
Working on scene0231_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24], [16, 17]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 95.22it/s][A
Calculating viewed counts for every point:   5%|▍         | 20/444 [00:00<00:04, 94.70it/s][A
Calculating viewed counts for every point:   7%|▋         | 31/444 [00:00<00:04, 98.86it/s][A
Calculating viewed counts for every point:   9%|▉         | 42/444 [00:00<00:03, 101.93it/s][A
Calculating viewed counts for every point:  12%|█▏        | 53/444 [00:00<00:03, 98.48it/s] [A
Calculating viewed counts for every point:  14%|█▍        | 64/444 [00:00<00:03, 99.45it/s][A
Calculating viewed counts for every point:  17%|█▋        | 76/444 [00:00<00:03, 103.75it/s][A
Calculating viewed counts for every point:  20%|██        | 89/444 [00:00<00:03, 109.73it/s][A
Calculating viewed counts for every point:  23%|██▎       | 100/444 [00:00<00:03, 102.52it/s][A
Calculating viewed counts for every point:  25%|██▌       | 111/444 [00:01<00:03, 100.65it/s][A
Calculating viewed counts for every point:  27%|██▋       | 122/444 [00:01<00:03, 102.49it/s][A
Calculating viewed counts for every point:  30%|██▉       | 133/444 [00:01<00:03, 99.38it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 145/444 [00:01<00:02, 101.97it/s][A
Calculating viewed counts for every point:  35%|███▌      | 157/444 [00:01<00:02, 104.67it/s][A
Calculating viewed counts for every point:  38%|███▊      | 168/444 [00:01<00:02, 99.39it/s] [A
Calculating viewed counts for every point:  40%|████      | 179/444 [00:01<00:02, 98.56it/s][A
Calculating viewed counts for every point:  43%|████▎     | 191/444 [00:01<00:02, 102.60it/s][A
Calculating viewed counts for every point:  45%|████▌     | 202/444 [00:01<00:02, 101.01it/s][A
Calculating viewed counts for every point:  48%|████▊     | 213/444 [00:02<00:02, 98.58it/s] [A
Calculating viewed counts for every point:  50%|█████     | 223/444 [00:02<00:02, 97.98it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 233/444 [00:02<00:02, 98.44it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 245/444 [00:02<00:01, 102.86it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 256/444 [00:02<00:01, 101.24it/s][A
Calculating viewed counts for every point:  60%|██████    | 267/444 [00:02<00:01, 97.05it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 278/444 [00:02<00:01, 100.57it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 289/444 [00:02<00:01, 99.21it/s] [A
Calculating viewed counts for every point:  68%|██████▊   | 300/444 [00:02<00:01, 99.89it/s][A
Calculating viewed counts for every point:  70%|███████   | 311/444 [00:03<00:01, 97.55it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 321/444 [00:03<00:01, 95.46it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 331/444 [00:03<00:01, 91.70it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 341/444 [00:03<00:01, 92.86it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 352/444 [00:03<00:00, 95.67it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 364/444 [00:03<00:00, 101.22it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 375/444 [00:03<00:00, 98.64it/s] [A
Calculating viewed counts for every point:  87%|████████▋ | 385/444 [00:03<00:00, 97.62it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 396/444 [00:03<00:00, 100.73it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 407/444 [00:04<00:00, 97.70it/s] [A
Calculating viewed counts for every point:  94%|█████████▍| 417/444 [00:04<00:00, 94.32it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 428/444 [00:04<00:00, 97.95it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 438/444 [00:04<00:00, 96.77it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [00:40<04:02,  2.25s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(975, device='cuda:0')
before filtering torch.Size([2, 419537])
after filtering torch.Size([1, 419537])
num_ins_points_after_filtering tensor([847], device='cuda:0')
Working on scene0246_00 class copier
masks_to_be_merged [[0, 1, 2, 3], [4, 29, 30, 31], [5, 6, 7, 8, 9, 10, 11, 17, 18, 19, 20, 21], [12, 13, 14], [15, 16], [22, 23, 24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/296 [00:00<00:01, 148.79it/s][A
Calculating viewed counts for every point:  11%|█▏        | 34/296 [00:00<00:01, 165.19it/s][A
Calculating viewed counts for every point:  18%|█▊        | 53/296 [00:00<00:01, 173.80it/s][A
Calculating viewed counts for every point:  24%|██▍       | 71/296 [00:00<00:01, 175.32it/s][A
Calculating viewed counts for every point:  31%|███       | 91/296 [00:00<00:01, 180.21it/s][A
Calculating viewed counts for every point:  37%|███▋      | 110/296 [00:00<00:01, 174.35it/s][A
Calculating viewed counts for every point:  43%|████▎     | 128/296 [00:00<00:00, 169.76it/s][A
Calculating viewed counts for every point:  51%|█████     | 150/296 [00:00<00:00, 182.59it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 169/296 [00:00<00:00, 179.30it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 187/296 [00:01<00:00, 178.16it/s][A
Calculating viewed counts for every point:  71%|███████   | 209/296 [00:01<00:00, 189.75it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 230/296 [00:01<00:00, 193.16it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 250/296 [00:01<00:00, 190.14it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 271/296 [00:01<00:00, 194.31it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 291/296 [00:01<00:00, 193.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [00:42<03:55,  2.20s/it]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(7167, device='cuda:0')
before filtering torch.Size([6, 201062])
after filtering torch.Size([5, 201062])
num_ins_points_after_filtering tensor([ 955, 2093,  292, 1970, 1498], device='cuda:0')
Working on scene0249_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0251_00 class copier
No 3d masks detected in backprojection!
Working on scene0256_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26], [21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 25/156 [00:00<00:00, 247.56it/s][A
Calculating viewed counts for every point:  32%|███▏      | 50/156 [00:00<00:00, 248.19it/s][A
Calculating viewed counts for every point:  51%|█████     | 79/156 [00:00<00:00, 267.14it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 107/156 [00:00<00:00, 271.95it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 139/156 [00:00<00:00, 288.02it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [00:43<02:09,  1.24s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(674, device='cuda:0')
before filtering torch.Size([2, 108517])
after filtering torch.Size([1, 108517])
num_ins_points_after_filtering tensor([674], device='cuda:0')
Working on scene0257_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/165 [00:00<00:00, 163.56it/s][A
Calculating viewed counts for every point:  23%|██▎       | 38/165 [00:00<00:00, 189.27it/s][A
Calculating viewed counts for every point:  35%|███▍      | 57/165 [00:00<00:00, 179.19it/s][A
Calculating viewed counts for every point:  47%|████▋     | 77/165 [00:00<00:00, 186.86it/s][A
Calculating viewed counts for every point:  61%|██████    | 101/165 [00:00<00:00, 204.30it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 122/165 [00:00<00:00, 191.10it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 146/165 [00:00<00:00, 204.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [00:44<02:00,  1.17s/it]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(1256, device='cuda:0')
before filtering torch.Size([1, 180928])
after filtering torch.Size([1, 180928])
num_ins_points_after_filtering tensor([1256], device='cuda:0')
Working on scene0277_00 class copier
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/115 [00:00<00:00, 242.72it/s][A
Calculating viewed counts for every point:  43%|████▎     | 50/115 [00:00<00:00, 227.20it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 77/115 [00:00<00:00, 242.65it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 102/115 [00:00<00:00, 233.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [00:44<01:46,  1.04s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(2014, device='cuda:0')
before filtering torch.Size([1, 79184])
after filtering torch.Size([1, 79184])
num_ins_points_after_filtering tensor([2002], device='cuda:0')
Working on scene0278_00 class copier
masks_to_be_merged [[0, 1, 3, 4, 10, 11], [2, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 32/80 [00:00<00:00, 315.72it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 67/80 [00:00<00:00, 333.34it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [00:45<01:30,  1.11it/s]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(4762, device='cuda:0')
before filtering torch.Size([2, 77020])
after filtering torch.Size([2, 77020])
num_ins_points_after_filtering tensor([ 539, 4221], device='cuda:0')
Working on scene0300_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 25/175 [00:00<00:00, 242.31it/s][A
Calculating viewed counts for every point:  29%|██▊       | 50/175 [00:00<00:00, 245.05it/s][A
Calculating viewed counts for every point:  43%|████▎     | 75/175 [00:00<00:00, 240.75it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 100/175 [00:00<00:00, 235.07it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 128/175 [00:00<00:00, 249.28it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 153/175 [00:00<00:00, 244.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [00:45<01:27,  1.15it/s]detected_ratio_thres_value tensor(0.0435, device='cuda:0')
final masked points tensor(626, device='cuda:0')
before filtering torch.Size([1, 140216])
after filtering torch.Size([1, 140216])
num_ins_points_after_filtering tensor([157], device='cuda:0')
Working on scene0304_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 20/178 [00:00<00:00, 193.04it/s][A
Calculating viewed counts for every point:  22%|██▏       | 40/178 [00:00<00:00, 194.90it/s][A
Calculating viewed counts for every point:  35%|███▌      | 63/178 [00:00<00:00, 210.60it/s][A
Calculating viewed counts for every point:  48%|████▊     | 85/178 [00:00<00:00, 210.00it/s][A
Calculating viewed counts for every point:  60%|██████    | 107/178 [00:00<00:00, 211.14it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 129/178 [00:00<00:00, 211.07it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 153/178 [00:00<00:00, 218.93it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 175/178 [00:00<00:00, 216.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [00:47<01:40,  1.02s/it]detected_ratio_thres_value tensor(0.4333, device='cuda:0')
final masked points tensor(1584, device='cuda:0')
before filtering torch.Size([1, 164016])
after filtering torch.Size([1, 164016])
num_ins_points_after_filtering tensor([1582], device='cuda:0')
Working on scene0307_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 101.83it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 96.36it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 32/205 [00:00<00:01, 92.73it/s][A
Calculating viewed counts for every point:  21%|██        | 43/205 [00:00<00:01, 95.55it/s][A
Calculating viewed counts for every point:  26%|██▌       | 53/205 [00:00<00:01, 93.87it/s][A
Calculating viewed counts for every point:  31%|███       | 63/205 [00:00<00:01, 90.59it/s][A
Calculating viewed counts for every point:  37%|███▋      | 75/205 [00:00<00:01, 97.28it/s][A
Calculating viewed counts for every point:  41%|████▏     | 85/205 [00:00<00:01, 92.61it/s][A
Calculating viewed counts for every point:  46%|████▋     | 95/205 [00:01<00:01, 92.79it/s][A
Calculating viewed counts for every point:  51%|█████     | 105/205 [00:01<00:01, 89.61it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 115/205 [00:01<00:00, 90.30it/s][A
Calculating viewed counts for every point:  61%|██████    | 125/205 [00:01<00:00, 90.60it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 136/205 [00:01<00:00, 94.83it/s][A
Calculating viewed counts for every point:  71%|███████   | 146/205 [00:01<00:00, 92.74it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 157/205 [00:01<00:00, 94.63it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 167/205 [00:01<00:00, 89.13it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 177/205 [00:01<00:00, 89.54it/s][A
Calculating viewed counts for every point:  91%|█████████ | 187/205 [00:02<00:00, 90.78it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 198/205 [00:02<00:00, 94.27it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [00:49<02:25,  1.48s/it]detected_ratio_thres_value tensor(0.3226, device='cuda:0')
final masked points tensor(3759, device='cuda:0')
before filtering torch.Size([1, 371616])
after filtering torch.Size([1, 371616])
num_ins_points_after_filtering tensor([3759], device='cuda:0')
Working on scene0314_00 class copier
No 3d masks detected in backprojection!
Working on scene0316_00 class copier
masks_to_be_merged [[0, 1, 2, 5, 7], [3, 4, 6, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|██▉       | 23/77 [00:00<00:00, 224.44it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 46/77 [00:00<00:00, 222.96it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 71/77 [00:00<00:00, 232.07it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [00:50<01:32,  1.03it/s]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(3133, device='cuda:0')
before filtering torch.Size([2, 78769])
after filtering torch.Size([2, 78769])
num_ins_points_after_filtering tensor([1868, 1265], device='cuda:0')
Working on scene0328_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 25/142 [00:00<00:00, 248.65it/s][A
Calculating viewed counts for every point:  39%|███▊      | 55/142 [00:00<00:00, 277.73it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 85/142 [00:00<00:00, 284.96it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 117/142 [00:00<00:00, 297.22it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [00:51<01:26,  1.09it/s]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(4146, device='cuda:0')
before filtering torch.Size([1, 111467])
after filtering torch.Size([1, 111467])
num_ins_points_after_filtering tensor([4146], device='cuda:0')
Working on scene0329_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0334_00 class copier
No 3d masks detected in backprojection!
Working on scene0338_00 class copier
masks_to_be_merged [[0, 2, 4, 6, 9, 33, 34, 36, 39, 40, 41, 43, 45], [1, 3, 5, 7, 8, 32, 35, 37, 38, 42], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 46, 47, 48, 49, 50, 54], [20, 21, 22, 23, 24, 57, 58, 59], [25, 26, 27, 28], [29, 30, 31], [51, 52, 53, 55, 56]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  41%|████      | 33/81 [00:00<00:00, 325.35it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 66/81 [00:00<00:00, 297.61it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [00:52<01:00,  1.53it/s]Projecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [00:52<00:26,  3.22it/s]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(13952, device='cuda:0')
before filtering torch.Size([7, 106339])
after filtering torch.Size([6, 106339])
num_ins_points_after_filtering tensor([2982, 2577, 4804, 2408,  740,  391], device='cuda:0')
Working on scene0342_00 class copier
No 3d masks detected in backprojection!
Working on scene0343_00 class copier
No 3d masks detected in backprojection!
Working on scene0351_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0353_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0354_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0355_00 class copier
No 3d masks detected in backprojection!
Working on scene0356_00 class copier
masks_to_be_merged [[0, 1, 2, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 231.21it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 226.03it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 73/136 [00:00<00:00, 233.88it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 97/136 [00:00<00:00, 228.75it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 120/136 [00:00<00:00, 229.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [00:53<00:27,  3.12it/s]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(1700, device='cuda:0')
before filtering torch.Size([1, 81172])
after filtering torch.Size([1, 81172])
num_ins_points_after_filtering tensor([1700], device='cuda:0')
Working on scene0357_00 class copier
No 3d masks detected in backprojection!
Working on scene0377_00 class copier
No 3d masks detected in backprojection!
Working on scene0378_00 class copier
masks_to_be_merged [[0, 1, 19, 20], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/190 [00:00<00:01, 164.39it/s][A
Calculating viewed counts for every point:  18%|█▊        | 34/190 [00:00<00:00, 163.33it/s][A
Calculating viewed counts for every point:  27%|██▋       | 52/190 [00:00<00:00, 169.95it/s][A
Calculating viewed counts for every point:  37%|███▋      | 70/190 [00:00<00:00, 164.29it/s][A
Calculating viewed counts for every point:  47%|████▋     | 89/190 [00:00<00:00, 171.02it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 107/190 [00:00<00:00, 170.35it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 125/190 [00:00<00:00, 166.16it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 142/190 [00:00<00:00, 165.05it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 159/190 [00:00<00:00, 164.99it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 176/190 [00:01<00:00, 159.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [00:54<00:30,  2.70it/s]detected_ratio_thres_value tensor(0.1935, device='cuda:0')
final masked points tensor(1689, device='cuda:0')
before filtering torch.Size([2, 156298])
after filtering torch.Size([1, 156298])
num_ins_points_after_filtering tensor([1277], device='cuda:0')
Working on scene0382_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0389_00 class copier
masks_to_be_merged [[0, 1, 2, 3], [4, 5], [7, 8, 9, 10, 12, 14, 15, 16], [11, 13], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/142 [00:00<00:00, 183.38it/s][A
Calculating viewed counts for every point:  27%|██▋       | 38/142 [00:00<00:00, 187.06it/s][A
Calculating viewed counts for every point:  42%|████▏     | 59/142 [00:00<00:00, 193.81it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 79/142 [00:00<00:00, 189.24it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 99/142 [00:00<00:00, 189.65it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 119/142 [00:00<00:00, 190.75it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 139/142 [00:00<00:00, 186.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [00:55<00:33,  2.37it/s]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(4253, device='cuda:0')
before filtering torch.Size([5, 201003])
after filtering torch.Size([4, 201003])
num_ins_points_after_filtering tensor([1525,  561,  874,  719], device='cuda:0')
Working on scene0406_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45, 46, 47, 48, 49, 50, 51, 52], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 33/142 [00:00<00:00, 327.85it/s][A
Calculating viewed counts for every point:  46%|████▋     | 66/142 [00:00<00:00, 275.68it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 97/142 [00:00<00:00, 285.47it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 126/142 [00:00<00:00, 285.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [00:56<00:39,  1.99it/s]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(2071, device='cuda:0')
before filtering torch.Size([2, 48864])
after filtering torch.Size([2, 48864])
num_ins_points_after_filtering tensor([1195,  876], device='cuda:0')
Working on scene0412_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4], [7, 8, 9, 10, 11, 12, 13], [14, 15], [16, 17, 18, 19, 20], [22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 24/237 [00:00<00:00, 232.31it/s][A
Calculating viewed counts for every point:  20%|██        | 48/237 [00:00<00:00, 195.36it/s][A
Calculating viewed counts for every point:  30%|██▉       | 70/237 [00:00<00:00, 202.18it/s][A
Calculating viewed counts for every point:  38%|███▊      | 91/237 [00:00<00:00, 203.96it/s][A
Calculating viewed counts for every point:  47%|████▋     | 112/237 [00:00<00:00, 198.94it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 137/237 [00:00<00:00, 214.46it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 159/237 [00:00<00:00, 211.53it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 182/237 [00:00<00:00, 212.28it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 204/237 [00:00<00:00, 203.53it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 225/237 [00:01<00:00, 199.85it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [00:58<00:53,  1.46it/s]Projecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [00:59<00:51,  1.50it/s]detected_ratio_thres_value tensor(0.1026, device='cuda:0')
final masked points tensor(6982, device='cuda:0')
before filtering torch.Size([5, 175557])
after filtering torch.Size([4, 175557])
num_ins_points_after_filtering tensor([1346, 1498, 1837, 1640], device='cuda:0')
Working on scene0414_00 class copier
No 3d masks detected in backprojection!
Working on scene0423_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  35%|███▌      | 27/77 [00:00<00:00, 266.91it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 55/77 [00:00<00:00, 274.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  46%|████▋     | 66/142 [00:59<00:45,  1.66it/s]detected_ratio_thres_value tensor(0.0800, device='cuda:0')
final masked points tensor(1957, device='cuda:0')
before filtering torch.Size([1, 53074])
after filtering torch.Size([1, 53074])
num_ins_points_after_filtering tensor([1957], device='cuda:0')
Working on scene0426_00 class copier
masks_to_be_merged [[0, 1, 2, 20], [3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 22, 23, 24, 25], [12, 27, 28], [13, 29], [16, 17, 18, 30, 31, 33]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 24/231 [00:00<00:00, 237.16it/s][A
Calculating viewed counts for every point:  21%|██        | 49/231 [00:00<00:00, 241.71it/s][A
Calculating viewed counts for every point:  33%|███▎      | 77/231 [00:00<00:00, 258.97it/s][A
Calculating viewed counts for every point:  45%|████▌     | 104/231 [00:00<00:00, 260.62it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 133/231 [00:00<00:00, 268.88it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 160/231 [00:00<00:00, 250.36it/s][A
Calculating viewed counts for every point:  81%|████████  | 186/231 [00:00<00:00, 249.26it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 214/231 [00:00<00:00, 255.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [01:00<00:58,  1.28it/s]detected_ratio_thres_value tensor(0.2069, device='cuda:0')
final masked points tensor(4259, device='cuda:0')
before filtering torch.Size([5, 135867])
after filtering torch.Size([2, 135867])
num_ins_points_after_filtering tensor([2699,  834], device='cuda:0')
Working on scene0427_00 class copier
masks_to_be_merged [[0, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 36/132 [00:00<00:00, 358.40it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 72/132 [00:00<00:00, 325.48it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 109/132 [00:00<00:00, 343.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [01:01<00:52,  1.41it/s]Projecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [01:01<00:32,  2.21it/s]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1393, device='cuda:0')
before filtering torch.Size([2, 74074])
after filtering torch.Size([1, 74074])
num_ins_points_after_filtering tensor([1335], device='cuda:0')
Working on scene0430_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0432_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0435_00 class copier
masks_to_be_merged [[0, 1, 2, 6], [3, 4], [7, 8, 9, 10, 11, 12, 13, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 17/328 [00:00<00:01, 166.41it/s][A
Calculating viewed counts for every point:  10%|█         | 34/328 [00:00<00:01, 158.72it/s][A
Calculating viewed counts for every point:  16%|█▌        | 51/328 [00:00<00:01, 160.40it/s][A
Calculating viewed counts for every point:  21%|██        | 68/328 [00:00<00:01, 154.56it/s][A
Calculating viewed counts for every point:  26%|██▌       | 84/328 [00:00<00:01, 154.90it/s][A
Calculating viewed counts for every point:  31%|███       | 102/328 [00:00<00:01, 161.32it/s][A
Calculating viewed counts for every point:  36%|███▋      | 119/328 [00:00<00:01, 159.37it/s][A
Calculating viewed counts for every point:  41%|████      | 135/328 [00:00<00:01, 153.20it/s][A
Calculating viewed counts for every point:  46%|████▌     | 151/328 [00:00<00:01, 154.17it/s][A
Calculating viewed counts for every point:  51%|█████     | 167/328 [00:01<00:01, 152.54it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 184/328 [00:01<00:00, 154.03it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 201/328 [00:01<00:00, 158.61it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 218/328 [00:01<00:00, 159.70it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 236/328 [00:01<00:00, 165.15it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 253/328 [00:01<00:00, 165.58it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 270/328 [00:01<00:00, 163.99it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 289/328 [00:01<00:00, 170.34it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 308/328 [00:01<00:00, 175.76it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 326/328 [00:02<00:00, 175.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [01:04<01:10,  1.01it/s]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(2854, device='cuda:0')
before filtering torch.Size([4, 254998])
after filtering torch.Size([2, 254998])
num_ins_points_after_filtering tensor([ 971, 1678], device='cuda:0')
Working on scene0441_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6], [7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 31, 32, 33, 34, 35, 36], [21, 22, 23, 24, 25, 26, 27, 28], [29, 30]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 21/77 [00:00<00:00, 204.50it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 42/77 [00:00<00:00, 199.75it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 65/77 [00:00<00:00, 210.88it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [01:05<01:05,  1.06it/s]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(3657, device='cuda:0')
before filtering torch.Size([5, 86191])
after filtering torch.Size([3, 86191])
num_ins_points_after_filtering tensor([ 923, 1634,  991], device='cuda:0')
Working on scene0458_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], [9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 27/199 [00:00<00:00, 262.09it/s][A
Calculating viewed counts for every point:  28%|██▊       | 55/199 [00:00<00:00, 272.13it/s][A
Calculating viewed counts for every point:  42%|████▏     | 83/199 [00:00<00:00, 266.22it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 110/199 [00:00<00:00, 265.94it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 137/199 [00:00<00:00, 266.31it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 165/199 [00:00<00:00, 268.01it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 193/199 [00:00<00:00, 269.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [01:06<01:08,  1.01it/s]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(1719, device='cuda:0')
before filtering torch.Size([3, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([ 135, 1514], device='cuda:0')
Working on scene0461_00 class copier
No 3d masks detected in backprojection!
Working on scene0462_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 38, 39, 40, 41, 47, 48, 49, 50, 51, 52], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 54, 55], [17, 20], [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [42, 43, 44, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 23/114 [00:00<00:00, 229.48it/s][A
Calculating viewed counts for every point:  41%|████      | 47/114 [00:00<00:00, 230.76it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 72/114 [00:00<00:00, 235.72it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 96/114 [00:00<00:00, 231.50it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [01:07<00:56,  1.18it/s]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(7223, device='cuda:0')
before filtering torch.Size([5, 156714])
after filtering torch.Size([3, 156714])
num_ins_points_after_filtering tensor([3433, 1489, 1942], device='cuda:0')
Working on scene0474_00 class copier
No 3d masks detected in backprojection!
Working on scene0488_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 17/60 [00:00<00:00, 166.15it/s][A
Calculating viewed counts for every point:  60%|██████    | 36/60 [00:00<00:00, 180.01it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 56/60 [00:00<00:00, 185.02it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [01:07<00:40,  1.60it/s]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(3585, device='cuda:0')
before filtering torch.Size([1, 108319])
after filtering torch.Size([1, 108319])
num_ins_points_after_filtering tensor([3585], device='cuda:0')
Working on scene0490_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0494_00 class copier
No 3d masks detected in backprojection!
Working on scene0496_00 class copier
No 3d masks detected in backprojection!
Working on scene0500_00 class copier
No 3d masks detected in backprojection!
Working on scene0518_00 class copier
masks_to_be_merged [[0, 1, 2, 5], [3, 4]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/147 [00:00<00:00, 221.10it/s][A
Calculating viewed counts for every point:  31%|███▏      | 46/147 [00:00<00:00, 224.73it/s][A
Calculating viewed counts for every point:  50%|█████     | 74/147 [00:00<00:00, 248.77it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 99/147 [00:00<00:00, 239.97it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 127/147 [00:00<00:00, 253.26it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [01:08<00:21,  2.79it/s]detected_ratio_thres_value tensor(0.0526, device='cuda:0')
final masked points tensor(2323, device='cuda:0')
before filtering torch.Size([2, 130180])
after filtering torch.Size([2, 130180])
num_ins_points_after_filtering tensor([1225,  742], device='cuda:0')
Working on scene0527_00 class copier
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0535_00 class copier
No 3d masks detected in backprojection!
Working on scene0549_00 class copier
No 3d masks detected in backprojection!
Working on scene0550_00 class copier
masks_to_be_merged [[0, 4, 5, 6, 7, 8, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95], [1, 2, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], [11, 12, 13, 14, 15, 16, 17, 18, 19], [55, 89], [67, 90], [96, 97], [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], [111, 112]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 27/392 [00:00<00:01, 266.50it/s][A
Calculating viewed counts for every point:  14%|█▍        | 54/392 [00:00<00:01, 266.30it/s][A
Calculating viewed counts for every point:  21%|██        | 83/392 [00:00<00:01, 276.09it/s][A
Calculating viewed counts for every point:  28%|██▊       | 111/392 [00:00<00:01, 257.55it/s][A
Calculating viewed counts for every point:  35%|███▌      | 138/392 [00:00<00:00, 260.87it/s][A
Calculating viewed counts for every point:  42%|████▏     | 166/392 [00:00<00:00, 265.84it/s][A
Calculating viewed counts for every point:  49%|████▉     | 193/392 [00:00<00:00, 262.83it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 220/392 [00:00<00:00, 264.34it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 247/392 [00:00<00:00, 256.29it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 273/392 [00:01<00:00, 250.77it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 301/392 [00:01<00:00, 258.61it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 328/392 [00:01<00:00, 260.56it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 358/392 [00:01<00:00, 268.99it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 385/392 [00:01<00:00, 254.36it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [01:11<00:28,  1.95it/s]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(4834, device='cuda:0')
before filtering torch.Size([8, 127677])
after filtering torch.Size([2, 127677])
num_ins_points_after_filtering tensor([1535, 1725], device='cuda:0')
Working on scene0552_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 26/89 [00:00<00:00, 259.78it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 52/89 [00:00<00:00, 251.16it/s][A
Calculating viewed counts for every point:  91%|█████████ | 81/89 [00:00<00:00, 265.62it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [01:12<00:29,  1.86it/s]detected_ratio_thres_value tensor(0.4286, device='cuda:0')
final masked points tensor(6210, device='cuda:0')
before filtering torch.Size([2, 123103])
after filtering torch.Size([1, 123103])
num_ins_points_after_filtering tensor([6103], device='cuda:0')
Working on scene0553_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 56, 57, 58, 59, 60, 61, 62], [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 28/151 [00:00<00:00, 269.77it/s][A
Calculating viewed counts for every point:  40%|████      | 61/151 [00:00<00:00, 299.17it/s][A
Calculating viewed counts for every point:  60%|██████    | 91/151 [00:00<00:00, 285.69it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 120/151 [00:00<00:00, 276.31it/s][A
Calculating viewed counts for every point: 100%|██████████| 151/151 [00:00<00:00, 286.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [01:13<00:34,  1.55it/s]detected_ratio_thres_value tensor(0.2333, device='cuda:0')
final masked points tensor(6235, device='cuda:0')
before filtering torch.Size([5, 62854])
after filtering torch.Size([5, 62854])
num_ins_points_after_filtering tensor([1682,  852, 1598, 1260,  843], device='cuda:0')
Working on scene0558_00 class copier
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  49%|████▉     | 35/71 [00:00<00:00, 344.16it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 70/71 [00:00<00:00, 330.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [01:14<00:30,  1.72it/s]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(680, device='cuda:0')
before filtering torch.Size([1, 92953])
after filtering torch.Size([1, 92953])
num_ins_points_after_filtering tensor([680], device='cuda:0')
Working on scene0559_00 class copier
No 3d masks detected in backprojection!
Working on scene0565_00 class copier
masks_to_be_merged [[0, 2, 3, 5, 7, 10, 11, 13], [1, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 18/107 [00:00<00:00, 178.82it/s][A
Calculating viewed counts for every point:  38%|███▊      | 41/107 [00:00<00:00, 208.44it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 63/107 [00:00<00:00, 213.20it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 85/107 [00:00<00:00, 204.37it/s][A
Calculating viewed counts for every point: 100%|██████████| 107/107 [00:00<00:00, 207.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [01:14<00:27,  1.85it/s]detected_ratio_thres_value tensor(0.3429, device='cuda:0')
final masked points tensor(1316, device='cuda:0')
before filtering torch.Size([2, 167558])
after filtering torch.Size([2, 167558])
num_ins_points_after_filtering tensor([446, 870], device='cuda:0')
Working on scene0568_00 class copier
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 14/166 [00:00<00:01, 131.67it/s][A
Calculating viewed counts for every point:  17%|█▋        | 28/166 [00:00<00:01, 124.87it/s][A
Calculating viewed counts for every point:  25%|██▌       | 42/166 [00:00<00:00, 127.74it/s][A
Calculating viewed counts for every point:  33%|███▎      | 55/166 [00:00<00:00, 126.81it/s][A
Calculating viewed counts for every point:  41%|████      | 68/166 [00:00<00:00, 125.71it/s][A
Calculating viewed counts for every point:  49%|████▉     | 82/166 [00:00<00:00, 129.69it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 95/166 [00:00<00:00, 127.36it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 108/166 [00:00<00:00, 127.44it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 122/166 [00:00<00:00, 129.69it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 135/166 [00:01<00:00, 121.91it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 148/166 [00:01<00:00, 124.05it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 161/166 [00:01<00:00, 125.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [01:16<00:37,  1.32it/s]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(2987, device='cuda:0')
before filtering torch.Size([1, 232453])
after filtering torch.Size([1, 232453])
num_ins_points_after_filtering tensor([2984], device='cuda:0')
Working on scene0574_00 class copier
masks_to_be_merged [[1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 35/103 [00:00<00:00, 349.58it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 70/103 [00:00<00:00, 303.05it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 101/103 [00:00<00:00, 275.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [01:17<00:34,  1.43it/s]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(271, device='cuda:0')
before filtering torch.Size([1, 55521])
after filtering torch.Size([1, 55521])
num_ins_points_after_filtering tensor([183], device='cuda:0')
Working on scene0575_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 172.76it/s][A
Calculating viewed counts for every point:  13%|█▎        | 37/294 [00:00<00:01, 178.29it/s][A
Calculating viewed counts for every point:  20%|██        | 59/294 [00:00<00:01, 194.22it/s][A
Calculating viewed counts for every point:  27%|██▋       | 79/294 [00:00<00:01, 189.40it/s][A
Calculating viewed counts for every point:  35%|███▍      | 102/294 [00:00<00:00, 201.77it/s][A
Calculating viewed counts for every point:  42%|████▏     | 123/294 [00:00<00:00, 191.28it/s][A
Calculating viewed counts for every point:  50%|████▉     | 146/294 [00:00<00:00, 200.60it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 169/294 [00:00<00:00, 201.54it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 190/294 [00:00<00:00, 189.65it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 210/294 [00:01<00:00, 174.90it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 228/294 [00:01<00:00, 170.68it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 246/294 [00:01<00:00, 172.23it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 264/294 [00:01<00:00, 172.67it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 284/294 [00:01<00:00, 179.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [01:18<00:46,  1.03it/s]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(853, device='cuda:0')
before filtering torch.Size([1, 194207])
after filtering torch.Size([1, 194207])
num_ins_points_after_filtering tensor([853], device='cuda:0')
Working on scene0578_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 22/149 [00:00<00:00, 218.54it/s][A
Calculating viewed counts for every point:  33%|███▎      | 49/149 [00:00<00:00, 243.97it/s][A
Calculating viewed counts for every point:  50%|████▉     | 74/149 [00:00<00:00, 231.05it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 98/149 [00:00<00:00, 226.49it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 123/149 [00:00<00:00, 232.38it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 147/149 [00:00<00:00, 224.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [01:19<00:42,  1.10it/s]detected_ratio_thres_value tensor(0.0455, device='cuda:0')
final masked points tensor(706, device='cuda:0')
before filtering torch.Size([1, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([706], device='cuda:0')
Working on scene0580_00 class copier
masks_to_be_merged [[0, 1, 32], [2, 3], [4, 5, 7, 8, 9, 10], [6, 12, 13, 14, 15, 16, 17, 18, 31], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 23/477 [00:00<00:02, 221.23it/s][A
Calculating viewed counts for every point:  10%|▉         | 46/477 [00:00<00:01, 223.97it/s][A
Calculating viewed counts for every point:  15%|█▌        | 73/477 [00:00<00:01, 242.95it/s][A
Calculating viewed counts for every point:  21%|██        | 98/477 [00:00<00:01, 231.91it/s][A
Calculating viewed counts for every point:  26%|██▌       | 122/477 [00:00<00:01, 230.52it/s][A
Calculating viewed counts for every point:  31%|███       | 147/477 [00:00<00:01, 235.09it/s][A
Calculating viewed counts for every point:  36%|███▌      | 171/477 [00:00<00:01, 222.92it/s][A
Calculating viewed counts for every point:  41%|████      | 195/477 [00:00<00:01, 226.46it/s][A
Calculating viewed counts for every point:  46%|████▌     | 218/477 [00:00<00:01, 218.74it/s][A
Calculating viewed counts for every point:  51%|█████     | 241/477 [00:01<00:01, 219.99it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 266/477 [00:01<00:00, 228.18it/s][A
Calculating viewed counts for every point:  61%|██████    | 289/477 [00:01<00:00, 220.07it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 312/477 [00:01<00:00, 219.66it/s][A
Calculating viewed counts for every point:  70%|███████   | 335/477 [00:01<00:00, 218.87it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 357/477 [00:01<00:00, 217.30it/s][A
Calculating viewed counts for every point:  80%|████████  | 382/477 [00:01<00:00, 225.13it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 405/477 [00:01<00:00, 218.60it/s][A
Calculating viewed counts for every point:  90%|█████████ | 430/477 [00:01<00:00, 227.25it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 455/477 [00:02<00:00, 230.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [01:22<01:01,  1.33s/it]detected_ratio_thres_value tensor(0.0750, device='cuda:0')
final masked points tensor(9146, device='cuda:0')
before filtering torch.Size([5, 158047])
after filtering torch.Size([3, 158047])
num_ins_points_after_filtering tensor([ 603, 1960, 4573], device='cuda:0')
Working on scene0583_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 54], [19, 49], [45, 47, 48]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 238.18it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/198 [00:00<00:00, 231.12it/s][A
Calculating viewed counts for every point:  38%|███▊      | 75/198 [00:00<00:00, 245.66it/s][A
Calculating viewed counts for every point:  51%|█████     | 100/198 [00:00<00:00, 236.14it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 124/198 [00:00<00:00, 233.13it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 148/198 [00:00<00:00, 228.18it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 171/198 [00:00<00:00, 226.90it/s][A
Calculating viewed counts for every point: 100%|██████████| 198/198 [00:00<00:00, 237.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [01:23<01:02,  1.39s/it]detected_ratio_thres_value tensor(0.4211, device='cuda:0')
final masked points tensor(1816, device='cuda:0')
before filtering torch.Size([3, 146782])
after filtering torch.Size([1, 146782])
num_ins_points_after_filtering tensor([1756], device='cuda:0')
Working on scene0591_00 class copier
No 3d masks detected in backprojection!
Working on scene0593_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 32, 33, 34, 84, 85, 86], [20, 21], [22, 23, 24, 25, 26, 28, 76, 77, 78, 79, 80, 81, 82, 83], [27, 30], [35, 36, 37, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 70, 71, 72, 73, 74, 75], [53, 54, 55, 56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/230 [00:00<00:01, 176.17it/s][A
Calculating viewed counts for every point:  16%|█▌        | 37/230 [00:00<00:01, 181.77it/s][A
Calculating viewed counts for every point:  25%|██▌       | 58/230 [00:00<00:00, 190.51it/s][A
Calculating viewed counts for every point:  34%|███▍      | 78/230 [00:00<00:00, 166.13it/s][A
Calculating viewed counts for every point:  42%|████▏     | 96/230 [00:00<00:00, 164.11it/s][A
Calculating viewed counts for every point:  51%|█████     | 117/230 [00:00<00:00, 176.24it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 135/230 [00:00<00:00, 171.73it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 153/230 [00:00<00:00, 168.84it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 174/230 [00:00<00:00, 178.46it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 192/230 [00:01<00:00, 170.69it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 210/230 [00:01<00:00, 167.17it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 229/230 [00:01<00:00, 169.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [01:26<00:57,  1.34s/it]detected_ratio_thres_value tensor(0.2759, device='cuda:0')
final masked points tensor(8554, device='cuda:0')
before filtering torch.Size([7, 211902])
after filtering torch.Size([5, 211902])
num_ins_points_after_filtering tensor([2560, 1448,  999,  879, 2474], device='cuda:0')
Working on scene0595_00 class copier
masks_to_be_merged [[0, 47], [1, 2, 4, 6, 8, 11, 13, 15, 17, 19, 21, 38, 41, 43, 46], [3, 5, 7, 9, 10, 12, 14, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 23/76 [00:00<00:00, 224.81it/s][A
Calculating viewed counts for every point:  61%|██████    | 46/76 [00:00<00:00, 221.45it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 72/76 [00:00<00:00, 238.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [01:27<00:51,  1.23s/it]detected_ratio_thres_value tensor(0.5455, device='cuda:0')
final masked points tensor(11653, device='cuda:0')
before filtering torch.Size([3, 142330])
after filtering torch.Size([2, 142330])
num_ins_points_after_filtering tensor([2890, 8763], device='cuda:0')
Working on scene0598_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 21/101 [00:00<00:00, 206.94it/s][A
Calculating viewed counts for every point:  43%|████▎     | 43/101 [00:00<00:00, 213.99it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 70/101 [00:00<00:00, 237.93it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 97/101 [00:00<00:00, 246.68it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [01:27<00:43,  1.07s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(727, device='cuda:0')
before filtering torch.Size([1, 145562])
after filtering torch.Size([1, 145562])
num_ins_points_after_filtering tensor([709], device='cuda:0')
Working on scene0599_00 class copier
masks_to_be_merged [[0, 1, 18, 19], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/189 [00:00<00:00, 246.32it/s][A
Calculating viewed counts for every point:  26%|██▋       | 50/189 [00:00<00:00, 215.71it/s][A
Calculating viewed counts for every point:  41%|████      | 77/189 [00:00<00:00, 236.53it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 101/189 [00:00<00:00, 227.86it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 127/189 [00:00<00:00, 234.23it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 151/189 [00:00<00:00, 230.84it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 175/189 [00:00<00:00, 218.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [01:29<00:45,  1.13s/it]detected_ratio_thres_value tensor(0.2286, device='cuda:0')
final masked points tensor(1582, device='cuda:0')
before filtering torch.Size([2, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([1578], device='cuda:0')
Working on scene0606_00 class copier
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 23/250 [00:00<00:01, 226.48it/s][A
Calculating viewed counts for every point:  18%|█▊        | 46/250 [00:00<00:00, 219.66it/s][A
Calculating viewed counts for every point:  28%|██▊       | 71/250 [00:00<00:00, 230.23it/s][A
Calculating viewed counts for every point:  38%|███▊      | 95/250 [00:00<00:00, 217.10it/s][A
Calculating viewed counts for every point:  47%|████▋     | 117/250 [00:00<00:00, 204.77it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 138/250 [00:00<00:00, 204.89it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 159/250 [00:00<00:00, 195.43it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 180/250 [00:00<00:00, 197.56it/s][A
Calculating viewed counts for every point:  81%|████████  | 203/250 [00:00<00:00, 205.67it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 224/250 [00:01<00:00, 202.23it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 245/250 [00:01<00:00, 204.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [01:30<00:45,  1.16s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(107, device='cuda:0')
before filtering torch.Size([1, 164401])
after filtering torch.Size([1, 164401])
num_ins_points_after_filtering tensor([107], device='cuda:0')
Working on scene0607_00 class copier
masks_to_be_merged [[1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 18/100 [00:00<00:00, 179.03it/s][A
Calculating viewed counts for every point:  43%|████▎     | 43/100 [00:00<00:00, 219.53it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 69/100 [00:00<00:00, 234.45it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 93/100 [00:00<00:00, 230.51it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [01:30<00:38,  1.00s/it]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(403, device='cuda:0')
before filtering torch.Size([1, 113156])
after filtering torch.Size([1, 113156])
num_ins_points_after_filtering tensor([403], device='cuda:0')
Working on scene0608_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 22/339 [00:00<00:01, 210.42it/s][A
Calculating viewed counts for every point:  13%|█▎        | 44/339 [00:00<00:01, 194.25it/s][A
Calculating viewed counts for every point:  20%|██        | 68/339 [00:00<00:01, 210.45it/s][A
Calculating viewed counts for every point:  27%|██▋       | 90/339 [00:00<00:01, 200.42it/s][A
Calculating viewed counts for every point:  33%|███▎      | 112/339 [00:00<00:01, 205.43it/s][A
Calculating viewed counts for every point:  39%|███▉      | 133/339 [00:00<00:01, 205.55it/s][A
Calculating viewed counts for every point:  45%|████▌     | 154/339 [00:00<00:00, 193.47it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 175/339 [00:00<00:00, 197.22it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 195/339 [00:00<00:00, 194.75it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 215/339 [00:01<00:00, 193.19it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 237/339 [00:01<00:00, 199.45it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 258/339 [00:01<00:00, 197.08it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 281/339 [00:01<00:00, 199.21it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 303/339 [00:01<00:00, 203.82it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 324/339 [00:01<00:00, 193.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [01:32<00:47,  1.28s/it]Projecting 2d masks to 3d point cloud:  75%|███████▍  | 106/142 [01:33<00:34,  1.05it/s]detected_ratio_thres_value tensor(0.1707, device='cuda:0')
final masked points tensor(4383, device='cuda:0')
before filtering torch.Size([1, 186579])
after filtering torch.Size([1, 186579])
num_ins_points_after_filtering tensor([4383], device='cuda:0')
Working on scene0609_00 class copier
No 3d masks detected in backprojection!
Working on scene0616_00 class copier
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 108.48it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:02, 105.75it/s][A
Calculating viewed counts for every point:  11%|█         | 34/304 [00:00<00:02, 110.92it/s][A
Calculating viewed counts for every point:  15%|█▌        | 46/304 [00:00<00:02, 111.99it/s][A
Calculating viewed counts for every point:  19%|█▉        | 58/304 [00:00<00:02, 106.52it/s][A
Calculating viewed counts for every point:  23%|██▎       | 70/304 [00:00<00:02, 107.68it/s][A
Calculating viewed counts for every point:  27%|██▋       | 81/304 [00:00<00:02, 104.36it/s][A
Calculating viewed counts for every point:  30%|███       | 92/304 [00:00<00:02, 105.70it/s][A
Calculating viewed counts for every point:  34%|███▍      | 104/304 [00:00<00:01, 108.83it/s][A
Calculating viewed counts for every point:  38%|███▊      | 115/304 [00:01<00:01, 103.01it/s][A
Calculating viewed counts for every point:  42%|████▏     | 127/304 [00:01<00:01, 105.73it/s][A
Calculating viewed counts for every point:  46%|████▌     | 140/304 [00:01<00:01, 110.41it/s][A
Calculating viewed counts for every point:  50%|█████     | 152/304 [00:01<00:01, 112.01it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 164/304 [00:01<00:01, 109.75it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 176/304 [00:01<00:01, 112.12it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 189/304 [00:01<00:01, 114.94it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 201/304 [00:01<00:00, 113.70it/s][A
Calculating viewed counts for every point:  70%|███████   | 213/304 [00:01<00:00, 114.86it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 225/304 [00:02<00:00, 112.03it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 237/304 [00:02<00:00, 111.63it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 250/304 [00:02<00:00, 115.72it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 262/304 [00:02<00:00, 112.02it/s][A
Calculating viewed counts for every point:  90%|█████████ | 274/304 [00:02<00:00, 111.93it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 286/304 [00:02<00:00, 108.33it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 297/304 [00:02<00:00, 108.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [01:36<00:54,  1.55s/it]Projecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [01:36<00:38,  1.12s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(1185, device='cuda:0')
before filtering torch.Size([1, 310248])
after filtering torch.Size([1, 310248])
num_ins_points_after_filtering tensor([1184], device='cuda:0')
Working on scene0618_00 class copier
No 3d masks detected in backprojection!
Working on scene0621_00 class copier
No 3d masks detected in backprojection!
Working on scene0629_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [16, 17]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/275 [00:00<00:01, 144.03it/s][A
Calculating viewed counts for every point:  11%|█         | 30/275 [00:00<00:01, 138.96it/s][A
Calculating viewed counts for every point:  17%|█▋        | 47/275 [00:00<00:01, 151.65it/s][A
Calculating viewed counts for every point:  23%|██▎       | 63/275 [00:00<00:01, 151.06it/s][A
Calculating viewed counts for every point:  29%|██▉       | 80/275 [00:00<00:01, 154.24it/s][A
Calculating viewed counts for every point:  35%|███▍      | 96/275 [00:00<00:01, 155.17it/s][A
Calculating viewed counts for every point:  41%|████      | 112/275 [00:00<00:01, 155.54it/s][A
Calculating viewed counts for every point:  47%|████▋     | 128/275 [00:00<00:00, 155.82it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 144/275 [00:00<00:00, 153.70it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 160/275 [00:01<00:00, 150.11it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 176/275 [00:01<00:00, 151.24it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 192/275 [00:01<00:00, 146.43it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 207/275 [00:01<00:00, 145.89it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 224/275 [00:01<00:00, 151.83it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 240/275 [00:01<00:00, 150.57it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 256/275 [00:01<00:00, 149.85it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 273/275 [00:01<00:00, 153.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [01:38<00:34,  1.08s/it]detected_ratio_thres_value tensor(0.1842, device='cuda:0')
final masked points tensor(4118, device='cuda:0')
before filtering torch.Size([2, 255083])
after filtering torch.Size([1, 255083])
num_ins_points_after_filtering tensor([4116], device='cuda:0')
Working on scene0633_00 class copier
masks_to_be_merged [[0, 1], [2, 3, 4], [5, 6]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 26/160 [00:00<00:00, 254.87it/s][A
Calculating viewed counts for every point:  33%|███▎      | 53/160 [00:00<00:00, 255.39it/s][A
Calculating viewed counts for every point:  52%|█████▎    | 84/160 [00:00<00:00, 277.96it/s][A
Calculating viewed counts for every point:  70%|███████   | 112/160 [00:00<00:00, 272.55it/s][A
Calculating viewed counts for every point:  90%|█████████ | 144/160 [00:00<00:00, 286.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [01:38<00:31,  1.01s/it]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(8633, device='cuda:0')
before filtering torch.Size([3, 101007])
after filtering torch.Size([3, 101007])
num_ins_points_after_filtering tensor([1546, 3803, 1147], device='cuda:0')
Working on scene0643_00 class copier
masks_to_be_merged [[2, 6], [3, 8, 10], [4, 5], [11, 12], [16, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/194 [00:00<00:01, 174.33it/s][A
Calculating viewed counts for every point:  19%|█▊        | 36/194 [00:00<00:00, 168.22it/s][A
Calculating viewed counts for every point:  29%|██▉       | 56/194 [00:00<00:00, 181.51it/s][A
Calculating viewed counts for every point:  39%|███▊      | 75/194 [00:00<00:00, 173.29it/s][A
Calculating viewed counts for every point:  48%|████▊     | 93/194 [00:00<00:00, 166.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 112/194 [00:00<00:00, 172.15it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 130/194 [00:00<00:00, 170.17it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 148/194 [00:00<00:00, 172.89it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 166/194 [00:00<00:00, 172.22it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 184/194 [00:01<00:00, 164.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [01:40<00:33,  1.12s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(3488, device='cuda:0')
before filtering torch.Size([5, 167360])
after filtering torch.Size([5, 167360])
num_ins_points_after_filtering tensor([  21,   77,   25,  844, 1088], device='cuda:0')
Working on scene0644_00 class copier
No 3d masks detected in backprojection!
Working on scene0645_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [20, 21, 22, 23, 24, 25, 26, 27], [30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 104.94it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 101.10it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/451 [00:00<00:04, 100.93it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/451 [00:00<00:03, 103.81it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/451 [00:00<00:03, 102.51it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/451 [00:00<00:03, 103.68it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/451 [00:00<00:03, 103.28it/s][A
Calculating viewed counts for every point:  20%|█▉        | 88/451 [00:00<00:03, 98.58it/s] [A
Calculating viewed counts for every point:  22%|██▏       | 98/451 [00:00<00:03, 97.07it/s][A
Calculating viewed counts for every point:  24%|██▍       | 109/451 [00:01<00:03, 99.48it/s][A
Calculating viewed counts for every point:  26%|██▋       | 119/451 [00:01<00:03, 97.50it/s][A
Calculating viewed counts for every point:  29%|██▉       | 130/451 [00:01<00:03, 99.38it/s][A
Calculating viewed counts for every point:  31%|███       | 140/451 [00:01<00:03, 97.16it/s][A
Calculating viewed counts for every point:  33%|███▎      | 151/451 [00:01<00:03, 98.04it/s][A
Calculating viewed counts for every point:  36%|███▌      | 162/451 [00:01<00:02, 99.11it/s][A
Calculating viewed counts for every point:  38%|███▊      | 172/451 [00:01<00:02, 95.89it/s][A
Calculating viewed counts for every point:  40%|████      | 182/451 [00:01<00:02, 96.00it/s][A
Calculating viewed counts for every point:  43%|████▎     | 193/451 [00:01<00:02, 98.36it/s][A
Calculating viewed counts for every point:  45%|████▌     | 205/451 [00:02<00:02, 102.16it/s][A
Calculating viewed counts for every point:  48%|████▊     | 217/451 [00:02<00:02, 104.99it/s][A
Calculating viewed counts for every point:  51%|█████     | 228/451 [00:02<00:02, 101.87it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 239/451 [00:02<00:02, 101.86it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 251/451 [00:02<00:01, 105.38it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 262/451 [00:02<00:01, 102.88it/s][A
Calculating viewed counts for every point:  61%|██████    | 273/451 [00:02<00:01, 98.62it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 283/451 [00:02<00:01, 97.42it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 293/451 [00:02<00:01, 96.36it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 303/451 [00:03<00:01, 96.54it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 314/451 [00:03<00:01, 100.12it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 325/451 [00:03<00:01, 101.48it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 337/451 [00:03<00:01, 106.61it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 349/451 [00:03<00:00, 109.61it/s][A
Calculating viewed counts for every point:  80%|████████  | 361/451 [00:03<00:00, 110.01it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 374/451 [00:03<00:00, 112.74it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 386/451 [00:03<00:00, 111.55it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 398/451 [00:03<00:00, 108.08it/s][A
Calculating viewed counts for every point:  91%|█████████ | 411/451 [00:04<00:00, 112.08it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 423/451 [00:04<00:00, 109.08it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 434/451 [00:04<00:00, 105.34it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 445/451 [00:04<00:00, 103.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [01:45<00:50,  1.81s/it]detected_ratio_thres_value tensor(0.1923, device='cuda:0')
final masked points tensor(3003, device='cuda:0')
before filtering torch.Size([3, 352477])
after filtering torch.Size([2, 352477])
num_ins_points_after_filtering tensor([ 791, 1726], device='cuda:0')
Working on scene0647_00 class copier
No 3d masks detected in backprojection!
Working on scene0648_00 class copier
masks_to_be_merged [[1, 2, 3], [4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 21/419 [00:00<00:01, 207.23it/s][A
Calculating viewed counts for every point:  11%|█         | 44/419 [00:00<00:01, 213.46it/s][A
Calculating viewed counts for every point:  16%|█▌        | 67/419 [00:00<00:01, 220.44it/s][A
Calculating viewed counts for every point:  21%|██▏       | 90/419 [00:00<00:01, 198.92it/s][A
Calculating viewed counts for every point:  27%|██▋       | 115/419 [00:00<00:01, 209.20it/s][A
Calculating viewed counts for every point:  33%|███▎      | 137/419 [00:00<00:01, 206.92it/s][A
Calculating viewed counts for every point:  38%|███▊      | 158/419 [00:00<00:01, 204.97it/s][A
Calculating viewed counts for every point:  43%|████▎     | 181/419 [00:00<00:01, 210.77it/s][A
Calculating viewed counts for every point:  48%|████▊     | 203/419 [00:00<00:01, 204.75it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 224/419 [00:01<00:00, 204.71it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 249/419 [00:01<00:00, 215.71it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 271/419 [00:01<00:00, 211.11it/s][A
Calculating viewed counts for every point:  70%|███████   | 295/419 [00:01<00:00, 216.85it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 317/419 [00:01<00:00, 215.94it/s][A
Calculating viewed counts for every point:  81%|████████  | 339/419 [00:01<00:00, 209.24it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 363/419 [00:01<00:00, 216.04it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 385/419 [00:01<00:00, 215.31it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 407/419 [00:01<00:00, 214.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [01:48<00:40,  1.54s/it]detected_ratio_thres_value tensor(0.0455, device='cuda:0')
final masked points tensor(1729, device='cuda:0')
before filtering torch.Size([2, 167915])
after filtering torch.Size([2, 167915])
num_ins_points_after_filtering tensor([1150,  358], device='cuda:0')
Working on scene0651_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 24/104 [00:00<00:00, 235.08it/s][A
Calculating viewed counts for every point:  46%|████▌     | 48/104 [00:00<00:00, 219.06it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 72/104 [00:00<00:00, 225.97it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 95/104 [00:00<00:00, 207.62it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [01:48<00:33,  1.34s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(1715, device='cuda:0')
before filtering torch.Size([1, 88450])
after filtering torch.Size([1, 88450])
num_ins_points_after_filtering tensor([1715], device='cuda:0')
Working on scene0652_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/144 [00:00<00:00, 258.21it/s][A
Calculating viewed counts for every point:  37%|███▋      | 53/144 [00:00<00:00, 262.75it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 85/144 [00:00<00:00, 287.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 114/144 [00:00<00:00, 277.11it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 142/144 [00:00<00:00, 267.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [01:49<00:28,  1.20s/it]detected_ratio_thres_value tensor(0.1552, device='cuda:0')
final masked points tensor(1815, device='cuda:0')
before filtering torch.Size([1, 100286])
after filtering torch.Size([1, 100286])
num_ins_points_after_filtering tensor([1550], device='cuda:0')
Working on scene0653_00 class copier
masks_to_be_merged [[0, 10, 12, 14, 16, 19, 23], [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21], [22, 26, 27, 28, 29, 30], [24, 25], [31, 32]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 138.99it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/388 [00:00<00:02, 127.22it/s][A
Calculating viewed counts for every point:  11%|█         | 42/388 [00:00<00:02, 131.64it/s][A
Calculating viewed counts for every point:  14%|█▍        | 56/388 [00:00<00:02, 128.83it/s][A
Calculating viewed counts for every point:  18%|█▊        | 70/388 [00:00<00:02, 129.89it/s][A
Calculating viewed counts for every point:  22%|██▏       | 84/388 [00:00<00:02, 129.20it/s][A
Calculating viewed counts for every point:  25%|██▌       | 97/388 [00:00<00:02, 126.34it/s][A
Calculating viewed counts for every point:  29%|██▊       | 111/388 [00:00<00:02, 129.92it/s][A
Calculating viewed counts for every point:  32%|███▏      | 125/388 [00:00<00:02, 131.01it/s][A
Calculating viewed counts for every point:  36%|███▌      | 139/388 [00:01<00:01, 128.77it/s][A
Calculating viewed counts for every point:  40%|███▉      | 154/388 [00:01<00:01, 133.08it/s][A
Calculating viewed counts for every point:  43%|████▎     | 168/388 [00:01<00:01, 133.53it/s][A
Calculating viewed counts for every point:  47%|████▋     | 183/388 [00:01<00:01, 135.65it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 199/388 [00:01<00:01, 140.90it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 214/388 [00:01<00:01, 140.88it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 229/388 [00:01<00:01, 136.79it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 245/388 [00:01<00:01, 141.70it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 260/388 [00:01<00:00, 139.27it/s][A
Calculating viewed counts for every point:  71%|███████   | 274/388 [00:02<00:00, 134.04it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 288/388 [00:02<00:00, 134.67it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 302/388 [00:02<00:00, 134.12it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 317/388 [00:02<00:00, 137.47it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 332/388 [00:02<00:00, 138.92it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 347/388 [00:02<00:00, 139.93it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 363/388 [00:02<00:00, 144.01it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 378/388 [00:02<00:00, 136.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [01:52<00:39,  1.74s/it]detected_ratio_thres_value tensor(0.1714, device='cuda:0')
final masked points tensor(3091, device='cuda:0')
before filtering torch.Size([5, 284951])
after filtering torch.Size([3, 284951])
num_ins_points_after_filtering tensor([ 448, 1222, 1308], device='cuda:0')
Working on scene0655_00 class copier
No 3d masks detected in backprojection!
Working on scene0658_00 class copier
No 3d masks detected in backprojection!
Working on scene0660_00 class copier
No 3d masks detected in backprojection!
Working on scene0663_00 class copier
No 3d masks detected in backprojection!
Working on scene0664_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▋       | 38/144 [00:00<00:00, 378.70it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 77/144 [00:00<00:00, 384.20it/s][A
Calculating viewed counts for every point:  81%|████████  | 116/144 [00:00<00:00, 318.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [01:53<00:13,  1.30it/s]detected_ratio_thres_value tensor(0.2407, device='cuda:0')
final masked points tensor(3805, device='cuda:0')
before filtering torch.Size([3, 44585])
after filtering torch.Size([2, 44585])
num_ins_points_after_filtering tensor([1444, 2352], device='cuda:0')
Working on scene0665_00 class copier
No 3d masks detected in backprojection!
Working on scene0670_00 class copier
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 23, 24, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66], [2, 9, 14, 16, 17, 19, 61], [20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 67, 68], [37, 38, 39], [40, 41, 42, 43, 44, 45, 56, 57, 58, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 24/303 [00:00<00:01, 235.63it/s][A
Calculating viewed counts for every point:  16%|█▌        | 48/303 [00:00<00:01, 203.29it/s][A
Calculating viewed counts for every point:  23%|██▎       | 69/303 [00:00<00:01, 199.04it/s][A
Calculating viewed counts for every point:  31%|███       | 93/303 [00:00<00:00, 213.28it/s][A
Calculating viewed counts for every point:  38%|███▊      | 115/303 [00:00<00:00, 211.66it/s][A
Calculating viewed counts for every point:  46%|████▌     | 139/303 [00:00<00:00, 217.10it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 161/303 [00:00<00:00, 214.72it/s][A
Calculating viewed counts for every point:  60%|██████    | 183/303 [00:00<00:00, 206.07it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 206/303 [00:00<00:00, 212.10it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 228/303 [00:01<00:00, 208.78it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 249/303 [00:01<00:00, 200.92it/s][A
Calculating viewed counts for every point:  90%|█████████ | 274/303 [00:01<00:00, 212.40it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 296/303 [00:01<00:00, 209.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [01:56<00:14,  1.14it/s]detected_ratio_thres_value tensor(0.1837, device='cuda:0')
final masked points tensor(5007, device='cuda:0')
before filtering torch.Size([5, 176038])
after filtering torch.Size([3, 176038])
num_ins_points_after_filtering tensor([ 537, 4156,  298], device='cuda:0')
Working on scene0671_00 class copier
No 3d masks detected in backprojection!
Working on scene0678_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 53, 54, 55, 56, 57, 58], [18, 19, 20, 21, 22, 23, 24, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74], [25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 45, 48, 50, 51, 52, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], [32, 34, 36, 39, 44, 46, 49], [37, 40, 42, 47], [64, 68]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 11/245 [00:00<00:02, 101.11it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/245 [00:00<00:02, 94.90it/s] [A
Calculating viewed counts for every point:  13%|█▎        | 32/245 [00:00<00:02, 89.75it/s][A
Calculating viewed counts for every point:  17%|█▋        | 42/245 [00:00<00:02, 91.10it/s][A
Calculating viewed counts for every point:  21%|██        | 52/245 [00:00<00:02, 92.33it/s][A
Calculating viewed counts for every point:  26%|██▌       | 63/245 [00:00<00:01, 95.42it/s][A
Calculating viewed counts for every point:  30%|███       | 74/245 [00:00<00:01, 97.85it/s][A
Calculating viewed counts for every point:  34%|███▍      | 84/245 [00:00<00:01, 95.38it/s][A
Calculating viewed counts for every point:  38%|███▊      | 94/245 [00:00<00:01, 96.37it/s][A
Calculating viewed counts for every point:  42%|████▏     | 104/245 [00:01<00:01, 94.86it/s][A
Calculating viewed counts for every point:  47%|████▋     | 114/245 [00:01<00:01, 90.72it/s][A
Calculating viewed counts for every point:  51%|█████     | 125/245 [00:01<00:01, 93.54it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 135/245 [00:01<00:01, 95.23it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 145/245 [00:01<00:01, 92.17it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 156/245 [00:01<00:00, 95.80it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 167/245 [00:01<00:00, 98.18it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 177/245 [00:01<00:00, 94.23it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 188/245 [00:01<00:00, 96.33it/s][A
Calculating viewed counts for every point:  81%|████████  | 198/245 [00:02<00:00, 96.91it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 208/245 [00:02<00:00, 97.19it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 218/245 [00:02<00:00, 96.00it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 229/245 [00:02<00:00, 98.39it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 239/245 [00:02<00:00, 97.52it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [02:00<00:16,  1.20s/it]detected_ratio_thres_value tensor(0.3611, device='cuda:0')
final masked points tensor(16971, device='cuda:0')
before filtering torch.Size([6, 364811])
after filtering torch.Size([2, 364811])
num_ins_points_after_filtering tensor([4162, 5954], device='cuda:0')
Working on scene0684_00 class copier
masks_to_be_merged [[0, 1, 10, 11, 12, 13], [3, 4, 5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 35/87 [00:00<00:00, 342.07it/s][A
Calculating viewed counts for every point:  80%|████████  | 70/87 [00:00<00:00, 324.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [02:00<00:13,  1.08s/it]detected_ratio_thres_value tensor(0.1500, device='cuda:0')
final masked points tensor(1314, device='cuda:0')
before filtering torch.Size([2, 41364])
after filtering torch.Size([1, 41364])
num_ins_points_after_filtering tensor([907], device='cuda:0')
Working on scene0685_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [44, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 31/196 [00:00<00:00, 300.29it/s][A
Calculating viewed counts for every point:  32%|███▏      | 62/196 [00:00<00:00, 254.15it/s][A
Calculating viewed counts for every point:  45%|████▍     | 88/196 [00:00<00:00, 249.01it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 114/196 [00:00<00:00, 238.15it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 143/196 [00:00<00:00, 252.82it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 169/196 [00:00<00:00, 251.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [02:02<00:14,  1.19s/it]detected_ratio_thres_value tensor(0.3514, device='cuda:0')
final masked points tensor(13490, device='cuda:0')
before filtering torch.Size([3, 132720])
after filtering torch.Size([2, 132720])
num_ins_points_after_filtering tensor([3321, 9300], device='cuda:0')
Working on scene0686_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [14, 15, 16, 17], [18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 21/153 [00:00<00:00, 201.40it/s][A
Calculating viewed counts for every point:  28%|██▊       | 43/153 [00:00<00:00, 207.95it/s][A
Calculating viewed counts for every point:  44%|████▍     | 67/153 [00:00<00:00, 219.56it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 89/153 [00:00<00:00, 218.17it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 111/153 [00:00<00:00, 218.01it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 133/153 [00:00<00:00, 217.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [02:03<00:13,  1.20s/it]detected_ratio_thres_value tensor(0.3103, device='cuda:0')
final masked points tensor(1438, device='cuda:0')
before filtering torch.Size([3, 89776])
after filtering torch.Size([1, 89776])
num_ins_points_after_filtering tensor([1278], device='cuda:0')
Working on scene0689_00 class copier
No 3d masks detected in backprojection!
Working on scene0690_00 class copier
No 3d masks detected in backprojection!
Working on scene0693_00 class copier
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60], [43, 44], [54, 55, 56]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 39/174 [00:00<00:00, 387.20it/s][A
Calculating viewed counts for every point:  45%|████▍     | 78/174 [00:00<00:00, 361.06it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 115/174 [00:00<00:00, 331.17it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 149/174 [00:00<00:00, 331.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [02:04<00:06,  1.24it/s]detected_ratio_thres_value tensor(0.2969, device='cuda:0')
final masked points tensor(1478, device='cuda:0')
before filtering torch.Size([3, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([1413], device='cuda:0')
Working on scene0695_00 class copier
masks_to_be_merged [[0, 1], [2, 3, 4, 6]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 27/182 [00:00<00:00, 266.06it/s][A
Calculating viewed counts for every point:  31%|███       | 56/182 [00:00<00:00, 273.29it/s][A
Calculating viewed counts for every point:  46%|████▌     | 84/182 [00:00<00:00, 267.84it/s][A
Calculating viewed counts for every point:  61%|██████    | 111/182 [00:00<00:00, 259.77it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 140/182 [00:00<00:00, 267.59it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 167/182 [00:00<00:00, 264.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [02:05<00:05,  1.23it/s]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(3017, device='cuda:0')
before filtering torch.Size([2, 133418])
after filtering torch.Size([2, 133418])
num_ins_points_after_filtering tensor([ 294, 2490], device='cuda:0')
Working on scene0696_00 class copier
No 3d masks detected in backprojection!
Working on scene0697_00 class copier
masks_to_be_merged [[0, 5], [3, 4], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28], [21, 23], [29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 28/288 [00:00<00:00, 270.47it/s][A
Calculating viewed counts for every point:  19%|█▉        | 56/288 [00:00<00:00, 257.57it/s][A
Calculating viewed counts for every point:  28%|██▊       | 82/288 [00:00<00:00, 255.64it/s][A
Calculating viewed counts for every point:  38%|███▊      | 108/288 [00:00<00:00, 247.30it/s][A
Calculating viewed counts for every point:  47%|████▋     | 136/288 [00:00<00:00, 256.64it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 162/288 [00:00<00:00, 251.70it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 190/288 [00:00<00:00, 258.23it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 218/288 [00:00<00:00, 264.07it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 245/288 [00:00<00:00, 262.00it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 272/288 [00:01<00:00, 264.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [02:07<00:03,  1.26it/s]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(1988, device='cuda:0')
before filtering torch.Size([5, 139300])
after filtering torch.Size([2, 139300])
num_ins_points_after_filtering tensor([1753,  226], device='cuda:0')
Working on scene0699_00 class copier
masks_to_be_merged [[0, 1], [2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/220 [00:00<00:01, 165.74it/s][A
Calculating viewed counts for every point:  16%|█▌        | 35/220 [00:00<00:01, 169.00it/s][A
Calculating viewed counts for every point:  25%|██▌       | 55/220 [00:00<00:00, 181.64it/s][A
Calculating viewed counts for every point:  34%|███▎      | 74/220 [00:00<00:00, 181.52it/s][A
Calculating viewed counts for every point:  43%|████▎     | 94/220 [00:00<00:00, 182.42it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 113/220 [00:00<00:00, 182.00it/s][A
Calculating viewed counts for every point:  60%|██████    | 132/220 [00:00<00:00, 182.83it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 151/220 [00:00<00:00, 180.59it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 170/220 [00:00<00:00, 173.62it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 188/220 [00:01<00:00, 170.01it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 206/220 [00:01<00:00, 171.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [02:08<00:03,  1.11it/s]detected_ratio_thres_value tensor(0.0377, device='cuda:0')
final masked points tensor(1778, device='cuda:0')
before filtering torch.Size([2, 153041])
after filtering torch.Size([2, 153041])
num_ins_points_after_filtering tensor([ 398, 1380], device='cuda:0')
Working on scene0700_00 class copier
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 12, 13, 14], [7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 14/459 [00:00<00:03, 138.77it/s][A
Calculating viewed counts for every point:   7%|▋         | 31/459 [00:00<00:02, 150.92it/s][A
Calculating viewed counts for every point:  11%|█         | 49/459 [00:00<00:02, 163.36it/s][A
Calculating viewed counts for every point:  15%|█▍        | 67/459 [00:00<00:02, 167.46it/s][A
Calculating viewed counts for every point:  19%|█▉        | 87/459 [00:00<00:02, 177.64it/s][A
Calculating viewed counts for every point:  23%|██▎       | 106/459 [00:00<00:01, 179.04it/s][A
Calculating viewed counts for every point:  27%|██▋       | 124/459 [00:00<00:01, 177.43it/s][A
Calculating viewed counts for every point:  32%|███▏      | 145/459 [00:00<00:01, 185.42it/s][A
Calculating viewed counts for every point:  36%|███▌      | 164/459 [00:00<00:01, 184.14it/s][A
Calculating viewed counts for every point:  40%|███▉      | 183/459 [00:01<00:01, 184.22it/s][A
Calculating viewed counts for every point:  44%|████▍     | 202/459 [00:01<00:01, 178.26it/s][A
Calculating viewed counts for every point:  48%|████▊     | 222/459 [00:01<00:01, 183.50it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 241/459 [00:01<00:01, 183.57it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 260/459 [00:01<00:01, 175.31it/s][A
Calculating viewed counts for every point:  61%|██████    | 278/459 [00:01<00:01, 168.69it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 297/459 [00:01<00:00, 174.61it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 316/459 [00:01<00:00, 176.76it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 335/459 [00:01<00:00, 178.10it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 353/459 [00:02<00:00, 177.21it/s][A
Calculating viewed counts for every point:  81%|████████  | 371/459 [00:02<00:00, 167.65it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 389/459 [00:02<00:00, 169.38it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 407/459 [00:02<00:00, 167.73it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 426/459 [00:02<00:00, 171.17it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 444/459 [00:02<00:00, 169.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [02:11<00:04,  1.35s/it]detected_ratio_thres_value tensor(0.0847, device='cuda:0')
final masked points tensor(1394, device='cuda:0')
before filtering torch.Size([2, 167755])
after filtering torch.Size([2, 167755])
num_ins_points_after_filtering tensor([714, 406], device='cuda:0')
Working on scene0701_00 class copier
No 3d masks detected in backprojection!
Working on scene0702_00 class copier
masks_to_be_merged [[0, 1], [3, 4, 5, 6, 7, 8, 9, 11, 29], [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 33/84 [00:00<00:00, 323.23it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 66/84 [00:00<00:00, 309.12it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [02:12<00:00,  1.06it/s]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(2121, device='cuda:0')
before filtering torch.Size([3, 54769])
after filtering torch.Size([2, 54769])
num_ins_points_after_filtering tensor([1196,  682], device='cuda:0')
Working on scene0704_00 class copier
masks_to_be_merged [[0, 2, 3, 5, 7, 9, 11, 13, 15, 17, 23, 24, 27], [1, 4], [12, 16], [22, 25], [28, 29, 30, 32, 33, 34, 38, 39], [35, 36, 37], [44, 45, 46, 47, 48, 49], [52, 53], [56, 83, 84, 85, 86, 87], [57, 58], [62, 63, 64, 65, 66, 67], [68, 69], [70, 71, 72, 73, 74, 75, 76], [78, 79], [80, 81, 82], [88, 90], [92, 93]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/241 [00:00<00:01, 191.00it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/241 [00:00<00:01, 167.88it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/241 [00:00<00:01, 169.20it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/241 [00:00<00:00, 175.59it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 177.69it/s][A
Calculating viewed counts for every point:  49%|████▊     | 117/241 [00:00<00:00, 187.34it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 136/241 [00:00<00:00, 174.87it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 156/241 [00:00<00:00, 181.46it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 178/241 [00:00<00:00, 191.12it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 198/241 [00:01<00:00, 183.73it/s][A
Calculating viewed counts for every point:  90%|█████████ | 217/241 [00:01<00:00, 180.02it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 238/241 [00:01<00:00, 187.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [02:14<00:00,  1.29s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [02:14<00:00,  1.06it/s]
detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(18464, device='cuda:0')
before filtering torch.Size([17, 183029])
after filtering torch.Size([10, 183029])
num_ins_points_after_filtering tensor([2628,  342,  437,   61, 1809, 5863,  177,  730, 1799, 1596],
       device='cuda:0')
Processing class: copier
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<02:35,  1.10s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:17,  1.82it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<00:55,  2.49it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:46,  2.98it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:01<00:38,  3.58it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:37,  3.59it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:39,  3.38it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:02<00:30,  4.34it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:31,  4.19it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:29,  4.40it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:03<00:29,  4.43it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:03<00:29,  4.34it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:03<00:25,  5.08it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:27,  4.63it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:04<00:24,  5.17it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:04<00:25,  4.91it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:04<00:24,  5.03it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:04<00:26,  4.60it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:05<00:24,  4.92it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:05<00:27,  4.37it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:05<00:24,  4.82it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:05<00:24,  4.85it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:05<00:23,  5.07it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:28,  4.05it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:06<00:26,  4.34it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:06<00:22,  5.04it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:06<00:25,  4.56it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:07<00:30,  3.76it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:07<00:34,  3.27it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:07<00:32,  3.44it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:08<00:26,  4.10it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:08<00:28,  3.80it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:08<00:33,  3.25it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:09<00:33,  3.23it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:09<00:28,  3.77it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:09<00:25,  4.16it/s]DEBUG best_match_after_iou_check [tensor(3), tensor(188)]
DEBUG uniques tensor([  3, 188]) tensor([1, 1])
Matched 1 times with 3
Matched 1 times with 188
iou for matched labels tensor([0.3288, 0.2021])
Matched labels: ['refrigerator', 'oven']
Clip similarities: [0.74462890625, 0.7734375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(21)]
DEBUG uniques tensor([21]) tensor([1])
Matched 1 times with 21
iou for matched labels tensor([0.6930])
Matched labels: ['trash_can']
Clip similarities: [0.7294921875]
DEBUG best_match_after_iou_check [tensor(32)]
DEBUG uniques tensor([32]) tensor([1])
Matched 1 times with 32
iou for matched labels tensor([0.7095])
Matched labels: ['couch']
Clip similarities: [0.69189453125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(15)]
DEBUG uniques tensor([15]) tensor([1])
Matched 1 times with 15
iou for matched labels tensor([0.8278])
Matched labels: ['toilet']
Clip similarities: [0.74560546875]
DEBUG best_match_after_iou_check [tensor(130), tensor(53), tensor(47), tensor(106)]
DEBUG uniques tensor([ 47,  53, 106, 130]) tensor([1, 1, 1, 1])
Matched 1 times with 47
Matched 1 times with 53
Matched 1 times with 106
Matched 1 times with 130
iou for matched labels tensor([0.5635, 0.6864, 0.7537, 0.4014])
Matched labels: ['printer', 'monitor', 'bag', 'laptop']
Clip similarities: [0.85302734375, 0.7568359375, 0.73828125, 0.73681640625]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(46), tensor(16), tensor(10)]
DEBUG uniques tensor([10, 16, 46]) tensor([1, 1, 1])
Matched 1 times with 10
Matched 1 times with 16
Matched 1 times with 46
iou for matched labels tensor([0.6510, 0.5557, 0.4989])
Matched labels: ['copier', 'copier', 'copier']
Clip similarities: [1.0, 1.0, 1.0]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(7), tensor(24), tensor(22), tensor(3)]
DEBUG uniques tensor([ 3,  7, 22, 24]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 7
Matched 1 times with 22
Matched 1 times with 24
iou for matched labels tensor([0.6854, 0.5438, 0.3820, 0.7325])
Matched labels: ['bag', 'paper_towel_dispenser', 'toilet', 'radiator']
Clip similarities: [0.73828125, 0.66845703125, 0.74560546875, 0.67529296875]
DEBUG best_match_after_iou_check [tensor(0), tensor(85), tensor(46)]
DEBUG uniques tensor([ 0, 46, 85]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 46
Matched 1 times with 85
iou for matched labels tensor([0.3690, 0.5820, 0.2902])
Matched labels: ['paper_towel_dispenser', 'toilet', 'toilet']
Clip similarities: [0.66845703125, 0.74560546875, 0.74560546875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(98)]
DEBUG uniques tensor([98]) tensor([1])
Matched 1 times with 98
iou for matched labels tensor([0.5287])
Matched labels: ['file_cabinet']
Clip similarities: [0.74072265625]
DEBUG best_match_after_iou_check [tensor(2)]
DEBUG uniques tensor([2]) tensor([1])
Matched 1 times with 2
iou for matched labels tensor([0.7664])
Matched labels: ['toilet']
Clip similarities: [0.74560546875]
DEBUG best_match_after_iou_check [tensor(116)]
DEBUG uniques tensor([116]) tensor([1])
Matched 1 times with 116
iou for matched labels tensor([0.4934])
Matched labels: ['refrigerator']
Clip similarities: [0.74462890625]
DEBUG best_match_after_iou_check [tensor(55), tensor(32)]
DEBUG uniques tensor([32, 55]) tensor([1, 1])
Matched 1 times with 32
Matched 1 times with 55
iou for matched labels tensor([0.7061, 0.6426])
Matched labels: ['washing_machine', 'washing_machine']
Clip similarities: [0.71826171875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(6), tensor(9)]
DEBUG uniques tensor([6, 9]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 9
iou for matched labels tensor([0.0678, 0.2537])
Matched labels: ['bed', 'sofa_chair']
Clip similarities: [0.7099609375, 0.66357421875]
DEBUG best_match_after_iou_check [tensor(33), tensor(22)]
DEBUG uniques tensor([22, 33]) tensor([1, 1])
Matched 1 times with 22
Matched 1 times with 33
iou for matched labels tensor([0.7591, 0.7021])
Matched labels: ['toilet', 'backpack']
Clip similarities: [0.74560546875, 0.67822265625]
DEBUG best_match_after_iou_check [tensor(1), tensor(162), tensor(46), tensor(135)]
DEBUG uniques tensor([  1,  46, 135, 162]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 46
Matched 1 times with 135
Matched 1 times with 162
iou for matched labels tensor([0.8261, 0.6870, 0.5243, 0.2490])
Matched labels: ['microwave', 'cart', 'oven', 'shoe']
Clip similarities: [0.75830078125, 0.75439453125, 0.7734375, 0.744140625]
DEBUG best_match_after_iou_check [tensor(38), tensor(90), tensor(109)]
DEBUG uniques tensor([ 38,  90, 109]) tensor([1, 1, 1])
Matched 1 times with 38
Matched 1 times with 90
Matched 1 times with 109
iou for matched labels tensor([0.8562, 0.4915, 0.8133])
Matched labels: ['toilet', 'curtain', 'scale']
Clip similarities: [0.74560546875, 0.65966796875, 0.72509765625]
DEBUG best_match_after_iou_check [tensor(8), tensor(14), tensor(0), tensor(114), tensor(18)]
DEBUG uniques tensor([  0,   8,  14,  18, 114]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 8
Matched 1 times with 14
Matched 1 times with 18
Matched 1 times with 114
iou for matched labels tensor([0.4281, 0.8200, 0.6395, 0.7898, 0.6410])
Matched labels: ['bag', 'coffee_maker', 'dishwasher', 'soap_dispenser', 'refrigerator']
Clip similarities: [0.73828125, 0.701171875, 0.68408203125, 0.6259765625, 0.74462890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(76)]
DEBUG uniques tensor([76]) tensor([1])
Matched 1 times with 76
iou for matched labels tensor([0.4890])
Matched labels: ['bag']
Clip similarities: [0.73828125]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(106)]
DEBUG uniques tensor([106]) tensor([1])
Matched 1 times with 106
iou for matched labels tensor([0.6921])
Matched labels: ['sofa_chair']
Clip similarities: [0.66357421875]
DEBUG best_match_after_iou_check [tensor(172), tensor(227), tensor(197), tensor(18)]
DEBUG uniques tensor([ 18, 172, 197, 227]) tensor([1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 172
Matched 1 times with 197
Matched 1 times with 227
iou for matched labels tensor([0.5897, 0.3360, 0.3585, 0.6025])
Matched labels: ['printer', 'kitchen_counter', 'bag', 'toilet']
Clip similarities: [0.85302734375, 0.64794921875, 0.73828125, 0.74560546875]
DEBUG best_match_after_iou_check [tensor(123)]
DEBUG uniques tensor([123]) tensor([1])
Matched 1 times with 123
iou for matched labels tensor([0.3793])
Matched labels: ['bookshelf']
Clip similarities: [0.708984375]
DEBUG best_match_after_iou_check [tensor(96), tensor(81)]
DEBUG uniques tensor([81, 96]) tensor([1, 1])
Matched 1 times with 81
Matched 1 times with 96
iou for matched labels tensor([0.5446, 0.6140])
Matched labels: ['office_chair', 'bag']
Clip similarities: [0.69580078125, 0.73828125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(184), tensor(46)]
DEBUG uniques tensor([ 46, 184]) tensor([1, 1])
Matched 1 times with 46
Matched 1 times with 184
iou for matched labels tensor([0.5394, 0.7057])
Matched labels: ['refrigerator', 'refrigerator']
Clip similarities: [0.74462890625, 0.74462890625]
DEBUG best_match_after_iou_check [tensor(119)]
DEBUG uniques tensor([119]) tensor([1])
Matched 1 times with 119
iou for matched labels tensor([0.6798])
Matched labels: ['monitor']
Clip similarities: [0.7568359375]
DEBUG best_match_after_iou_check [tensor(14), tensor(13), tensor(55), tensor(118), tensor(236)]
DEBUG uniques tensor([ 13,  14,  55, 118, 236]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 14
Matched 1 times with 55
Matched 1 times with 118
Matched 1 times with 236
iou for matched labels tensor([0.5407, 0.7702, 0.7112, 0.5886, 0.5070])
Matched labels: ['lamp', 'toilet', 'towel', 'shower_curtain_rod', 'sink']
Clip similarities: [0.74267578125, 0.74560546875, 0.6416015625, 0.513671875, 0.7177734375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(232)]
DEBUG uniques tensor([232]) tensor([1])
Matched 1 times with 232
iou for matched labels tensor([0.4667])
Select thresholds for refinement:  27%|██▋       | 38/142 [00:09<00:24,  4.30it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:09<00:24,  4.29it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:10<00:22,  4.46it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:10<00:22,  4.51it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:10<00:23,  4.17it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:10<00:26,  3.72it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:11<00:30,  3.18it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:11<00:25,  3.84it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:11<00:24,  3.88it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:11<00:23,  3.99it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:12<00:22,  4.11it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:12<00:21,  4.24it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:12<00:22,  4.07it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:12<00:18,  4.91it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:12<00:17,  5.24it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:13<00:15,  5.70it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:13<00:14,  6.15it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:13<00:13,  6.33it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:13<00:13,  6.18it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:13<00:14,  5.79it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:13<00:13,  6.16it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:14<00:12,  6.49it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:14<00:14,  5.49it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:14<00:14,  5.45it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:14<00:18,  4.25it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:14<00:16,  4.72it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:15<00:17,  4.43it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:15<00:16,  4.70it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:15<00:17,  4.25it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:15<00:17,  4.29it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:16<00:16,  4.38it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:16<00:15,  4.86it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:16<00:14,  4.81it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:16<00:13,  5.14it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:16<00:12,  5.55it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:17<00:11,  5.71it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:17<00:14,  4.64it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:17<00:13,  5.02it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:17<00:15,  4.27it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:18<00:13,  4.72it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:18<00:12,  4.89it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:18<00:11,  5.28it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:18<00:11,  5.24it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:18<00:12,  4.71it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:19<00:11,  5.33it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:19<00:09,  5.96it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:19<00:09,  5.83it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:19<00:12,  4.66it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:19<00:11,  4.81it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:20<00:11,  4.88it/s]Matched labels: ['machine']
Clip similarities: [0.79541015625]
DEBUG best_match_after_iou_check [tensor(161)]
DEBUG uniques tensor([161]) tensor([1])
Matched 1 times with 161
iou for matched labels tensor([0.5983])
Matched labels: ['folded_chair']
Clip similarities: [0.5888671875]
DEBUG best_match_after_iou_check [tensor(56)]
DEBUG uniques tensor([56]) tensor([1])
Matched 1 times with 56
iou for matched labels tensor([0.3439])
Matched labels: ['bed']
Clip similarities: [0.7099609375]
DEBUG best_match_after_iou_check [tensor(18), tensor(4)]
DEBUG uniques tensor([ 4, 18]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 18
iou for matched labels tensor([0.6960, 0.7876])
Matched labels: ['storage_bin', 'copier']
Clip similarities: [0.69921875, 1.0]
DEBUG best_match_after_iou_check [tensor(9)]
DEBUG uniques tensor([9]) tensor([1])
Matched 1 times with 9
iou for matched labels tensor([0.0727])
Matched labels: ['monitor']
Clip similarities: [0.7568359375]
DEBUG best_match_after_iou_check [tensor(27)]
DEBUG uniques tensor([27]) tensor([1])
Matched 1 times with 27
iou for matched labels tensor([0.6127])
Matched labels: ['bag']
Clip similarities: [0.73828125]
DEBUG best_match_after_iou_check [tensor(5)]
DEBUG uniques tensor([5]) tensor([1])
Matched 1 times with 5
iou for matched labels tensor([0.8224])
Matched labels: ['washing_machine']
Clip similarities: [0.71826171875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(28), tensor(39)]
DEBUG uniques tensor([28, 39]) tensor([1, 1])
Matched 1 times with 28
Matched 1 times with 39
iou for matched labels tensor([0.5618, 0.5554])
Matched labels: ['water_cooler', 'water_cooler']
Clip similarities: [0.7490234375, 0.7490234375]
DEBUG best_match_after_iou_check [tensor(3)]
DEBUG uniques tensor([3]) tensor([1])
Matched 1 times with 3
iou for matched labels tensor([0.5846])
Matched labels: ['oven']
Clip similarities: [0.7734375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(68), tensor(42), tensor(28), tensor(10), tensor(81), tensor(39)]
DEBUG uniques tensor([10, 28, 39, 42, 68, 81]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 28
Matched 1 times with 39
Matched 1 times with 42
Matched 1 times with 68
Matched 1 times with 81
iou for matched labels tensor([0.8754, 0.7834, 0.8214, 0.6218, 0.4129, 0.3558])
Matched labels: ['file_cabinet', 'file_cabinet', 'copier', 'bin', 'trash_can', 'copier']
Clip similarities: [0.74072265625, 0.74072265625, 1.0, 0.7744140625, 0.7294921875, 1.0]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(32)]
DEBUG uniques tensor([32]) tensor([1])
Matched 1 times with 32
iou for matched labels tensor([0.4584])
Matched labels: ['bed']
Clip similarities: [0.7099609375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(108)]
DEBUG uniques tensor([108]) tensor([1])
Matched 1 times with 108
iou for matched labels tensor([0.6715])
Matched labels: ['printer']
Clip similarities: [0.85302734375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(0), tensor(10), tensor(86), tensor(36)]
DEBUG uniques tensor([ 0, 10, 36, 86]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 10
Matched 1 times with 36
Matched 1 times with 86
iou for matched labels tensor([0.7973, 0.7250, 0.5727, 0.3282])
Matched labels: ['radiator', 'bag', 'refrigerator', 'tv']
Clip similarities: [0.67529296875, 0.73828125, 0.74462890625, 0.76220703125]
DEBUG best_match_after_iou_check [tensor(30), tensor(113)]
DEBUG uniques tensor([ 30, 113]) tensor([1, 1])
Matched 1 times with 30
Matched 1 times with 113
iou for matched labels tensor([0.6136, 0.2837])
Matched labels: ['toilet', 'bathtub']
Clip similarities: [0.74560546875, 0.69287109375]
DEBUG best_match_after_iou_check [tensor(32), tensor(87), tensor(84), tensor(26)]
DEBUG uniques tensor([26, 32, 84, 87]) tensor([1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 32
Matched 1 times with 84
Matched 1 times with 87
iou for matched labels tensor([0.4288, 0.7304, 0.8216, 0.3865])
Matched labels: ['washing_machine', 'bin', 'bin', 'refrigerator']
Clip similarities: [0.71826171875, 0.7744140625, 0.7744140625, 0.74462890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(48)]
DEBUG uniques tensor([48]) tensor([1])
Matched 1 times with 48
iou for matched labels tensor([0.3593])
Matched labels: ['sofa_chair']
Clip similarities: [0.66357421875]
DEBUG best_match_after_iou_check [tensor(20), tensor(92)]
DEBUG uniques tensor([20, 92]) tensor([1, 1])
Matched 1 times with 20
Matched 1 times with 92
iou for matched labels tensor([0.7415, 0.4578])
Matched labels: ['chair', 'bag']
Clip similarities: [0.69775390625, 0.73828125]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.4480])
Matched labels: ['office_chair']
Clip similarities: [0.69580078125]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(167), tensor(38)]
DEBUG uniques tensor([ 38, 167]) tensor([1, 1])
Matched 1 times with 38
Matched 1 times with 167
iou for matched labels tensor([0.5255, 0.7221])
Matched labels: ['suitcase', 'toilet']
Clip similarities: [0.72265625, 0.74560546875]
DEBUG best_match_after_iou_check [tensor(78), tensor(36), tensor(48)]
DEBUG uniques tensor([36, 48, 78]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 48
Matched 1 times with 78
iou for matched labels tensor([0.8830, 0.7996, 0.8479])
Matched labels: ['toilet_seat_cover_dispenser', 'bin', 'toilet']
Clip similarities: [0.55615234375, 0.7744140625, 0.74560546875]
DEBUG best_match_after_iou_check [tensor(115), tensor(173)]
DEBUG uniques tensor([115, 173]) tensor([1, 1])
Matched 1 times with 115
Matched 1 times with 173
iou for matched labels tensor([0.2960, 0.7055])
Matched labels: ['broom', 'radiator']
Clip similarities: [0.70458984375, 0.67529296875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(24), tensor(60), tensor(20)]
DEBUG uniques tensor([20, 24, 60]) tensor([1, 1, 1])
Matched 1 times with 20
Matched 1 times with 24
Matched 1 times with 60
iou for matched labels tensor([0.3303, 0.7405, 0.7685])
Matched labels: ['copier', 'copier', 'laundry_hamper']
Clip similarities: [1.0, 1.0, 0.6298828125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(48)]
DEBUG uniques tensor([48]) tensor([1])
Matched 1 times with 48
iou for matched labels tensor([0.6536])
Matched labels: ['oven']
Clip similarities: [0.7734375]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(61), tensor(33)]
DEBUG uniques tensor([33, 61]) tensor([1, 1])
Matched 1 times with 33
Matched 1 times with 61
iou for matched labels tensor([0.5775, 0.3103])
Matched labels: ['file_cabinet', 'chair']
Clip similarities: [0.74072265625, 0.69775390625]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(7), tensor(61)]
DEBUG uniques tensor([ 7, 61]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 61
iou for matched labels tensor([0.5718, 0.8257])
Matched labels: ['toilet', 'paper_towel_dispenser']
Clip similarities: [0.74560546875, 0.66845703125]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.6789])
Matched labels: ['copier']
Clip similarities: [1.0]
DEBUG best_match_after_iou_check [tensor(9), tensor(74), tensor(120), tensor(61), tensor(0)]
DEBUG uniques tensor([  0,   9,  61,  74, 120]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 9
Matched 1 times with 61
Matched 1 times with 74
Matched 1 times with 120
iou for matched labels tensor([0.7703, 0.6185, 0.4569, 0.6799, 0.3273])
Matched labels: ['toilet', 'paper_towel_dispenser', 'trash_can', 'backpack', 'sink']
Clip similarities: [0.74560546875, 0.66845703125, 0.7294921875, 0.67822265625, 0.7177734375]
DEBUG best_match_after_iou_check [tensor(36)]
DEBUG uniques tensor([36]) tensor([1])
Matched 1 times with 36
Select thresholds for refinement:  63%|██████▎   | 89/142 [00:20<00:10,  4.95it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:20<00:10,  4.96it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:20<00:10,  4.82it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:20<00:11,  4.35it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:21<00:09,  4.92it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:21<00:11,  4.30it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:21<00:11,  4.00it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:21<00:12,  3.72it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:22<00:11,  3.82it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:22<00:09,  4.40it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:22<00:11,  3.82it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:22<00:11,  3.75it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:23<00:10,  3.87it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:23<00:10,  3.98it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:23<00:09,  4.02it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:23<00:08,  4.23it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:24<00:09,  3.94it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:24<00:07,  4.72it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:24<00:10,  3.34it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:24<00:08,  3.94it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:25<00:07,  4.50it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:25<00:08,  3.97it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:25<00:07,  4.15it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:25<00:07,  4.25it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:26<00:06,  4.72it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:26<00:07,  3.80it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:26<00:06,  4.38it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:26<00:05,  4.38it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:27<00:05,  4.54it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:27<00:05,  4.74it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:27<00:05,  3.99it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:27<00:04,  4.68it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:27<00:04,  4.99it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:27<00:03,  5.62it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:28<00:03,  6.04it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:28<00:02,  6.01it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:28<00:02,  6.41it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:28<00:03,  5.19it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:28<00:02,  5.72it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:29<00:03,  3.97it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:29<00:02,  4.64it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:29<00:02,  4.50it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:29<00:02,  4.77it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:29<00:01,  5.00it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:30<00:01,  5.35it/s]iou for matched labels tensor([0.6870])
Matched labels: ['backpack']
Clip similarities: [0.67822265625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(92), tensor(86)]
DEBUG uniques tensor([86, 92]) tensor([1, 1])
Matched 1 times with 86
Matched 1 times with 92
iou for matched labels tensor([0.3328, 0.5355])
Matched labels: ['printer', 'printer']
Clip similarities: [0.85302734375, 0.85302734375]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.8499])
Matched labels: ['monitor']
Clip similarities: [0.7568359375]
DEBUG best_match_after_iou_check [tensor(168)]
DEBUG uniques tensor([168]) tensor([1])
Matched 1 times with 168
iou for matched labels tensor([0.4653])
Matched labels: ['lamp']
Clip similarities: [0.74267578125]
DEBUG best_match_after_iou_check [tensor(100)]
DEBUG uniques tensor([100]) tensor([1])
Matched 1 times with 100
iou for matched labels tensor([0.5351])
Matched labels: ['bin']
Clip similarities: [0.7744140625]
DEBUG best_match_after_iou_check [tensor(33)]
DEBUG uniques tensor([33]) tensor([1])
Matched 1 times with 33
iou for matched labels tensor([0.4788])
Matched labels: ['bag']
Clip similarities: [0.73828125]
DEBUG best_match_after_iou_check [tensor(43), tensor(242), tensor(28)]
DEBUG uniques tensor([ 28,  43, 242]) tensor([1, 1, 1])
Matched 1 times with 28
Matched 1 times with 43
Matched 1 times with 242
iou for matched labels tensor([0.6233, 0.3288, 0.4098])
Matched labels: ['bag', 'stool', 'curtain']
Clip similarities: [0.73828125, 0.65869140625, 0.65966796875]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.8059])
Matched labels: ['toilet']
Clip similarities: [0.74560546875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(17), tensor(105), tensor(19), tensor(34), tensor(153)]
DEBUG uniques tensor([ 17,  19,  34, 105, 153]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 19
Matched 1 times with 34
Matched 1 times with 105
Matched 1 times with 153
iou for matched labels tensor([0.4158, 0.8474, 0.7110, 0.6754, 0.7328])
Matched labels: ['copier', 'copier', 'bag', 'copier', 'mini_fridge']
Clip similarities: [1.0, 1.0, 0.73828125, 1.0, 0.7001953125]
DEBUG best_match_after_iou_check [tensor(24), tensor(25)]
DEBUG uniques tensor([24, 25]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 25
iou for matched labels tensor([0.4190, 0.4463])
Matched labels: ['washing_machine', 'washing_machine']
Clip similarities: [0.71826171875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(5)]
DEBUG uniques tensor([5]) tensor([1])
Matched 1 times with 5
iou for matched labels tensor([0.6198])
Matched labels: ['monitor']
Clip similarities: [0.7568359375]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.7493])
Matched labels: ['bin']
Clip similarities: [0.7744140625]
DEBUG best_match_after_iou_check [tensor(115)]
DEBUG uniques tensor([115]) tensor([1])
Matched 1 times with 115
iou for matched labels tensor([0.2570])
Matched labels: ['coffee_kettle']
Clip similarities: [0.677734375]
DEBUG best_match_after_iou_check [tensor(94)]
DEBUG uniques tensor([94]) tensor([1])
Matched 1 times with 94
iou for matched labels tensor([0.4426])
Matched labels: ['microwave']
Clip similarities: [0.75830078125]
DEBUG best_match_after_iou_check [tensor(45)]
DEBUG uniques tensor([45]) tensor([1])
Matched 1 times with 45
iou for matched labels tensor([0.7358])
Matched labels: ['tv']
Clip similarities: [0.76220703125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(46)]
DEBUG uniques tensor([46]) tensor([1])
Matched 1 times with 46
iou for matched labels tensor([0.5347])
Matched labels: ['vacuum_cleaner']
Clip similarities: [0.7138671875]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(19)]
DEBUG uniques tensor([19]) tensor([1])
Matched 1 times with 19
iou for matched labels tensor([0.3314])
Matched labels: ['chair']
Clip similarities: [0.69775390625]
DEBUG best_match_after_iou_check [tensor(8), tensor(88), tensor(8)]
DEBUG uniques tensor([ 8, 88]) tensor([2, 1])
Matched 2 times with 8
Merge stage2 masks
Matched 1 times with 88
iou for matched labels tensor([0.2706, 0.6524])
Matched labels: ['crate', 'sofa_chair']
Clip similarities: [0.70263671875, 0.66357421875]
DEBUG best_match_after_iou_check [tensor(137), tensor(137), tensor(137), tensor(4), tensor(1)]
DEBUG uniques tensor([  1,   4, 137]) tensor([1, 1, 3])
Matched 1 times with 1
Matched 1 times with 4
Matched 3 times with 137
Merge stage2 masks
iou for matched labels tensor([0.7395, 0.7390, 0.0564])
Matched labels: ['monitor', 'monitor', 'monitor']
Clip similarities: [0.7568359375, 0.7568359375, 0.7568359375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(134), tensor(25)]
DEBUG uniques tensor([ 25, 134]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 134
iou for matched labels tensor([0.7841, 0.6070])
Matched labels: ['suitcase', 'toilet']
Clip similarities: [0.72265625, 0.74560546875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(24), tensor(44)]
DEBUG uniques tensor([24, 44]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 44
iou for matched labels tensor([0.7825, 0.4081])
Matched labels: ['backpack', 'laptop']
Clip similarities: [0.67822265625, 0.73681640625]
DEBUG best_match_after_iou_check [tensor(10)]
DEBUG uniques tensor([10]) tensor([1])
Matched 1 times with 10
iou for matched labels tensor([0.6905])
Matched labels: ['oven']
Clip similarities: [0.7734375]
DEBUG best_match_after_iou_check [tensor(107)]
DEBUG uniques tensor([107]) tensor([1])
Matched 1 times with 107
iou for matched labels tensor([0.4237])
Matched labels: ['suitcase']
Clip similarities: [0.72265625]
DEBUG best_match_after_iou_check [tensor(46), tensor(96), tensor(38)]
DEBUG uniques tensor([38, 46, 96]) tensor([1, 1, 1])
Matched 1 times with 38
Matched 1 times with 46
Matched 1 times with 96
iou for matched labels tensor([0.2930, 0.5890, 0.4261])
Matched labels: ['bin', 'bin', 'office_chair']
Clip similarities: [0.7744140625, 0.7744140625, 0.69580078125]
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(34), tensor(17)]
DEBUG uniques tensor([17, 34]) tensor([1, 1])
Matched 1 times with 17
Matched 1 times with 34
iou for matched labels tensor([0.8263, 0.5807])
Matched labels: ['toilet', 'bathtub']
Clip similarities: [0.74560546875, 0.69287109375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(421), tensor(29), tensor(281)]
DEBUG uniques tensor([ 29, 281, 421]) tensor([1, 1, 1])
Matched 1 times with 29
Matched 1 times with 281
Matched 1 times with 421
iou for matched labels tensor([0.5847, 0.6733, 0.4966])
Matched labels: ['dishwasher', 'oven', 'bin']
Clip similarities: [0.68408203125, 0.7734375, 0.7744140625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(121), tensor(6)]
DEBUG uniques tensor([  6, 121]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 121
iou for matched labels tensor([0.5741, 0.3076])
Matched labels: ['washing_machine', 'washing_machine']
Clip similarities: [0.71826171875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(113)]
DEBUG uniques tensor([113]) tensor([1])
Matched 1 times with 113
iou for matched labels tensor([0.3755])
Matched labels: ['paper']
Clip similarities: [0.8076171875]
DEBUG best_match_after_iou_check [tensor(55), tensor(47)]
DEBUG uniques tensor([47, 55]) tensor([1, 1])
Matched 1 times with 47
Matched 1 times with 55
iou for matched labels tensor([0.7295, 0.4977])
Matched labels: ['bin', 'printer']
Clip similarities: [0.7744140625, 0.85302734375]
DEBUG best_match_after_iou_check [tensor(16)]
DEBUG uniques tensor([16]) tensor([1])
Matched 1 times with 16
iou for matched labels tensor([0.7675])
Matched labels: ['sink']
Clip similarities: [0.7177734375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) Select thresholds for refinement:  94%|█████████▍| 134/142 [00:30<00:01,  5.95it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:30<00:01,  5.59it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:30<00:01,  5.62it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:30<00:00,  5.11it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:31<00:00,  4.78it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:31<00:00,  4.14it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:31<00:00,  4.40it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:31<00:00,  4.69it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:32<00:00,  3.88it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:32<00:00,  4.42it/s]
tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.7959])
Matched labels: ['toilet']
Clip similarities: [0.74560546875]
DEBUG best_match_after_iou_check [tensor(91), tensor(173)]
DEBUG uniques tensor([ 91, 173]) tensor([1, 1])
Matched 1 times with 91
Matched 1 times with 173
iou for matched labels tensor([0.2569, 0.6646])
Matched labels: ['laptop', 'trash_can']
Clip similarities: [0.73681640625, 0.7294921875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(40), tensor(111)]
DEBUG uniques tensor([ 40, 111]) tensor([1, 1])
Matched 1 times with 40
Matched 1 times with 111
iou for matched labels tensor([0.6851, 0.2200])
Matched labels: ['radiator', 'tv']
Clip similarities: [0.67529296875, 0.76220703125]
DEBUG best_match_after_iou_check [tensor(82), tensor(74)]
DEBUG uniques tensor([74, 82]) tensor([1, 1])
Matched 1 times with 74
Matched 1 times with 82
iou for matched labels tensor([0.1270, 0.5528])
Matched labels: ['radiator', 'toilet']
Clip similarities: [0.67529296875, 0.74560546875]
DEBUG best_match_after_iou_check [tensor(16), tensor(215)]
DEBUG uniques tensor([ 16, 215]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 215
iou for matched labels tensor([0.6973, 0.4459])
Matched labels: ['bag', 'coffee_maker']
Clip similarities: [0.73828125, 0.701171875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(8), tensor(7)]
DEBUG uniques tensor([7, 8]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 8
iou for matched labels tensor([0.4545, 0.8732])
Matched labels: ['toilet', 'telephone']
Clip similarities: [0.74560546875, 0.75927734375]
DEBUG best_match_after_iou_check [tensor(172), tensor(258), tensor(258), tensor(258), tensor(289), tensor(119), tensor(86), tensor(113), tensor(31), tensor(31)]
DEBUG uniques tensor([ 31,  86, 113, 119, 172, 258, 289]) tensor([2, 1, 1, 1, 1, 3, 1])
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 86
Matched 1 times with 113
Matched 1 times with 119
Matched 1 times with 172
Matched 3 times with 258
Merge stage2 masks
Matched 1 times with 289
iou for matched labels tensor([0.2839, 0.1544, 0.1983, 0.0947, 0.2110, 0.3035, 0.1889])
Matched labels: ['counter', 'shelf', 'bin', 'bin', 'bin', 'copier', 'kitchen_cabinet']
Clip similarities: [0.75341796875, 0.7119140625, 0.7744140625, 0.7744140625, 0.7744140625, 1.0, 0.6591796875]
Unique similarities: [0.513671875, 0.55615234375, 0.5888671875, 0.6259765625, 0.6298828125, 0.6416015625, 0.64794921875, 0.65869140625, 0.6591796875, 0.65966796875, 0.66357421875, 0.66845703125, 0.67529296875, 0.677734375, 0.67822265625, 0.68408203125, 0.69189453125, 0.69287109375, 0.69580078125, 0.69775390625, 0.69921875, 0.7001953125, 0.701171875, 0.70263671875, 0.70458984375, 0.708984375, 0.7099609375, 0.7119140625, 0.7138671875, 0.7177734375, 0.71826171875, 0.72265625, 0.72509765625, 0.7294921875, 0.73681640625, 0.73828125, 0.74072265625, 0.74267578125, 0.744140625, 0.74462890625, 0.74560546875, 0.7490234375, 0.75341796875, 0.75439453125, 0.7568359375, 0.75830078125, 0.75927734375, 0.76220703125, 0.7734375, 0.7744140625, 0.79541015625, 0.8076171875, 0.85302734375, 1.0]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 86it [00:00, 851.22it/s]DEBUG all ious tensor([0.3288, 0.2021])
USE STAGE 2 MASK tensor(0.3288)
USE STAGE 2 MASK tensor(0.2021)
DEBUG all ious []
DEBUG all ious tensor([0.6930])
USE STAGE 1 MASK tensor(0.6930)
DEBUG all ious tensor([0.7095])
USE STAGE 1 MASK tensor(0.7095)
DEBUG all ious []
DEBUG all ious tensor([0.8278])
USE STAGE 1 MASK tensor(0.8278)
DEBUG all ious tensor([0.5635, 0.6864, 0.7537, 0.4014])
USE STAGE 1 MASK tensor(0.5635)
USE STAGE 1 MASK tensor(0.6864)
USE STAGE 1 MASK tensor(0.7537)
USE STAGE 2 MASK tensor(0.4014)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6510, 0.5557, 0.4989])
USE STAGE 1 MASK tensor(0.6510)
USE STAGE 1 MASK tensor(0.5557)
USE STAGE 1 MASK tensor(0.4989)
DEBUG all ious []
DEBUG all ious tensor([0.6854, 0.5438, 0.3820, 0.7325])
USE STAGE 1 MASK tensor(0.6854)
USE STAGE 1 MASK tensor(0.5438)
USE STAGE 2 MASK tensor(0.3820)
USE STAGE 1 MASK tensor(0.7325)
DEBUG all ious tensor([0.3690, 0.5820, 0.2902])
USE STAGE 2 MASK tensor(0.3690)
USE STAGE 1 MASK tensor(0.5820)
USE STAGE 2 MASK tensor(0.2902)
DEBUG all ious []
DEBUG all ious tensor([0.5287])
USE STAGE 1 MASK tensor(0.5287)
DEBUG all ious tensor([0.7664])
USE STAGE 1 MASK tensor(0.7664)
DEBUG all ious tensor([0.4934])
USE STAGE 1 MASK tensor(0.4934)
DEBUG all ious tensor([0.7061, 0.6426])
USE STAGE 1 MASK tensor(0.7061)
USE STAGE 1 MASK tensor(0.6426)
DEBUG all ious tensor([0.0678, 0.2537])
USE STAGE 2 MASK tensor(0.0678)
USE STAGE 2 MASK tensor(0.2537)
DEBUG all ious tensor([0.7591, 0.7021])
USE STAGE 1 MASK tensor(0.7591)
USE STAGE 1 MASK tensor(0.7021)
DEBUG all ious tensor([0.8261, 0.6870, 0.5243, 0.2490])
USE STAGE 1 MASK tensor(0.8261)
USE STAGE 1 MASK tensor(0.6870)
USE STAGE 1 MASK tensor(0.5243)
USE STAGE 2 MASK tensor(0.2490)
DEBUG all ious tensor([0.8562, 0.4915, 0.8133])
USE STAGE 1 MASK tensor(0.8562)
USE STAGE 1 MASK tensor(0.4915)
USE STAGE 1 MASK tensor(0.8133)
DEBUG all ious tensor([0.4281, 0.8200, 0.6395, 0.7898, 0.6410])
USE STAGE 2 MASK tensor(0.4281)
USE STAGE 1 MASK tensor(0.8200)
USE STAGE 1 MASK tensor(0.6395)
USE STAGE 1 MASK tensor(0.7898)
USE STAGE 1 MASK tensor(0.6410)
DEBUG all ious []
DEBUG all ious tensor([0.4890])
USE STAGE 1 MASK tensor(0.4890)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6921])
USE STAGE 1 MASK tensor(0.6921)
DEBUG all ious tensor([0.5897, 0.3360, 0.3585, 0.6025])
USE STAGE 1 MASK tensor(0.5897)
USE STAGE 2 MASK tensor(0.3360)
USE STAGE 2 MASK tensor(0.3585)
USE STAGE 1 MASK tensor(0.6025)
DEBUG all ious tensor([0.3793])
USE STAGE 2 MASK tensor(0.3793)
DEBUG all ious tensor([0.5446, 0.6140])
USE STAGE 1 MASK tensor(0.5446)
USE STAGE 1 MASK tensor(0.6140)
DEBUG all ious []
DEBUG all ious tensor([0.5394, 0.7057])
USE STAGE 1 MASK tensor(0.5394)
USE STAGE 1 MASK tensor(0.7057)
DEBUG all ious tensor([0.6798])
USE STAGE 1 MASK tensor(0.6798)
DEBUG all ious tensor([0.5407, 0.7702, 0.7112, 0.5886, 0.5070])
USE STAGE 1 MASK tensor(0.5407)
USE STAGE 1 MASK tensor(0.7702)
USE STAGE 1 MASK tensor(0.7112)
USE STAGE 1 MASK tensor(0.5886)
USE STAGE 1 MASK tensor(0.5070)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.4667])
USE STAGE 1 MASK tensor(0.4667)
DEBUG all ious tensor([0.5983])
USE STAGE 1 MASK tensor(0.5983)
DEBUG all ious tensor([0.3439])
USE STAGE 2 MASK tensor(0.3439)
DEBUG all ious tensor([0.6960, 0.7876])
USE STAGE 1 MASK tensor(0.6960)
USE STAGE 1 MASK tensor(0.7876)
DEBUG all ious tensor([0.0727])
USE STAGE 2 MASK tensor(0.0727)
DEBUG all ious tensor([0.6127])
USE STAGE 1 MASK tensor(0.6127)
DEBUG all ious tensor([0.8224])
USE STAGE 1 MASK tensor(0.8224)
DEBUG all ious []
DEBUG all ious tensor([0.5618, 0.5554])
USE STAGE 1 MASK tensor(0.5618)
USE STAGE 1 MASK tensor(0.5554)
DEBUG all ious tensor([0.5846])
USE STAGE 1 MASK tensor(0.5846)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8754, 0.7834, 0.8214, 0.6218, 0.4129, 0.3558])
USE STAGE 1 MASK tensor(0.8754)
USE STAGE 1 MASK tensor(0.7834)
USE STAGE 1 MASK tensor(0.8214)
USE STAGE 1 MASK tensor(0.6218)
USE STAGE 2 MASK tensor(0.4129)
USE STAGE 2 MASK tensor(0.3558)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.4584])
USE STAGE 1 MASK tensor(0.4584)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.6715])
USE STAGE 1 MASK tensor(0.6715)
DEBUG all ious []
DEBUG all ious tensor([0.7973, 0.7250, 0.5727, 0.3282])
USE STAGE 1 MASK tensor(0.7973)
USE STAGE 1 MASK tensor(0.7250)
USE STAGE 1 MASK tensor(0.5727)
USE STAGE 2 MASK tensor(0.3282)
DEBUG all ious tensor([0.6136, 0.2837])
USE STAGE 1 MASK tensor(0.6136)
USE STAGE 2 MASK tensor(0.2837)
DEBUG all ious tensor([0.4288, 0.7304, 0.8216, 0.3865])
USE STAGE 2 MASK tensor(0.4288)
USE STAGE 1 MASK tensor(0.7304)
USE STAGE 1 MASK tensor(0.8216)
USE STAGE 2 MASK tensor(0.3865)
DEBUG all ious []
DEBUG all ious tensor([0.3593])
USE STAGE 2 MASK tensor(0.3593)
DEBUG all ious tensor([0.7415, 0.4578])
USE STAGE 1 MASK tensor(0.7415)
USE STAGE 1 MASK tensor(0.4578)
DEBUG all ious tensor([0.4480])
USE STAGE 2 MASK tensor(0.4480)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5255, 0.7221])
USE STAGE 1 MASK tensor(0.5255)
USE STAGE 1 MASK tensor(0.7221)
DEBUG all ious tensor([0.8830, 0.7996, 0.8479])
USE STAGE 1 MASK tensor(0.8830)
USE STAGE 1 MASK tensor(0.7996)
USE STAGE 1 MASK tensor(0.8479)
DEBUG all ious tensor([0.2960, 0.7055])
USE STAGE 2 MASK tensor(0.2960)
USE STAGE 1 MASK tensor(0.7055)
DEBUG all ious []
DEBUG all ious tensor([0.3303, 0.7405, 0.7685])
USE STAGE 2 MASK tensor(0.3303)
USE STAGE 1 MASK tensor(0.7405)
USE STAGE 1 MASK tensor(0.7685)
DEBUG all ious []
DEBUG all ious tensor([0.6536])
USE STAGE 1 MASK tensor(0.6536)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5775, 0.3103])
USE STAGE 1 MASK tensor(0.5775)
USE STAGE 2 MASK tensor(0.3103)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.5718, 0.8257])
USE STAGE 1 MASK tensor(0.5718)
USE STAGE 1 MASK tensor(0.8257)
DEBUG all ious tensor([0.6789])
USE STAGE 1 MASK tensor(0.6789)
DEBUG all ious tensor([0.7703, 0.6185, 0.4569, 0.6799, 0.3273])
USE STAGE 1 MASK tensor(0.7703)
USE STAGE 1 MASK tensor(0.6185)
USE STAGE 1 MASK tensor(0.4569)
USE STAGE 1 MASK tensor(0.6799)
USE STAGE 2 MASK tensor(0.3273)
DEBUG all ious tensor([0.6870])
USE STAGE 1 MASK tensor(0.6870)
DEBUG all ious []
DEBUG all ious tensor([0.3328, 0.5355])
USE STAGE 2 MASK tensor(0.3328)
USE STAGE 1 MASK tensor(0.5355)
DEBUG all ious tensor([0.8499])
USE STAGE 1 MASK tensor(0.8499)
DEBUG all ious tensor([0.4653])
USE STAGE 1 MASK tensor(0.4653)
DEBUG all ious tensor([0.5351])
USE STAGE 1 MASK tensor(0.5351)
DEBUG all ious tensor([0.4788])
USE STAGE 1 MASK tensor(0.4788)
DEBUG all ious tensor([0.6233, 0.3288, 0.4098])
USE STAGE 1 MASK tensor(0.6233)
USE STAGE 2 MASK tensor(0.3288)
USE STAGE 2 MASK tensor(0.4098)
DEBUG all ious tensor([0.8059])
USE STAGE 1 MASK tensor(0.8059)
DEBUG all ious []
DEBUG all ious tensor([0.4158, 0.8474, 0.7110, 0.6754, 0.7328])
USE STAGE 2 MASK tensor(0.4158)
USE STAGE 1 MASK tensor(0.8474)
USE STAGE 1 MASK tensor(0.7110)
USE STAGE 1 MASK tensor(0.6754)
USE STAGE 1 MASK tensor(0.7328)
DEBUG all ious tensor([0.4190, 0.4463])
USE STAGE 2 MASK tensor(0.4190)
USE STAGE 2 MASK tensor(0.4463)
DEBUG all ious tensor([0.6198])
USE STAGE 1 MASK tensor(0.6198)
DEBUG all ious tensor([0.7493])
USE STAGE 1 MASK tensor(0.7493)
DEBUG all ious tensor([0.2570])
USE STAGE 2 MASK tensor(0.2570)
DEBUG all ious tensor([0.4426])
USE STAGE 2 MASK tensor(0.4426)
DEBUG all ious tensor([0.7358])
USE STAGE 1 MASK tensor(0.7358)
DEBUG all ious []
DEBUG all ious tensor([0.5347])
USE STAGE 1 MASK tensor(0.5347)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.3314])
USE STAGE 2 MASK tensor(0.3314)
DEBUG all ious tensor([0.2706, 0.6524])
USE STAGE 2 MASK tensor(0.2706)
USE STAGE 1 MASK tensor(0.6524)
DEBUG all ious tensor([0.7395, 0.7390, 0.0564])
USE STAGE 1 MASK tensor(0.7395)
USE STAGE 1 MASK tensor(0.7390)
USE STAGE 2 MASK tensor(0.0564)
DEBUG all ious []
DEBUG all ious tensor([0.7841, 0.6070])
USE STAGE 1 MASK tensor(0.7841)
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 142it [00:00, 698.33it/s]
tensor(0.6070)
DEBUG all ious []
DEBUG all ious tensor([0.7825, 0.4081])
USE STAGE 1 MASK tensor(0.7825)
USE STAGE 2 MASK tensor(0.4081)
DEBUG all ious tensor([0.6905])
USE STAGE 1 MASK tensor(0.6905)
DEBUG all ious tensor([0.4237])
USE STAGE 2 MASK tensor(0.4237)
DEBUG all ious tensor([0.2930, 0.5890, 0.4261])
USE STAGE 2 MASK tensor(0.2930)
USE STAGE 1 MASK tensor(0.5890)
USE STAGE 2 MASK tensor(0.4261)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8263, 0.5807])
USE STAGE 1 MASK tensor(0.8263)
USE STAGE 1 MASK tensor(0.5807)
DEBUG all ious []
DEBUG all ious tensor([0.5847, 0.6733, 0.4966])
USE STAGE 1 MASK tensor(0.5847)
USE STAGE 1 MASK tensor(0.6733)
USE STAGE 1 MASK tensor(0.4966)
DEBUG all ious []
DEBUG all ious tensor([0.5741, 0.3076])
USE STAGE 1 MASK tensor(0.5741)
USE STAGE 2 MASK tensor(0.3076)
DEBUG all ious tensor([0.3755])
USE STAGE 2 MASK tensor(0.3755)
DEBUG all ious tensor([0.7295, 0.4977])
USE STAGE 1 MASK tensor(0.7295)
USE STAGE 1 MASK tensor(0.4977)
DEBUG all ious tensor([0.7675])
USE STAGE 1 MASK tensor(0.7675)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.7959])
USE STAGE 1 MASK tensor(0.7959)
DEBUG all ious tensor([0.2569, 0.6646])
USE STAGE 2 MASK tensor(0.2569)
USE STAGE 1 MASK tensor(0.6646)
DEBUG all ious []
DEBUG all ious tensor([0.6851, 0.2200])
USE STAGE 1 MASK tensor(0.6851)
USE STAGE 2 MASK tensor(0.2200)
DEBUG all ious tensor([0.1270, 0.5528])
USE STAGE 2 MASK tensor(0.1270)
USE STAGE 1 MASK tensor(0.5528)
DEBUG all ious tensor([0.6973, 0.4459])
USE STAGE 1 MASK tensor(0.6973)
USE STAGE 2 MASK tensor(0.4459)
DEBUG all ious []
DEBUG all ious tensor([0.4545, 0.8732])
USE STAGE 1 MASK tensor(0.4545)
USE STAGE 1 MASK tensor(0.8732)
DEBUG all ious tensor([0.2839, 0.1544, 0.1983, 0.0947, 0.2110, 0.3035, 0.1889])
USE STAGE 2 MASK tensor(0.2839)
USE STAGE 2 MASK tensor(0.1544)
USE STAGE 2 MASK tensor(0.1983)
USE STAGE 2 MASK tensor(0.0947)
USE STAGE 2 MASK tensor(0.2110)
USE STAGE 2 MASK tensor(0.3035)
USE STAGE 2 MASK tensor(0.1889)
Evaluating class copier...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class copier...:   1%|▏         | 2/142 [00:00<00:09, 14.32it/s]Evaluating class copier...:   4%|▎         | 5/142 [00:00<00:08, 15.33it/s]Evaluating class copier...:   5%|▍         | 7/142 [00:00<00:08, 15.46it/s]Evaluating class copier...:   6%|▋         | 9/142 [00:00<00:07, 16.81it/s]Evaluating class copier...:   8%|▊         | 12/142 [00:00<00:06, 20.63it/s]Evaluating class copier...:  11%|█         | 15/142 [00:00<00:06, 19.56it/s]Evaluating class copier...:  13%|█▎        | 18/142 [00:00<00:05, 21.36it/s]Evaluating class copier...:  15%|█▍        | 21/142 [00:01<00:05, 22.62it/s]Evaluating class copier...:  17%|█▋        | 24/142 [00:01<00:05, 22.66it/s]Evaluating class copier...:  19%|█▉        | 27/142 [00:01<00:04, 23.67it/s]Evaluating class copier...:  21%|██        | 30/142 [00:01<00:07, 15.52it/s]Evaluating class copier...:  23%|██▎       | 32/142 [00:01<00:06, 16.24it/s]Evaluating class copier...:  24%|██▍       | 34/142 [00:01<00:08, 13.04it/s]Evaluating class copier...:  25%|██▌       | 36/142 [00:02<00:08, 13.09it/s]Evaluating class copier...:  27%|██▋       | 39/142 [00:02<00:06, 15.46it/s]Evaluating class copier...:  30%|███       | 43/142 [00:02<00:05, 17.61it/s]Evaluating class copier...:  32%|███▏      | 45/142 [00:02<00:06, 15.82it/s]Evaluating class copier...:  34%|███▍      | 48/142 [00:02<00:05, 16.38it/s]Evaluating class copier...:  35%|███▌      | 50/142 [00:02<00:05, 16.51it/s]Evaluating class copier...:  37%|███▋      | 53/142 [00:03<00:04, 18.43it/s]Evaluating class copier...:  39%|███▊      | 55/142 [00:03<00:04, 18.70it/s]Evaluating class copier...:  41%|████      | 58/142 [00:03<00:04, 20.97it/s]Evaluating class copier...:  43%|████▎     | 61/142 [00:03<00:03, 22.52it/s]Evaluating class copier...:  45%|████▌     | 64/142 [00:03<00:03, 22.20it/s]Evaluating class copier...:  47%|████▋     | 67/142 [00:03<00:03, 22.60it/s]Evaluating class copier...:  50%|█████     | 71/142 [00:03<00:03, 23.02it/s]Evaluating class copier...:  53%|█████▎    | 75/142 [00:03<00:02, 23.04it/s]Evaluating class copier...:  55%|█████▍    | 78/142 [00:04<00:02, 22.46it/s]Evaluating class copier...:  57%|█████▋    | 81/142 [00:04<00:02, 21.22it/s]Evaluating class copier...:  60%|█████▉    | 85/142 [00:04<00:02, 23.53it/s]Evaluating class copier...:  62%|██████▏   | 88/142 [00:04<00:02, 22.64it/s]Evaluating class copier...:  64%|██████▍   | 91/142 [00:04<00:02, 23.82it/s]Evaluating class copier...:  66%|██████▌   | 94/142 [00:04<00:02, 22.12it/s]Evaluating class copier...:  68%|██████▊   | 97/142 [00:04<00:02, 21.55it/s]Evaluating class copier...:  70%|███████   | 100/142 [00:05<00:02, 17.84it/s]Evaluating class copier...:  73%|███████▎  | 103/142 [00:05<00:02, 18.05it/s]Evaluating class copier...:  75%|███████▍  | 106/142 [00:05<00:01, 19.58it/s]Evaluating class copier...:  77%|███████▋  | 109/142 [00:05<00:01, 16.50it/s]Evaluating class copier...:  78%|███████▊  | 111/142 [00:05<00:02, 15.09it/s]Evaluating class copier...:  80%|███████▉  | 113/142 [00:06<00:01, 15.16it/s]Evaluating class copier...:  81%|████████  | 115/142 [00:06<00:01, 14.16it/s]Evaluating class copier...:  83%|████████▎ | 118/142 [00:06<00:01, 16.78it/s]Evaluating class copier...:  85%|████████▍ | 120/142 [00:06<00:01, 16.22it/s]Evaluating class copier...:  87%|████████▋ | 123/142 [00:06<00:01, 18.30it/s]Evaluating class copier...:  89%|████████▊ | 126/142 [00:06<00:00, 19.06it/s]Evaluating class copier...:  90%|█████████ | 128/142 [00:06<00:00, 15.54it/s]Evaluating class copier...:  92%|█████████▏| 131/142 [00:07<00:00, 18.18it/s]Evaluating class copier...:  95%|█████████▌| 135/142 [00:07<00:00, 21.69it/s]Evaluating class copier...:  97%|█████████▋| 138/142 [00:07<00:00, 19.74it/s]Evaluating class copier...: 100%|██████████| 142/142 [00:07<00:00, 20.95it/s]Evaluating class copier...: 100%|██████████| 142/142 [00:07<00:00, 18.83it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 11%|█         | 15/142 [00:00<00:01, 120.94it/s] 23%|██▎       | 33/142 [00:00<00:00, 149.59it/s] 37%|███▋      | 52/142 [00:00<00:00, 165.70it/s] 56%|█████▌    | 79/142 [00:00<00:00, 204.57it/s] 72%|███████▏  | 102/142 [00:00<00:00, 213.28it/s] 87%|████████▋ | 124/142 [00:00<00:00, 202.00it/s]100%|██████████| 142/142 [00:00<00:00, 196.20it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.008   0.008   0.008
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.000   0.000   0.000
Novel AP       :   0.004   0.004   0.004
------------------------------------------------
AP             :   0.003   0.003   0.003
################################################

DEBUG avg value {'ap': 0.5109115879850122, 'ap50%': 0.5113314447592068, 'ap25%': 0.5122324159021406, 'rc': 1.0, 'rc50%': 1.0, 'rc25%': 1.0}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  50%|█████     | 5/10 [26:32<21:34, 258.82s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class counter
masks_to_be_merged [[1, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 17, 19, 91, 93, 95, 98, 99, 102, 104, 106, 109, 112, 117, 127, 128, 129, 130, 131, 132, 134, 136, 162, 165, 167, 169, 171, 173, 174, 176, 179, 181, 183, 184, 186, 189, 191, 193, 195, 196, 198, 201, 202, 204, 206, 209, 230, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 285, 287, 289, 290, 291, 293, 294, 296, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337], [6, 7], [13, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 100, 101, 103, 105, 107, 108, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], [135, 137, 164, 166, 168, 170, 172, 175, 177, 178, 180, 182, 185, 187, 188, 190, 192, 194, 197, 199, 200, 203, 207, 208, 210, 211, 227, 228, 229, 231, 233, 237, 298, 304, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], [274, 275], [282, 284, 286, 288], [297, 299, 300, 301, 302], [306, 309, 311, 322], [324, 325]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 131.91it/s][A
Calculating viewed counts for every point:  12%|█▏        | 29/238 [00:00<00:01, 138.92it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/238 [00:00<00:01, 150.94it/s][A
Calculating viewed counts for every point:  26%|██▌       | 62/238 [00:00<00:01, 149.52it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/238 [00:00<00:01, 141.54it/s][A
Calculating viewed counts for every point:  39%|███▊      | 92/238 [00:00<00:01, 138.31it/s][A
Calculating viewed counts for every point:  45%|████▍     | 106/238 [00:00<00:00, 136.45it/s][A
Calculating viewed counts for every point:  50%|█████     | 120/238 [00:00<00:00, 125.35it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 135/238 [00:00<00:00, 130.00it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 149/238 [00:01<00:00, 131.91it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 163/238 [00:01<00:00, 132.11it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 178/238 [00:01<00:00, 135.26it/s][A
Calculating viewed counts for every point:  81%|████████  | 192/238 [00:01<00:00, 134.35it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 206/238 [00:01<00:00, 128.68it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 221/238 [00:01<00:00, 133.20it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 235/238 [00:01<00:00, 131.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:11<26:32, 11.30s/it]tools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)
detected_ratio_thres_value tensor(0.5676, device='cuda:0')
final masked points tensor(21699, device='cuda:0')
before filtering torch.Size([9, 237360])
after filtering torch.Size([2, 237360])
num_ins_points_after_filtering tensor([10046,  2826], device='cuda:0')
Working on scene0015_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 17, 21, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 124, 126, 131, 134, 138, 141, 143, 150, 154, 157, 287, 291, 294, 296, 299, 301, 307, 310, 317, 319, 321, 322, 323, 324, 325, 326, 327, 330, 332, 363, 367, 370, 372], [7, 10, 11, 14, 16, 19, 22, 25, 26, 29, 32, 35, 36, 37, 42, 45, 115, 117, 119, 121, 123, 125, 128, 129, 130, 133, 137, 140, 145, 147, 151, 155, 159, 161, 163, 165, 168, 171, 174, 176, 179, 183, 185, 188, 190, 193, 196, 199, 205, 285, 288, 292, 293, 295, 298, 302, 306, 309, 318, 320, 328, 329, 331, 333, 366, 368, 371, 373], [15, 18, 20, 23, 28, 31, 33, 38, 41, 43, 46, 47, 48, 51, 53, 62, 127, 132, 135, 136, 139, 142, 144, 148, 152, 156, 160, 162, 164, 167, 169, 170, 173, 175, 178, 180, 181, 182, 187, 189, 195, 197, 202, 204, 209, 210, 217, 218, 222, 225, 229, 232, 235, 238, 243, 335, 336, 337, 338, 340, 343], [34, 40, 44, 49, 52, 54, 56, 61, 198, 201, 215, 219, 220, 223, 226, 228, 231, 234, 237, 240, 242, 246, 249, 256, 339, 341, 342, 345, 346, 348, 350], [58, 59, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 194, 207, 211, 213, 269, 271, 272, 273, 275, 276, 278, 279, 280, 282, 284, 290, 303, 305, 312, 354, 355, 356, 357], [60, 64, 212, 214, 216, 221, 224, 227, 230, 233, 236, 239, 241, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 344, 347, 349, 351, 352], [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 304, 308, 311, 313, 358, 359, 360, 361, 362, 364, 365, 369], [172, 177, 184]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 17/198 [00:00<00:01, 168.76it/s][A
Calculating viewed counts for every point:  18%|█▊        | 35/198 [00:00<00:00, 174.21it/s][A
Calculating viewed counts for every point:  29%|██▉       | 57/198 [00:00<00:00, 194.91it/s][A
Calculating viewed counts for every point:  39%|███▉      | 77/198 [00:00<00:00, 191.54it/s][A
Calculating viewed counts for every point:  49%|████▉     | 97/198 [00:00<00:00, 177.41it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 116/198 [00:00<00:00, 177.41it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 134/198 [00:00<00:00, 168.80it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 152/198 [00:00<00:00, 162.46it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 171/198 [00:00<00:00, 167.95it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 188/198 [00:01<00:00, 165.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:19<22:19,  9.57s/it]detected_ratio_thres_value tensor(0.5556, device='cuda:0')
final masked points tensor(15745, device='cuda:0')
before filtering torch.Size([8, 217086])
after filtering torch.Size([6, 217086])
num_ins_points_after_filtering tensor([2493, 3257, 2668, 1750, 2141, 2339], device='cuda:0')
Working on scene0019_00 class counter
masks_to_be_merged [[3, 4], [5, 8, 9, 10, 12, 16, 18], [6, 7, 11, 13, 14, 15, 17, 19, 20, 21, 23], [31, 32, 33, 34, 35, 36], [38, 39, 40, 41, 42, 43, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  41%|████▏     | 24/58 [00:00<00:00, 236.83it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 48/58 [00:00<00:00, 228.39it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:20<12:56,  5.59s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(12143, device='cuda:0')
before filtering torch.Size([5, 136769])
after filtering torch.Size([4, 136769])
num_ins_points_after_filtering tensor([ 369,  960, 3964, 6399], device='cuda:0')
Working on scene0025_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 17, 19, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 151], [13, 14, 16, 18, 37, 38, 40, 41], [21, 22, 23, 24, 25, 26, 27, 28], [29, 30, 31, 32, 33, 34, 35, 36, 39], [52, 141], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 142], [64, 65, 66, 67, 69, 70, 72, 143, 144], [68, 71, 73, 74, 75, 77, 145, 146, 147], [84, 86, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176], [133, 134, 135, 136, 137, 138], [139, 140]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/195 [00:00<00:01, 146.88it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/195 [00:00<00:00, 165.97it/s][A
Calculating viewed counts for every point:  26%|██▌       | 51/195 [00:00<00:00, 171.74it/s][A
Calculating viewed counts for every point:  35%|███▌      | 69/195 [00:00<00:00, 160.50it/s][A
Calculating viewed counts for every point:  44%|████▍     | 86/195 [00:00<00:00, 156.34it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 102/195 [00:00<00:00, 133.07it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 116/195 [00:00<00:00, 126.29it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 131/195 [00:00<00:00, 132.12it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 146/195 [00:01<00:00, 136.94it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 161/195 [00:01<00:00, 139.82it/s][A
Calculating viewed counts for every point:  91%|█████████ | 177/195 [00:01<00:00, 144.44it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 194/195 [00:01<00:00, 150.26it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:24<11:42,  5.09s/it]detected_ratio_thres_value tensor(0.3542, device='cuda:0')
final masked points tensor(14798, device='cuda:0')
before filtering torch.Size([11, 173392])
after filtering torch.Size([5, 173392])
num_ins_points_after_filtering tensor([5974,  666, 2669,  748,  966], device='cuda:0')
Working on scene0030_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 60, 62, 64, 65, 67, 69, 71, 73, 75, 78, 82, 216, 217, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 337, 340, 342, 343, 346, 347, 350, 351, 353], [26, 27, 28], [52, 55, 57, 59, 61, 63, 77, 80, 249, 251, 253, 255, 257, 259, 261, 263, 265], [66, 68, 70, 72, 74, 76, 79, 81, 83, 84, 86, 89, 91, 93, 96, 102, 105, 107, 110, 112, 114, 123, 125], [87, 88, 90, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 178, 179, 180, 182, 184, 187, 195, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 344], [171, 173, 176, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 223, 345, 348, 349, 352, 354]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/250 [00:00<00:02, 110.68it/s][A
Calculating viewed counts for every point:  10%|▉         | 24/250 [00:00<00:01, 113.04it/s][A
Calculating viewed counts for every point:  14%|█▍        | 36/250 [00:00<00:01, 111.47it/s][A
Calculating viewed counts for every point:  19%|█▉        | 48/250 [00:00<00:01, 111.48it/s][A
Calculating viewed counts for every point:  24%|██▍       | 60/250 [00:00<00:01, 114.33it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/250 [00:00<00:01, 114.24it/s][A
Calculating viewed counts for every point:  34%|███▎      | 84/250 [00:00<00:01, 115.75it/s][A
Calculating viewed counts for every point:  38%|███▊      | 96/250 [00:00<00:01, 112.85it/s][A
Calculating viewed counts for every point:  43%|████▎     | 108/250 [00:00<00:01, 111.25it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/250 [00:01<00:01, 113.01it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 132/250 [00:01<00:01, 114.88it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 145/250 [00:01<00:00, 116.73it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 158/250 [00:01<00:00, 118.20it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 170/250 [00:01<00:00, 117.69it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 182/250 [00:01<00:00, 113.92it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 194/250 [00:01<00:00, 112.95it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 206/250 [00:01<00:00, 112.13it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 218/250 [00:01<00:00, 112.03it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 230/250 [00:02<00:00, 107.79it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 241/250 [00:02<00:00, 107.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:38<18:29,  8.10s/it]detected_ratio_thres_value tensor(0.4444, device='cuda:0')
final masked points tensor(18727, device='cuda:0')
before filtering torch.Size([6, 293811])
after filtering torch.Size([3, 293811])
num_ins_points_after_filtering tensor([6975, 7508, 2231], device='cuda:0')
Working on scene0046_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 75, 76, 77, 78, 79, 80, 81, 164, 165, 166, 167, 168, 169, 170, 171, 172], [8, 9, 10, 27, 28], [11, 25, 26], [12, 13, 14, 15, 17, 21, 22, 23, 24, 64], [18, 19, 20, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74], [29, 30], [57, 82, 83, 84, 85, 86, 87, 88, 162, 163], [89, 90], [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], [106, 107, 108, 109, 124, 125], [120, 121, 122], [143, 144, 145, 146, 147, 148, 149, 150]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 16/249 [00:00<00:01, 153.35it/s][A
Calculating viewed counts for every point:  13%|█▎        | 33/249 [00:00<00:01, 162.76it/s][A
Calculating viewed counts for every point:  20%|██        | 50/249 [00:00<00:01, 163.88it/s][A
Calculating viewed counts for every point:  27%|██▋       | 67/249 [00:00<00:01, 165.48it/s][A
Calculating viewed counts for every point:  34%|███▎      | 84/249 [00:00<00:01, 157.42it/s][A
Calculating viewed counts for every point:  41%|████▏     | 103/249 [00:00<00:00, 165.20it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/249 [00:00<00:00, 160.73it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 137/249 [00:00<00:00, 159.62it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 155/249 [00:00<00:00, 163.64it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 173/249 [00:01<00:00, 168.00it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 190/249 [00:01<00:00, 166.69it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 208/249 [00:01<00:00, 168.28it/s][A
Calculating viewed counts for every point:  91%|█████████ | 227/249 [00:01<00:00, 174.25it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 245/249 [00:01<00:00, 166.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:43<16:23,  7.23s/it]detected_ratio_thres_value tensor(0.3514, device='cuda:0')
final masked points tensor(9760, device='cuda:0')
before filtering torch.Size([12, 186857])
after filtering torch.Size([5, 186857])
num_ins_points_after_filtering tensor([4814,  494, 2616, 1075,  391], device='cuda:0')
Working on scene0050_00 class counter
masks_to_be_merged [[0, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 122, 412, 416], [1, 2, 3, 4, 5, 6, 7, 8, 9, 78, 80, 84, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 408, 410, 411, 413, 414, 415], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 194, 196, 199, 200, 201, 205, 225, 228, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 355, 356, 357, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], [38, 39, 41, 42, 43, 44, 45, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 206, 207, 208, 209, 215, 218, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234], [40, 46, 47, 48, 49, 50, 51], [52, 53], [54, 55], [132, 133, 134, 138, 139, 141, 145, 156, 157, 158, 159, 216, 219, 221, 222, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 406, 407, 409], [135, 136, 137, 140, 142, 143, 144], [202, 203, 204], [210, 211, 212, 213, 214, 217, 220], [308, 311, 316, 317, 320, 322, 323, 324, 325, 326, 327], [349, 350, 352, 353, 354, 388, 389, 390], [359, 360]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/466 [00:00<00:02, 172.45it/s][A
Calculating viewed counts for every point:   8%|▊         | 36/466 [00:00<00:02, 174.29it/s][A
Calculating viewed counts for every point:  12%|█▏        | 57/466 [00:00<00:02, 187.58it/s][A
Calculating viewed counts for every point:  17%|█▋        | 78/466 [00:00<00:02, 192.63it/s][A
Calculating viewed counts for every point:  21%|██        | 99/466 [00:00<00:01, 198.54it/s][A
Calculating viewed counts for every point:  26%|██▌       | 119/466 [00:00<00:01, 194.49it/s][A
Calculating viewed counts for every point:  30%|██▉       | 139/466 [00:00<00:01, 191.04it/s][A
Calculating viewed counts for every point:  35%|███▍      | 162/466 [00:00<00:01, 200.96it/s][A
Calculating viewed counts for every point:  39%|███▉      | 183/466 [00:00<00:01, 188.34it/s][A
Calculating viewed counts for every point:  44%|████▎     | 203/466 [00:01<00:01, 180.15it/s][A
Calculating viewed counts for every point:  48%|████▊     | 222/466 [00:01<00:01, 178.82it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 240/466 [00:01<00:01, 178.53it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 261/466 [00:01<00:01, 185.61it/s][A
Calculating viewed counts for every point:  61%|██████    | 282/466 [00:01<00:00, 190.35it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 304/466 [00:01<00:00, 198.02it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 324/466 [00:01<00:00, 185.84it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 346/466 [00:01<00:00, 193.44it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 366/466 [00:01<00:00, 188.78it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 386/466 [00:02<00:00, 183.08it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 407/466 [00:02<00:00, 188.63it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 426/466 [00:02<00:00, 182.31it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 446/466 [00:02<00:00, 185.42it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 465/466 [00:02<00:00, 180.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:59<22:12,  9.87s/it]detected_ratio_thres_value tensor(0.3273, device='cuda:0')
final masked points tensor(29041, device='cuda:0')
before filtering torch.Size([15, 211406])
after filtering torch.Size([6, 211406])
num_ins_points_after_filtering tensor([5555, 1039, 7843, 3617, 5094, 4177], device='cuda:0')
Working on scene0063_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 5, 7, 9, 12], [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 58, 59, 61, 62, 63], [33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55], [34, 35], [36, 37, 38, 39, 40]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▏     | 35/84 [00:00<00:00, 346.33it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 70/84 [00:00<00:00, 306.97it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [01:00<15:49,  7.08s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(7324, device='cuda:0')
before filtering torch.Size([5, 76966])
after filtering torch.Size([4, 76966])
num_ins_points_after_filtering tensor([1679, 2729, 2022,  866], device='cuda:0')
Working on scene0064_00 class counter
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], [18, 19, 20, 21, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], [26, 27, 28, 30], [31, 32], [76, 77, 78, 79, 80, 81, 82], [84, 86, 87]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/121 [00:00<00:00, 151.68it/s][A
Calculating viewed counts for every point:  27%|██▋       | 33/121 [00:00<00:00, 157.71it/s][A
Calculating viewed counts for every point:  42%|████▏     | 51/121 [00:00<00:00, 163.23it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 68/121 [00:00<00:00, 153.00it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 84/121 [00:00<00:00, 143.01it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 103/121 [00:00<00:00, 153.77it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 119/121 [00:00<00:00, 145.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [01:02<12:37,  5.70s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(14339, device='cuda:0')
before filtering torch.Size([6, 230672])
after filtering torch.Size([2, 230672])
num_ins_points_after_filtering tensor([8104, 4593], device='cuda:0')
Working on scene0077_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 25, 26, 28, 29, 30, 31], [14, 15, 16], [17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  49%|████▉     | 30/61 [00:00<00:00, 294.03it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 60/61 [00:00<00:00, 284.13it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [01:03<09:06,  4.14s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(6835, device='cuda:0')
before filtering torch.Size([3, 92807])
after filtering torch.Size([2, 92807])
num_ins_points_after_filtering tensor([4372,  612], device='cuda:0')
Working on scene0081_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 20, 21, 23, 24, 25], [4, 5, 6, 7, 18, 19], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 25/30 [00:00<00:00, 243.48it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [01:03<06:33,  3.00s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(11544, device='cuda:0')
before filtering torch.Size([3, 51381])
after filtering torch.Size([3, 51381])
num_ins_points_after_filtering tensor([1237,  773, 9368], device='cuda:0')
Working on scene0084_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 108, 109, 110, 111, 112, 113, 114, 115, 116, 174, 175, 176, 177, 178, 179, 180, 181, 182], [72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 117, 118, 119, 120, 121, 122, 123, 124], [126, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], [128, 129, 130, 131, 133, 134, 135, 136], [155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167], [168, 169, 170, 171], [172, 173]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/198 [00:00<00:00, 221.40it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/198 [00:00<00:00, 224.71it/s][A
Calculating viewed counts for every point:  35%|███▍      | 69/198 [00:00<00:00, 222.83it/s][A
Calculating viewed counts for every point:  46%|████▋     | 92/198 [00:00<00:00, 207.56it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 113/198 [00:00<00:00, 205.94it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 134/198 [00:00<00:00, 202.27it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 155/198 [00:00<00:00, 202.78it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 176/198 [00:00<00:00, 203.13it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 197/198 [00:00<00:00, 188.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [01:08<07:20,  3.39s/it]detected_ratio_thres_value tensor(0.4545, device='cuda:0')
final masked points tensor(6939, device='cuda:0')
before filtering torch.Size([7, 116845])
after filtering torch.Size([3, 116845])
num_ins_points_after_filtering tensor([2904, 1024,  971], device='cuda:0')
Working on scene0086_00 class counter
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7, 8, 10, 13, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 77, 78, 79, 80, 81], [3, 9, 11, 12, 14, 15, 16, 17, 18, 21, 22, 24, 27, 28, 29, 30, 31, 33, 55, 57], [19, 20, 23, 25, 26, 32], [36, 40, 41, 42], [37, 38], [43, 66, 67, 68, 69, 70, 71, 72, 74, 76], [65, 73]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 22/143 [00:00<00:00, 215.41it/s][A
Calculating viewed counts for every point:  31%|███       | 44/143 [00:00<00:00, 205.96it/s][A
Calculating viewed counts for every point:  45%|████▌     | 65/143 [00:00<00:00, 201.36it/s][A
Calculating viewed counts for every point:  60%|██████    | 86/143 [00:00<00:00, 190.28it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 106/143 [00:00<00:00, 184.60it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 127/143 [00:00<00:00, 190.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [01:10<06:22,  2.97s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(7877, device='cuda:0')
before filtering torch.Size([7, 124572])
after filtering torch.Size([4, 124572])
num_ins_points_after_filtering tensor([1423,  900,  219,  259], device='cuda:0')
Working on scene0088_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 23/110 [00:00<00:00, 223.13it/s][A
Calculating viewed counts for every point:  42%|████▏     | 46/110 [00:00<00:00, 203.20it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 70/110 [00:00<00:00, 216.16it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 92/110 [00:00<00:00, 198.75it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [01:12<05:41,  2.67s/it]detected_ratio_thres_value tensor(0.5161, device='cuda:0')
final masked points tensor(8742, device='cuda:0')
before filtering torch.Size([1, 166872])
after filtering torch.Size([1, 166872])
num_ins_points_after_filtering tensor([8742], device='cuda:0')
Working on scene0095_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], [37, 38, 39, 40, 41, 43], [167, 168, 170, 171, 172, 173, 174, 175, 176, 177]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 16/166 [00:00<00:00, 151.82it/s][A
Calculating viewed counts for every point:  19%|█▉        | 32/166 [00:00<00:00, 155.35it/s][A
Calculating viewed counts for every point:  31%|███▏      | 52/166 [00:00<00:00, 174.79it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 171.12it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 88/166 [00:00<00:00, 170.46it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 106/166 [00:00<00:00, 166.37it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 123/166 [00:00<00:00, 158.48it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 139/166 [00:00<00:00, 156.38it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 157/166 [00:00<00:00, 162.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [01:16<06:25,  3.04s/it]detected_ratio_thres_value tensor(0.4231, device='cuda:0')
final masked points tensor(14704, device='cuda:0')
before filtering torch.Size([3, 214895])
after filtering torch.Size([3, 214895])
num_ins_points_after_filtering tensor([9861, 1859, 2980], device='cuda:0')
Working on scene0100_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [53, 54], [55, 56], [57, 58, 60, 61, 62, 63, 64]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 31/102 [00:00<00:00, 303.52it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 71/102 [00:00<00:00, 357.86it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [01:17<05:30,  2.62s/it]detected_ratio_thres_value tensor(0.6207, device='cuda:0')
final masked points tensor(7078, device='cuda:0')
before filtering torch.Size([4, 52304])
after filtering torch.Size([1, 52304])
num_ins_points_after_filtering tensor([7016], device='cuda:0')
Working on scene0131_00 class counter
masks_to_be_merged [[0, 2, 4], [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 106, 107, 108, 109, 110, 111], [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 20/108 [00:00<00:00, 196.01it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/108 [00:00<00:00, 203.86it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 63/108 [00:00<00:00, 202.92it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 84/108 [00:00<00:00, 200.92it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 105/108 [00:00<00:00, 198.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [01:20<05:16,  2.53s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(17448, device='cuda:0')
before filtering torch.Size([3, 177091])
after filtering torch.Size([2, 177091])
num_ins_points_after_filtering tensor([15248,  1849], device='cuda:0')
Working on scene0139_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], [12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 45, 46, 47], [39, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [68, 69, 70, 71, 72, 76], [73, 74, 75], [79, 80, 81, 82], [124, 125, 126]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▊       | 39/136 [00:00<00:00, 386.80it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 78/136 [00:00<00:00, 361.22it/s][A
Calculating viewed counts for every point:  90%|█████████ | 123/136 [00:00<00:00, 398.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [01:21<04:48,  2.33s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(14242, device='cuda:0')
before filtering torch.Size([7, 72007])
after filtering torch.Size([6, 72007])
num_ins_points_after_filtering tensor([1614, 6600, 1458, 1464,  652, 1853], device='cuda:0')
Working on scene0144_00 class counter
masks_to_be_merged [[0, 1, 133], [10, 11], [18, 19], [37, 38], [39, 121, 122], [42, 43, 44, 124, 125], [50, 51], [55, 56], [65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103], [69, 70, 71], [106, 107], [108, 109, 110, 111], [112, 113, 114], [115, 116, 117, 118, 119, 120], [137, 138, 139]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 25/144 [00:00<00:00, 248.58it/s][A
Calculating viewed counts for every point:  35%|███▌      | 51/144 [00:00<00:00, 251.00it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 77/144 [00:00<00:00, 242.77it/s][A
Calculating viewed counts for every point:  71%|███████   | 102/144 [00:00<00:00, 234.37it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 126/144 [00:00<00:00, 236.24it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [01:24<04:45,  2.32s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(10620, device='cuda:0')
before filtering torch.Size([15, 126879])
after filtering torch.Size([7, 126879])
num_ins_points_after_filtering tensor([2131, 2873,  300,  188,  604,  481,   38], device='cuda:0')
Working on scene0146_00 class counter
masks_to_be_merged [[1, 2, 100], [3, 4, 79, 80, 81, 82, 83, 84, 94, 95, 96, 98], [5, 7, 9], [8, 10, 11, 13], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47], [42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 85, 86, 87, 88, 89, 90, 91, 92, 93], [64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 99]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 38/141 [00:00<00:00, 375.18it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 76/141 [00:00<00:00, 335.45it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 110/141 [00:00<00:00, 322.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [01:25<04:17,  2.11s/it]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(5110, device='cuda:0')
before filtering torch.Size([7, 60438])
after filtering torch.Size([4, 60438])
num_ins_points_after_filtering tensor([ 321,   22, 1249, 1769], device='cuda:0')
Working on scene0149_00 class counter
masks_to_be_merged [[3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 41, 50, 51, 56], [76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93], [123, 126, 129]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/141 [00:00<00:00, 229.12it/s][A
Calculating viewed counts for every point:  33%|███▎      | 47/141 [00:00<00:00, 202.75it/s][A
Calculating viewed counts for every point:  50%|████▉     | 70/141 [00:00<00:00, 212.75it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 92/141 [00:00<00:00, 208.26it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 116/141 [00:00<00:00, 216.93it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 138/141 [00:00<00:00, 214.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [01:28<04:21,  2.16s/it]detected_ratio_thres_value tensor(0.4583, device='cuda:0')
final masked points tensor(13027, device='cuda:0')
before filtering torch.Size([4, 162396])
after filtering torch.Size([2, 162396])
num_ins_points_after_filtering tensor([9575, 2275], device='cuda:0')
Working on scene0153_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [14, 15], [17, 22], [19, 20], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 33/59 [00:00<00:00, 327.28it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [01:28<03:22,  1.69s/it]detected_ratio_thres_value tensor(0.5000, device='cuda:0')
final masked points tensor(5387, device='cuda:0')
before filtering torch.Size([5, 47709])
after filtering torch.Size([2, 47709])
num_ins_points_after_filtering tensor([2396, 1670], device='cuda:0')
Working on scene0164_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213], [125, 126, 127, 128, 129, 207, 208], [190, 191, 192, 193, 194]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 35/189 [00:00<00:00, 341.69it/s][A
Calculating viewed counts for every point:  39%|███▊      | 73/189 [00:00<00:00, 358.89it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 109/189 [00:00<00:00, 336.42it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 143/189 [00:00<00:00, 317.89it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 177/189 [00:00<00:00, 323.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [01:31<04:12,  2.12s/it]detected_ratio_thres_value tensor(0.5833, device='cuda:0')
final masked points tensor(9816, device='cuda:0')
before filtering torch.Size([3, 94315])
after filtering torch.Size([1, 94315])
num_ins_points_after_filtering tensor([9816], device='cuda:0')
Working on scene0169_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 83, 84, 86, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131], [20, 21, 22, 23, 25, 26, 28], [24, 27], [29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 89, 92, 93, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], [53, 54, 55, 57, 169, 170, 171, 172], [119, 121, 122], [132, 133]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 15/204 [00:00<00:01, 149.82it/s][A
Calculating viewed counts for every point:  15%|█▌        | 31/204 [00:00<00:01, 151.84it/s][A
Calculating viewed counts for every point:  23%|██▎       | 47/204 [00:00<00:01, 144.65it/s][A
Calculating viewed counts for every point:  30%|███       | 62/204 [00:00<00:01, 140.07it/s][A
Calculating viewed counts for every point:  38%|███▊      | 77/204 [00:00<00:00, 140.61it/s][A
Calculating viewed counts for every point:  45%|████▌     | 92/204 [00:00<00:00, 132.71it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 106/204 [00:00<00:00, 130.35it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 120/204 [00:00<00:00, 130.15it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 134/204 [00:00<00:00, 130.29it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 148/204 [00:01<00:00, 131.14it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 162/204 [00:01<00:00, 128.55it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 176/204 [00:01<00:00, 131.00it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 190/204 [00:01<00:00, 130.80it/s][A
Calculating viewed counts for every point: 100%|██████████| 204/204 [00:01<00:00, 131.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [01:36<05:31,  2.81s/it]detected_ratio_thres_value tensor(0.4138, device='cuda:0')
final masked points tensor(16966, device='cuda:0')
before filtering torch.Size([7, 239354])
after filtering torch.Size([2, 239354])
num_ins_points_after_filtering tensor([ 5037, 10897], device='cuda:0')
Working on scene0187_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 208, 213, 216, 220, 224, 228, 233, 237], [28, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 207, 211, 214, 215, 218, 230, 234, 239, 243, 291, 292, 297, 299, 301, 306, 310, 312], [48, 50, 51, 54, 56, 58, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 102, 104, 107, 109, 113, 116, 119, 212, 229, 231, 235, 238, 241, 245, 247, 248, 252, 286, 288, 290, 293, 294, 296, 298, 302, 303, 307, 308, 309, 311, 313, 314, 315, 316, 317], [95, 98, 99, 103, 105, 108, 110, 114, 117, 121, 123, 126, 128, 130, 132, 135, 250, 253], [106, 111, 112, 115, 118, 120, 122, 125, 127, 129, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 204, 206, 210, 219, 221, 222, 223, 226, 227, 232, 236, 240, 242, 244, 246, 249, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 284, 287, 289], [133, 304], [278, 280, 283, 285, 295, 305]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 24/227 [00:00<00:00, 236.56it/s][A
Calculating viewed counts for every point:  21%|██        | 48/227 [00:00<00:00, 225.90it/s][A
Calculating viewed counts for every point:  32%|███▏      | 73/227 [00:00<00:00, 234.13it/s][A
Calculating viewed counts for every point:  43%|████▎     | 97/227 [00:00<00:00, 228.15it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 121/227 [00:00<00:00, 230.26it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 145/227 [00:00<00:00, 215.39it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 167/227 [00:00<00:00, 208.22it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 189/227 [00:00<00:00, 210.13it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 211/227 [00:00<00:00, 205.54it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [01:42<07:27,  3.82s/it]detected_ratio_thres_value tensor(0.5250, device='cuda:0')
final masked points tensor(18577, device='cuda:0')
before filtering torch.Size([7, 173752])
after filtering torch.Size([5, 173752])
num_ins_points_after_filtering tensor([5000, 3691, 3962, 1494, 4430], device='cuda:0')
Working on scene0193_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 64, 65]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/72 [00:00<00:00, 171.08it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 39/72 [00:00<00:00, 190.01it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 59/72 [00:00<00:00, 190.82it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [01:43<05:52,  3.04s/it]detected_ratio_thres_value tensor(0.3939, device='cuda:0')
final masked points tensor(8092, device='cuda:0')
before filtering torch.Size([2, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([3669, 4423], device='cuda:0')
Working on scene0196_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 19, 20, 24, 26, 28, 30, 35, 37, 42, 44, 48, 49, 54, 55, 58, 61, 64, 67, 70, 71, 72, 74, 76, 78, 80, 82, 86, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], [13, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 36, 39, 40, 43, 46, 51, 53, 57, 60, 63, 66, 69, 85, 90, 93, 95, 96, 99, 101, 104, 107, 109, 111, 204, 206], [38, 45, 47], [50, 52, 56, 62, 65, 73, 77, 79], [83, 87], [84, 92, 103, 114, 116, 118, 122, 125, 126, 129, 130, 131, 133, 136, 137, 138, 140, 142, 144, 147, 149, 150, 152, 154, 155, 158, 217, 221, 224, 226, 228, 231, 233, 235, 238, 240, 242, 243, 245, 247, 248, 249, 251, 252, 253, 254], [97, 98, 100], [110, 112, 113, 115, 117, 119, 121, 222, 225, 229, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], [120, 123, 127, 223], [128, 132, 134, 135, 139, 141, 143, 145, 146, 148, 151, 153, 156, 157, 227, 230, 232, 234, 236, 237, 239, 241, 244], [216, 218, 219, 220]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/192 [00:00<00:00, 244.11it/s][A
Calculating viewed counts for every point:  26%|██▌       | 50/192 [00:00<00:00, 220.27it/s][A
Calculating viewed counts for every point:  39%|███▊      | 74/192 [00:00<00:00, 227.18it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 99/192 [00:00<00:00, 232.92it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 125/192 [00:00<00:00, 240.99it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 151/192 [00:00<00:00, 242.02it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 178/192 [00:00<00:00, 250.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [01:48<06:55,  3.61s/it]detected_ratio_thres_value tensor(0.5667, device='cuda:0')
final masked points tensor(9255, device='cuda:0')
before filtering torch.Size([11, 146032])
after filtering torch.Size([2, 146032])
num_ins_points_after_filtering tensor([3105, 1551], device='cuda:0')
Working on scene0203_00 class counter
masks_to_be_merged [[0, 1, 2, 41, 42, 43, 44, 50, 74, 76, 77, 78, 80, 81, 98, 100, 101, 102], [3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26, 27, 45, 46, 47, 48, 59, 72, 73, 75, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97, 99], [11, 13, 14, 15, 62, 63, 64, 65, 87], [28, 29, 30, 69, 70, 71, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124], [33, 34, 35], [40, 52], [49, 57], [53, 54], [86, 91]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 20/146 [00:00<00:00, 198.13it/s][A
Calculating viewed counts for every point:  27%|██▋       | 40/146 [00:00<00:00, 181.08it/s][A
Calculating viewed counts for every point:  42%|████▏     | 61/146 [00:00<00:00, 192.97it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 81/146 [00:00<00:00, 189.25it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 101/146 [00:00<00:00, 192.56it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 121/146 [00:00<00:00, 194.88it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 141/146 [00:00<00:00, 185.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [01:50<06:10,  3.25s/it]detected_ratio_thres_value tensor(0.3448, device='cuda:0')
final masked points tensor(10105, device='cuda:0')
before filtering torch.Size([9, 205756])
after filtering torch.Size([2, 205756])
num_ins_points_after_filtering tensor([1309, 1671], device='cuda:0')
Working on scene0207_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 94, 96, 98, 116, 117, 118, 119, 129, 130, 131, 132, 133, 134, 135, 136], [14, 15, 19, 20, 21, 120], [16, 17, 18, 115], [23, 24, 25], [26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 53, 54, 55, 56, 57, 58, 59, 60, 95, 97, 99, 100, 101, 102, 109, 111, 112, 113, 114], [41, 42, 43], [44, 46, 48, 50], [45, 47, 49, 51, 52, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 81, 82, 83, 84, 85], [68, 69, 70, 71, 72, 86, 87, 88, 89], [91, 92, 93], [103, 105], [104, 106, 107, 108], [121, 122, 123, 124, 125, 126, 127, 128], [137, 138]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 115.70it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 113.00it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:01, 119.72it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:01, 113.43it/s][A
Calculating viewed counts for every point:  31%|███       | 61/199 [00:00<00:01, 110.28it/s][A
Calculating viewed counts for every point:  37%|███▋      | 73/199 [00:00<00:01, 110.54it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/199 [00:00<00:01, 107.35it/s][A
Calculating viewed counts for every point:  49%|████▊     | 97/199 [00:00<00:00, 110.37it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 109/199 [00:00<00:00, 112.15it/s][A
Calculating viewed counts for every point:  61%|██████    | 121/199 [00:01<00:00, 112.61it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 134/199 [00:01<00:00, 115.56it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 146/199 [00:01<00:00, 113.29it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 158/199 [00:01<00:00, 113.29it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 170/199 [00:01<00:00, 112.01it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 182/199 [00:01<00:00, 108.01it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 194/199 [00:01<00:00, 110.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [01:55<06:38,  3.53s/it]detected_ratio_thres_value tensor(0.4194, device='cuda:0')
final masked points tensor(12056, device='cuda:0')
before filtering torch.Size([14, 304396])
after filtering torch.Size([4, 304396])
num_ins_points_after_filtering tensor([2906, 1329, 2034, 3171], device='cuda:0')
Working on scene0208_00 class counter
masks_to_be_merged [[2, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], [3, 4, 5, 6, 7, 9, 10, 11, 81, 82, 83, 84, 85], [12, 13, 15], [14, 57, 58], [16, 17, 19, 20, 22, 23, 24, 25, 60, 61], [18, 21, 52], [26, 27, 28, 29, 30, 31, 32, 33, 35, 108], [36, 37, 38, 39, 100, 106, 107, 109, 110, 111], [42, 43, 44], [46, 47], [50, 99], [54, 55, 56], [62, 63], [65, 71, 73, 74, 75, 79, 164, 165, 166, 176, 177], [66, 67, 68, 69, 70, 72, 76, 77, 78, 167, 173], [86, 87, 88, 89, 90, 91], [93, 94], [95, 96, 97, 98, 155, 156, 162, 163], [101, 102], [112, 113], [116, 117, 118], [120, 121, 122], [124, 125, 126], [129, 130], [132, 133], [168, 169, 170, 171], [175, 178, 179, 180]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 11/239 [00:00<00:02, 109.14it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/239 [00:00<00:01, 109.44it/s][A
Calculating viewed counts for every point:  14%|█▍        | 33/239 [00:00<00:01, 109.60it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/239 [00:00<00:01, 113.52it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/239 [00:00<00:01, 104.30it/s][A
Calculating viewed counts for every point:  29%|██▉       | 69/239 [00:00<00:01, 101.79it/s][A
Calculating viewed counts for every point:  33%|███▎      | 80/239 [00:00<00:01, 100.23it/s][A
Calculating viewed counts for every point:  38%|███▊      | 91/239 [00:00<00:01, 101.46it/s][A
Calculating viewed counts for every point:  44%|████▎     | 104/239 [00:00<00:01, 107.29it/s][A
Calculating viewed counts for every point:  48%|████▊     | 115/239 [00:01<00:01, 107.87it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 126/239 [00:01<00:01, 104.77it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 138/239 [00:01<00:00, 106.55it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 149/239 [00:01<00:00, 107.00it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 161/239 [00:01<00:00, 108.96it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 172/239 [00:01<00:00, 101.19it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/239 [00:01<00:00, 99.49it/s] [A
Calculating viewed counts for every point:  81%|████████  | 194/239 [00:01<00:00, 101.29it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 205/239 [00:01<00:00, 99.45it/s] [A
Calculating viewed counts for every point:  90%|████████▉ | 215/239 [00:02<00:00, 98.39it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 227/239 [00:02<00:00, 101.84it/s][A
Calculating viewed counts for every point: 100%|██████████| 239/239 [00:02<00:00, 104.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [02:01<08:12,  4.40s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(53801, device='cuda:0')
before filtering torch.Size([27, 407386])
after filtering torch.Size([8, 407386])
num_ins_points_after_filtering tensor([2849, 1941, 4829, 2766, 2031,  511,  382, 3361], device='cuda:0')
Working on scene0217_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], [28, 29, 30, 109], [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 110, 111, 112, 113, 114, 115, 116], [45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 21/125 [00:00<00:00, 201.80it/s][A
Calculating viewed counts for every point:  34%|███▎      | 42/125 [00:00<00:00, 197.85it/s][A
Calculating viewed counts for every point:  50%|████▉     | 62/125 [00:00<00:00, 193.26it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 82/125 [00:00<00:00, 186.58it/s][A
Calculating viewed counts for every point:  81%|████████  | 101/125 [00:00<00:00, 186.13it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 123/125 [00:00<00:00, 194.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [02:03<06:57,  3.76s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(18515, device='cuda:0')
before filtering torch.Size([6, 126385])
after filtering torch.Size([3, 126385])
num_ins_points_after_filtering tensor([8747, 2977, 3939], device='cuda:0')
Working on scene0221_00 class counter
masks_to_be_merged [[0, 69, 71, 72, 73, 75, 76, 80, 82, 83, 84, 85], [1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 12, 13, 14], [15, 16, 17], [18, 19, 20, 21, 27, 28, 29], [22, 23, 24, 25, 26], [34, 35, 36, 37, 38, 39, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], [40, 41, 43, 44, 45, 46, 47], [64, 65, 66, 68, 70, 74, 77, 78, 79, 81]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/98 [00:00<00:00, 215.56it/s][A
Calculating viewed counts for every point:  46%|████▌     | 45/98 [00:00<00:00, 221.48it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 68/98 [00:00<00:00, 199.66it/s][A
Calculating viewed counts for every point:  91%|█████████ | 89/98 [00:00<00:00, 185.33it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [02:05<05:42,  3.12s/it]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(17948, device='cuda:0')
before filtering torch.Size([9, 185828])
after filtering torch.Size([7, 185828])
num_ins_points_after_filtering tensor([1785, 3366, 2147, 1347, 4155, 1164, 1435], device='cuda:0')
Working on scene0222_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 333, 334, 335, 336, 337, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 460], [30, 34, 35, 175], [31, 32, 33, 36, 37, 38, 39, 40, 41, 161, 162, 170, 171, 173, 174], [42, 43, 44, 45, 46, 47, 172, 176, 177, 178, 179, 180, 181, 182, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215], [48, 49, 50, 51, 208, 209, 210, 217, 218, 219, 220, 221], [52, 244, 246, 261, 262, 263], [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], [65, 68], [154, 159], [155, 158], [163, 164, 165, 166, 167, 168, 169], [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], [195, 197, 198, 199, 200, 201], [222, 223, 224, 225], [245, 247], [327, 328, 329, 330, 365, 366, 367, 368], [331, 332, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 364], [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], [349, 357, 360], [358, 359], [382, 383, 387, 388], [384, 385, 386], [449, 450, 451, 452, 453, 454, 455, 456, 457, 458]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 14/543 [00:00<00:03, 136.75it/s][A
Calculating viewed counts for every point:   6%|▋         | 35/543 [00:00<00:02, 175.09it/s][A
Calculating viewed counts for every point:  10%|█         | 56/543 [00:00<00:02, 187.91it/s][A
Calculating viewed counts for every point:  14%|█▍        | 75/543 [00:00<00:02, 183.02it/s][A
Calculating viewed counts for every point:  17%|█▋        | 94/543 [00:00<00:02, 171.84it/s][A
Calculating viewed counts for every point:  21%|██        | 113/543 [00:00<00:02, 174.91it/s][A
Calculating viewed counts for every point:  24%|██▍       | 132/543 [00:00<00:02, 178.23it/s][A
Calculating viewed counts for every point:  28%|██▊       | 152/543 [00:00<00:02, 182.61it/s][A
Calculating viewed counts for every point:  32%|███▏      | 173/543 [00:00<00:01, 190.26it/s][A
Calculating viewed counts for every point:  36%|███▌      | 194/543 [00:01<00:01, 195.47it/s][A
Calculating viewed counts for every point:  40%|███▉      | 216/543 [00:01<00:01, 201.33it/s][A
Calculating viewed counts for every point:  44%|████▎     | 237/543 [00:01<00:01, 202.00it/s][A
Calculating viewed counts for every point:  48%|████▊     | 258/543 [00:01<00:01, 191.30it/s][A
Calculating viewed counts for every point:  51%|█████     | 278/543 [00:01<00:01, 185.35it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 298/543 [00:01<00:01, 189.31it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 318/543 [00:01<00:01, 187.63it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 337/543 [00:01<00:01, 183.98it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 356/543 [00:01<00:01, 179.45it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 374/543 [00:02<00:00, 176.62it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 392/543 [00:02<00:00, 169.41it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 412/543 [00:02<00:00, 176.49it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 430/543 [00:02<00:00, 169.94it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 448/543 [00:02<00:00, 167.81it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 465/543 [00:02<00:00, 166.81it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 482/543 [00:02<00:00, 166.83it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 499/543 [00:02<00:00, 161.89it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 516/543 [00:02<00:00, 157.66it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 532/543 [00:03<00:00, 154.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [02:20<12:25,  6.84s/it]detected_ratio_thres_value tensor(0.5082, device='cuda:0')
final masked points tensor(13648, device='cuda:0')
before filtering torch.Size([23, 234831])
after filtering torch.Size([3, 234831])
num_ins_points_after_filtering tensor([4395, 6221, 1797], device='cuda:0')
Working on scene0231_00 class counter
masks_to_be_merged [[0, 2, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 108, 110, 112, 114, 116, 126, 127, 128, 129, 130, 132, 134, 135, 137, 139, 141, 142, 143, 144, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 352, 355, 356, 358, 359, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 439, 440, 441, 443, 444, 445, 446, 448], [1, 3, 5, 7, 9, 11, 98, 100, 102, 107, 109, 111, 131, 133, 136, 138, 140, 196, 206, 210, 211, 230, 232, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 278, 287, 289, 290, 291, 293, 294, 296, 297, 298, 299, 301, 303, 307, 309, 310, 311, 312, 313, 314, 315, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 163, 164, 165, 166, 186, 187, 188, 189, 190, 191, 337, 338, 339, 340, 341, 342, 436, 437, 438, 442, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457], [37, 38], [39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 167, 168, 169, 170, 173, 185, 458, 459], [49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 78, 79, 80, 179, 182, 183], [58, 177], [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 81, 82, 83, 84, 160, 161, 162, 180, 181, 184, 343, 344, 345], [85, 86, 87, 88, 89], [145, 146, 147, 148, 149, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 239, 242, 300, 302, 304, 305, 306, 308, 349, 350, 351, 353, 354, 357, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413], [171, 172, 174, 176, 178], [221, 222, 223, 224], [253, 254, 255, 256, 257, 258, 259, 261, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288], [263, 266, 268, 270], [401, 402, 403], [429, 430], [431, 432, 433]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 98.32it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/444 [00:00<00:04, 102.80it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 107.30it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 103.73it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 100.59it/s][A
Calculating viewed counts for every point:  15%|█▌        | 67/444 [00:00<00:03, 106.01it/s][A
Calculating viewed counts for every point:  18%|█▊        | 79/444 [00:00<00:03, 108.15it/s][A
Calculating viewed counts for every point:  20%|██        | 91/444 [00:00<00:03, 109.26it/s][A
Calculating viewed counts for every point:  23%|██▎       | 102/444 [00:00<00:03, 105.43it/s][A
Calculating viewed counts for every point:  25%|██▌       | 113/444 [00:01<00:03, 104.81it/s][A
Calculating viewed counts for every point:  28%|██▊       | 124/444 [00:01<00:03, 104.29it/s][A
Calculating viewed counts for every point:  30%|███       | 135/444 [00:01<00:02, 103.03it/s][A
Calculating viewed counts for every point:  33%|███▎      | 146/444 [00:01<00:02, 103.59it/s][A
Calculating viewed counts for every point:  35%|███▌      | 157/444 [00:01<00:02, 104.10it/s][A
Calculating viewed counts for every point:  38%|███▊      | 168/444 [00:01<00:02, 100.81it/s][A
Calculating viewed counts for every point:  40%|████      | 179/444 [00:01<00:02, 101.71it/s][A
Calculating viewed counts for every point:  43%|████▎     | 191/444 [00:01<00:02, 104.72it/s][A
Calculating viewed counts for every point:  46%|████▌     | 203/444 [00:01<00:02, 107.22it/s][A
Calculating viewed counts for every point:  48%|████▊     | 214/444 [00:02<00:02, 105.33it/s][A
Calculating viewed counts for every point:  51%|█████     | 225/444 [00:02<00:02, 104.35it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 237/444 [00:02<00:01, 107.77it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 249/444 [00:02<00:01, 110.81it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 261/444 [00:02<00:01, 103.99it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 272/444 [00:02<00:01, 98.97it/s] [A
Calculating viewed counts for every point:  64%|██████▎   | 283/444 [00:02<00:01, 96.61it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 293/444 [00:02<00:01, 89.56it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 303/444 [00:02<00:01, 87.52it/s][A
Calculating viewed counts for every point:  70%|███████   | 312/444 [00:03<00:01, 82.24it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 321/444 [00:03<00:01, 79.99it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 330/444 [00:03<00:01, 79.55it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 340/444 [00:03<00:01, 83.14it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 351/444 [00:03<00:01, 89.44it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 362/444 [00:03<00:00, 94.83it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 372/444 [00:03<00:00, 94.94it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 383/444 [00:03<00:00, 97.28it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 393/444 [00:03<00:00, 96.47it/s][A
Calculating viewed counts for every point:  91%|█████████ | 404/444 [00:04<00:00, 99.81it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 415/444 [00:04<00:00, 101.61it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 426/444 [00:04<00:00, 103.89it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 438/444 [00:04<00:00, 106.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [02:36<17:14,  9.58s/it]detected_ratio_thres_value tensor(0.3962, device='cuda:0')
final masked points tensor(36873, device='cuda:0')
before filtering torch.Size([17, 419537])
after filtering torch.Size([5, 419537])
num_ins_points_after_filtering tensor([ 7288,  7812,  4970,  3616, 11101], device='cuda:0')
Working on scene0246_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 78, 79, 80, 81, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233], [12, 15, 73, 74], [30, 31], [32, 33], [46, 47, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 163, 164, 165, 166], [84, 85, 86, 87, 88, 89], [101, 102, 103], [105, 106, 107, 108, 109], [127, 128, 129], [153, 154, 156, 158, 159], [160, 161], [167, 168, 215, 216, 217, 218, 227, 228, 229, 234]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/296 [00:00<00:01, 161.53it/s][A
Calculating viewed counts for every point:  12%|█▏        | 36/296 [00:00<00:01, 176.47it/s][A
Calculating viewed counts for every point:  19%|█▊        | 55/296 [00:00<00:01, 179.83it/s][A
Calculating viewed counts for every point:  25%|██▍       | 73/296 [00:00<00:01, 179.01it/s][A
Calculating viewed counts for every point:  31%|███       | 92/296 [00:00<00:01, 182.68it/s][A
Calculating viewed counts for every point:  38%|███▊      | 111/296 [00:00<00:01, 184.25it/s][A
Calculating viewed counts for every point:  44%|████▍     | 130/296 [00:00<00:00, 184.11it/s][A
Calculating viewed counts for every point:  50%|█████     | 149/296 [00:00<00:00, 184.16it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 170/296 [00:00<00:00, 191.26it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 192/296 [00:01<00:00, 198.42it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 214/296 [00:01<00:00, 202.90it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 235/296 [00:01<00:00, 173.41it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 254/296 [00:01<00:00, 173.00it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 276/296 [00:01<00:00, 183.78it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 295/296 [00:01<00:00, 178.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [02:40<13:50,  7.76s/it]detected_ratio_thres_value tensor(0.3061, device='cuda:0')
final masked points tensor(14735, device='cuda:0')
before filtering torch.Size([13, 201062])
after filtering torch.Size([3, 201062])
num_ins_points_after_filtering tensor([10250,  1905,   300], device='cuda:0')
Working on scene0249_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 75, 77, 80, 83, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 267, 268, 269, 270, 271, 272, 273], [58, 59, 66, 67, 68, 69, 70, 71, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], [62, 63, 64, 65, 231, 232, 233, 248, 249, 250, 251, 252, 253], [82, 90], [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], [264, 265]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/274 [00:00<00:01, 142.37it/s][A
Calculating viewed counts for every point:  11%|█         | 30/274 [00:00<00:01, 136.50it/s][A
Calculating viewed counts for every point:  16%|█▌        | 44/274 [00:00<00:01, 119.91it/s][A
Calculating viewed counts for every point:  21%|██        | 57/274 [00:00<00:01, 117.35it/s][A
Calculating viewed counts for every point:  26%|██▌       | 70/274 [00:00<00:01, 121.12it/s][A
Calculating viewed counts for every point:  31%|███       | 84/274 [00:00<00:01, 124.76it/s][A
Calculating viewed counts for every point:  35%|███▌      | 97/274 [00:00<00:01, 119.43it/s][A
Calculating viewed counts for every point:  40%|████      | 110/274 [00:00<00:01, 120.86it/s][A
Calculating viewed counts for every point:  45%|████▌     | 124/274 [00:01<00:01, 125.37it/s][A
Calculating viewed counts for every point:  50%|█████     | 137/274 [00:01<00:01, 119.41it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 150/274 [00:01<00:01, 119.35it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 163/274 [00:01<00:00, 120.05it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 176/274 [00:01<00:00, 116.88it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 188/274 [00:01<00:00, 113.32it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 200/274 [00:01<00:00, 111.75it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 212/274 [00:01<00:00, 109.57it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 224/274 [00:01<00:00, 111.08it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 236/274 [00:02<00:00, 102.62it/s][A
Calculating viewed counts for every point:  90%|█████████ | 247/274 [00:02<00:00, 92.85it/s] [A
Calculating viewed counts for every point:  95%|█████████▍| 260/274 [00:02<00:00, 100.62it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 271/274 [00:02<00:00, 101.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [02:45<12:28,  7.06s/it]detected_ratio_thres_value tensor(0.3448, device='cuda:0')
final masked points tensor(27568, device='cuda:0')
before filtering torch.Size([7, 331031])
after filtering torch.Size([3, 331031])
num_ins_points_after_filtering tensor([ 1994, 22833,  2620], device='cuda:0')
Working on scene0251_00 class counter
masks_to_be_merged [[0, 3, 4, 5], [1, 2], [6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], [63, 64, 65, 66, 67, 68, 69, 70, 71], [72, 74, 75, 76], [77, 78, 79, 80, 81, 82, 84, 85], [83, 86, 87, 88, 89, 91, 93, 99], [90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 142, 146], [138, 139, 147], [185, 186, 187, 188]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/155 [00:00<00:01, 128.99it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 127.88it/s][A
Calculating viewed counts for every point:  26%|██▌       | 40/155 [00:00<00:00, 131.14it/s][A
Calculating viewed counts for every point:  36%|███▌      | 56/155 [00:00<00:00, 139.21it/s][A
Calculating viewed counts for every point:  46%|████▋     | 72/155 [00:00<00:00, 143.90it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 87/155 [00:00<00:00, 140.80it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 102/155 [00:00<00:00, 139.88it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 117/155 [00:00<00:00, 141.15it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 132/155 [00:00<00:00, 129.39it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 147/155 [00:01<00:00, 134.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [02:48<10:09,  5.81s/it]detected_ratio_thres_value tensor(0.4286, device='cuda:0')
final masked points tensor(23334, device='cuda:0')
before filtering torch.Size([11, 226765])
after filtering torch.Size([4, 226765])
num_ins_points_after_filtering tensor([7286, 3745, 4517, 5839], device='cuda:0')
Working on scene0256_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [83, 84, 90], [85, 86, 87, 88, 91, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 133, 134, 135, 137], [129, 130, 131, 132]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:00, 256.08it/s][A
Calculating viewed counts for every point:  34%|███▍      | 53/156 [00:00<00:00, 261.31it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 80/156 [00:00<00:00, 263.63it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 107/156 [00:00<00:00, 264.92it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 138/156 [00:00<00:00, 277.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [02:50<08:00,  4.62s/it]detected_ratio_thres_value tensor(0.3830, device='cuda:0')
final masked points tensor(7568, device='cuda:0')
before filtering torch.Size([4, 108517])
after filtering torch.Size([1, 108517])
num_ins_points_after_filtering tensor([6373], device='cuda:0')
Working on scene0257_00 class counter
masks_to_be_merged [[1, 2, 5, 6, 9, 11, 13, 15, 16, 19, 21, 23, 25, 27, 29, 39, 45, 47, 49, 51, 53, 55, 57, 58, 60, 63, 64, 66, 69, 70, 72, 74, 76, 78, 134, 135, 136, 137, 139, 141, 143, 146, 149, 151, 154, 180, 182, 183, 184, 186, 187, 189, 190, 191, 195, 197, 200], [3, 4, 7, 8, 10, 12, 14, 17, 18, 20, 22, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 48, 50, 52, 54, 56, 59, 61, 62, 65, 67, 68, 71, 73, 75, 77, 138, 140, 142, 144, 145, 147, 148, 150, 152, 153, 155, 156, 157, 185, 192, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [84, 89, 92, 94, 98, 100, 105, 109, 112, 114, 116, 117, 238], [86, 90, 108, 110, 111, 113, 115, 119, 237], [88, 93], [97, 102, 104, 107, 226, 228, 233, 234], [99, 106, 222, 223, 224, 225, 232], [101, 118, 120, 123, 125, 126, 128, 131], [122, 124, 127, 129, 130, 132], [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177], [171, 172, 173, 175], [178, 179, 181], [214, 215, 216], [217, 219, 220], [227, 229, 230]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 19/165 [00:00<00:00, 186.96it/s][A
Calculating viewed counts for every point:  23%|██▎       | 38/165 [00:00<00:00, 187.51it/s][A
Calculating viewed counts for every point:  37%|███▋      | 61/165 [00:00<00:00, 204.05it/s][A
Calculating viewed counts for every point:  50%|█████     | 83/165 [00:00<00:00, 207.65it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 105/165 [00:00<00:00, 211.22it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 127/165 [00:00<00:00, 209.08it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 148/165 [00:00<00:00, 205.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [02:55<08:02,  4.68s/it]detected_ratio_thres_value tensor(0.4878, device='cuda:0')
final masked points tensor(11049, device='cuda:0')
before filtering torch.Size([15, 180928])
after filtering torch.Size([7, 180928])
num_ins_points_after_filtering tensor([1913, 7130,  198,  289,  375,  433,   61], device='cuda:0')
Working on scene0277_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 102, 103, 104, 105, 106, 107, 108, 109, 110], [16, 17, 70, 71, 72, 73, 74, 75], [25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100], [48, 49, 101], [78, 80]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 26/115 [00:00<00:00, 250.84it/s][A
Calculating viewed counts for every point:  45%|████▌     | 52/115 [00:00<00:00, 240.96it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 80/115 [00:00<00:00, 256.16it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 106/115 [00:00<00:00, 229.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [02:57<06:47,  3.99s/it]detected_ratio_thres_value tensor(0.4074, device='cuda:0')
final masked points tensor(11470, device='cuda:0')
before filtering torch.Size([5, 79184])
after filtering torch.Size([3, 79184])
num_ins_points_after_filtering tensor([3119, 1229, 7101], device='cuda:0')
Working on scene0278_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [26, 28, 30, 31, 32, 33, 34], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], [47, 48, 49, 50, 51, 52]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▎     | 34/80 [00:00<00:00, 335.97it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 69/80 [00:00<00:00, 340.59it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [02:58<05:07,  3.05s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(10326, device='cuda:0')
before filtering torch.Size([4, 77020])
after filtering torch.Size([3, 77020])
num_ins_points_after_filtering tensor([7199, 2168,  956], device='cuda:0')
Working on scene0300_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 129, 130, 132, 133, 134, 136, 137, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], [24, 25, 27, 30, 174], [28, 29, 32, 175], [31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], [69, 72, 74, 85, 89, 120, 131, 135, 138, 139, 141, 142, 145, 147, 149], [121, 122, 123, 124], [125, 126, 127]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 28/175 [00:00<00:00, 277.80it/s][A
Calculating viewed counts for every point:  32%|███▏      | 56/175 [00:00<00:00, 266.69it/s][A
Calculating viewed counts for every point:  47%|████▋     | 83/175 [00:00<00:00, 267.28it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 110/175 [00:00<00:00, 254.87it/s][A
Calculating viewed counts for every point:  80%|████████  | 140/175 [00:00<00:00, 267.63it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 168/175 [00:00<00:00, 268.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [03:03<05:56,  3.57s/it]detected_ratio_thres_value tensor(0.4643, device='cuda:0')
final masked points tensor(11965, device='cuda:0')
before filtering torch.Size([7, 140216])
after filtering torch.Size([2, 140216])
num_ins_points_after_filtering tensor([6362, 3741], device='cuda:0')
Working on scene0304_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 6, 7, 8, 9, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142], [4, 5], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], [92, 93], [109, 110, 111, 112, 116, 117, 118, 121, 122, 123, 124, 125, 126], [113, 114, 115], [119, 120], [128, 129]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 21/178 [00:00<00:00, 207.62it/s][A
Calculating viewed counts for every point:  24%|██▎       | 42/178 [00:00<00:00, 201.81it/s][A
Calculating viewed counts for every point:  38%|███▊      | 67/178 [00:00<00:00, 218.05it/s][A
Calculating viewed counts for every point:  51%|█████     | 91/178 [00:00<00:00, 223.72it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 114/178 [00:00<00:00, 208.05it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 136/178 [00:00<00:00, 208.69it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 157/178 [00:00<00:00, 208.62it/s][A
Calculating viewed counts for every point: 100%|██████████| 178/178 [00:00<00:00, 201.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [03:07<05:55,  3.59s/it]detected_ratio_thres_value tensor(0.4423, device='cuda:0')
final masked points tensor(15329, device='cuda:0')
before filtering torch.Size([8, 164016])
after filtering torch.Size([2, 164016])
num_ins_points_after_filtering tensor([7985,  574], device='cuda:0')
Working on scene0307_00 class counter
masks_to_be_merged [[0, 1, 10, 11, 12, 13, 152, 159], [2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 142, 144, 146, 148, 149, 151, 153, 154, 155, 156, 157, 158], [14, 15], [18, 19, 20, 21, 22, 60, 61, 62, 63, 65, 66, 68, 69, 72, 73, 74], [24, 25, 26, 27, 31, 32, 34, 104, 107, 108, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [30, 33, 35, 40, 41, 103, 126, 139, 140, 141, 143, 145, 147, 150], [55, 56, 162], [57, 58, 59, 160, 161], [64, 70], [76, 77, 78, 79, 80, 81, 82, 83], [84, 85, 86, 87, 88, 89, 91], [90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], [105, 106], [110, 111, 112, 113]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 106.07it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 99.15it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 32/205 [00:00<00:01, 88.14it/s][A
Calculating viewed counts for every point:  21%|██        | 43/205 [00:00<00:01, 93.93it/s][A
Calculating viewed counts for every point:  26%|██▌       | 53/205 [00:00<00:01, 93.92it/s][A
Calculating viewed counts for every point:  31%|███       | 63/205 [00:00<00:01, 90.55it/s][A
Calculating viewed counts for every point:  36%|███▌      | 74/205 [00:00<00:01, 96.08it/s][A
Calculating viewed counts for every point:  41%|████      | 84/205 [00:00<00:01, 93.14it/s][A
Calculating viewed counts for every point:  46%|████▌     | 94/205 [00:01<00:01, 91.92it/s][A
Calculating viewed counts for every point:  51%|█████     | 104/205 [00:01<00:01, 91.70it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 114/205 [00:01<00:01, 89.31it/s][A
Calculating viewed counts for every point:  60%|██████    | 123/205 [00:01<00:00, 86.88it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 134/205 [00:01<00:00, 93.10it/s][A
Calculating viewed counts for every point:  70%|███████   | 144/205 [00:01<00:00, 85.99it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 153/205 [00:01<00:00, 85.97it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 162/205 [00:01<00:00, 85.69it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 171/205 [00:01<00:00, 83.56it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 180/205 [00:02<00:00, 83.95it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 190/205 [00:02<00:00, 87.03it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 200/205 [00:02<00:00, 89.93it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [03:12<06:47,  4.16s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(17381, device='cuda:0')
before filtering torch.Size([14, 371616])
after filtering torch.Size([4, 371616])
num_ins_points_after_filtering tensor([3692, 1575, 1401, 1406], device='cuda:0')
Working on scene0314_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 28/93 [00:00<00:00, 276.46it/s][A
Calculating viewed counts for every point:  60%|██████    | 56/93 [00:00<00:00, 265.01it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 83/93 [00:00<00:00, 244.78it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 45/142 [03:14<05:36,  3.47s/it]detected_ratio_thres_value tensor(0.8095, device='cuda:0')
final masked points tensor(3836, device='cuda:0')
before filtering torch.Size([1, 87446])
after filtering torch.Size([1, 87446])
num_ins_points_after_filtering tensor([3836], device='cuda:0')
Working on scene0316_00 class counter
masks_to_be_merged [[1, 2, 4, 5, 7, 9, 61, 62, 63, 64, 65, 66], [6, 8, 10, 11, 12], [13, 14, 15, 16, 18, 19, 22, 24, 25, 26], [17, 20, 21, 23, 27, 28, 29, 31, 33, 35, 37, 40, 42, 45, 47, 49, 67, 68, 69, 70, 71], [30, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50], [51, 52], [53, 54], [55, 56, 57, 59], [58, 60]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|██▉       | 23/77 [00:00<00:00, 226.15it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 46/77 [00:00<00:00, 211.80it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 68/77 [00:00<00:00, 214.50it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [03:15<04:27,  2.78s/it]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(21421, device='cuda:0')
before filtering torch.Size([9, 78769])
after filtering torch.Size([4, 78769])
num_ins_points_after_filtering tensor([ 4342,  1624,  3567, 11081], device='cuda:0')
Working on scene0328_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], [16, 19, 20, 21], [122, 124]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 26/142 [00:00<00:00, 251.86it/s][A
Calculating viewed counts for every point:  38%|███▊      | 54/142 [00:00<00:00, 265.08it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 85/142 [00:00<00:00, 281.49it/s][A
Calculating viewed counts for every point:  80%|████████  | 114/142 [00:00<00:00, 275.42it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [03:18<04:17,  2.71s/it]detected_ratio_thres_value tensor(0.4490, device='cuda:0')
final masked points tensor(16868, device='cuda:0')
before filtering torch.Size([3, 111467])
after filtering torch.Size([1, 111467])
num_ins_points_after_filtering tensor([16755], device='cuda:0')
Working on scene0329_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 19, 20, 21, 22, 25, 26, 27, 28, 47, 51, 53, 55, 57, 59, 62, 63, 103], [6, 8, 9, 10, 12, 14, 18, 48, 49, 50, 52, 54, 56, 58, 60, 99, 102, 104, 106], [11, 13, 15, 16, 17, 98, 100, 101, 105], [33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 139, 140, 141, 142, 143, 144, 145, 146], [35, 45, 46], [38, 137, 138], [64, 65, 66, 67, 68, 69, 70, 71], [73, 75], [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 111, 112, 113, 115, 117, 120], [89, 91, 92, 93, 94, 95, 107, 108, 109, 110, 114, 116, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131], [96, 97], [132, 133, 134]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/156 [00:00<00:01, 130.69it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:01, 119.20it/s][A
Calculating viewed counts for every point:  26%|██▌       | 40/156 [00:00<00:00, 116.87it/s][A
Calculating viewed counts for every point:  33%|███▎      | 52/156 [00:00<00:00, 114.77it/s][A
Calculating viewed counts for every point:  41%|████      | 64/156 [00:00<00:00, 114.48it/s][A
Calculating viewed counts for every point:  49%|████▉     | 77/156 [00:00<00:00, 118.30it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 89/156 [00:00<00:00, 116.95it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 101/156 [00:00<00:00, 117.14it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 113/156 [00:00<00:00, 116.53it/s][A
Calculating viewed counts for every point:  80%|████████  | 125/156 [00:01<00:00, 113.44it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 138/156 [00:01<00:00, 116.82it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 151/156 [00:01<00:00, 118.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [03:22<04:45,  3.04s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(25120, device='cuda:0')
before filtering torch.Size([12, 355413])
after filtering torch.Size([7, 355413])
num_ins_points_after_filtering tensor([5742, 1880, 4212, 5608, 2924, 1495, 1033], device='cuda:0')
Working on scene0334_00 class counter
masks_to_be_merged [[0, 3, 6, 7, 10, 12, 14, 15, 17, 19, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 154, 155, 156, 157, 159, 160, 161, 163, 165, 167, 169, 171, 173, 176, 177, 180, 181, 182, 184, 187, 188, 190, 192], [1, 2, 4, 8, 9, 11, 13, 16, 18, 20, 22, 27, 162, 164, 166, 168, 170, 172, 174, 175, 178, 179, 183, 185, 186, 189, 191, 193], [35, 37, 39, 41, 43, 50, 52, 54, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 71, 74, 76, 77, 78, 80, 81, 83, 85, 86, 89, 92, 96], [45, 46, 48, 51, 69, 72], [55, 57, 59, 82, 84, 87, 88, 91, 94, 97, 98, 100, 102, 105, 106, 107, 108, 109, 117, 120, 122, 131, 133, 134, 136, 137, 140, 142], [90, 93, 95, 99, 101, 103, 104, 135, 138, 141, 144, 145, 146, 147, 148, 149, 150], [110, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 139, 143], [111, 113]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/119 [00:00<00:00, 153.73it/s][A
Calculating viewed counts for every point:  27%|██▋       | 32/119 [00:00<00:00, 142.37it/s][A
Calculating viewed counts for every point:  40%|████      | 48/119 [00:00<00:00, 145.07it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 63/119 [00:00<00:00, 134.41it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 77/119 [00:00<00:00, 134.63it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 92/119 [00:00<00:00, 138.08it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 107/119 [00:00<00:00, 140.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [03:25<05:01,  3.24s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(21327, device='cuda:0')
before filtering torch.Size([8, 197174])
after filtering torch.Size([4, 197174])
num_ins_points_after_filtering tensor([3242, 1563, 3602, 2740], device='cuda:0')
Working on scene0338_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [19, 20, 21, 22, 23, 24, 73, 74, 75, 76, 77, 78, 79], [26, 80, 81], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], [56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 31/81 [00:00<00:00, 302.63it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 62/81 [00:00<00:00, 285.25it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [03:26<04:01,  2.62s/it]detected_ratio_thres_value tensor(0.4375, device='cuda:0')
final masked points tensor(16619, device='cuda:0')
before filtering torch.Size([5, 106339])
after filtering torch.Size([3, 106339])
num_ins_points_after_filtering tensor([ 5573,   637, 10350], device='cuda:0')
Working on scene0342_00 class counter
masks_to_be_merged [[4, 5, 6, 7, 8, 9, 10], [22, 23], [24, 25], [26, 27]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 32/93 [00:00<00:00, 316.27it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 64/93 [00:00<00:00, 288.63it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  36%|███▌      | 51/142 [03:27<03:05,  2.04s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(7118, device='cuda:0')
before filtering torch.Size([4, 89958])
after filtering torch.Size([1, 89958])
num_ins_points_after_filtering tensor([2012], device='cuda:0')
Working on scene0343_00 class counter
masks_to_be_merged [[0, 2, 3, 5, 8, 10, 11, 13, 15, 19, 23, 26, 30, 35, 172, 179, 180, 183, 185, 186, 189, 193, 195, 198, 199, 202, 204, 207, 211, 232, 234], [1, 4, 6, 7, 9, 12, 14, 20, 24, 28, 32, 36, 39, 43, 173, 181, 182, 184, 187, 188, 190, 191, 192, 194, 196, 197, 200, 209, 216, 221, 224], [16, 18, 22, 27, 31, 34, 38, 41, 45, 48, 175, 178, 201, 205, 208, 212, 214, 220, 222, 226, 229, 235, 238], [17, 21, 25, 29, 33, 44, 47, 50, 53, 56, 59, 63, 66, 67, 71, 75, 78, 81, 84, 87, 89, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 133, 136, 138, 171, 174, 176, 177, 203, 206, 210, 213, 218, 225, 228, 230, 231, 233, 236, 237, 241, 243, 244, 249, 251, 254, 255, 257, 258, 259, 260], [37, 40, 42, 46, 49, 51, 54, 58, 61, 65, 70, 73, 77, 80, 85, 88, 215, 219, 223, 227, 240, 245, 246, 250, 253], [52, 55, 57, 60, 64, 68, 72, 76, 79, 83, 86, 90, 95, 98, 102, 103, 106, 107, 109, 112, 239, 242, 247, 252, 256], [69, 74], [128, 130, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 23/124 [00:00<00:00, 229.39it/s][A
Calculating viewed counts for every point:  37%|███▋      | 46/124 [00:00<00:00, 215.00it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 69/124 [00:00<00:00, 219.13it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 91/124 [00:00<00:00, 210.00it/s][A
Calculating viewed counts for every point:  91%|█████████ | 113/124 [00:00<00:00, 206.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [03:32<04:12,  2.81s/it]detected_ratio_thres_value tensor(0.3929, device='cuda:0')
final masked points tensor(27022, device='cuda:0')
before filtering torch.Size([8, 165618])
after filtering torch.Size([6, 165618])
num_ins_points_after_filtering tensor([3223, 2506, 8250, 2650, 2659, 6599], device='cuda:0')
Working on scene0351_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130], [20, 21, 22, 23, 24, 26, 43], [27, 28, 29, 44, 45], [31, 32], [34, 36, 37, 38, 39, 40, 41, 42], [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 17/147 [00:00<00:00, 161.50it/s][A
Calculating viewed counts for every point:  23%|██▎       | 34/147 [00:00<00:00, 164.62it/s][A
Calculating viewed counts for every point:  36%|███▌      | 53/147 [00:00<00:00, 171.65it/s][A
Calculating viewed counts for every point:  48%|████▊     | 71/147 [00:00<00:00, 161.88it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 88/147 [00:00<00:00, 161.05it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 105/147 [00:00<00:00, 153.48it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 123/147 [00:00<00:00, 159.80it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 140/147 [00:00<00:00, 157.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [03:35<04:16,  2.88s/it]detected_ratio_thres_value tensor(0.2750, device='cuda:0')
final masked points tensor(9602, device='cuda:0')
before filtering torch.Size([6, 172134])
after filtering torch.Size([2, 172134])
num_ins_points_after_filtering tensor([5748, 1872], device='cuda:0')
Working on scene0353_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 220, 221, 222, 223, 224, 225, 226], [13, 14, 15, 16, 17, 18, 19, 20, 21, 116, 117], [22, 23, 24, 25, 26, 28, 118, 119, 120, 121, 122], [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 56, 59, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], [49, 51, 52, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209], [79, 80, 81, 82, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215], [83, 84, 85, 86, 87, 88], [90, 95, 96, 217, 218], [91, 216], [92, 93, 94], [140, 141, 142, 143], [184, 185]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 19/299 [00:00<00:01, 187.55it/s][A
Calculating viewed counts for every point:  13%|█▎        | 39/299 [00:00<00:01, 191.17it/s][A
Calculating viewed counts for every point:  20%|██        | 61/299 [00:00<00:01, 202.63it/s][A
Calculating viewed counts for every point:  27%|██▋       | 82/299 [00:00<00:01, 185.86it/s][A
Calculating viewed counts for every point:  34%|███▍      | 101/299 [00:00<00:01, 178.04it/s][A
Calculating viewed counts for every point:  40%|████      | 121/299 [00:00<00:00, 184.39it/s][A
Calculating viewed counts for every point:  47%|████▋     | 140/299 [00:00<00:00, 178.92it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 159/299 [00:00<00:00, 175.67it/s][A
Calculating viewed counts for every point:  60%|██████    | 180/299 [00:00<00:00, 184.76it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 199/299 [00:01<00:00, 175.67it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 217/299 [00:01<00:00, 174.01it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 236/299 [00:01<00:00, 177.73it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 254/299 [00:01<00:00, 177.21it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 275/299 [00:01<00:00, 184.70it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 294/299 [00:01<00:00, 177.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [03:41<05:34,  3.81s/it]detected_ratio_thres_value tensor(0.3585, device='cuda:0')
final masked points tensor(10759, device='cuda:0')
before filtering torch.Size([12, 208782])
after filtering torch.Size([3, 208782])
num_ins_points_after_filtering tensor([2661, 1863,  861], device='cuda:0')
Working on scene0354_00 class counter
masks_to_be_merged [[0, 1, 2, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 93, 94, 95, 96], [3, 4, 5, 6, 7, 86, 92, 97, 98], [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [28, 29], [32, 34, 36, 37, 38, 39, 40], [41, 50, 51, 52, 53, 82, 83, 84, 85], [48, 49], [54, 55], [56, 57], [61, 62], [99, 100, 101, 102]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 28/113 [00:00<00:00, 275.81it/s][A
Calculating viewed counts for every point:  50%|████▉     | 56/113 [00:00<00:00, 254.11it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 82/113 [00:00<00:00, 252.92it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 108/113 [00:00<00:00, 246.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [03:42<04:37,  3.19s/it]detected_ratio_thres_value tensor(0.5385, device='cuda:0')
final masked points tensor(13540, device='cuda:0')
before filtering torch.Size([11, 110569])
after filtering torch.Size([4, 110569])
num_ins_points_after_filtering tensor([4248,  815, 3349,  283], device='cuda:0')
Working on scene0355_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 115, 116, 117, 118, 119, 121, 123, 125, 126], [9, 11, 13, 15, 19, 25, 29, 31, 33, 34, 36, 38, 40], [49, 51], [52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 67, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 91, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110], [57, 62, 63, 65, 66, 68, 69, 71, 74, 75, 84, 86, 88, 90, 92, 93, 94, 95, 96, 98, 105], [120, 122]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/115 [00:00<00:00, 247.35it/s][A
Calculating viewed counts for every point:  43%|████▎     | 50/115 [00:00<00:00, 236.22it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 77/115 [00:00<00:00, 250.45it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 103/115 [00:00<00:00, 227.72it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [03:44<04:02,  2.82s/it]detected_ratio_thres_value tensor(0.4500, device='cuda:0')
final masked points tensor(9512, device='cuda:0')
before filtering torch.Size([6, 136135])
after filtering torch.Size([4, 136135])
num_ins_points_after_filtering tensor([2931, 1196, 2965, 1982], device='cuda:0')
Working on scene0356_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], [16, 17, 18, 19, 20, 21, 22, 23, 93, 94, 95, 96, 97], [24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 38, 41, 98, 99, 100, 101, 102, 103], [31, 33, 34, 36, 104, 105, 106, 107], [39, 40, 45], [42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], [111, 112]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 238.38it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 226.21it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 74/136 [00:00<00:00, 237.38it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 98/136 [00:00<00:00, 225.64it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 121/136 [00:00<00:00, 217.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [03:47<03:50,  2.71s/it]detected_ratio_thres_value tensor(0.4231, device='cuda:0')
final masked points tensor(7683, device='cuda:0')
before filtering torch.Size([7, 81172])
after filtering torch.Size([3, 81172])
num_ins_points_after_filtering tensor([3037, 1790, 2063], device='cuda:0')
Working on scene0357_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [20, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45], [28, 30], [29, 31, 47, 48, 49, 50], [34, 35], [37, 38, 40], [51, 52, 53, 54]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 164.62it/s][A
Calculating viewed counts for every point:  37%|███▋      | 34/91 [00:00<00:00, 166.63it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 52/91 [00:00<00:00, 171.84it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 70/91 [00:00<00:00, 171.25it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 90/91 [00:00<00:00, 177.72it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [03:48<03:12,  2.29s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(6527, device='cuda:0')
before filtering torch.Size([7, 136945])
after filtering torch.Size([3, 136945])
num_ins_points_after_filtering tensor([2311, 1353,  862], device='cuda:0')
Working on scene0377_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42], [37, 40, 41, 43, 44, 45, 46, 47, 48], [49, 50]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 18/91 [00:00<00:00, 172.54it/s][A
Calculating viewed counts for every point:  40%|███▉      | 36/91 [00:00<00:00, 171.95it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 58/91 [00:00<00:00, 190.01it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 78/91 [00:00<00:00, 180.03it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [03:50<02:46,  2.01s/it]detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(8174, device='cuda:0')
before filtering torch.Size([4, 111811])
after filtering torch.Size([3, 111811])
num_ins_points_after_filtering tensor([2229, 2084,  880], device='cuda:0')
Working on scene0378_00 class counter
masks_to_be_merged [[0, 7, 8, 10, 13, 15, 17, 20, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 171, 174, 176, 179, 180, 183, 185, 186], [1, 6, 11, 19, 21, 22, 25, 26, 27, 29, 33, 43, 50, 54, 56, 58, 60], [2, 3, 4, 5, 9, 12, 14, 16, 18, 23, 24, 28, 30, 32, 34, 36, 38, 40, 42, 163, 168, 170, 172, 173, 175, 177, 178, 181, 182, 184], [31, 35], [37, 39, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 86, 98, 99, 100, 101], [79, 80], [84, 85, 88, 90, 91, 92, 93, 95], [87, 89], [94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/190 [00:00<00:01, 170.02it/s][A
Calculating viewed counts for every point:  19%|█▉        | 37/190 [00:00<00:00, 178.54it/s][A
Calculating viewed counts for every point:  29%|██▉       | 55/190 [00:00<00:00, 176.41it/s][A
Calculating viewed counts for every point:  40%|████      | 76/190 [00:00<00:00, 185.75it/s][A
Calculating viewed counts for every point:  50%|█████     | 95/190 [00:00<00:00, 186.49it/s][A
Calculating viewed counts for every point:  60%|██████    | 114/190 [00:00<00:00, 181.85it/s][A
Calculating viewed counts for every point:  70%|███████   | 133/190 [00:00<00:00, 179.91it/s][A
Calculating viewed counts for every point:  80%|████████  | 152/190 [00:00<00:00, 172.56it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 170/190 [00:00<00:00, 169.13it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 188/190 [00:01<00:00, 170.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [03:54<03:42,  2.72s/it]detected_ratio_thres_value tensor(0.3556, device='cuda:0')
final masked points tensor(10324, device='cuda:0')
before filtering torch.Size([9, 156298])
after filtering torch.Size([3, 156298])
num_ins_points_after_filtering tensor([4076, 2119, 2304], device='cuda:0')
Working on scene0382_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 51, 76, 77, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], [20, 21, 24, 26, 28, 29, 37, 38, 45], [22, 23, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44], [83, 84, 85, 86]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 20/113 [00:00<00:00, 199.45it/s][A
Calculating viewed counts for every point:  37%|███▋      | 42/113 [00:00<00:00, 205.77it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 65/113 [00:00<00:00, 213.38it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 89/113 [00:00<00:00, 219.82it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 111/113 [00:00<00:00, 215.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [03:56<03:17,  2.44s/it]detected_ratio_thres_value tensor(0.4444, device='cuda:0')
final masked points tensor(7253, device='cuda:0')
before filtering torch.Size([4, 100285])
after filtering torch.Size([2, 100285])
num_ins_points_after_filtering tensor([5169,  804], device='cuda:0')
Working on scene0389_00 class counter
masks_to_be_merged [[0, 115, 117], [1, 2, 113, 114, 116, 118, 120], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24], [25, 26, 27, 29, 30, 31, 34, 35, 37, 38], [28, 32, 33, 36], [40, 43], [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71], [57, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], [81, 82, 83, 84, 85, 86, 87, 88, 89, 104, 105], [106, 107, 108], [109, 110, 112], [119, 121]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/142 [00:00<00:00, 196.82it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/142 [00:00<00:00, 193.76it/s][A
Calculating viewed counts for every point:  43%|████▎     | 61/142 [00:00<00:00, 199.32it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 81/142 [00:00<00:00, 192.08it/s][A
Calculating viewed counts for every point:  71%|███████   | 101/142 [00:00<00:00, 188.75it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 123/142 [00:00<00:00, 196.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [03:58<03:19,  2.49s/it]detected_ratio_thres_value tensor(0.3243, device='cuda:0')
final masked points tensor(20231, device='cuda:0')
before filtering torch.Size([13, 201003])
after filtering torch.Size([5, 201003])
num_ins_points_after_filtering tensor([1917, 2347, 3309, 2155, 5425], device='cuda:0')
Working on scene0406_00 class counter
masks_to_be_merged [[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 19, 21, 85, 86, 87, 88, 89], [3, 4], [14, 15, 16], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 31/142 [00:00<00:00, 306.53it/s][A
Calculating viewed counts for every point:  44%|████▎     | 62/142 [00:00<00:00, 296.79it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 92/142 [00:00<00:00, 281.28it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 122/142 [00:00<00:00, 284.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [04:00<02:49,  2.14s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(4301, device='cuda:0')
before filtering torch.Size([5, 48864])
after filtering torch.Size([3, 48864])
num_ins_points_after_filtering tensor([ 773, 2085, 1213], device='cuda:0')
Working on scene0412_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [11, 12, 18, 19, 20, 65, 66], [13, 14, 15, 16, 17, 59, 60, 61, 62, 63, 64], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 67, 69, 74, 75, 76, 77, 78, 80, 81, 83, 85, 88, 90, 92, 93, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 170], [33, 34], [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [47, 48], [72, 73], [79, 82, 84, 87], [86, 89, 91, 94, 95, 96, 97, 98], [100, 101, 104, 105, 108, 109, 110, 111, 113], [102, 103, 106, 107], [114, 115, 116, 117], [118, 119, 120, 122, 123, 124], [128, 129, 130, 131, 133], [146, 147, 149], [163, 164, 165], [167, 168, 169]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 23/237 [00:00<00:00, 227.58it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/237 [00:00<00:00, 192.35it/s][A
Calculating viewed counts for every point:  29%|██▉       | 69/237 [00:00<00:00, 204.92it/s][A
Calculating viewed counts for every point:  38%|███▊      | 90/237 [00:00<00:00, 203.07it/s][A
Calculating viewed counts for every point:  47%|████▋     | 111/237 [00:00<00:00, 204.57it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 132/237 [00:00<00:00, 203.06it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 153/237 [00:00<00:00, 205.19it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 174/237 [00:00<00:00, 201.03it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 195/237 [00:00<00:00, 191.59it/s][A
Calculating viewed counts for every point:  91%|█████████ | 215/237 [00:01<00:00, 194.00it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 235/237 [00:01<00:00, 193.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [04:04<03:33,  2.74s/it]detected_ratio_thres_value tensor(0.2432, device='cuda:0')
final masked points tensor(14404, device='cuda:0')
before filtering torch.Size([18, 175557])
after filtering torch.Size([4, 175557])
num_ins_points_after_filtering tensor([1086, 1754, 1016, 2011], device='cuda:0')
Working on scene0414_00 class counter
masks_to_be_merged [[0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 55, 56, 59, 61, 63, 65, 66, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [38, 39, 40], [41, 42, 43, 44, 45, 46, 47], [52, 54, 57, 58], [85, 86, 87, 88]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 17/117 [00:00<00:00, 163.92it/s][A
Calculating viewed counts for every point:  32%|███▏      | 38/117 [00:00<00:00, 187.62it/s][A
Calculating viewed counts for every point:  50%|█████     | 59/117 [00:00<00:00, 193.43it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 79/117 [00:00<00:00, 175.54it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 97/117 [00:00<00:00, 168.92it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 115/117 [00:00<00:00, 160.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [04:06<03:20,  2.60s/it]detected_ratio_thres_value tensor(0.4231, device='cuda:0')
final masked points tensor(5681, device='cuda:0')
before filtering torch.Size([5, 192685])
after filtering torch.Size([2, 192685])
num_ins_points_after_filtering tensor([4268,  526], device='cuda:0')
Working on scene0423_00 class counter
masks_to_be_merged [[0, 1, 2, 4], [3, 5, 8, 23, 26, 30], [6, 7], [11, 14, 15, 16, 18], [12, 13], [19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 25/77 [00:00<00:00, 249.60it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 50/77 [00:00<00:00, 245.51it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 75/77 [00:00<00:00, 245.81it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  46%|████▋     | 66/142 [04:07<02:35,  2.05s/it]detected_ratio_thres_value tensor(0.1081, device='cuda:0')
final masked points tensor(7230, device='cuda:0')
before filtering torch.Size([6, 53074])
after filtering torch.Size([4, 53074])
num_ins_points_after_filtering tensor([1689, 1124, 1646, 2559], device='cuda:0')
Working on scene0426_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95], [17, 20, 29, 30, 38, 51, 52, 53, 54, 55, 56, 57, 60, 91, 96, 97, 98, 99, 100, 102, 104, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [18, 101], [21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126], [59, 61], [62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [92, 93]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 27/231 [00:00<00:00, 268.09it/s][A
Calculating viewed counts for every point:  23%|██▎       | 54/231 [00:00<00:00, 265.65it/s][A
Calculating viewed counts for every point:  35%|███▌      | 81/231 [00:00<00:00, 253.47it/s][A
Calculating viewed counts for every point:  48%|████▊     | 110/231 [00:00<00:00, 266.53it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 137/231 [00:00<00:00, 256.06it/s][A
Calculating viewed counts for every point:  71%|███████   | 164/231 [00:00<00:00, 258.72it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 190/231 [00:00<00:00, 253.41it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 218/231 [00:00<00:00, 259.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [04:10<02:53,  2.32s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(10180, device='cuda:0')
before filtering torch.Size([7, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([3007], device='cuda:0')
Working on scene0427_00 class counter
masks_to_be_merged [[0, 1, 2, 73], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [26, 27, 28, 29, 30, 31, 32, 33, 34, 74, 75, 76]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 37/132 [00:00<00:00, 362.59it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 74/132 [00:00<00:00, 339.67it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 111/132 [00:00<00:00, 350.26it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [04:11<02:25,  1.97s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(3620, device='cuda:0')
before filtering torch.Size([3, 74074])
after filtering torch.Size([1, 74074])
num_ins_points_after_filtering tensor([2397], device='cuda:0')
Working on scene0430_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229], [33, 35], [81, 83, 87, 88], [197, 198], [199, 200], [201, 202, 203, 204], [224, 227]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/231 [00:00<00:01, 171.74it/s][A
Calculating viewed counts for every point:  16%|█▌        | 37/231 [00:00<00:01, 180.80it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/231 [00:00<00:00, 183.02it/s][A
Calculating viewed counts for every point:  32%|███▏      | 75/231 [00:00<00:00, 178.76it/s][A
Calculating viewed counts for every point:  41%|████      | 95/231 [00:00<00:00, 182.84it/s][A
Calculating viewed counts for every point:  49%|████▉     | 114/231 [00:00<00:00, 174.56it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 134/231 [00:00<00:00, 180.57it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 153/231 [00:00<00:00, 178.73it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 171/231 [00:00<00:00, 166.77it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 188/231 [00:01<00:00, 163.43it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 206/231 [00:01<00:00, 166.08it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 224/231 [00:01<00:00, 168.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [04:17<03:52,  3.19s/it]detected_ratio_thres_value tensor(0.6481, device='cuda:0')
final masked points tensor(5669, device='cuda:0')
before filtering torch.Size([7, 210249])
after filtering torch.Size([0, 210249])
num_ins_points_after_filtering tensor([], device='cuda:0', dtype=torch.int64)
Working on scene0432_00 class counter
masks_to_be_merged [[0, 2, 4, 6, 17, 18, 20, 28], [1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 16, 19, 21, 22, 23, 25, 26, 27, 34]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 28/52 [00:00<00:00, 271.82it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [04:17<02:52,  2.40s/it]detected_ratio_thres_value tensor(0.4118, device='cuda:0')
final masked points tensor(2975, device='cuda:0')
before filtering torch.Size([2, 39529])
after filtering torch.Size([1, 39529])
num_ins_points_after_filtering tensor([2768], device='cuda:0')
Working on scene0435_00 class counter
masks_to_be_merged [[0, 1, 2, 6, 8, 9, 17, 63, 66, 71, 72, 74, 75, 76, 77, 139, 141, 142, 143, 144, 145], [3, 4, 5, 7, 140], [10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 128, 134, 135, 136, 137, 138, 146, 147, 148, 149, 205, 207, 208, 209], [23, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 150, 151, 152, 153, 154, 155, 197, 198, 200, 201, 202, 203, 204, 206], [78, 79, 81, 82, 83, 84, 85], [80, 89, 90, 91], [86, 87, 88], [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], [156, 194, 195, 196, 199], [157, 158, 159], [160, 161], [162, 163], [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 185, 186], [175, 176], [188, 189, 190], [191, 192, 193]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 16/328 [00:00<00:02, 149.92it/s][A
Calculating viewed counts for every point:  10%|▉         | 32/328 [00:00<00:01, 153.25it/s][A
Calculating viewed counts for every point:  15%|█▍        | 48/328 [00:00<00:01, 150.66it/s][A
Calculating viewed counts for every point:  20%|█▉        | 64/328 [00:00<00:01, 147.19it/s][A
Calculating viewed counts for every point:  25%|██▍       | 81/328 [00:00<00:01, 153.41it/s][A
Calculating viewed counts for every point:  30%|██▉       | 97/328 [00:00<00:01, 153.98it/s][A
Calculating viewed counts for every point:  34%|███▍      | 113/328 [00:00<00:01, 155.18it/s][A
Calculating viewed counts for every point:  39%|███▉      | 129/328 [00:00<00:01, 155.63it/s][A
Calculating viewed counts for every point:  44%|████▍     | 145/328 [00:00<00:01, 150.15it/s][A
Calculating viewed counts for every point:  49%|████▉     | 161/328 [00:01<00:01, 152.76it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 178/328 [00:01<00:00, 155.90it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 196/328 [00:01<00:00, 160.37it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 213/328 [00:01<00:00, 160.63it/s][A
Calculating viewed counts for every point:  70%|███████   | 231/328 [00:01<00:00, 163.59it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 249/328 [00:01<00:00, 166.21it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 267/328 [00:01<00:00, 167.60it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 284/328 [00:01<00:00, 165.49it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 302/328 [00:01<00:00, 167.14it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 320/328 [00:02<00:00, 168.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [04:23<04:00,  3.39s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(17342, device='cuda:0')
before filtering torch.Size([16, 254998])
after filtering torch.Size([4, 254998])
num_ins_points_after_filtering tensor([2045, 5754, 3350, 1345], device='cuda:0')
Working on scene0441_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [15, 16, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [18, 19, 21, 22, 23, 24, 33, 34, 62, 63, 64, 65, 66, 67], [25, 26, 28], [27, 29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 21/77 [00:00<00:00, 203.51it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 42/77 [00:00<00:00, 201.13it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 64/77 [00:00<00:00, 209.25it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [04:24<03:04,  2.64s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(3473, device='cuda:0')
before filtering torch.Size([5, 86191])
after filtering torch.Size([4, 86191])
num_ins_points_after_filtering tensor([ 302, 1341, 1407,  403], device='cuda:0')
Working on scene0458_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], [15, 16, 17, 18, 19, 20, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75], [21, 80, 81], [25, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], [78, 79], [83, 84]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 40/199 [00:00<00:00, 394.56it/s][A
Calculating viewed counts for every point:  40%|████      | 80/199 [00:00<00:00, 383.16it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 119/199 [00:00<00:00, 376.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 158/199 [00:00<00:00, 378.98it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 197/199 [00:00<00:00, 381.86it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [04:25<02:29,  2.16s/it]detected_ratio_thres_value tensor(0.4800, device='cuda:0')
final masked points tensor(3026, device='cuda:0')
before filtering torch.Size([6, 65264])
after filtering torch.Size([1, 65264])
num_ins_points_after_filtering tensor([2472], device='cuda:0')
Working on scene0461_00 class counter
masks_to_be_merged [[0, 2, 4, 6, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 48, 49, 50, 51, 52, 53], [1, 3, 5, 7, 8, 9, 10, 11, 12, 16, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 55, 56, 57, 58, 59, 60, 61, 62], [44, 47, 54]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  44%|████▍     | 23/52 [00:00<00:00, 222.74it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 46/52 [00:00<00:00, 157.22it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [04:26<01:56,  1.71s/it]detected_ratio_thres_value tensor(0.3548, device='cuda:0')
final masked points tensor(3546, device='cuda:0')
before filtering torch.Size([3, 59134])
after filtering torch.Size([2, 59134])
num_ins_points_after_filtering tensor([1449, 1976], device='cuda:0')
Working on scene0462_00 class counter
masks_to_be_merged [[0, 1, 2, 5, 97, 98, 99, 100, 101, 102, 103, 104, 106, 113, 114, 115, 116, 118, 119], [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 57, 58, 105, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129], [24, 25], [52, 54, 56, 59, 60, 61, 62, 63, 64], [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], [120, 121, 122]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/114 [00:00<00:00, 244.73it/s][A
Calculating viewed counts for every point:  46%|████▌     | 52/114 [00:00<00:00, 254.55it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 78/114 [00:00<00:00, 244.59it/s][A
Calculating viewed counts for every point:  90%|█████████ | 103/114 [00:00<00:00, 208.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [04:27<01:48,  1.62s/it]detected_ratio_thres_value tensor(0.4706, device='cuda:0')
final masked points tensor(29946, device='cuda:0')
before filtering torch.Size([6, 156714])
after filtering torch.Size([3, 156714])
num_ins_points_after_filtering tensor([ 3488,   953, 23480], device='cuda:0')
Working on scene0474_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91], [18, 85], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [36, 37, 38, 39, 114], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], [75, 76], [99, 101]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 18/164 [00:00<00:00, 173.65it/s][A
Calculating viewed counts for every point:  22%|██▏       | 36/164 [00:00<00:00, 172.89it/s][A
Calculating viewed counts for every point:  33%|███▎      | 54/164 [00:00<00:00, 168.11it/s][A
Calculating viewed counts for every point:  43%|████▎     | 71/164 [00:00<00:00, 163.28it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 88/164 [00:00<00:00, 161.28it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 105/164 [00:00<00:00, 163.51it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 122/164 [00:00<00:00, 162.02it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 139/164 [00:00<00:00, 158.21it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 155/164 [00:00<00:00, 157.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [04:30<02:02,  1.85s/it]detected_ratio_thres_value tensor(0.4545, device='cuda:0')
final masked points tensor(15048, device='cuda:0')
before filtering torch.Size([7, 182281])
after filtering torch.Size([3, 182281])
num_ins_points_after_filtering tensor([6378, 1734, 4142], device='cuda:0')
Working on scene0488_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 18/60 [00:00<00:00, 177.07it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 38/60 [00:00<00:00, 184.90it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 57/60 [00:00<00:00, 183.12it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [04:30<01:39,  1.53s/it]detected_ratio_thres_value tensor(0.5000, device='cuda:0')
final masked points tensor(13427, device='cuda:0')
before filtering torch.Size([2, 108319])
after filtering torch.Size([1, 108319])
num_ins_points_after_filtering tensor([8068], device='cuda:0')
Working on scene0490_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], [8, 51, 54, 77, 79, 80, 81, 82, 83, 84, 85], [86, 87], [88, 89], [108, 109, 110]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 8/129 [00:00<00:01, 79.93it/s][A
Calculating viewed counts for every point:  27%|██▋       | 35/129 [00:00<00:00, 189.98it/s][A
Calculating viewed counts for every point:  46%|████▌     | 59/129 [00:00<00:00, 209.25it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 83/129 [00:00<00:00, 219.30it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 109/129 [00:00<00:00, 231.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [04:32<01:34,  1.47s/it]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(14193, device='cuda:0')
before filtering torch.Size([5, 131283])
after filtering torch.Size([1, 131283])
num_ins_points_after_filtering tensor([13536], device='cuda:0')
Working on scene0494_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [19, 20], [49, 51]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  51%|█████     | 38/75 [00:00<00:00, 375.74it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [04:32<01:17,  1.22s/it]detected_ratio_thres_value tensor(0.5185, device='cuda:0')
final masked points tensor(2108, device='cuda:0')
before filtering torch.Size([3, 62048])
after filtering torch.Size([1, 62048])
num_ins_points_after_filtering tensor([2108], device='cuda:0')
Working on scene0496_00 class counter
masks_to_be_merged [[0, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122], [1, 3, 36, 108, 117], [34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [64, 65, 66, 67, 68, 69, 70, 71, 72]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 18/134 [00:00<00:00, 174.59it/s][A
Calculating viewed counts for every point:  27%|██▋       | 36/134 [00:00<00:00, 158.22it/s][A
Calculating viewed counts for every point:  39%|███▉      | 52/134 [00:00<00:00, 156.86it/s][A
Calculating viewed counts for every point:  51%|█████     | 68/134 [00:00<00:00, 155.40it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 85/134 [00:00<00:00, 158.10it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 102/134 [00:00<00:00, 161.45it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 119/134 [00:00<00:00, 155.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [04:34<01:27,  1.41s/it]detected_ratio_thres_value tensor(0.4706, device='cuda:0')
final masked points tensor(11765, device='cuda:0')
before filtering torch.Size([5, 192962])
after filtering torch.Size([4, 192962])
num_ins_points_after_filtering tensor([6192, 2502, 1228, 1664], device='cuda:0')
Working on scene0500_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [22, 23], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], [120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], [137, 138, 139, 140, 141, 142, 143, 146, 148], [144, 145, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 173], [151, 171, 174, 175, 176], [160, 161, 162, 163]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/219 [00:00<00:02, 85.75it/s][A
Calculating viewed counts for every point:   9%|▊         | 19/219 [00:00<00:02, 93.45it/s][A
Calculating viewed counts for every point:  13%|█▎        | 29/219 [00:00<00:02, 91.46it/s][A
Calculating viewed counts for every point:  18%|█▊        | 39/219 [00:00<00:01, 94.45it/s][A
Calculating viewed counts for every point:  23%|██▎       | 50/219 [00:00<00:01, 99.30it/s][A
Calculating viewed counts for every point:  27%|██▋       | 60/219 [00:00<00:01, 92.25it/s][A
Calculating viewed counts for every point:  32%|███▏      | 70/219 [00:00<00:01, 88.51it/s][A
Calculating viewed counts for every point:  36%|███▌      | 79/219 [00:00<00:01, 83.26it/s][A
Calculating viewed counts for every point:  40%|████      | 88/219 [00:00<00:01, 83.34it/s][A
Calculating viewed counts for every point:  44%|████▍     | 97/219 [00:01<00:01, 83.61it/s][A
Calculating viewed counts for every point:  48%|████▊     | 106/219 [00:01<00:01, 79.35it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 114/219 [00:01<00:01, 76.33it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 125/219 [00:01<00:01, 85.37it/s][A
Calculating viewed counts for every point:  61%|██████    | 134/219 [00:01<00:00, 85.02it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 143/219 [00:01<00:00, 83.14it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 153/219 [00:01<00:00, 85.47it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 163/219 [00:01<00:00, 87.74it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 173/219 [00:01<00:00, 90.06it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 183/219 [00:02<00:00, 87.50it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 192/219 [00:02<00:00, 82.80it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 201/219 [00:02<00:00, 80.00it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 210/219 [00:02<00:00, 78.44it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 218/219 [00:02<00:00, 77.50it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [04:41<03:07,  3.08s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(30011, device='cuda:0')
before filtering torch.Size([9, 396942])
after filtering torch.Size([3, 396942])
num_ins_points_after_filtering tensor([ 3011, 13028,  6921], device='cuda:0')
Working on scene0518_00 class counter
masks_to_be_merged [[0, 1, 4, 9, 11, 14, 15, 17, 19, 21, 22, 25, 28, 29, 31, 33, 34, 36, 39, 41, 47, 56, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159], [2, 3, 5, 35, 38, 40, 42, 46, 102, 103, 104, 105, 108], [6, 8, 10], [12, 13], [16, 18, 20, 23, 26, 27, 30, 32, 37, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 156, 158, 160, 161, 162, 163, 164, 165], [24, 74, 75, 76, 119, 120, 121, 122], [77, 78, 79, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 24/147 [00:00<00:00, 232.52it/s][A
Calculating viewed counts for every point:  33%|███▎      | 48/147 [00:00<00:00, 231.69it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 76/147 [00:00<00:00, 247.37it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 101/147 [00:00<00:00, 241.14it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 129/147 [00:00<00:00, 250.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [04:45<03:09,  3.16s/it]detected_ratio_thres_value tensor(0.3824, device='cuda:0')
final masked points tensor(10372, device='cuda:0')
before filtering torch.Size([7, 130180])
after filtering torch.Size([2, 130180])
num_ins_points_after_filtering tensor([2336, 4395], device='cuda:0')
Working on scene0527_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79], [8, 11, 15, 16, 17, 19, 21, 24, 73, 76, 77, 81], [10, 18, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 78, 80, 82, 83, 84], [22, 25], [34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 51], [41, 42], [43, 54], [53, 55], [56, 57], [58, 59]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  60%|██████    | 41/68 [00:00<00:00, 403.78it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [04:46<02:29,  2.53s/it]detected_ratio_thres_value tensor(0.4762, device='cuda:0')
final masked points tensor(6185, device='cuda:0')
before filtering torch.Size([10, 65893])
after filtering torch.Size([2, 65893])
num_ins_points_after_filtering tensor([1851, 1464], device='cuda:0')
Working on scene0535_00 class counter
masks_to_be_merged [[0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 66, 68, 70], [1, 2, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 67, 69, 71], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50], [61, 62, 63, 64, 65]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 23/69 [00:00<00:00, 224.19it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 46/69 [00:00<00:00, 207.16it/s][A
Calculating viewed counts for every point: 100%|██████████| 69/69 [00:00<00:00, 216.28it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [04:47<02:02,  2.11s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(10451, device='cuda:0')
before filtering torch.Size([5, 90268])
after filtering torch.Size([5, 90268])
num_ins_points_after_filtering tensor([1342, 4923, 1428, 2378,  380], device='cuda:0')
Working on scene0549_00 class counter
masks_to_be_merged [[0, 1, 2], [4, 5, 6], [7, 8, 9, 64, 65, 67, 71, 72, 73, 74, 75, 76], [10, 11, 12, 13, 14, 15, 16], [17, 18, 23, 24, 26], [19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 46], [44, 45, 47, 48, 50, 52, 54, 56, 58, 60, 61, 63], [51, 53, 55, 57, 59, 62], [68, 69]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 25/83 [00:00<00:00, 243.20it/s][A
Calculating viewed counts for every point:  60%|██████    | 50/83 [00:00<00:00, 235.09it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 74/83 [00:00<00:00, 219.49it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [04:48<01:47,  1.89s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(10669, device='cuda:0')
before filtering torch.Size([9, 161973])
after filtering torch.Size([6, 161973])
num_ins_points_after_filtering tensor([ 591, 1806, 1520, 4188, 1336,  963], device='cuda:0')
Working on scene0550_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], [20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], [29, 31, 32], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59], [109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 193], [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 161, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178], [149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169], [206, 208, 209, 210, 223], [262, 263, 264, 265, 266, 267, 268, 269, 270, 271], [272, 273, 275], [299, 300, 301, 302, 303, 304, 305]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 27/392 [00:00<00:01, 266.78it/s][A
Calculating viewed counts for every point:  15%|█▌        | 59/392 [00:00<00:01, 293.70it/s][A
Calculating viewed counts for every point:  23%|██▎       | 89/392 [00:00<00:01, 295.40it/s][A
Calculating viewed counts for every point:  30%|███       | 119/392 [00:00<00:00, 290.50it/s][A
Calculating viewed counts for every point:  38%|███▊      | 149/392 [00:00<00:00, 291.63it/s][A
Calculating viewed counts for every point:  46%|████▌     | 179/392 [00:00<00:00, 285.85it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 211/392 [00:00<00:00, 293.55it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 241/392 [00:00<00:00, 287.16it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 270/392 [00:00<00:00, 283.42it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 299/392 [00:01<00:00, 274.63it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 329/392 [00:01<00:00, 280.41it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 358/392 [00:01<00:00, 280.36it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 387/392 [00:01<00:00, 264.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [04:57<03:38,  3.90s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(29556, device='cuda:0')
before filtering torch.Size([11, 127677])
after filtering torch.Size([6, 127677])
num_ins_points_after_filtering tensor([9635, 9695, 3727, 1455,  727, 1479], device='cuda:0')
Working on scene0552_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 22, 25, 27, 28, 31, 33, 84, 86, 88, 89, 91, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108, 110, 112, 114, 116, 119], [13, 17, 21, 30, 34, 36, 38, 39, 41, 43, 45, 47, 49, 80, 81, 82, 83, 85, 87, 90, 92, 95, 97, 100, 128, 130, 131, 133, 135, 137, 139], [19, 23, 24, 26, 29, 32, 35, 37, 40, 42, 44, 46, 48, 122, 124, 125, 126, 127, 129, 132, 134, 136, 138], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79], [72, 74], [106, 109, 111, 113, 115, 118, 121, 123], [117, 120]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 29/89 [00:00<00:00, 286.03it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 58/89 [00:00<00:00, 279.53it/s][A
Calculating viewed counts for every point: 100%|██████████| 89/89 [00:00<00:00, 289.90it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [04:59<03:08,  3.43s/it]detected_ratio_thres_value tensor(0.4828, device='cuda:0')
final masked points tensor(12996, device='cuda:0')
before filtering torch.Size([7, 123103])
after filtering torch.Size([5, 123103])
num_ins_points_after_filtering tensor([1937, 1753, 1679, 6599,   10], device='cuda:0')
Working on scene0553_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 73, 75, 77, 79, 82, 84, 85, 88, 90, 92, 94, 96, 98, 101, 106, 108, 109, 110, 112, 113], [5, 7, 8, 97, 99, 102, 105], [11, 12, 13, 14, 15, 16, 17], [18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48], [20, 22, 28], [49, 50], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 83, 86, 87, 89, 91, 93, 95, 100, 103, 104, 107, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 31/151 [00:00<00:00, 307.46it/s][A
Calculating viewed counts for every point:  44%|████▍     | 67/151 [00:00<00:00, 334.07it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 101/151 [00:00<00:00, 323.44it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 134/151 [00:00<00:00, 314.45it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [05:01<02:46,  3.09s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(4760, device='cuda:0')
before filtering torch.Size([7, 62854])
after filtering torch.Size([3, 62854])
num_ins_points_after_filtering tensor([ 163, 2630, 1829], device='cuda:0')
Working on scene0558_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 65, 67, 69, 71, 72, 73], [29, 30, 31, 32, 33, 36], [34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 48], [42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 68]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  48%|████▊     | 34/71 [00:00<00:00, 334.91it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 68/71 [00:00<00:00, 302.00it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [05:02<02:07,  2.41s/it]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(25651, device='cuda:0')
before filtering torch.Size([4, 92953])
after filtering torch.Size([3, 92953])
num_ins_points_after_filtering tensor([12279,  7512,  3020], device='cuda:0')
Working on scene0559_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13, 14, 15], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 33/58 [00:00<00:00, 323.47it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [05:03<01:42,  1.96s/it]detected_ratio_thres_value tensor(0.4800, device='cuda:0')
final masked points tensor(4048, device='cuda:0')
before filtering torch.Size([3, 89796])
after filtering torch.Size([2, 89796])
num_ins_points_after_filtering tensor([ 785, 2764], device='cuda:0')
Working on scene0565_00 class counter
masks_to_be_merged [[4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [30, 31, 32, 33, 34, 41, 42, 43, 44], [35, 36, 37, 38, 39], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 92, 94]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 20/107 [00:00<00:00, 196.10it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/107 [00:00<00:00, 207.75it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 66/107 [00:00<00:00, 219.23it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 88/107 [00:00<00:00, 207.29it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [05:05<01:37,  1.91s/it]detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(4947, device='cuda:0')
before filtering torch.Size([5, 167558])
after filtering torch.Size([3, 167558])
num_ins_points_after_filtering tensor([1545,  430, 2723], device='cuda:0')
Working on scene0568_00 class counter
masks_to_be_merged [[0, 1, 2, 89, 91, 93, 95, 109, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], [3, 4], [5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 21], [23, 24, 25, 26, 27, 28, 29], [30, 48, 49], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83], [82, 84, 85, 86, 87, 88, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 121]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:01, 141.55it/s][A
Calculating viewed counts for every point:  18%|█▊        | 30/166 [00:00<00:01, 130.17it/s][A
Calculating viewed counts for every point:  27%|██▋       | 44/166 [00:00<00:00, 129.16it/s][A
Calculating viewed counts for every point:  36%|███▌      | 59/166 [00:00<00:00, 134.29it/s][A
Calculating viewed counts for every point:  44%|████▍     | 73/166 [00:00<00:00, 134.93it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 87/166 [00:00<00:00, 134.40it/s][A
Calculating viewed counts for every point:  61%|██████    | 101/166 [00:00<00:00, 132.92it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 115/166 [00:00<00:00, 129.89it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 129/166 [00:00<00:00, 130.35it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 143/166 [00:01<00:00, 129.15it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 156/166 [00:01<00:00, 127.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [05:08<01:59,  2.39s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(27484, device='cuda:0')
before filtering torch.Size([9, 232453])
after filtering torch.Size([6, 232453])
num_ins_points_after_filtering tensor([6064, 6529, 4019, 2722, 1537, 5419], device='cuda:0')
Working on scene0574_00 class counter
masks_to_be_merged [[0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 27, 30, 31, 33], [1, 3], [17, 18, 19], [21, 22, 23], [24, 26, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  35%|███▍      | 36/103 [00:00<00:00, 348.54it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 71/103 [00:00<00:00, 332.88it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [05:10<01:49,  2.24s/it]detected_ratio_thres_value tensor(0.4483, device='cuda:0')
final masked points tensor(4436, device='cuda:0')
before filtering torch.Size([5, 55521])
after filtering torch.Size([2, 55521])
num_ins_points_after_filtering tensor([1613, 2818], device='cuda:0')
Working on scene0575_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238], [45, 63], [66, 67], [69, 70], [97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124], [111, 112], [117, 118, 119, 121], [207, 208, 209, 210, 211, 212, 213, 215], [235, 236, 237, 239]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 175.93it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/294 [00:00<00:01, 188.71it/s][A
Calculating viewed counts for every point:  20%|██        | 59/294 [00:00<00:01, 197.50it/s][A
Calculating viewed counts for every point:  28%|██▊       | 81/294 [00:00<00:01, 202.88it/s][A
Calculating viewed counts for every point:  36%|███▌      | 105/294 [00:00<00:00, 213.32it/s][A
Calculating viewed counts for every point:  43%|████▎     | 127/294 [00:00<00:00, 200.65it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 151/294 [00:00<00:00, 210.25it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 173/294 [00:00<00:00, 208.65it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 194/294 [00:00<00:00, 187.66it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 214/294 [00:01<00:00, 178.81it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 233/294 [00:01<00:00, 177.79it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 251/294 [00:01<00:00, 176.62it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 271/294 [00:01<00:00, 182.28it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 290/294 [00:01<00:00, 179.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [05:18<03:05,  3.86s/it]detected_ratio_thres_value tensor(0.3590, device='cuda:0')
final masked points tensor(7349, device='cuda:0')
before filtering torch.Size([9, 194207])
after filtering torch.Size([1, 194207])
num_ins_points_after_filtering tensor([5646], device='cuda:0')
Working on scene0578_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 24, 25, 27, 29, 31, 33, 34, 35, 36, 38, 40, 42, 44, 46, 48, 50, 53, 55, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 130, 136, 137, 139, 140, 141, 143, 145, 147, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169], [17, 18, 20, 22, 23, 26, 28, 30, 32, 37, 39, 41, 43, 45, 47, 49, 51, 52, 54, 56, 58, 60, 131, 132, 133, 135, 138, 142, 144, 146, 148, 149], [122, 124], [150, 151, 153], [155, 160, 161]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/149 [00:00<00:00, 256.36it/s][A
Calculating viewed counts for every point:  35%|███▍      | 52/149 [00:00<00:00, 253.42it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 79/149 [00:00<00:00, 258.60it/s][A
Calculating viewed counts for every point:  70%|███████   | 105/149 [00:00<00:00, 245.00it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 132/149 [00:00<00:00, 252.74it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [05:22<03:01,  3.85s/it]detected_ratio_thres_value tensor(0.4231, device='cuda:0')
final masked points tensor(7453, device='cuda:0')
before filtering torch.Size([5, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([6365], device='cuda:0')
Working on scene0580_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 37, 39, 40, 41, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 85, 86, 89, 91, 95, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 297, 298, 332, 334, 350, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 246, 247, 248, 250, 252, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 333, 335, 336, 337, 338, 339, 340, 341, 356, 358, 359, 360, 361], [42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 108, 349, 351], [55, 70, 71, 72, 73, 97], [172, 173], [174, 177, 178, 179, 213, 214, 215, 306, 307], [176, 193], [180, 300, 301, 302, 330, 331], [189, 192, 194, 196, 200, 205, 206], [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 251, 253, 255, 256, 257, 258, 326, 327, 328, 329], [304, 305, 308], [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], [342, 343], [344, 345, 347, 348, 377, 378, 379, 380, 381, 382], [376, 383]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 24/477 [00:00<00:01, 237.11it/s][A
Calculating viewed counts for every point:  10%|█         | 49/477 [00:00<00:01, 243.09it/s][A
Calculating viewed counts for every point:  16%|█▌        | 77/477 [00:00<00:01, 252.04it/s][A
Calculating viewed counts for every point:  22%|██▏       | 103/477 [00:00<00:01, 252.59it/s][A
Calculating viewed counts for every point:  27%|██▋       | 129/477 [00:00<00:01, 241.13it/s][A
Calculating viewed counts for every point:  33%|███▎      | 156/477 [00:00<00:01, 249.12it/s][A
Calculating viewed counts for every point:  38%|███▊      | 181/477 [00:00<00:01, 249.19it/s][A
Calculating viewed counts for every point:  44%|████▎     | 208/477 [00:00<00:01, 255.05it/s][A
Calculating viewed counts for every point:  49%|████▉     | 234/477 [00:00<00:00, 247.69it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 260/477 [00:01<00:00, 250.84it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 286/477 [00:01<00:00, 250.46it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 314/477 [00:01<00:00, 257.07it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 340/477 [00:01<00:00, 244.71it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 365/477 [00:01<00:00, 242.48it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 390/477 [00:01<00:00, 238.58it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 414/477 [00:01<00:00, 229.91it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 439/477 [00:01<00:00, 235.39it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 463/477 [00:01<00:00, 235.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [05:34<04:55,  6.43s/it]detected_ratio_thres_value tensor(0.2740, device='cuda:0')
final masked points tensor(23573, device='cuda:0')
before filtering torch.Size([15, 158047])
after filtering torch.Size([5, 158047])
num_ins_points_after_filtering tensor([7384, 4425, 1207, 5405, 1810], device='cuda:0')
Working on scene0583_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 152, 153, 154, 155, 156, 157, 158, 159], [19, 76, 77, 78, 79, 80, 81, 82, 83], [28, 29, 32, 37, 39, 42, 109, 111, 137, 138, 145, 146, 147], [74, 75, 85], [112, 113], [116, 118, 119], [117, 120], [148, 149]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 233.87it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/198 [00:00<00:00, 235.08it/s][A
Calculating viewed counts for every point:  38%|███▊      | 76/198 [00:00<00:00, 252.88it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 102/198 [00:00<00:00, 248.77it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 127/198 [00:00<00:00, 243.18it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 152/198 [00:00<00:00, 240.22it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 177/198 [00:00<00:00, 230.22it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [05:38<04:09,  5.54s/it]detected_ratio_thres_value tensor(0.5429, device='cuda:0')
final masked points tensor(3751, device='cuda:0')
before filtering torch.Size([8, 146782])
after filtering torch.Size([1, 146782])
num_ins_points_after_filtering tensor([3356], device='cuda:0')
Working on scene0591_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 8, 10, 11, 13, 14, 15, 16, 17, 18, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 68, 69, 70, 94, 95, 96, 97, 98, 121, 122, 124, 125, 126, 128, 131], [5, 7, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40], [9, 12, 88, 89, 90, 91, 92, 93, 127, 129, 130, 132, 133, 134, 135, 136], [55, 56, 58, 59, 60, 61, 62], [73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 142, 143, 144, 145, 146, 147, 148], [86, 87, 137, 138, 140, 141], [99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 15/173 [00:00<00:01, 147.38it/s][A
Calculating viewed counts for every point:  18%|█▊        | 31/173 [00:00<00:00, 153.35it/s][A
Calculating viewed counts for every point:  28%|██▊       | 49/173 [00:00<00:00, 164.70it/s][A
Calculating viewed counts for every point:  38%|███▊      | 66/173 [00:00<00:00, 152.85it/s][A
Calculating viewed counts for every point:  47%|████▋     | 82/173 [00:00<00:00, 152.99it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 100/173 [00:00<00:00, 161.26it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 117/173 [00:00<00:00, 156.30it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 134/173 [00:00<00:00, 160.36it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 151/173 [00:00<00:00, 156.48it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 167/173 [00:01<00:00, 156.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [05:42<03:47,  5.16s/it]detected_ratio_thres_value tensor(0.2195, device='cuda:0')
final masked points tensor(18634, device='cuda:0')
before filtering torch.Size([7, 175600])
after filtering torch.Size([5, 175600])
num_ins_points_after_filtering tensor([3750, 2327, 2248, 3865, 6048], device='cuda:0')
Working on scene0593_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 63, 64, 65, 230, 231, 232, 233, 234, 235, 236], [16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 222, 223, 224, 225, 226, 227, 228, 229], [35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], [50, 55, 57], [53, 56, 58, 59], [62, 147, 148, 149, 152], [68, 69, 70, 71, 72, 74, 81, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161], [75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 162, 163, 164, 165, 166, 167, 169, 170, 172, 175], [108, 110, 111, 113, 114, 115, 117, 171, 173, 174, 177, 179, 181, 183, 188, 190, 192, 193], [116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 176, 178, 180, 182, 184, 185, 186, 187, 189, 191, 194, 195, 196]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/230 [00:00<00:01, 172.77it/s][A
Calculating viewed counts for every point:  17%|█▋        | 39/230 [00:00<00:01, 190.70it/s][A
Calculating viewed counts for every point:  27%|██▋       | 61/230 [00:00<00:00, 202.84it/s][A
Calculating viewed counts for every point:  36%|███▌      | 82/230 [00:00<00:00, 181.66it/s][A
Calculating viewed counts for every point:  44%|████▍     | 102/230 [00:00<00:00, 184.65it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 123/230 [00:00<00:00, 190.06it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 143/230 [00:00<00:00, 172.61it/s][A
Calculating viewed counts for every point:  70%|███████   | 161/230 [00:00<00:00, 172.92it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 181/230 [00:00<00:00, 179.66it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 200/230 [00:01<00:00, 173.05it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 218/230 [00:01<00:00, 171.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [05:48<03:50,  5.37s/it]detected_ratio_thres_value tensor(0.2581, device='cuda:0')
final masked points tensor(24785, device='cuda:0')
before filtering torch.Size([10, 211902])
after filtering torch.Size([8, 211902])
num_ins_points_after_filtering tensor([3068, 2950, 2287, 1727, 2176, 1276, 1301, 9793], device='cuda:0')
Working on scene0595_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 63, 64, 65, 66, 67, 68, 69, 70], [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 57, 59, 60, 61, 62], [24, 25, 26, 27, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58], [30, 31, 33, 34, 35, 36, 38]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 24/76 [00:00<00:00, 236.82it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 48/76 [00:00<00:00, 222.20it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 74/76 [00:00<00:00, 236.51it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [05:49<02:55,  4.18s/it]detected_ratio_thres_value tensor(0.3600, device='cuda:0')
final masked points tensor(23633, device='cuda:0')
before filtering torch.Size([4, 142330])
after filtering torch.Size([3, 142330])
num_ins_points_after_filtering tensor([ 1506, 10782, 10764], device='cuda:0')
Working on scene0598_00 class counter
masks_to_be_merged [[0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 98, 99, 101, 105], [1, 3], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], [63, 64, 65], [78, 79]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 25/101 [00:00<00:00, 241.17it/s][A
Calculating viewed counts for every point:  50%|████▉     | 50/101 [00:00<00:00, 235.39it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 76/101 [00:00<00:00, 239.96it/s][A
Calculating viewed counts for every point: 100%|██████████| 101/101 [00:00<00:00, 235.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [05:51<02:20,  3.44s/it]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(15709, device='cuda:0')
before filtering torch.Size([5, 145562])
after filtering torch.Size([3, 145562])
num_ins_points_after_filtering tensor([4885,   25, 3375], device='cuda:0')
Working on scene0599_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], [93, 95, 96, 97, 98, 99, 100, 101, 102, 103]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 28/189 [00:00<00:00, 271.96it/s][A
Calculating viewed counts for every point:  30%|██▉       | 56/189 [00:00<00:00, 256.04it/s][A
Calculating viewed counts for every point:  44%|████▍     | 83/189 [00:00<00:00, 254.67it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 109/189 [00:00<00:00, 247.21it/s][A
Calculating viewed counts for every point:  71%|███████   | 134/189 [00:00<00:00, 236.99it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 159/189 [00:00<00:00, 237.81it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 183/189 [00:00<00:00, 225.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [05:55<02:20,  3.51s/it]detected_ratio_thres_value tensor(0.4800, device='cuda:0')
final masked points tensor(6982, device='cuda:0')
before filtering torch.Size([2, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([6894], device='cuda:0')
Working on scene0606_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], [70, 71, 72, 73, 74], [93, 94, 95, 96, 97, 98, 99, 100, 101, 102], [106, 107, 108, 109, 110], [111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 25/250 [00:00<00:00, 243.22it/s][A
Calculating viewed counts for every point:  21%|██        | 52/250 [00:00<00:00, 257.79it/s][A
Calculating viewed counts for every point:  31%|███       | 78/250 [00:00<00:00, 258.20it/s][A
Calculating viewed counts for every point:  42%|████▏     | 104/250 [00:00<00:00, 257.38it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 130/250 [00:00<00:00, 236.41it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 154/250 [00:00<00:00, 215.36it/s][A
Calculating viewed counts for every point:  70%|███████   | 176/250 [00:00<00:00, 211.03it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 198/250 [00:00<00:00, 208.14it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 222/250 [00:00<00:00, 215.87it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 244/250 [00:01<00:00, 205.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [06:00<02:36,  4.02s/it]detected_ratio_thres_value tensor(0.3243, device='cuda:0')
final masked points tensor(10182, device='cuda:0')
before filtering torch.Size([5, 164401])
after filtering torch.Size([2, 164401])
num_ins_points_after_filtering tensor([6274,  766], device='cuda:0')
Working on scene0607_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 105, 106, 107, 108, 109, 110, 111, 112], [25, 28, 45, 47, 50, 54], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 26/100 [00:00<00:00, 255.12it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 52/100 [00:00<00:00, 245.46it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 82/100 [00:00<00:00, 264.84it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [06:01<02:05,  3.30s/it]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(17764, device='cuda:0')
before filtering torch.Size([3, 113156])
after filtering torch.Size([2, 113156])
num_ins_points_after_filtering tensor([14519,  3129], device='cuda:0')
Working on scene0608_00 class counter
masks_to_be_merged [[0, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 27, 28, 30, 32, 33, 51, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 210, 211, 212, 213, 215, 216, 217, 220, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 317, 319, 321, 322, 323, 324, 325], [4, 6], [9, 12, 19, 21, 25, 29, 31, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 94, 95, 96], [79, 87, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], [91, 93, 97, 99, 100, 101, 104, 105, 107, 110, 111, 113, 115, 116, 117, 118, 123], [102, 103, 106, 108, 109, 112], [114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141], [158, 159], [167, 171, 173, 174], [169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 205, 206, 207, 208, 209], [214, 218, 219, 302], [315, 318]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 24/339 [00:00<00:01, 230.27it/s][A
Calculating viewed counts for every point:  14%|█▍        | 48/339 [00:00<00:01, 211.13it/s][A
Calculating viewed counts for every point:  21%|██        | 71/339 [00:00<00:01, 218.75it/s][A
Calculating viewed counts for every point:  27%|██▋       | 93/339 [00:00<00:01, 215.17it/s][A
Calculating viewed counts for every point:  34%|███▍      | 115/339 [00:00<00:01, 212.77it/s][A
Calculating viewed counts for every point:  40%|████      | 137/339 [00:00<00:00, 214.21it/s][A
Calculating viewed counts for every point:  47%|████▋     | 159/339 [00:00<00:00, 200.13it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 183/339 [00:00<00:00, 211.26it/s][A
Calculating viewed counts for every point:  60%|██████    | 205/339 [00:00<00:00, 202.04it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 226/339 [00:01<00:00, 191.84it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 247/339 [00:01<00:00, 196.30it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 267/339 [00:01<00:00, 190.37it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 289/339 [00:01<00:00, 198.61it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 310/339 [00:01<00:00, 193.99it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 332/339 [00:01<00:00, 197.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [06:10<03:01,  4.90s/it]detected_ratio_thres_value tensor(0.2410, device='cuda:0')
final masked points tensor(14925, device='cuda:0')
before filtering torch.Size([12, 186579])
after filtering torch.Size([5, 186579])
num_ins_points_after_filtering tensor([2228, 2308, 5473, 1839,  767], device='cuda:0')
Working on scene0609_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 112, 115, 118, 119, 121, 123], [10, 16, 19, 20, 22, 23, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 59, 61, 64, 100, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 120, 122, 124, 126, 128, 140, 143, 145, 147, 150, 151], [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 105, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 144, 146, 148]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▎      | 37/110 [00:00<00:00, 361.76it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 74/110 [00:00<00:00, 321.50it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 107/110 [00:00<00:00, 318.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▍  | 106/142 [06:12<02:25,  4.03s/it]detected_ratio_thres_value tensor(0.4333, device='cuda:0')
final masked points tensor(4986, device='cuda:0')
before filtering torch.Size([3, 78836])
after filtering torch.Size([3, 78836])
num_ins_points_after_filtering tensor([1833, 1297, 1828], device='cuda:0')
Working on scene0616_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 204, 217, 218, 219, 220, 222, 225], [4, 5, 6, 7, 8, 9, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 112, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 170, 171, 172, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 223, 224, 226], [10, 11, 12], [47, 48], [49, 50, 51], [52, 53, 54, 55, 56, 57, 58], [59, 60], [61, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 197], [77, 78, 79], [80, 81], [116, 117], [126, 127, 164, 165, 166], [173, 174, 175, 176], [193, 194]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 105.79it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:02, 104.06it/s][A
Calculating viewed counts for every point:  11%|█         | 34/304 [00:00<00:02, 110.84it/s][A
Calculating viewed counts for every point:  15%|█▌        | 47/304 [00:00<00:02, 114.38it/s][A
Calculating viewed counts for every point:  19%|█▉        | 59/304 [00:00<00:02, 113.70it/s][A
Calculating viewed counts for every point:  23%|██▎       | 71/304 [00:00<00:02, 111.37it/s][A
Calculating viewed counts for every point:  27%|██▋       | 83/304 [00:00<00:01, 111.44it/s][A
Calculating viewed counts for every point:  32%|███▏      | 96/304 [00:00<00:01, 115.12it/s][A
Calculating viewed counts for every point:  36%|███▌      | 108/304 [00:00<00:01, 114.12it/s][A
Calculating viewed counts for every point:  39%|███▉      | 120/304 [00:01<00:01, 111.57it/s][A
Calculating viewed counts for every point:  44%|████▍     | 134/304 [00:01<00:01, 117.69it/s][A
Calculating viewed counts for every point:  48%|████▊     | 146/304 [00:01<00:01, 113.97it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 158/304 [00:01<00:01, 112.41it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 171/304 [00:01<00:01, 115.53it/s][A
Calculating viewed counts for every point:  61%|██████    | 184/304 [00:01<00:01, 117.78it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 196/304 [00:01<00:00, 115.11it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 208/304 [00:01<00:00, 110.60it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 220/304 [00:01<00:00, 110.96it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 233/304 [00:02<00:00, 114.92it/s][A
Calculating viewed counts for every point:  81%|████████  | 246/304 [00:02<00:00, 115.84it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 258/304 [00:02<00:00, 116.42it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 271/304 [00:02<00:00, 118.24it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 283/304 [00:02<00:00, 113.55it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 295/304 [00:02<00:00, 112.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [06:20<03:06,  5.33s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(9001, device='cuda:0')
before filtering torch.Size([14, 310248])
after filtering torch.Size([2, 310248])
num_ins_points_after_filtering tensor([3579, 2453], device='cuda:0')
Working on scene0618_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 100, 102, 104, 107, 111, 112, 113, 115, 117, 119], [10, 12, 14, 16, 19, 22, 24, 26, 28, 30, 31, 35, 37, 39, 42, 47, 125, 127], [11, 13, 15, 17, 18, 20, 21, 23, 25, 27, 29, 32, 33, 34, 36, 38, 41, 46, 48, 51, 55, 57, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 103, 105, 106, 108, 110, 114, 116, 118, 120, 121, 122, 123, 124, 126, 128, 129], [43, 44, 49, 52, 54, 56, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76], [53, 59], [61, 64], [98, 109]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 14/90 [00:00<00:00, 135.35it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 125.81it/s][A
Calculating viewed counts for every point:  46%|████▌     | 41/90 [00:00<00:00, 125.61it/s][A
Calculating viewed counts for every point:  60%|██████    | 54/90 [00:00<00:00, 124.99it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 67/90 [00:00<00:00, 122.52it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 80/90 [00:00<00:00, 124.71it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [06:24<02:39,  4.69s/it]detected_ratio_thres_value tensor(0.5217, device='cuda:0')
final masked points tensor(20582, device='cuda:0')
before filtering torch.Size([7, 232740])
after filtering torch.Size([4, 232740])
num_ins_points_after_filtering tensor([ 1964,  1877, 11983,  4748], device='cuda:0')
Working on scene0621_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 219, 220, 221, 223, 225, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], [16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 222, 224, 226, 228, 231], [28, 30, 35, 38, 40, 42, 46, 48, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 119, 123, 125, 127, 129, 130, 132, 134, 136, 138, 297, 298, 299, 300, 301, 303, 305, 306, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 323, 326, 328, 330, 332, 335, 336, 338, 339, 342, 345], [32, 33], [37, 47, 50, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 302, 304, 309, 315, 324, 333], [43, 45], [44, 55], [49, 51, 53, 56, 57, 59, 61], [81, 82, 83], [99, 101, 104, 105, 114, 117], [106, 107], [108, 111, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], [109, 110], [124, 126, 128], [135, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215], [161, 174, 189, 190, 191, 192, 193], [214, 216], [217, 218], [259, 261], [325, 327, 329], [340, 341], [343, 344]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/268 [00:00<00:01, 172.03it/s][A
Calculating viewed counts for every point:  13%|█▎        | 36/268 [00:00<00:01, 163.67it/s][A
Calculating viewed counts for every point:  20%|█▉        | 53/268 [00:00<00:01, 165.93it/s][A
Calculating viewed counts for every point:  26%|██▌       | 70/268 [00:00<00:01, 161.44it/s][A
Calculating viewed counts for every point:  32%|███▏      | 87/268 [00:00<00:01, 154.12it/s][A
Calculating viewed counts for every point:  39%|███▉      | 104/268 [00:00<00:01, 158.35it/s][A
Calculating viewed counts for every point:  45%|████▌     | 121/268 [00:00<00:00, 160.84it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 139/268 [00:00<00:00, 165.79it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 156/268 [00:00<00:00, 166.79it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 173/268 [00:01<00:00, 158.10it/s][A
Calculating viewed counts for every point:  71%|███████   | 190/268 [00:01<00:00, 161.41it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 207/268 [00:01<00:00, 154.63it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 223/268 [00:01<00:00, 150.74it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 240/268 [00:01<00:00, 155.71it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 256/268 [00:01<00:00, 152.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [06:32<03:15,  5.94s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(22393, device='cuda:0')
before filtering torch.Size([22, 250821])
after filtering torch.Size([7, 250821])
num_ins_points_after_filtering tensor([3121, 1383, 4738, 4020, 2783,  453, 3839], device='cuda:0')
Working on scene0629_00 class counter
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 135, 137, 140, 141, 142, 143, 144, 148, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 182, 184, 185], [3, 145, 146, 147, 149, 150, 152, 160, 163, 165, 167, 172, 174, 178, 181, 183], [15, 23, 24, 25, 26, 28, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196], [27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [29, 30, 31, 32, 33], [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247], [136, 138, 139, 250], [199, 200, 201], [234, 235, 236, 237, 238, 239, 240, 241, 242]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/275 [00:00<00:01, 142.59it/s][A
Calculating viewed counts for every point:  11%|█▏        | 31/275 [00:00<00:01, 144.64it/s][A
Calculating viewed counts for every point:  17%|█▋        | 48/275 [00:00<00:01, 155.32it/s][A
Calculating viewed counts for every point:  23%|██▎       | 64/275 [00:00<00:01, 155.60it/s][A
Calculating viewed counts for every point:  30%|██▉       | 82/275 [00:00<00:01, 163.12it/s][A
Calculating viewed counts for every point:  36%|███▌      | 99/275 [00:00<00:01, 157.40it/s][A
Calculating viewed counts for every point:  42%|████▏     | 115/275 [00:00<00:01, 149.35it/s][A
Calculating viewed counts for every point:  48%|████▊     | 131/275 [00:00<00:00, 150.42it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 147/275 [00:00<00:00, 148.79it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 162/275 [00:01<00:00, 145.77it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 177/275 [00:01<00:00, 145.98it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 192/275 [00:01<00:00, 142.25it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 208/275 [00:01<00:00, 145.73it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 225/275 [00:01<00:00, 149.63it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 241/275 [00:01<00:00, 149.11it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 257/275 [00:01<00:00, 151.01it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 273/275 [00:01<00:00, 145.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [06:39<03:17,  6.16s/it]detected_ratio_thres_value tensor(0.2982, device='cuda:0')
final masked points tensor(13448, device='cuda:0')
before filtering torch.Size([9, 255083])
after filtering torch.Size([2, 255083])
num_ins_points_after_filtering tensor([1123, 6093], device='cuda:0')
Working on scene0633_00 class counter
masks_to_be_merged [[0, 1, 13, 15, 17, 20, 22, 23, 24, 25, 46, 47, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 105, 106, 107, 108, 109, 110, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159], [2, 4, 7, 9, 11, 16, 18, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 99, 100, 101, 102, 103, 104], [3, 5, 6, 8, 10, 12, 14, 89, 91, 93, 96], [19, 21, 26, 29, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 131, 132, 133, 134, 135, 136, 137, 138, 160, 166], [27, 28, 30, 31, 32, 33, 35, 49, 120, 121, 123, 125, 126, 127, 128, 129, 130, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172], [83, 84, 86], [85, 87, 88, 90, 92, 94, 95, 97], [147, 148, 149, 150, 151, 152]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 27/160 [00:00<00:00, 264.90it/s][A
Calculating viewed counts for every point:  38%|███▊      | 60/160 [00:00<00:00, 301.74it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 91/160 [00:00<00:00, 291.39it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 121/160 [00:00<00:00, 293.43it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 151/160 [00:00<00:00, 280.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [06:42<02:40,  5.18s/it]detected_ratio_thres_value tensor(0.3617, device='cuda:0')
final masked points tensor(21539, device='cuda:0')
before filtering torch.Size([8, 101007])
after filtering torch.Size([4, 101007])
num_ins_points_after_filtering tensor([ 4083, 10969,  4045,   356], device='cuda:0')
Working on scene0643_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 162, 164, 166, 167, 170], [37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 56, 58, 62], [50, 51, 53, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 81, 82, 84, 87, 122, 123, 124, 127, 128, 130, 131, 132, 133, 135], [75, 76], [78, 79, 80, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 125, 126, 129, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], [119, 120, 121], [145, 146, 148, 151, 165, 168, 169, 172, 218, 219], [149, 150, 152], [153, 154, 155, 156, 157, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216], [158, 159, 160, 161], [171, 217]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/194 [00:00<00:01, 169.29it/s][A
Calculating viewed counts for every point:  18%|█▊        | 35/194 [00:00<00:00, 171.90it/s][A
Calculating viewed counts for every point:  29%|██▉       | 57/194 [00:00<00:00, 191.99it/s][A
Calculating viewed counts for every point:  40%|███▉      | 77/194 [00:00<00:00, 184.59it/s][A
Calculating viewed counts for every point:  49%|████▉     | 96/194 [00:00<00:00, 176.05it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 115/194 [00:00<00:00, 178.13it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 133/194 [00:00<00:00, 173.79it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 152/194 [00:00<00:00, 175.62it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 170/194 [00:00<00:00, 174.89it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 188/194 [00:01<00:00, 170.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [06:47<02:34,  5.14s/it]detected_ratio_thres_value tensor(0.4571, device='cuda:0')
final masked points tensor(14478, device='cuda:0')
before filtering torch.Size([11, 167360])
after filtering torch.Size([7, 167360])
num_ins_points_after_filtering tensor([2831, 1825, 2608, 2266, 1966,  708, 1201], device='cuda:0')
Working on scene0644_00 class counter
masks_to_be_merged [[0, 1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 85, 86, 87, 88, 89, 90, 92, 94, 96, 99, 102, 105, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], [2, 3, 6, 8, 91, 93, 95, 97, 100, 103, 106], [4, 9, 98, 101, 104], [35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [67, 68, 69, 70, 71, 72, 73, 74], [75, 76, 77, 78, 79, 80, 81, 82, 83, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 182], [108, 109], [156, 157, 158, 159, 160, 161, 163], [175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197], [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/201 [00:00<00:01, 105.09it/s][A
Calculating viewed counts for every point:  11%|█▏        | 23/201 [00:00<00:01, 113.15it/s][A
Calculating viewed counts for every point:  17%|█▋        | 35/201 [00:00<00:01, 108.84it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/201 [00:00<00:01, 104.78it/s][A
Calculating viewed counts for every point:  29%|██▉       | 58/201 [00:00<00:01, 108.26it/s][A
Calculating viewed counts for every point:  34%|███▍      | 69/201 [00:00<00:01, 105.09it/s][A
Calculating viewed counts for every point:  40%|████      | 81/201 [00:00<00:01, 108.48it/s][A
Calculating viewed counts for every point:  46%|████▋     | 93/201 [00:00<00:00, 109.28it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 104/201 [00:00<00:00, 106.77it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 116/201 [00:01<00:00, 109.59it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 127/201 [00:01<00:00, 108.08it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 138/201 [00:01<00:00, 104.50it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 150/201 [00:01<00:00, 106.49it/s][A
Calculating viewed counts for every point:  80%|████████  | 161/201 [00:01<00:00, 106.12it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 173/201 [00:01<00:00, 107.66it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 184/201 [00:01<00:00, 107.56it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 195/201 [00:01<00:00, 103.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [06:54<02:41,  5.58s/it]detected_ratio_thres_value tensor(0.4375, device='cuda:0')
final masked points tensor(22033, device='cuda:0')
before filtering torch.Size([10, 299472])
after filtering torch.Size([5, 299472])
num_ins_points_after_filtering tensor([5987, 1545, 5259, 6408, 1581], device='cuda:0')
Working on scene0645_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 176, 177, 218, 220, 221, 222, 223, 224], [5, 6, 7, 173, 174, 175, 193, 211, 213, 214, 215, 216, 217], [17, 18, 19, 25, 219], [20, 22, 23, 24], [26, 31, 37, 38, 39, 41, 42, 43, 44], [28, 29, 30, 36, 40], [32, 33, 34, 35], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 138, 139, 140, 141, 142, 143, 145], [60, 64], [109, 136], [110, 111, 123, 129, 130, 131, 132, 133, 134], [144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], [178, 179, 181, 182], [180, 185, 186, 187, 188], [183, 184, 191, 192], [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/451 [00:00<00:04, 96.21it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/451 [00:00<00:04, 97.90it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/451 [00:00<00:04, 101.79it/s][A
Calculating viewed counts for every point:  10%|▉         | 43/451 [00:00<00:03, 104.84it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/451 [00:00<00:03, 106.84it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/451 [00:00<00:03, 106.53it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/451 [00:00<00:03, 106.28it/s][A
Calculating viewed counts for every point:  20%|█▉        | 88/451 [00:00<00:03, 106.61it/s][A
Calculating viewed counts for every point:  22%|██▏       | 99/451 [00:00<00:03, 106.72it/s][A
Calculating viewed counts for every point:  24%|██▍       | 110/451 [00:01<00:03, 103.61it/s][A
Calculating viewed counts for every point:  27%|██▋       | 121/451 [00:01<00:03, 100.37it/s][A
Calculating viewed counts for every point:  29%|██▉       | 132/451 [00:01<00:03, 102.43it/s][A
Calculating viewed counts for every point:  32%|███▏      | 143/451 [00:01<00:03, 100.02it/s][A
Calculating viewed counts for every point:  34%|███▍      | 154/451 [00:01<00:03, 95.90it/s] [A
Calculating viewed counts for every point:  37%|███▋      | 165/451 [00:01<00:02, 97.86it/s][A
Calculating viewed counts for every point:  39%|███▉      | 175/451 [00:01<00:02, 96.44it/s][A
Calculating viewed counts for every point:  41%|████      | 186/451 [00:01<00:02, 99.41it/s][A
Calculating viewed counts for every point:  43%|████▎     | 196/451 [00:01<00:02, 99.11it/s][A
Calculating viewed counts for every point:  46%|████▋     | 209/451 [00:02<00:02, 106.20it/s][A
Calculating viewed counts for every point:  49%|████▉     | 220/451 [00:02<00:02, 105.69it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 232/451 [00:02<00:02, 107.94it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 243/451 [00:02<00:01, 107.02it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 255/451 [00:02<00:01, 106.78it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 266/451 [00:02<00:01, 103.58it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 277/451 [00:02<00:01, 102.44it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 288/451 [00:02<00:01, 97.14it/s] [A
Calculating viewed counts for every point:  66%|██████▌   | 298/451 [00:02<00:01, 96.38it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 309/451 [00:03<00:01, 99.44it/s][A
Calculating viewed counts for every point:  71%|███████   | 319/451 [00:03<00:01, 99.18it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 331/451 [00:03<00:01, 104.57it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 343/451 [00:03<00:01, 107.10it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 355/451 [00:03<00:00, 110.27it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 367/451 [00:03<00:00, 112.13it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 379/451 [00:03<00:00, 113.82it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 391/451 [00:03<00:00, 110.21it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 404/451 [00:03<00:00, 114.60it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 416/451 [00:03<00:00, 110.75it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 428/451 [00:04<00:00, 106.31it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 439/451 [00:04<00:00, 104.48it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 450/451 [00:04<00:00, 102.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [07:03<03:12,  6.86s/it]detected_ratio_thres_value tensor(0.2200, device='cuda:0')
final masked points tensor(20727, device='cuda:0')
before filtering torch.Size([17, 352477])
after filtering torch.Size([6, 352477])
num_ins_points_after_filtering tensor([2537, 1583,  847, 6012, 4513, 2704], device='cuda:0')
Working on scene0647_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150], [38, 40, 44, 46, 48, 50, 53, 55, 57, 59, 61], [45, 47], [49, 51], [52, 54, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], [88, 90, 91, 93, 94, 98, 105, 108, 112, 114, 117, 120, 122, 124]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 181.65it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 175.13it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 59/110 [00:00<00:00, 188.83it/s][A
Calculating viewed counts for every point:  71%|███████   | 78/110 [00:00<00:00, 179.50it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 97/110 [00:00<00:00, 181.05it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [07:06<02:31,  5.63s/it]detected_ratio_thres_value tensor(0.4762, device='cuda:0')
final masked points tensor(10410, device='cuda:0')
before filtering torch.Size([6, 196185])
after filtering torch.Size([3, 196185])
num_ins_points_after_filtering tensor([6699, 1321, 1901], device='cuda:0')
Working on scene0648_00 class counter
masks_to_be_merged [[0, 1, 2, 55, 56, 57, 58, 59, 60, 61, 62, 227, 228, 271, 272, 273, 274, 275, 276, 277, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292], [3, 4, 5, 6, 7, 8, 9, 75, 76, 77, 278, 279], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], [29, 30, 32, 33, 34, 35, 36, 63, 64, 67, 68, 280, 281], [31, 99, 100, 101, 102], [37, 38], [39, 320, 321, 322, 323, 324, 325, 326], [40, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 310, 311, 312, 313, 314, 315, 317, 318], [41, 42, 43], [45, 46, 47, 48], [50, 305, 307, 308], [51, 52, 53, 297, 298, 300, 301, 303, 304, 306], [215, 216, 217, 218], [220, 221, 222, 224], [229, 230, 231, 232, 267, 268, 269, 270], [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], [293, 294, 295, 296, 299]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 24/419 [00:00<00:01, 237.23it/s][A
Calculating viewed counts for every point:  11%|█▏        | 48/419 [00:00<00:01, 233.66it/s][A
Calculating viewed counts for every point:  17%|█▋        | 73/419 [00:00<00:01, 239.06it/s][A
Calculating viewed counts for every point:  23%|██▎       | 97/419 [00:00<00:01, 237.84it/s][A
Calculating viewed counts for every point:  29%|██▉       | 121/419 [00:00<00:01, 237.42it/s][A
Calculating viewed counts for every point:  35%|███▍      | 145/419 [00:00<00:01, 236.42it/s][A
Calculating viewed counts for every point:  40%|████      | 169/419 [00:00<00:01, 216.96it/s][A
Calculating viewed counts for every point:  46%|████▌     | 191/419 [00:00<00:01, 204.88it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 215/419 [00:00<00:00, 213.04it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 237/419 [00:01<00:00, 206.61it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 258/419 [00:01<00:00, 205.05it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 282/419 [00:01<00:00, 212.87it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 304/419 [00:01<00:00, 207.39it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 326/419 [00:01<00:00, 207.66it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 347/419 [00:01<00:00, 206.27it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 368/419 [00:01<00:00, 202.69it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 392/419 [00:01<00:00, 211.50it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 414/419 [00:01<00:00, 207.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [07:15<02:49,  6.51s/it]detected_ratio_thres_value tensor(0.4565, device='cuda:0')
final masked points tensor(9895, device='cuda:0')
before filtering torch.Size([17, 167915])
after filtering torch.Size([2, 167915])
num_ins_points_after_filtering tensor([4448, 1697], device='cuda:0')
Working on scene0651_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 92, 93, 94, 95, 96], [53, 54, 55, 56, 57, 58, 59, 61], [63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 247.79it/s][A
Calculating viewed counts for every point:  48%|████▊     | 50/104 [00:00<00:00, 234.29it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 75/104 [00:00<00:00, 239.27it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 99/104 [00:00<00:00, 230.02it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [07:17<02:09,  5.19s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(12358, device='cuda:0')
before filtering torch.Size([3, 88450])
after filtering torch.Size([3, 88450])
num_ins_points_after_filtering tensor([6786, 2341, 3206], device='cuda:0')
Working on scene0652_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 101, 102, 103, 104, 105, 106, 107, 108], [28, 29, 30, 31, 32, 33, 34, 36], [38, 39, 40, 41], [42, 43, 44, 45, 46, 47], [49, 50], [79, 81, 82], [83, 84, 85, 86, 87, 88, 89, 90], [91, 92, 94, 95, 96, 97], [98, 99, 100]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 32/144 [00:00<00:00, 316.84it/s][A
Calculating viewed counts for every point:  44%|████▍     | 64/144 [00:00<00:00, 311.92it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 99/144 [00:00<00:00, 327.76it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 132/144 [00:00<00:00, 312.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [07:19<01:43,  4.30s/it]detected_ratio_thres_value tensor(0.3864, device='cuda:0')
final masked points tensor(8362, device='cuda:0')
before filtering torch.Size([9, 100286])
after filtering torch.Size([2, 100286])
num_ins_points_after_filtering tensor([5570,  273], device='cuda:0')
Working on scene0653_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 45, 47, 48, 50, 52, 54, 56, 57, 59, 60, 62, 64, 66, 397, 398, 401, 404, 405, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], [33, 35, 37, 39, 41, 42, 44, 46, 392, 393, 395, 396, 399, 400, 402, 403, 406, 408, 410], [49, 51, 53, 55, 58, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], [219, 220], [221, 222, 223, 224], [225, 226, 227, 228, 229, 230, 231, 232, 233], [234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379], [373, 374, 375], [380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 15/388 [00:00<00:02, 146.28it/s][A
Calculating viewed counts for every point:   8%|▊         | 30/388 [00:00<00:02, 148.21it/s][A
Calculating viewed counts for every point:  12%|█▏        | 45/388 [00:00<00:02, 148.53it/s][A
Calculating viewed counts for every point:  15%|█▌        | 60/388 [00:00<00:02, 146.67it/s][A
Calculating viewed counts for every point:  20%|█▉        | 76/388 [00:00<00:02, 148.22it/s][A
Calculating viewed counts for every point:  23%|██▎       | 91/388 [00:00<00:02, 142.27it/s][A
Calculating viewed counts for every point:  27%|██▋       | 106/388 [00:00<00:02, 139.71it/s][A
Calculating viewed counts for every point:  31%|███       | 121/388 [00:00<00:01, 140.38it/s][A
Calculating viewed counts for every point:  35%|███▌      | 136/388 [00:00<00:01, 140.96it/s][A
Calculating viewed counts for every point:  39%|███▉      | 151/388 [00:01<00:01, 142.99it/s][A
Calculating viewed counts for every point:  43%|████▎     | 166/388 [00:01<00:01, 139.32it/s][A
Calculating viewed counts for every point:  46%|████▋     | 180/388 [00:01<00:01, 135.97it/s][A
Calculating viewed counts for every point:  51%|█████     | 197/388 [00:01<00:01, 143.70it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 212/388 [00:01<00:01, 143.10it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 228/388 [00:01<00:01, 146.64it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 244/388 [00:01<00:00, 148.58it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 259/388 [00:01<00:00, 145.42it/s][A
Calculating viewed counts for every point:  71%|███████   | 274/388 [00:01<00:00, 145.12it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 289/388 [00:02<00:00, 143.09it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 304/388 [00:02<00:00, 140.08it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 319/388 [00:02<00:00, 139.88it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 334/388 [00:02<00:00, 141.84it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 349/388 [00:02<00:00, 140.24it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 365/388 [00:02<00:00, 144.18it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 380/388 [00:02<00:00, 138.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [07:33<02:46,  7.22s/it]detected_ratio_thres_value tensor(0.4255, device='cuda:0')
final masked points tensor(15404, device='cuda:0')
before filtering torch.Size([10, 284951])
after filtering torch.Size([3, 284951])
num_ins_points_after_filtering tensor([3364, 4208, 1498], device='cuda:0')
Working on scene0655_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], [31, 32, 33, 34, 35, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 18/111 [00:00<00:00, 174.02it/s][A
Calculating viewed counts for every point:  32%|███▏      | 36/111 [00:00<00:00, 162.58it/s][A
Calculating viewed counts for every point:  50%|████▉     | 55/111 [00:00<00:00, 169.87it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 73/111 [00:00<00:00, 166.13it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 94/111 [00:00<00:00, 179.55it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [07:35<02:04,  5.67s/it]detected_ratio_thres_value tensor(0.4500, device='cuda:0')
final masked points tensor(8937, device='cuda:0')
before filtering torch.Size([2, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([8343], device='cuda:0')
Working on scene0658_00 class counter
masks_to_be_merged [[0, 2, 4, 7, 8, 9, 10, 11, 13, 16, 17, 19, 21, 22, 23], [1, 3, 5, 6, 12, 14, 15, 18, 20], [24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 42, 43, 45, 46, 48, 50], [33, 35, 37, 38, 39, 40, 41, 44, 47, 49, 51], [54, 55, 56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 17/55 [00:00<00:00, 166.55it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 34/55 [00:00<00:00, 166.47it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 52/55 [00:00<00:00, 169.93it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [07:36<01:29,  4.28s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(19738, device='cuda:0')
before filtering torch.Size([5, 129951])
after filtering torch.Size([5, 129951])
num_ins_points_after_filtering tensor([3545, 1262, 8886, 3125, 2883], device='cuda:0')
Working on scene0660_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 28/105 [00:00<00:00, 273.50it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 56/105 [00:00<00:00, 261.52it/s][A
Calculating viewed counts for every point:  80%|████████  | 84/105 [00:00<00:00, 265.77it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [07:38<01:11,  3.55s/it]detected_ratio_thres_value tensor(0.5676, device='cuda:0')
final masked points tensor(6662, device='cuda:0')
before filtering torch.Size([1, 110960])
after filtering torch.Size([1, 110960])
num_ins_points_after_filtering tensor([6662], device='cuda:0')
Working on scene0663_00 class counter
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 75, 76, 78, 79, 81, 84, 92, 94, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 335, 336, 337, 338], [63, 65], [72, 74, 77, 80, 82, 83, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 204, 205, 209, 210, 211], [114, 212], [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 217, 218, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 330, 331, 332, 333], [151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], [157, 158, 160, 173, 174], [213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], [327, 328]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 21/295 [00:00<00:01, 205.96it/s][A
Calculating viewed counts for every point:  15%|█▍        | 44/295 [00:00<00:01, 215.09it/s][A
Calculating viewed counts for every point:  22%|██▏       | 66/295 [00:00<00:01, 215.12it/s][A
Calculating viewed counts for every point:  31%|███       | 92/295 [00:00<00:00, 229.85it/s][A
Calculating viewed counts for every point:  39%|███▉      | 115/295 [00:00<00:00, 207.22it/s][A
Calculating viewed counts for every point:  46%|████▋     | 137/295 [00:00<00:00, 203.83it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 160/295 [00:00<00:00, 211.61it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 182/295 [00:00<00:00, 208.55it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 203/295 [00:00<00:00, 207.90it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 226/295 [00:01<00:00, 211.90it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 248/295 [00:01<00:00, 199.07it/s][A
Calculating viewed counts for every point:  91%|█████████ | 269/295 [00:01<00:00, 196.44it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 292/295 [00:01<00:00, 204.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [07:46<01:32,  4.86s/it]detected_ratio_thres_value tensor(0.3922, device='cuda:0')
final masked points tensor(10685, device='cuda:0')
before filtering torch.Size([9, 184428])
after filtering torch.Size([3, 184428])
num_ins_points_after_filtering tensor([1817, 2883, 1257], device='cuda:0')
Working on scene0664_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 88, 89, 90, 91], [6, 7, 12, 92, 93, 94, 95], [8, 9, 10, 11, 96], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/144 [00:00<00:00, 391.99it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 80/144 [00:00<00:00, 360.49it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 117/144 [00:00<00:00, 327.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [07:47<01:08,  3.81s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(5937, device='cuda:0')
before filtering torch.Size([4, 44585])
after filtering torch.Size([3, 44585])
num_ins_points_after_filtering tensor([3242,  367, 2323], device='cuda:0')
Working on scene0665_00 class counter
masks_to_be_merged [[0, 2, 4, 5, 7, 9, 11, 13, 15, 18, 20, 22, 25, 27, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 157, 159, 160, 162], [1, 3, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 24, 26, 28, 30, 32, 35, 37, 39, 41, 147, 149, 150, 153, 156, 158, 161, 163], [29, 31, 33, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56], [43, 45, 47, 49, 51, 53, 55, 57, 58, 61], [59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 89, 91, 92, 93, 95, 97, 99, 102], [85, 86, 87, 88, 90, 94, 96, 98, 100, 101, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 122, 124, 127], [119, 126], [121, 123, 125], [130, 132, 133, 134, 135, 136, 139]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 12/104 [00:00<00:00, 119.40it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 124.86it/s][A
Calculating viewed counts for every point:  37%|███▋      | 38/104 [00:00<00:00, 121.33it/s][A
Calculating viewed counts for every point:  50%|█████     | 52/104 [00:00<00:00, 125.52it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 65/104 [00:00<00:00, 124.72it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 78/104 [00:00<00:00, 120.97it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 91/104 [00:00<00:00, 122.60it/s][A
Calculating viewed counts for every point: 100%|██████████| 104/104 [00:00<00:00, 120.36it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [07:51<01:02,  3.67s/it]detected_ratio_thres_value tensor(0.4375, device='cuda:0')
final masked points tensor(28848, device='cuda:0')
before filtering torch.Size([9, 252726])
after filtering torch.Size([7, 252726])
num_ins_points_after_filtering tensor([3654, 2881, 3005, 5394, 3627, 3257, 6829], device='cuda:0')
Working on scene0670_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 312, 313, 314, 315, 316, 317, 318, 319], [73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 311, 325], [173, 174, 175, 176, 177], [305, 306, 307], [308, 309], [320, 321, 322]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 24/303 [00:00<00:01, 234.54it/s][A
Calculating viewed counts for every point:  16%|█▌        | 48/303 [00:00<00:01, 216.16it/s][A
Calculating viewed counts for every point:  23%|██▎       | 71/303 [00:00<00:01, 220.67it/s][A
Calculating viewed counts for every point:  31%|███       | 94/303 [00:00<00:00, 220.78it/s][A
Calculating viewed counts for every point:  39%|███▊      | 117/303 [00:00<00:00, 223.90it/s][A
Calculating viewed counts for every point:  46%|████▌     | 140/303 [00:00<00:00, 224.47it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 163/303 [00:00<00:00, 209.78it/s][A
Calculating viewed counts for every point:  61%|██████    | 185/303 [00:00<00:00, 203.52it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 208/303 [00:00<00:00, 209.15it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 230/303 [00:01<00:00, 206.12it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 251/303 [00:01<00:00, 198.63it/s][A
Calculating viewed counts for every point:  90%|█████████ | 274/303 [00:01<00:00, 206.62it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 295/303 [00:01<00:00, 203.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [07:58<01:18,  4.89s/it]detected_ratio_thres_value tensor(0.5385, device='cuda:0')
final masked points tensor(11885, device='cuda:0')
before filtering torch.Size([6, 176038])
after filtering torch.Size([2, 176038])
num_ins_points_after_filtering tensor([7205, 4680], device='cuda:0')
Working on scene0671_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 29/78 [00:00<00:00, 280.87it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 58/78 [00:00<00:00, 275.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [08:00<00:56,  3.74s/it]detected_ratio_thres_value tensor(0.2424, device='cuda:0')
final masked points tensor(5758, device='cuda:0')
before filtering torch.Size([1, 81469])
after filtering torch.Size([1, 81469])
num_ins_points_after_filtering tensor([5757], device='cuda:0')
Working on scene0678_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], [33, 34, 151, 152, 153], [35, 36, 37, 38, 39, 40, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], [41, 42, 43, 44, 165, 166, 167, 168, 170, 171], [45, 46], [47, 48, 49, 50, 51, 53], [52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 181, 182, 183, 184, 185, 186, 187, 188, 191], [93, 95, 189, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204], [94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], [96, 108, 110, 112, 206, 208], [169, 172, 173, 174, 175, 176, 177], [178, 179, 180], [192, 193, 194, 195]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 97.34it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 95.08it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 91.76it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 91.32it/s][A
Calculating viewed counts for every point:  20%|██        | 50/245 [00:00<00:02, 94.16it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 98.07it/s][A
Calculating viewed counts for every point:  29%|██▉       | 71/245 [00:00<00:01, 97.08it/s][A
Calculating viewed counts for every point:  33%|███▎      | 81/245 [00:00<00:01, 97.85it/s][A
Calculating viewed counts for every point:  37%|███▋      | 91/245 [00:00<00:01, 97.56it/s][A
Calculating viewed counts for every point:  41%|████      | 101/245 [00:01<00:01, 92.48it/s][A
Calculating viewed counts for every point:  45%|████▌     | 111/245 [00:01<00:01, 89.20it/s][A
Calculating viewed counts for every point:  49%|████▉     | 120/245 [00:01<00:01, 88.94it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 130/245 [00:01<00:01, 91.85it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 140/245 [00:01<00:01, 93.62it/s][A
Calculating viewed counts for every point:  61%|██████    | 150/245 [00:01<00:01, 94.84it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 161/245 [00:01<00:00, 98.49it/s][A
Calculating viewed counts for every point:  70%|███████   | 172/245 [00:01<00:00, 99.29it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 182/245 [00:01<00:00, 95.66it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 192/245 [00:02<00:00, 96.46it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 202/245 [00:02<00:00, 95.58it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 212/245 [00:02<00:00, 93.67it/s][A
Calculating viewed counts for every point:  91%|█████████ | 222/245 [00:02<00:00, 92.05it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 232/245 [00:02<00:00, 94.17it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 242/245 [00:02<00:00, 93.09it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [08:07<01:07,  4.81s/it]detected_ratio_thres_value tensor(0.3243, device='cuda:0')
final masked points tensor(50584, device='cuda:0')
before filtering torch.Size([14, 364811])
after filtering torch.Size([6, 364811])
num_ins_points_after_filtering tensor([17038,  2265,  1170,  6239,  6831,  6984], device='cuda:0')
Working on scene0684_00 class counter
masks_to_be_merged [[0, 1, 2, 4, 6, 7, 48, 51, 54, 56, 57, 59, 60, 62, 63, 64, 65, 66], [3, 5, 49, 50, 52, 53, 55, 58, 61], [8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [44, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 29/87 [00:00<00:00, 285.43it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 62/87 [00:00<00:00, 307.26it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [08:08<00:48,  3.70s/it]detected_ratio_thres_value tensor(0.2963, device='cuda:0')
final masked points tensor(5551, device='cuda:0')
before filtering torch.Size([6, 41364])
after filtering torch.Size([4, 41364])
num_ins_points_after_filtering tensor([1120, 1720, 1434, 1114], device='cuda:0')
Working on scene0685_00 class counter
masks_to_be_merged [[0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 151, 152, 154, 155], [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 59, 61, 64], [51, 53], [54, 55, 57, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85], [78, 81, 83], [86, 87], [88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103], [99, 102, 104], [101, 105, 106, 107, 108, 109, 110, 111, 112], [113, 114, 115, 116, 117], [133, 134, 138], [146, 147, 149, 150, 153]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 30/196 [00:00<00:00, 292.40it/s][A
Calculating viewed counts for every point:  31%|███       | 60/196 [00:00<00:00, 268.35it/s][A
Calculating viewed counts for every point:  44%|████▍     | 87/196 [00:00<00:00, 253.58it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 113/196 [00:00<00:00, 238.92it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 140/196 [00:00<00:00, 246.67it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 167/196 [00:00<00:00, 252.71it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 194/196 [00:00<00:00, 255.57it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [08:11<00:42,  3.51s/it]detected_ratio_thres_value tensor(0.3438, device='cuda:0')
final masked points tensor(18106, device='cuda:0')
before filtering torch.Size([12, 132720])
after filtering torch.Size([3, 132720])
num_ins_points_after_filtering tensor([2454, 9530, 1825], device='cuda:0')
Working on scene0686_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], [19, 25], [20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60], [47, 48]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 21/153 [00:00<00:00, 203.47it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/153 [00:00<00:00, 195.63it/s][A
Calculating viewed counts for every point:  42%|████▏     | 65/153 [00:00<00:00, 209.85it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 87/153 [00:00<00:00, 202.34it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 111/153 [00:00<00:00, 214.67it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 133/153 [00:00<00:00, 215.36it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [08:13<00:33,  3.01s/it]detected_ratio_thres_value tensor(0.2759, device='cuda:0')
final masked points tensor(12481, device='cuda:0')
before filtering torch.Size([4, 89776])
after filtering torch.Size([2, 89776])
num_ins_points_after_filtering tensor([ 1404, 10841], device='cuda:0')
Working on scene0689_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [18, 72], [28, 29, 30, 31], [34, 35], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▊       | 25/87 [00:00<00:00, 247.54it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 50/87 [00:00<00:00, 245.15it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 75/87 [00:00<00:00, 241.66it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [08:14<00:25,  2.52s/it]detected_ratio_thres_value tensor(0.4211, device='cuda:0')
final masked points tensor(4216, device='cuda:0')
before filtering torch.Size([5, 122129])
after filtering torch.Size([3, 122129])
num_ins_points_after_filtering tensor([1578,  242, 1070], device='cuda:0')
Working on scene0690_00 class counter
masks_to_be_merged [[0, 1, 2, 68, 69], [3, 7, 8, 9, 10, 14, 72, 74, 75, 78, 80, 87], [4, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 73, 76, 77, 79, 81, 85, 86, 88, 89, 90], [34, 35, 40], [36, 41], [42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 56, 58, 59, 60, 62], [49, 52, 55, 61, 63], [64, 65], [70, 71]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 32/90 [00:00<00:00, 314.44it/s][A
Calculating viewed counts for every point:  71%|███████   | 64/90 [00:00<00:00, 290.90it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [08:16<00:19,  2.18s/it]detected_ratio_thres_value tensor(0.3600, device='cuda:0')
final masked points tensor(26049, device='cuda:0')
before filtering torch.Size([9, 106050])
after filtering torch.Size([3, 106050])
num_ins_points_after_filtering tensor([  586,  2413, 20324], device='cuda:0')
Working on scene0693_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], [81, 82], [84, 94, 95], [86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105], [106, 107, 108, 109, 110]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 35/174 [00:00<00:00, 346.33it/s][A
Calculating viewed counts for every point:  43%|████▎     | 75/174 [00:00<00:00, 375.41it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 113/174 [00:00<00:00, 365.42it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 150/174 [00:00<00:00, 353.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [08:18<00:17,  2.22s/it]detected_ratio_thres_value tensor(0.5652, device='cuda:0')
final masked points tensor(2671, device='cuda:0')
before filtering torch.Size([5, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([2603], device='cuda:0')
Working on scene0695_00 class counter
masks_to_be_merged [[0, 1, 2], [4, 5, 6, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 89, 90, 91], [10, 12, 59, 60, 61, 62, 63], [19, 20, 21, 80, 81, 82], [24, 85], [25, 86, 87, 88], [26, 27, 29, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 52, 76, 77], [28, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79], [53, 54, 55, 56, 57, 58]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 32/182 [00:00<00:00, 314.47it/s][A
Calculating viewed counts for every point:  35%|███▌      | 64/182 [00:00<00:00, 281.60it/s][A
Calculating viewed counts for every point:  51%|█████     | 93/182 [00:00<00:00, 266.65it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 122/182 [00:00<00:00, 274.22it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 150/182 [00:00<00:00, 273.64it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 178/182 [00:00<00:00, 262.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [08:20<00:14,  2.10s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(14813, device='cuda:0')
before filtering torch.Size([9, 133418])
after filtering torch.Size([5, 133418])
num_ins_points_after_filtering tensor([5228, 1032, 1679, 1379, 2999], device='cuda:0')
Working on scene0696_00 class counter
masks_to_be_merged [[0, 1, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 83, 85, 87, 88, 91, 93, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], [5, 6, 7, 8, 9, 76, 78, 79, 80, 81, 82, 84, 86, 89, 90, 92, 94, 95, 96, 97, 98, 100], [38, 112], [71, 72, 73, 74, 75, 77, 113, 114, 115, 116]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 12/130 [00:00<00:00, 119.24it/s][A
Calculating viewed counts for every point:  19%|█▉        | 25/130 [00:00<00:00, 123.15it/s][A
Calculating viewed counts for every point:  29%|██▉       | 38/130 [00:00<00:00, 119.95it/s][A
Calculating viewed counts for every point:  39%|███▉      | 51/130 [00:00<00:00, 117.66it/s][A
Calculating viewed counts for every point:  48%|████▊     | 63/130 [00:00<00:00, 113.16it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 75/130 [00:00<00:00, 112.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 88/130 [00:00<00:00, 115.62it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 101/130 [00:00<00:00, 118.03it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 113/130 [00:00<00:00, 114.18it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 127/130 [00:01<00:00, 119.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [08:23<00:14,  2.48s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(8271, device='cuda:0')
before filtering torch.Size([4, 231067])
after filtering torch.Size([2, 231067])
num_ins_points_after_filtering tensor([5070, 2721], device='cuda:0')
Working on scene0697_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 85, 86, 87, 88, 89, 90, 92, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 264, 265], [22, 23], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], [50, 51, 52, 53, 164, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 203], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 242], [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 95, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], [96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 237, 238, 239, 240, 241, 266, 267, 268, 269, 270], [167, 168], [185, 186]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 31/288 [00:00<00:00, 308.13it/s][A
Calculating viewed counts for every point:  22%|██▏       | 62/288 [00:00<00:00, 297.69it/s][A
Calculating viewed counts for every point:  32%|███▏      | 92/288 [00:00<00:00, 294.31it/s][A
Calculating viewed counts for every point:  42%|████▏     | 122/288 [00:00<00:00, 272.53it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 150/288 [00:00<00:00, 267.02it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 180/288 [00:00<00:00, 275.26it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 208/288 [00:00<00:00, 267.86it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 235/288 [00:00<00:00, 262.08it/s][A
Calculating viewed counts for every point:  91%|█████████ | 262/288 [00:00<00:00, 262.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [08:29<00:17,  3.41s/it]detected_ratio_thres_value tensor(0.4231, device='cuda:0')
final masked points tensor(20208, device='cuda:0')
before filtering torch.Size([9, 139300])
after filtering torch.Size([4, 139300])
num_ins_points_after_filtering tensor([1463, 3651, 1154,  872], device='cuda:0')
Working on scene0699_00 class counter
masks_to_be_merged [[0, 1, 3, 4, 6, 7, 8, 13, 37, 39, 40, 41, 146, 148, 150, 152, 153, 155, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173], [2, 5, 42, 43, 44], [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 154, 157, 158, 160, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 199, 200], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], [89, 90, 91, 118], [119, 120, 121, 122, 123, 124, 125, 126, 127], [191, 194, 195]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/220 [00:00<00:01, 157.29it/s][A
Calculating viewed counts for every point:  15%|█▌        | 33/220 [00:00<00:01, 163.05it/s][A
Calculating viewed counts for every point:  24%|██▎       | 52/220 [00:00<00:00, 173.02it/s][A
Calculating viewed counts for every point:  33%|███▎      | 73/220 [00:00<00:00, 186.08it/s][A
Calculating viewed counts for every point:  42%|████▏     | 92/220 [00:00<00:00, 183.13it/s][A
Calculating viewed counts for every point:  50%|█████     | 111/220 [00:00<00:00, 180.23it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 131/220 [00:00<00:00, 184.18it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 150/220 [00:00<00:00, 176.46it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 168/220 [00:00<00:00, 171.88it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 187/220 [00:01<00:00, 175.98it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 206/220 [00:01<00:00, 178.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [08:33<00:14,  3.75s/it]detected_ratio_thres_value tensor(0.4419, device='cuda:0')
final masked points tensor(11122, device='cuda:0')
before filtering torch.Size([8, 153041])
after filtering torch.Size([3, 153041])
num_ins_points_after_filtering tensor([3003, 3507, 2390], device='cuda:0')
Working on scene0700_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 68, 86, 87, 89, 90], [8, 9, 10, 60, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 274, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 335, 337, 338, 340, 342, 344, 346, 348, 349, 350, 351, 352, 353, 355, 357, 359, 376, 377, 380, 381, 384, 386, 388, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], [26, 27, 28, 29, 30, 31, 332, 334, 336, 339, 341, 343, 345, 347, 354, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 378, 379, 382, 383, 385, 387], [32, 33], [34, 35, 88, 93, 95, 96, 98], [91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 123, 124, 125, 126, 128, 130, 132, 134, 144], [121, 136, 140], [127, 129, 131, 133, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], [234, 235, 236, 238, 239, 240, 241, 242, 243, 244], [261, 262, 263, 264, 265], [266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/459 [00:00<00:02, 173.18it/s][A
Calculating viewed counts for every point:   8%|▊         | 37/459 [00:00<00:02, 178.55it/s][A
Calculating viewed counts for every point:  12%|█▏        | 57/459 [00:00<00:02, 186.25it/s][A
Calculating viewed counts for every point:  17%|█▋        | 76/459 [00:00<00:02, 186.69it/s][A
Calculating viewed counts for every point:  22%|██▏       | 99/459 [00:00<00:01, 198.94it/s][A
Calculating viewed counts for every point:  26%|██▌       | 120/459 [00:00<00:01, 201.75it/s][A
Calculating viewed counts for every point:  31%|███       | 143/459 [00:00<00:01, 208.61it/s][A
Calculating viewed counts for every point:  36%|███▌      | 164/459 [00:00<00:01, 207.70it/s][A
Calculating viewed counts for every point:  40%|████      | 185/459 [00:00<00:01, 207.38it/s][A
Calculating viewed counts for every point:  45%|████▍     | 206/459 [00:01<00:01, 194.55it/s][A
Calculating viewed counts for every point:  50%|████▉     | 229/459 [00:01<00:01, 203.15it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 250/459 [00:01<00:01, 196.07it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 270/459 [00:01<00:00, 194.63it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 290/459 [00:01<00:00, 192.08it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 310/459 [00:01<00:00, 194.32it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 332/459 [00:01<00:00, 199.46it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 353/459 [00:01<00:00, 200.94it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 374/459 [00:01<00:00, 189.97it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 394/459 [00:02<00:00, 184.86it/s][A
Calculating viewed counts for every point:  90%|█████████ | 414/459 [00:02<00:00, 187.85it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 433/459 [00:02<00:00, 187.29it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 452/459 [00:02<00:00, 183.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [08:47<00:20,  6.90s/it]detected_ratio_thres_value tensor(0.3929, device='cuda:0')
final masked points tensor(19340, device='cuda:0')
before filtering torch.Size([12, 167755])
after filtering torch.Size([3, 167755])
num_ins_points_after_filtering tensor([2014, 1187, 1810], device='cuda:0')
Working on scene0701_00 class counter
masks_to_be_merged [[1, 2, 3, 4, 5, 7, 8, 9, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60], [10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 53, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 80, 82, 84, 86], [15, 16, 18, 64, 66, 71, 77, 79, 81, 83, 85, 87]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 39/102 [00:00<00:00, 387.90it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 78/102 [00:00<00:00, 347.91it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [08:49<00:10,  5.23s/it]detected_ratio_thres_value tensor(0.4286, device='cuda:0')
final masked points tensor(12989, device='cuda:0')
before filtering torch.Size([3, 73550])
after filtering torch.Size([1, 73550])
num_ins_points_after_filtering tensor([3265], device='cuda:0')
Working on scene0702_00 class counter
masks_to_be_merged [[1, 11, 51], [2, 3, 4, 5, 6, 7, 8, 9, 52], [12, 13], [17, 18], [21, 23, 24, 25, 26], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [40, 41], [44, 45]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 32/84 [00:00<00:00, 314.52it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 64/84 [00:00<00:00, 284.01it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [08:50<00:03,  3.90s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(14874, device='cuda:0')
before filtering torch.Size([8, 54769])
after filtering torch.Size([6, 54769])
num_ins_points_after_filtering tensor([3805, 2532,  629, 2705,  521, 2459], device='cuda:0')
Working on scene0704_00 class counter
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14], [15, 16], [20, 21, 22, 25], [29, 36, 37, 52, 53, 54], [31, 38, 39, 40], [45, 46], [50, 51, 147], [55, 56], [58, 60, 61], [67, 68], [69, 70], [88, 101, 206], [89, 90, 91, 92, 93, 152, 154, 155, 187, 188, 189, 190], [100, 212], [103, 224, 234], [105, 106, 107], [111, 112], [117, 118, 119, 120, 121, 122], [123, 124, 126], [125, 127, 130], [132, 133, 134], [136, 138], [139, 140, 141], [142, 164], [146, 201, 204, 205], [162, 163], [166, 167], [170, 171, 172], [174, 175], [176, 177, 178, 179, 180, 181, 182], [183, 184], [192, 230, 231, 233, 235, 236, 237, 238], [194, 195, 196], [197, 198], [199, 200], [202, 203], [226, 227], [239, 240]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/241 [00:00<00:01, 186.62it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/241 [00:00<00:01, 178.70it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/241 [00:00<00:00, 186.52it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/241 [00:00<00:00, 185.96it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 185.64it/s][A
Calculating viewed counts for every point:  49%|████▉     | 119/241 [00:00<00:00, 198.61it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 139/241 [00:00<00:00, 188.94it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 162/241 [00:00<00:00, 199.93it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 183/241 [00:00<00:00, 200.06it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 204/241 [00:01<00:00, 189.78it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 225/241 [00:01<00:00, 193.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [08:56<00:00,  4.65s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [08:56<00:00,  3.78s/it]
detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(31033, device='cuda:0')
before filtering torch.Size([38, 183029])
after filtering torch.Size([20, 183029])
num_ins_points_after_filtering tensor([2327, 1613, 1317,  345,  871, 3443, 1128,  425, 2098, 1693,  323,  420,
         390, 1939,  136,    9,  434,  613, 1298,  396], device='cuda:0')
Processing class: counter
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<02:50,  1.21s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:36,  1.46it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:07,  2.07it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:02<00:55,  2.47it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:53,  2.56it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:47,  2.85it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:03<00:48,  2.81it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:03<00:39,  3.39it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:41,  3.18it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:38,  3.41it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:04<00:36,  3.55it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:04<00:34,  3.82it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:04<00:32,  3.98it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:30,  4.24it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:05<00:32,  3.86it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:05<00:27,  4.52it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:05<00:28,  4.44it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:05<00:27,  4.59it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:29,  4.17it/s]DEBUG best_match_after_iou_check [tensor(20), tensor(155)]
DEBUG uniques tensor([ 20, 155]) tensor([1, 1])
Matched 1 times with 20
Matched 1 times with 155
iou for matched labels tensor([0.3560, 0.4506])
Matched labels: ['kitchen_counter', 'desk']
Clip similarities: [0.83642578125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(57), tensor(42), tensor(33), tensor(27), tensor(3), tensor(0)]
DEBUG uniques tensor([ 0,  3, 27, 33, 42, 57]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 3
Matched 1 times with 27
Matched 1 times with 33
Matched 1 times with 42
Matched 1 times with 57
iou for matched labels tensor([0.6997, 0.7044, 0.5471, 0.5368, 0.6144, 0.6496])
Matched labels: ['desk', 'table', 'table', 'folded_chair', 'table', 'desk']
Clip similarities: [0.73095703125, 0.80908203125, 0.80908203125, 0.5634765625, 0.80908203125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(97), tensor(82), tensor(213), tensor(102)]
DEBUG uniques tensor([ 82,  97, 102, 213]) tensor([1, 1, 1, 1])
Matched 1 times with 82
Matched 1 times with 97
Matched 1 times with 102
Matched 1 times with 213
iou for matched labels tensor([0.6576, 0.3045, 0.2144, 0.5102])
Matched labels: ['sofa_chair', 'folded_chair', 'shower_floor', 'mini_fridge']
Clip similarities: [0.6044921875, 0.5634765625, 0.65185546875, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(111), tensor(193), tensor(90), tensor(129), tensor(83)]
DEBUG uniques tensor([ 83,  90, 111, 129, 193]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 83
Matched 1 times with 90
Matched 1 times with 111
Matched 1 times with 129
Matched 1 times with 193
iou for matched labels tensor([0.2770, 0.3573, 0.4423, 0.4943, 0.3072])
Matched labels: ['desk', 'bin', 'couch', 'mini_fridge', 'desk']
Clip similarities: [0.73095703125, 0.67822265625, 0.7294921875, 0.6826171875, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(171), tensor(63), tensor(139)]
DEBUG uniques tensor([ 63, 139, 171]) tensor([1, 1, 1])
Matched 1 times with 63
Matched 1 times with 139
Matched 1 times with 171
iou for matched labels tensor([0.7988, 0.7858, 0.5747])
Matched labels: ['desk', 'desk', 'folded_chair']
Clip similarities: [0.73095703125, 0.73095703125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(42), tensor(119), tensor(30), tensor(20), tensor(45)]
DEBUG uniques tensor([ 20,  30,  42,  45, 119]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 30
Matched 1 times with 42
Matched 1 times with 45
Matched 1 times with 119
iou for matched labels tensor([0.7731, 0.4213, 0.4488, 0.8299, 0.6014])
Matched labels: ['desk', 'dresser', 'bed', 'sink', 'sink']
Clip similarities: [0.73095703125, 0.74755859375, 0.62646484375, 0.79833984375, 0.79833984375]
DEBUG best_match_after_iou_check [tensor(16), tensor(142), tensor(46), tensor(143), tensor(69), tensor(226)]
DEBUG uniques tensor([ 16,  46,  69, 142, 143, 226]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 16
Matched 1 times with 46
Matched 1 times with 69
Matched 1 times with 142
Matched 1 times with 143
Matched 1 times with 226
iou for matched labels tensor([0.6739, 0.8014, 0.5376, 0.5408, 0.6233, 0.6744])
Matched labels: ['piano', 'end_table', 'couch', 'desk', 'sofa_chair', 'couch']
Clip similarities: [0.68310546875, 0.76611328125, 0.7294921875, 0.73095703125, 0.6044921875, 0.7294921875]
DEBUG best_match_after_iou_check [tensor(62), tensor(108), tensor(89), tensor(108)]
DEBUG uniques tensor([ 62,  89, 108]) tensor([1, 1, 2])
Matched 1 times with 62
Matched 1 times with 89
Matched 2 times with 108
Merge stage2 masks
iou for matched labels tensor([0.7476, 0.4997, 0.5299])
Matched labels: ['desk', 'counter', 'mat']
Clip similarities: [0.73095703125, 1.0009765625, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(25), tensor(72)]
DEBUG uniques tensor([25, 72]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 72
iou for matched labels tensor([0.7729, 0.7834])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.74951171875, 0.74951171875]
DEBUG best_match_after_iou_check [tensor(118), tensor(33)]
DEBUG uniques tensor([ 33, 118]) tensor([1, 1])
Matched 1 times with 33
Matched 1 times with 118
iou for matched labels tensor([0.7019, 0.3409])
Matched labels: ['monitor', 'box']
Clip similarities: [0.71875, 0.72607421875]
DEBUG best_match_after_iou_check [tensor(34), tensor(7), tensor(96)]
DEBUG uniques tensor([ 7, 34, 96]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 34
Matched 1 times with 96
iou for matched labels tensor([0.6971, 0.5649, 0.6943])
Matched labels: ['table', 'table', 'folded_chair']
Clip similarities: [0.80908203125, 0.80908203125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(46), tensor(32), tensor(3)]
DEBUG uniques tensor([ 3, 32, 46]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 32
Matched 1 times with 46
iou for matched labels tensor([0.7688, 0.7042, 0.5856])
Matched labels: ['bathroom_counter', 'ironing_board', 'radiator']
Clip similarities: [0.78466796875, 0.58984375, 0.66748046875]
DEBUG best_match_after_iou_check [tensor(3), tensor(2), tensor(228), tensor(228)]
DEBUG uniques tensor([  2,   3, 228]) tensor([1, 1, 2])
Matched 1 times with 2
Matched 1 times with 3
Matched 2 times with 228
Merge stage2 masks
iou for matched labels tensor([0.8168, 0.6450, 0.2482])
Matched labels: ['sink', 'sink', 'shelf']
Clip similarities: [0.79833984375, 0.79833984375, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(97)]
DEBUG uniques tensor([97]) tensor([1])
Matched 1 times with 97
iou for matched labels tensor([0.8513])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(78), tensor(176), tensor(176)]
DEBUG uniques tensor([ 78, 176]) tensor([1, 2])
Matched 1 times with 78
Matched 2 times with 176
Merge stage2 masks
iou for matched labels tensor([0.5151, 0.4545])
Matched labels: ['desk', 'file_cabinet']
Clip similarities: [0.73095703125, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(14)]
DEBUG uniques tensor([14]) tensor([1])
Matched 1 times with 14
iou for matched labels tensor([0.8308])
Matched labels: ['bathroom_counter']
Clip similarities: [0.78466796875]
DEBUG best_match_after_iou_check [tensor(25), tensor(116)]
DEBUG uniques tensor([ 25, 116]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 116
iou for matched labels tensor([0.4499, 0.4848])
Matched labels: ['desk', 'refrigerator']
Clip similarities: [0.73095703125, 0.7021484375]
DEBUG best_match_after_iou_check [tensor(95), tensor(86), tensor(149), tensor(96), tensor(151), tensor(90)]
DEBUG uniques tensor([ 86,  90,  95,  96, 149, 151]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 86
Matched 1 times with 90
Matched 1 times with 95
Matched 1 times with 96
Matched 1 times with 149
Matched 1 times with 151
iou for matched labels tensor([0.6959, 0.5818, 0.4526, 0.3354, 0.6526, 0.6152])
Matched labels: ['sink', 'washing_machine', 'laundry_hamper', 'laundry_hamper', 'closet_door', 'bathroom_stall_door']
Clip similarities: [0.79833984375, 0.71533203125, 0.61962890625, 0.61962890625, 0.634765625, 0.615234375]
DEBUG best_match_after_iou_check [tensor(1), tensor(71), tensor(13), tensor(288), tensor(288), tensor(7), tensor(109)]
DEBUG uniques tensor([  1,   7,  13,  71, 109, 288]) tensor([1, 1, 1, 1, 1, 2])
Matched 1 times with 1
Matched 1 times with 7
Matched 1 times with 13
Matched 1 times with 71
Matched 1 times with 109
Matched 2 times with 288
Merge stage2 masks
iou for matched labels tensor([0.2989, 0.2953, 0.2776, 0.0455, 0.0226, 0.0711])
Matched labels: ['sofa_chair', 'folded_chair', 'bag', 'dresser', 'closet_door', 'chair']
Clip similarities: [0.6044921875, 0.5634765625, 0.70751953125, 0.74755859375, 0.634765625, 0.69873046875]
DEBUG best_match_after_iou_check [tensor(18), tensor(103), tensor(0), tensor(139)]
DEBUG uniques tensor([  0,  18, 103, 139]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 18
Matched 1 times with 103
Matched 1 times with 139
iou for matched labels tensor([0.5182, 0.0015, 0.6374, 0.4021])
Matched labels: ['box', 'toilet_paper_holder', 'sink', 'bin']
Clip similarities: Select thresholds for refinement:  14%|█▍        | 20/142 [00:06<00:27,  4.46it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:06<00:28,  4.27it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:06<00:24,  4.99it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:06<00:22,  5.31it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:26,  4.46it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:07<00:29,  3.94it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:07<00:29,  4.00it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:07<00:27,  4.12it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:08<00:28,  3.96it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:08<00:31,  3.58it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:08<00:36,  3.05it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:09<00:32,  3.37it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:09<00:31,  3.46it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:09<00:31,  3.49it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:10<00:36,  2.96it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:10<00:34,  3.13it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:10<00:34,  3.07it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:10<00:33,  3.10it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:11<00:29,  3.50it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:11<00:29,  3.49it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:11<00:26,  3.82it/s][0.72607421875, 0.6484375, 0.79833984375, 0.67822265625]
DEBUG best_match_after_iou_check [tensor(90), tensor(212)]
DEBUG uniques tensor([ 90, 212]) tensor([1, 1])
Matched 1 times with 90
Matched 1 times with 212
iou for matched labels tensor([0.4221, 0.3945])
Matched labels: ['kitchen_counter', 'table']
Clip similarities: [0.83642578125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(82), tensor(98)]
DEBUG uniques tensor([82, 98]) tensor([1, 1])
Matched 1 times with 82
Matched 1 times with 98
iou for matched labels tensor([0.7838, 0.3998])
Matched labels: ['bathroom_counter', 'shower_floor']
Clip similarities: [0.78466796875, 0.65185546875]
DEBUG best_match_after_iou_check [tensor(64)]
DEBUG uniques tensor([64]) tensor([1])
Matched 1 times with 64
iou for matched labels tensor([0.3944])
Matched labels: ['kitchen_counter']
Clip similarities: [0.83642578125]
DEBUG best_match_after_iou_check [tensor(12), tensor(153)]
DEBUG uniques tensor([ 12, 153]) tensor([1, 1])
Matched 1 times with 12
Matched 1 times with 153
iou for matched labels tensor([0.7096, 0.6887])
Matched labels: ['desk', 'table']
Clip similarities: [0.73095703125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(28), tensor(101), tensor(87), tensor(63), tensor(2)]
DEBUG uniques tensor([  2,  28,  63,  87, 101]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 28
Matched 1 times with 63
Matched 1 times with 87
Matched 1 times with 101
iou for matched labels tensor([0.7702, 0.5786, 0.6403, 0.3027, 0.8463])
Matched labels: ['coffee_table', 'table', 'desk', 'desk', 'coffee_table']
Clip similarities: [0.74951171875, 0.80908203125, 0.73095703125, 0.73095703125, 0.74951171875]
DEBUG best_match_after_iou_check [tensor(42), tensor(1)]
DEBUG uniques tensor([ 1, 42]) tensor([1, 1])
Matched 1 times with 1
Matched 1 times with 42
iou for matched labels tensor([0.6157, 0.5290])
Matched labels: ['chair', 'bed']
Clip similarities: [0.69873046875, 0.62646484375]
DEBUG best_match_after_iou_check [tensor(37), tensor(124)]
DEBUG uniques tensor([ 37, 124]) tensor([1, 1])
Matched 1 times with 37
Matched 1 times with 124
iou for matched labels tensor([0.6338, 0.4778])
Matched labels: ['table', 'table']
Clip similarities: [0.80908203125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(218), tensor(139)]
DEBUG uniques tensor([139, 218]) tensor([1, 1])
Matched 1 times with 139
Matched 1 times with 218
iou for matched labels tensor([0.4312, 0.5881])
Matched labels: ['coffee_table', 'box']
Clip similarities: [0.74951171875, 0.72607421875]
DEBUG best_match_after_iou_check [tensor(226), tensor(371), tensor(36), tensor(14)]
DEBUG uniques tensor([ 14,  36, 226, 371]) tensor([1, 1, 1, 1])
Matched 1 times with 14
Matched 1 times with 36
Matched 1 times with 226
Matched 1 times with 371
iou for matched labels tensor([0.5774, 0.5000, 0.4936, 0.3634])
Matched labels: ['kitchen_counter', 'stove', 'bathroom_counter', 'shelf']
Clip similarities: [0.83642578125, 0.76806640625, 0.78466796875, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(133), tensor(133), tensor(257), tensor(314), tensor(185), tensor(221), tensor(208), tensor(166)]
DEBUG uniques tensor([133, 166, 185, 208, 221, 257, 314]) tensor([2, 1, 1, 1, 1, 1, 1])
Matched 2 times with 133
Merge stage2 masks
Matched 1 times with 166
Matched 1 times with 185
Matched 1 times with 208
Matched 1 times with 221
Matched 1 times with 257
Matched 1 times with 314
iou for matched labels tensor([0.1944, 0.4606, 0.1107, 0.1357, 0.4656, 0.3091, 0.6891])
Matched labels: ['bookshelf', 'couch', 'shelf', 'bookshelf', 'shelf', 'bookshelf', 'shelf']
Clip similarities: [0.73388671875, 0.7294921875, 0.77197265625, 0.73388671875, 0.77197265625, 0.73388671875, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(30), tensor(24), tensor(46)]
DEBUG uniques tensor([24, 30, 46]) tensor([1, 1, 1])
Matched 1 times with 24
Matched 1 times with 30
Matched 1 times with 46
iou for matched labels tensor([0.6124, 0.6620, 0.6221])
Matched labels: ['bed', 'desk', 'desk']
Clip similarities: [0.62646484375, 0.73095703125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(282), tensor(74), tensor(16), tensor(0), tensor(165), tensor(60), tensor(58)]
DEBUG uniques tensor([  0,  16,  58,  60,  74, 165, 282]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 16
Matched 1 times with 58
Matched 1 times with 60
Matched 1 times with 74
Matched 1 times with 165
Matched 1 times with 282
iou for matched labels tensor([0.6953, 0.7133, 0.3926, 0.8202, 0.5603, 0.6149, 0.6707])
Matched labels: ['desk', 'kitchen_counter', 'bed', 'radiator', 'desk', 'desk', 'closet_door']
Clip similarities: [0.73095703125, 0.83642578125, 0.62646484375, 0.66748046875, 0.73095703125, 0.73095703125, 0.634765625]
DEBUG best_match_after_iou_check [tensor(171), tensor(123), tensor(124)]
DEBUG uniques tensor([123, 124, 171]) tensor([1, 1, 1])
Matched 1 times with 123
Matched 1 times with 124
Matched 1 times with 171
iou for matched labels tensor([0.3717, 0.5315, 0.3985])
Matched labels: ['desk', 'dresser', 'closet_door']
Clip similarities: [0.73095703125, 0.74755859375, 0.634765625]
DEBUG best_match_after_iou_check [tensor(142), tensor(61), tensor(83), tensor(17), tensor(23)]
DEBUG uniques tensor([ 17,  23,  61,  83, 142]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 23
Matched 1 times with 61
Matched 1 times with 83
Matched 1 times with 142
iou for matched labels tensor([0.5061, 0.6275, 0.5162, 0.3886, 0.3461])
Matched labels: ['kitchen_counter', 'kitchen_counter', 'desk', 'couch', 'kitchen_counter']
Clip similarities: [0.83642578125, 0.83642578125, 0.73095703125, 0.7294921875, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(414), tensor(258), tensor(291)]
DEBUG uniques tensor([258, 291, 414]) tensor([1, 1, 1])
Matched 1 times with 258
Matched 1 times with 291
Matched 1 times with 414
iou for matched labels tensor([0.6257, 0.8114, 0.4560])
Matched labels: ['furniture', 'furniture', 'shelf']
Clip similarities: [0.77197265625, 0.77197265625, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(0), tensor(28), tensor(119)]
DEBUG uniques tensor([  0,  28, 119]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 28
Matched 1 times with 119
iou for matched labels tensor([0.7092, 0.8527, 0.4804])
Matched labels: ['desk', 'table', 'monitor']
Clip similarities: [0.73095703125, 0.80908203125, 0.71875]
DEBUG best_match_after_iou_check [tensor(8), tensor(196), tensor(168), tensor(14)]
DEBUG uniques tensor([  8,  14, 168, 196]) tensor([1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 14
Matched 1 times with 168
Matched 1 times with 196
iou for matched labels tensor([0.7323, 0.6098, 0.7720, 0.8072])
Matched labels: ['table', 'doorframe', 'furniture', 'table']
Clip similarities: [0.80908203125, 0.69677734375, 0.77197265625, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(115)]
DEBUG uniques tensor([115]) tensor([1])
Matched 1 times with 115
iou for matched labels tensor([0.5201])
Matched labels: ['desk']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(3), tensor(299), tensor(39), tensor(12), tensor(169), tensor(84), tensor(163)]
DEBUG uniques tensor([  3,  12,  39,  84, 163, 169, 299]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 12
Matched 1 times with 39
Matched 1 times with 84
Matched 1 times with 163
Matched 1 times with 169
Matched 1 times with 299
iou for matched labels tensor([0.7371, 0.5831, 0.3381, 0.3087, 0.5321, 0.7389, 0.0213])
Matched labels: ['table', 'table', 'folded_chair', 'folded_chair', 'folded_chair', 'desk', 'folded_chair']
Clip similarities: [0.80908203125, 0.80908203125, 0.5634765625, 0.5634765625, 0.5634765625, 0.73095703125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(74), tensor(74), tensor(93)]
DEBUG uniques tensor([74, 93]) tensor([2, 1])
Matched 2 times with 74
Merge stage2 masks
Matched 1 times with 93
iou for matched labels tensor([0.7733, 0.8438])
Matched labels: ['bed', 'desk']
Clip similarities: [0.62646484375, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(52), tensor(19), tensor(273)]
DEBUG uniques Select thresholds for refinement:  29%|██▉       | 41/142 [00:11<00:24,  4.05it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:12<00:25,  3.94it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:12<00:26,  3.75it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:12<00:30,  3.24it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:13<00:26,  3.68it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:13<00:24,  3.97it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:13<00:22,  4.14it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:13<00:29,  3.22it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:14<00:30,  3.06it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:14<00:27,  3.37it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:14<00:23,  3.88it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:14<00:24,  3.71it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:15<00:23,  3.85it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:15<00:22,  3.85it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:15<00:21,  4.09it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:15<00:22,  3.90it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:16<00:20,  4.11it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:16<00:20,  4.05it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:16<00:19,  4.31it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:16<00:19,  4.22it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:17<00:19,  4.25it/s]tensor([ 19,  52, 273]) tensor([1, 1, 1])
Matched 1 times with 19
Matched 1 times with 52
Matched 1 times with 273
iou for matched labels tensor([0.5799, 0.4188, 0.1785])
Matched labels: ['kitchen_counter', 'file_cabinet', 'doorframe']
Clip similarities: [0.83642578125, 0.70361328125, 0.69677734375]
DEBUG best_match_after_iou_check [tensor(54), tensor(135)]
DEBUG uniques tensor([ 54, 135]) tensor([1, 1])
Matched 1 times with 54
Matched 1 times with 135
iou for matched labels tensor([0.7015, 0.6700])
Matched labels: ['desk', 'desk']
Clip similarities: [0.73095703125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(46), tensor(46)]
DEBUG uniques tensor([46]) tensor([2])
Matched 2 times with 46
Merge stage2 masks
iou for matched labels tensor([0.7835])
Matched labels: ['file_cabinet']
Clip similarities: [0.70361328125]
DEBUG best_match_after_iou_check [tensor(5), tensor(173), tensor(282), tensor(435)]
DEBUG uniques tensor([  5, 173, 282, 435]) tensor([1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 173
Matched 1 times with 282
Matched 1 times with 435
iou for matched labels tensor([0.7851, 0.6596, 0.5246, 0.4405])
Matched labels: ['washing_machine', 'ironing_board', 'closet', 'oven']
Clip similarities: [0.71533203125, 0.58984375, 0.71533203125, 0.7578125]
DEBUG best_match_after_iou_check [tensor(21)]
DEBUG uniques tensor([21]) tensor([1])
Matched 1 times with 21
iou for matched labels tensor([0.5372])
Matched labels: ['desk']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(98), tensor(52), tensor(99), tensor(98)]
DEBUG uniques tensor([52, 98, 99]) tensor([1, 2, 1])
Matched 1 times with 52
Matched 2 times with 98
Merge stage2 masks
Matched 1 times with 99
iou for matched labels tensor([0.6895, 0.8492, 0.5169])
Matched labels: ['coffee_table', 'sofa_chair', 'shower_floor']
Clip similarities: [0.74951171875, 0.6044921875, 0.65185546875]
DEBUG best_match_after_iou_check [tensor(200)]
DEBUG uniques tensor([200]) tensor([1])
Matched 1 times with 200
iou for matched labels tensor([0.3136])
Matched labels: ['kitchen_counter']
Clip similarities: [0.83642578125]
DEBUG best_match_after_iou_check [tensor(20), tensor(10), tensor(75), tensor(76), tensor(194), tensor(18), tensor(67)]
DEBUG uniques tensor([ 10,  18,  20,  67,  75,  76, 194]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 18
Matched 1 times with 20
Matched 1 times with 67
Matched 1 times with 75
Matched 1 times with 76
Matched 1 times with 194
iou for matched labels tensor([0.5467, 0.8395, 0.4989, 0.0453, 0.5767, 0.4339, 0.4205])
Matched labels: ['couch', 'coffee_table', 'couch', 'whiteboard', 'stair_rail', 'desk', 'desk']
Clip similarities: [0.7294921875, 0.74951171875, 0.7294921875, 0.65380859375, 0.63525390625, 0.73095703125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(12), tensor(55), tensor(42), tensor(50)]
DEBUG uniques tensor([12, 42, 50, 55]) tensor([1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 42
Matched 1 times with 50
Matched 1 times with 55
iou for matched labels tensor([0.8522, 0.6341, 0.6807, 0.7565])
Matched labels: ['coffee_table', 'folded_chair', 'bench', 'bench']
Clip similarities: [0.74951171875, 0.5634765625, 0.755859375, 0.755859375]
DEBUG best_match_after_iou_check [tensor(55), tensor(39), tensor(80)]
DEBUG uniques tensor([39, 55, 80]) tensor([1, 1, 1])
Matched 1 times with 39
Matched 1 times with 55
Matched 1 times with 80
iou for matched labels tensor([0.8044, 0.5876, 0.6066])
Matched labels: ['file_cabinet', 'copier', 'recycling_bin']
Clip similarities: [0.70361328125, 0.75341796875, 0.73388671875]
DEBUG best_match_after_iou_check [tensor(100)]
DEBUG uniques tensor([100]) tensor([1])
Matched 1 times with 100
iou for matched labels tensor([0.6310])
Matched labels: ['desk']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(69), tensor(212), tensor(223), tensor(46), tensor(80), tensor(98)]
DEBUG uniques tensor([ 46,  69,  80,  98, 212, 223]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 46
Matched 1 times with 69
Matched 1 times with 80
Matched 1 times with 98
Matched 1 times with 212
Matched 1 times with 223
iou for matched labels tensor([0.7064, 0.4996, 0.3224, 0.5795, 0.6674, 0.4982])
Matched labels: ['cart', 'tv_stand', 'furniture', 'furniture', 'furniture', 'furniture']
Clip similarities: [0.74560546875, 0.7265625, 0.77197265625, 0.77197265625, 0.77197265625, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(117), tensor(191)]
DEBUG uniques tensor([117, 191]) tensor([1, 1])
Matched 1 times with 117
Matched 1 times with 191
iou for matched labels tensor([0.3775, 0.4546])
Matched labels: ['desk', 'closet_wall']
Clip similarities: [0.73095703125, 0.6416015625]
DEBUG best_match_after_iou_check [tensor(49), tensor(153), tensor(199)]
DEBUG uniques tensor([ 49, 153, 199]) tensor([1, 1, 1])
Matched 1 times with 49
Matched 1 times with 153
Matched 1 times with 199
iou for matched labels tensor([0.5083, 0.5479, 0.3125])
Matched labels: ['shelf', 'desk', 'mini_fridge']
Clip similarities: [0.77197265625, 0.73095703125, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(61), tensor(10), tensor(104), tensor(75)]
DEBUG uniques tensor([ 10,  61,  75, 104]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 61
Matched 1 times with 75
Matched 1 times with 104
iou for matched labels tensor([0.3716, 0.2289, 0.1209, 0.0812])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'door']
Clip similarities: [0.5634765625, 0.5634765625, 0.5634765625, 0.751953125]
DEBUG best_match_after_iou_check [tensor(1), tensor(168), tensor(33), tensor(134)]
DEBUG uniques tensor([  1,  33, 134, 168]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 33
Matched 1 times with 134
Matched 1 times with 168
iou for matched labels tensor([0.6577, 0.6446, 0.7044, 0.5727])
Matched labels: ['table', 'desk', 'table', 'desk']
Clip similarities: [0.80908203125, 0.73095703125, 0.80908203125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(2), tensor(32), tensor(72)]
DEBUG uniques tensor([ 2, 32, 72]) tensor([1, 1, 1])
Matched 1 times with 2
Matched 1 times with 32
Matched 1 times with 72
iou for matched labels tensor([0.6266, 0.5073, 0.9216])
Matched labels: ['desk', 'bed', 'dresser']
Clip similarities: [0.73095703125, 0.62646484375, 0.74755859375]
DEBUG best_match_after_iou_check [tensor(23), tensor(104), tensor(24)]
DEBUG uniques tensor([ 23,  24, 104]) tensor([1, 1, 1])
Matched 1 times with 23
Matched 1 times with 24
Matched 1 times with 104
iou for matched labels tensor([0.3077, 0.6607, 0.4425])
Matched labels: ['shelf', 'kitchen_counter', 'case_of_water_bottles']
Clip similarities: [0.77197265625, 0.83642578125, 0.64453125]
DEBUG best_match_after_iou_check [tensor(128), tensor(57), tensor(36)]
DEBUG uniques tensor([ 36,  57, 128]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 57
Matched 1 times with 128
iou for matched labels tensor([0.4334, 0.6351, 0.6924])
Matched labels: ['oven', 'shelf', 'shelf']
Clip similarities: [0.7578125, 0.77197265625, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(59), tensor(23), tensor(29)]
DEBUG uniques tensor([23, 29, 59]) tensor([1, 1, 1])
Matched 1 times with 23
Matched 1 times with 29
Matched 1 times with 59
iou for matched labels tensor([0.6762, 0.4010, 0.5896])
Matched labels: ['desk', 'desk', 'desk']
Clip similarities: [0.73095703125, 0.73095703125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(3), tensor(0)]
DEBUG uniques tensor([0, 3]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 3
iou for matched labels tensor([0.8651, 0.4435])
Matched labels: ['desk', 'radiator']
Clip similarities: [0.73095703125, 0.66748046875]
DEBUG best_match_after_iou_check [tensor(64), tensor(19), tensor(191), tensor(121), tensor(104)]
DEBUG uniques tensor([ 19,  64, 104, 121, 191]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 19
Matched 1 times with 64
Matched 1 times with 104
Matched 1 times with 121
Matched 1 times with 191
iou for matched labels tensor([0.8022, 0.8223, 0.1542, 0.7131, 0.6804])
Matched labels: ['desk', 'dresser', 'bed', 'table', 'dresser']
Select thresholds for refinement:  44%|████▎     | 62/142 [00:17<00:20,  4.00it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:17<00:16,  4.71it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:17<00:17,  4.34it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:18<00:19,  4.00it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:18<00:20,  3.80it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:18<00:17,  4.23it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:18<00:16,  4.38it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:18<00:14,  5.00it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:19<00:12,  5.72it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:19<00:15,  4.63it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:19<00:14,  4.75it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:19<00:12,  5.39it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:19<00:12,  5.25it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:20<00:14,  4.53it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:20<00:15,  4.33it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:20<00:16,  4.06it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:20<00:15,  4.18it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:21<00:13,  4.59it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:21<00:14,  4.16it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:21<00:17,  3.54it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:21<00:15,  3.75it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:22<00:13,  4.28it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:22<00:13,  4.38it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:22<00:14,  3.94it/s]Clip similarities: [0.73095703125, 0.74755859375, 0.62646484375, 0.80908203125, 0.74755859375]
DEBUG best_match_after_iou_check [tensor(43), tensor(77), tensor(43)]
DEBUG uniques tensor([43, 77]) tensor([2, 1])
Matched 2 times with 43
Merge stage2 masks
Matched 1 times with 77
iou for matched labels tensor([0.5751, 0.5248])
Matched labels: ['bathroom_counter', 'bathtub']
Clip similarities: [0.78466796875, 0.638671875]
DEBUG best_match_after_iou_check [tensor(3), tensor(239), tensor(84), tensor(175)]
DEBUG uniques tensor([  3,  84, 175, 239]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 84
Matched 1 times with 175
Matched 1 times with 239
iou for matched labels tensor([0.8563, 0.3419, 0.4635, 0.1668])
Matched labels: ['sink', 'counter', 'bin', 'box']
Clip similarities: [0.79833984375, 1.0009765625, 0.67822265625, 0.72607421875]
DEBUG best_match_after_iou_check [tensor(64), tensor(56)]
DEBUG uniques tensor([56, 64]) tensor([1, 1])
Matched 1 times with 56
Matched 1 times with 64
iou for matched labels tensor([0.7208, 0.4951])
Matched labels: ['desk', 'folded_chair']
Clip similarities: [0.73095703125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(35), tensor(48), tensor(0), tensor(19)]
DEBUG uniques tensor([ 0, 19, 35, 48]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 19
Matched 1 times with 35
Matched 1 times with 48
iou for matched labels tensor([0.3338, 0.2077, 0.2907, 0.5254])
Matched labels: ['sofa_chair', 'sofa_chair', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.6044921875, 0.6044921875, 0.6044921875, 0.6044921875]
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.6828])
Matched labels: ['dresser']
Clip similarities: [0.74755859375]
DEBUG best_match_after_iou_check [tensor(43)]
DEBUG uniques tensor([43]) tensor([1])
Matched 1 times with 43
iou for matched labels tensor([0.8474])
Matched labels: ['table']
Clip similarities: [0.80908203125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(16)]
DEBUG uniques tensor([16]) tensor([1])
Matched 1 times with 16
iou for matched labels tensor([0.7583])
Matched labels: ['ottoman']
Clip similarities: [0.61376953125]
DEBUG best_match_after_iou_check [tensor(224), tensor(42), tensor(117), tensor(40)]
DEBUG uniques tensor([ 40,  42, 117, 224]) tensor([1, 1, 1, 1])
Matched 1 times with 40
Matched 1 times with 42
Matched 1 times with 117
Matched 1 times with 224
iou for matched labels tensor([0.6939, 0.6991, 0.6312, 0.5809])
Matched labels: ['mini_fridge', 'dresser', 'dresser', 'bathroom_counter']
Clip similarities: [0.6826171875, 0.74755859375, 0.74755859375, 0.78466796875]
DEBUG best_match_after_iou_check [tensor(114), tensor(12), tensor(36), tensor(94)]
DEBUG uniques tensor([ 12,  36,  94, 114]) tensor([1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 36
Matched 1 times with 94
Matched 1 times with 114
iou for matched labels tensor([0.6354, 0.7594, 0.6881, 0.1569])
Matched labels: ['pipe', 'sink', 'bin', 'bathroom_stall_door']
Clip similarities: [0.67236328125, 0.79833984375, 0.67822265625, 0.615234375]
DEBUG best_match_after_iou_check [tensor(50)]
DEBUG uniques tensor([50]) tensor([1])
Matched 1 times with 50
iou for matched labels tensor([0.7390])
Matched labels: ['bathroom_counter']
Clip similarities: [0.78466796875]
DEBUG best_match_after_iou_check [tensor(23), tensor(84)]
DEBUG uniques tensor([23, 84]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 84
iou for matched labels tensor([0.8392, 0.7946])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.74951171875, 0.74951171875]
DEBUG best_match_after_iou_check [tensor(169), tensor(20), tensor(92)]
DEBUG uniques tensor([ 20,  92, 169]) tensor([1, 1, 1])
Matched 1 times with 20
Matched 1 times with 92
Matched 1 times with 169
iou for matched labels tensor([0.5893, 0.3758, 0.6323])
Matched labels: ['counter', 'laundry_hamper', 'file_cabinet']
Clip similarities: [1.0009765625, 0.61962890625, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(36), tensor(134), tensor(111)]
DEBUG uniques tensor([ 36, 111, 134]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 111
Matched 1 times with 134
iou for matched labels tensor([0.5784, 0.3924, 0.3698])
Matched labels: ['shelf', 'computer_tower', 'desk']
Clip similarities: [0.77197265625, 0.63525390625, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(98)]
DEBUG uniques tensor([98]) tensor([1])
Matched 1 times with 98
iou for matched labels tensor([0.7522])
Matched labels: ['sink']
Clip similarities: [0.79833984375]
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.9039])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.7684])
Matched labels: ['desk']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(64), tensor(206), tensor(128), tensor(146)]
DEBUG uniques tensor([ 64, 128, 146, 206]) tensor([1, 1, 1, 1])
Matched 1 times with 64
Matched 1 times with 128
Matched 1 times with 146
Matched 1 times with 206
iou for matched labels tensor([0.6173, 0.5301, 0.4493, 0.5083])
Matched labels: ['desk', 'windowsill', 'table', 'power_outlet']
Clip similarities: [0.73095703125, 0.64453125, 0.80908203125, 0.72607421875]
DEBUG best_match_after_iou_check [tensor(9), tensor(59), tensor(33)]
DEBUG uniques tensor([ 9, 33, 59]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 33
Matched 1 times with 59
iou for matched labels tensor([0.7446, 0.7196, 0.6711])
Matched labels: ['table', 'table', 'table']
Clip similarities: [0.80908203125, 0.80908203125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(6), tensor(166)]
DEBUG uniques tensor([  6, 166]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 166
iou for matched labels tensor([0.5924, 0.8014])
Matched labels: ['desk', 'furniture']
Clip similarities: [0.73095703125, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(25), tensor(86)]
DEBUG uniques tensor([25, 86]) tensor([1, 1])
Matched 1 times with 25
Matched 1 times with 86
iou for matched labels tensor([0.4269, 0.5690])
Matched labels: ['sink', 'printer']
Clip similarities: [0.79833984375, 0.76171875]
DEBUG best_match_after_iou_check [tensor(104), tensor(153), tensor(44), tensor(1), tensor(23)]
DEBUG uniques tensor([  1,  23,  44, 104, 153]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 23
Matched 1 times with 44
Matched 1 times with 104
Matched 1 times with 153
iou for matched labels tensor([0.6847, 0.5209, 0.5567, 0.6217, 0.6146])
Matched labels: ['tv_stand', 'desk', 'box', 'desk', 'folded_chair']
Clip similarities: [0.7265625, 0.73095703125, 0.72607421875, 0.73095703125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(33), tensor(0), tensor(11), tensor(17), tensor(45), tensor(182)]
DEBUG uniques tensor([  0,  11,  17,  33,  45, 182]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 11
Matched 1 times with 17
Matched 1 times with 33
Matched 1 times with 45
Matched 1 times with 182
iou for matched labels tensor([0.2574, 0.4658, 0.4699, 0.8310, 0.4513, 0.4598])
Matched labels: ['folded_chair', 'coffee_table', 'coffee_table', 'coffee_table', 'end_table', 'table']
Clip similarities: [0.5634765625, 0.74951171875, 0.74951171875, 0.74951171875, 0.76611328125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(79), tensor(11), tensor(98), tensor(61), tensor(185), tensor(39)]
DEBUG uniques tensor([ 11,  39,  61,  79,  98, 185]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 39
Matched 1 times with 61
Matched 1 times with 79
Matched 1 times with 98
Matched 1 times with 185
iou for matched labels tensor([0.6977, 0.2285, 0.6444, 0.6820, 0.3070, 0.2618])
Matched labels: ['sink', 'shower_floor', 'shower_wall', 'paper_towel_dispenser', 'bathroom_counter', 'shower_wall']
Clip similarities: Select thresholds for refinement:  61%|██████    | 86/142 [00:22<00:15,  3.69it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:23<00:14,  3.71it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:23<00:12,  4.24it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:23<00:12,  4.36it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:23<00:11,  4.38it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:24<00:11,  4.47it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:24<00:12,  3.95it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:24<00:10,  4.52it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:24<00:11,  4.18it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:25<00:11,  4.14it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:25<00:12,  3.76it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:25<00:11,  3.95it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:25<00:11,  3.69it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:26<00:12,  3.40it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:26<00:12,  3.43it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:26<00:11,  3.53it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:27<00:10,  3.82it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:27<00:09,  3.92it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:27<00:09,  4.18it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:27<00:09,  3.78it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:27<00:08,  4.29it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:28<00:10,  3.26it/s][0.79833984375, 0.65185546875, 0.65673828125, 0.64453125, 0.78466796875, 0.65673828125]
DEBUG best_match_after_iou_check [tensor(51), tensor(17), tensor(12), tensor(147), tensor(109)]
DEBUG uniques tensor([ 12,  17,  51, 109, 147]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 17
Matched 1 times with 51
Matched 1 times with 109
Matched 1 times with 147
iou for matched labels tensor([0.7056, 0.8756, 0.7935, 0.6139, 0.0286])
Matched labels: ['desk', 'table', 'table', 'file_cabinet', 'column']
Clip similarities: [0.73095703125, 0.80908203125, 0.80908203125, 0.70361328125, 0.7119140625]
DEBUG best_match_after_iou_check [tensor(78), tensor(120), tensor(0)]
DEBUG uniques tensor([  0,  78, 120]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 78
Matched 1 times with 120
iou for matched labels tensor([0.1870, 0.7243, 0.7153])
Matched labels: ['pillar', 'trash_can', 'sink']
Clip similarities: [0.6689453125, 0.73681640625, 0.79833984375]
DEBUG best_match_after_iou_check [tensor(61), tensor(98), tensor(84)]
DEBUG uniques tensor([61, 84, 98]) tensor([1, 1, 1])
Matched 1 times with 61
Matched 1 times with 84
Matched 1 times with 98
iou for matched labels tensor([0.4898, 0.6087, 0.7412])
Matched labels: ['bookshelf', 'bookshelf', 'table']
Clip similarities: [0.73388671875, 0.73388671875, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(216), tensor(113)]
DEBUG uniques tensor([113, 216]) tensor([1, 1])
Matched 1 times with 113
Matched 1 times with 216
iou for matched labels tensor([0.8463, 0.5209])
Matched labels: ['projector_screen', 'clothes']
Clip similarities: [0.65380859375, 0.7294921875]
DEBUG best_match_after_iou_check [tensor(215), tensor(147), tensor(64)]
DEBUG uniques tensor([ 64, 147, 215]) tensor([1, 1, 1])
Matched 1 times with 64
Matched 1 times with 147
Matched 1 times with 215
iou for matched labels tensor([0.6327, 0.3237, 0.6770])
Matched labels: ['printer', 'monitor', 'desk']
Clip similarities: [0.76171875, 0.71875, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(92), tensor(52), tensor(269), tensor(140), tensor(39), tensor(57)]
DEBUG uniques tensor([ 39,  52,  57,  92, 140, 269]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 39
Matched 1 times with 52
Matched 1 times with 57
Matched 1 times with 92
Matched 1 times with 140
Matched 1 times with 269
iou for matched labels tensor([0.6871, 0.3730, 0.1062, 0.4385, 0.7726, 0.7504])
Matched labels: ['coffee_table', 'shelf', 'mat', 'shelf', 'desk', 'tv_stand']
Clip similarities: [0.74951171875, 0.77197265625, 0.73095703125, 0.77197265625, 0.73095703125, 0.7265625]
DEBUG best_match_after_iou_check [tensor(80), tensor(58)]
DEBUG uniques tensor([58, 80]) tensor([1, 1])
Matched 1 times with 58
Matched 1 times with 80
iou for matched labels tensor([0.7505, 0.6543])
Matched labels: ['chair', 'bathroom_counter']
Clip similarities: [0.69873046875, 0.78466796875]
DEBUG best_match_after_iou_check [tensor(48)]
DEBUG uniques tensor([48]) tensor([1])
Matched 1 times with 48
iou for matched labels tensor([0.7251])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(55)]
DEBUG uniques tensor([55]) tensor([1])
Matched 1 times with 55
iou for matched labels tensor([0.7830])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(80), tensor(50), tensor(115), tensor(85), tensor(4)]
DEBUG uniques tensor([  4,  50,  80,  85, 115]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 4
Matched 1 times with 50
Matched 1 times with 80
Matched 1 times with 85
Matched 1 times with 115
iou for matched labels tensor([0.4046, 0.7164, 0.5833, 0.5379, 0.6712])
Matched labels: ['bed', 'dresser', 'nightstand', 'bookshelf', 'fan']
Clip similarities: [0.62646484375, 0.74755859375, 0.69775390625, 0.73388671875, 0.73828125]
DEBUG best_match_after_iou_check [tensor(94)]
DEBUG uniques tensor([94]) tensor([1])
Matched 1 times with 94
iou for matched labels tensor([0.7155])
Matched labels: ['sink']
Clip similarities: [0.79833984375]
DEBUG best_match_after_iou_check [tensor(40), tensor(29), tensor(91), tensor(128), tensor(126)]
DEBUG uniques tensor([ 29,  40,  91, 126, 128]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 29
Matched 1 times with 40
Matched 1 times with 91
Matched 1 times with 126
Matched 1 times with 128
iou for matched labels tensor([0.4566, 0.4127, 0.4351, 0.6508, 0.6847])
Matched labels: ['file_cabinet', 'desk', 'desk', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.70361328125, 0.73095703125, 0.73095703125, 0.70361328125, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(39), tensor(28), tensor(178), tensor(157), tensor(38), tensor(98), tensor(197), tensor(47)]
DEBUG uniques tensor([ 28,  38,  39,  47,  98, 157, 178, 197]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 38
Matched 1 times with 39
Matched 1 times with 47
Matched 1 times with 98
Matched 1 times with 157
Matched 1 times with 178
Matched 1 times with 197
iou for matched labels tensor([0.4514, 0.8074, 0.5745, 0.5408, 0.3824, 0.5651, 0.5863, 0.3862])
Matched labels: ['copier', 'desk', 'copier', 'mini_fridge', 'couch', 'copier', 'stair_rail', 'file_cabinet']
Clip similarities: [0.75341796875, 0.73095703125, 0.75341796875, 0.6826171875, 0.7294921875, 0.75341796875, 0.63525390625, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(74), tensor(56), tensor(25)]
DEBUG uniques tensor([25, 56, 74]) tensor([1, 1, 1])
Matched 1 times with 25
Matched 1 times with 56
Matched 1 times with 74
iou for matched labels tensor([0.5904, 0.7935, 0.3053])
Matched labels: ['bag', 'laundry_hamper', 'washing_machine']
Clip similarities: [0.70751953125, 0.61962890625, 0.71533203125]
DEBUG best_match_after_iou_check [tensor(63), tensor(174), tensor(10)]
DEBUG uniques tensor([ 10,  63, 174]) tensor([1, 1, 1])
Matched 1 times with 10
Matched 1 times with 63
Matched 1 times with 174
iou for matched labels tensor([0.6613, 0.0295, 0.6268])
Matched labels: ['table', 'table', 'desk']
Clip similarities: [0.80908203125, 0.80908203125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(103)]
DEBUG uniques tensor([103]) tensor([1])
Matched 1 times with 103
iou for matched labels tensor([0.6745])
Matched labels: ['dining_table']
Clip similarities: [0.76220703125]
DEBUG best_match_after_iou_check [tensor(16), tensor(18)]
DEBUG uniques tensor([16, 18]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 18
iou for matched labels tensor([0.6082, 0.5561])
Matched labels: ['kitchen_counter', 'tv_stand']
Clip similarities: [0.83642578125, 0.7265625]
DEBUG best_match_after_iou_check [tensor(16), tensor(146)]
DEBUG uniques tensor([ 16, 146]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 146
iou for matched labels tensor([0.8265, 0.5351])
Matched labels: ['table', 'kitchen_counter']
Clip similarities: [0.80908203125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(147), tensor(162), tensor(30), tensor(73), tensor(197)]
DEBUG uniques tensor([ 30,  73, 147, 162, 197]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 30
Matched 1 times with 73
Matched 1 times with 147
Matched 1 times with 162
Matched 1 times with 197
iou for matched labels tensor([0.7792, 0.5582, 0.3315, 0.6954, 0.2720])
Matched labels: ['coffee_table', 'monitor', 'coffee_table', 'box', 'guitar']
Clip similarities: [0.74951171875, 0.71875, 0.74951171875, 0.72607421875, 0.68408203125]
DEBUG best_match_after_iou_check [tensor(8), tensor(54), tensor(7)]
DEBUG uniques tensor([ 7,  8, 54]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 8
Matched 1 times with 54
iou for matched labels tensor([0.6946, 0.5129, 0.6363])
Matched labels: ['table', 'table', 'table']
Clip similarities: [0.80908203125, 0.80908203125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(6), tensor(38)]
DEBUG uniques tensor([ 6, 38]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 38
iou for matched labels tensor([0.8752, 0.8469])
Matched labels: ['table', 'table']
Clip similarities: [0.80908203125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(102), tensor(45), tensor(17), tensor(190)]
DEBUG uniques Select thresholds for refinement:  76%|███████▌  | 108/142 [00:28<00:10,  3.28it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:29<00:10,  3.22it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:29<00:10,  3.16it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:29<00:09,  3.42it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:29<00:08,  3.63it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:30<00:08,  3.38it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:30<00:09,  3.05it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:30<00:08,  3.17it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:31<00:07,  3.52it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:31<00:06,  3.76it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:31<00:05,  4.15it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:31<00:06,  3.71it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:32<00:05,  3.97it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:32<00:05,  4.05it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:32<00:04,  4.50it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:32<00:04,  4.18it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:32<00:03,  4.54it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:33<00:04,  3.98it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:33<00:03,  4.05it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:33<00:03,  4.55it/s]tensor([ 17,  45, 102, 190]) tensor([1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 45
Matched 1 times with 102
Matched 1 times with 190
iou for matched labels tensor([0.4340, 0.5733, 0.7847, 0.5804])
Matched labels: ['folded_chair', 'stool', 'handicap_bar', 'tv_stand']
Clip similarities: [0.5634765625, 0.70458984375, 0.68505859375, 0.7265625]
DEBUG best_match_after_iou_check [tensor(160), tensor(172), tensor(41), tensor(71), tensor(187), tensor(193), tensor(172)]
DEBUG uniques tensor([ 41,  71, 160, 172, 187, 193]) tensor([1, 1, 1, 2, 1, 1])
Matched 1 times with 41
Matched 1 times with 71
Matched 1 times with 160
Matched 2 times with 172
Merge stage2 masks
Matched 1 times with 187
Matched 1 times with 193
iou for matched labels tensor([0.4877, 0.7709, 0.6819, 0.6230, 0.1905, 0.6824])
Matched labels: ['desk', 'desk', 'desk', 'desk', 'chair', 'desk']
Clip similarities: [0.73095703125, 0.73095703125, 0.73095703125, 0.73095703125, 0.69873046875, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(54), tensor(350)]
DEBUG uniques tensor([ 54, 350]) tensor([1, 1])
Matched 1 times with 54
Matched 1 times with 350
iou for matched labels tensor([0.6897, 0.7664])
Matched labels: ['end_table', 'tv_stand']
Clip similarities: [0.76611328125, 0.7265625]
DEBUG best_match_after_iou_check [tensor(74), tensor(88), tensor(24), tensor(17)]
DEBUG uniques tensor([17, 24, 74, 88]) tensor([1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 24
Matched 1 times with 74
Matched 1 times with 88
iou for matched labels tensor([0.6925, 0.7834, 0.6264, 0.3317])
Matched labels: ['shelf', 'crate', 'closet_door', 'shelf']
Clip similarities: [0.77197265625, 0.71630859375, 0.634765625, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(146), tensor(230), tensor(82), tensor(103), tensor(27), tensor(76), tensor(138)]
DEBUG uniques tensor([ 27,  76,  82, 103, 138, 146, 230]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 76
Matched 1 times with 82
Matched 1 times with 103
Matched 1 times with 138
Matched 1 times with 146
Matched 1 times with 230
iou for matched labels tensor([0.5262, 0.4453, 0.6027, 0.5094, 0.2572, 0.5533, 0.3222])
Matched labels: ['desk', 'trash_can', 'desk', 'desk', 'shelf', 'refrigerator', 'desk']
Clip similarities: [0.73095703125, 0.73681640625, 0.73095703125, 0.73095703125, 0.77197265625, 0.7021484375, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(107), tensor(98), tensor(157), tensor(184), tensor(157)]
DEBUG uniques tensor([ 98, 107, 157, 184]) tensor([1, 1, 2, 1])
Matched 1 times with 98
Matched 1 times with 107
Matched 2 times with 157
Merge stage2 masks
Matched 1 times with 184
iou for matched labels tensor([0.4614, 0.4496, 0.3588, 0.4088])
Matched labels: ['desk', 'mini_fridge', 'case_of_water_bottles', 'desk']
Clip similarities: [0.73095703125, 0.6826171875, 0.64453125, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(24), tensor(27), tensor(305), tensor(97), tensor(65), tensor(108)]
DEBUG uniques tensor([ 24,  27,  65,  97, 108, 305]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 27
Matched 1 times with 65
Matched 1 times with 97
Matched 1 times with 108
Matched 1 times with 305
iou for matched labels tensor([0.5391, 0.5018, 0.2725, 0.4961, 0.6350, 0.5001])
Matched labels: ['dresser', 'crate', 'end_table', 'desk', 'dresser', 'bathroom_counter']
Clip similarities: [0.74755859375, 0.71630859375, 0.76611328125, 0.73095703125, 0.74755859375, 0.78466796875]
DEBUG best_match_after_iou_check [tensor(78), tensor(120), tensor(9)]
DEBUG uniques tensor([  9,  78, 120]) tensor([1, 1, 1])
Matched 1 times with 9
Matched 1 times with 78
Matched 1 times with 120
iou for matched labels tensor([0.7054, 0.6473, 0.7716])
Matched labels: ['table', 'table', 'table']
Clip similarities: [0.80908203125, 0.80908203125, 0.80908203125]
DEBUG best_match_after_iou_check [tensor(193), tensor(17)]
DEBUG uniques tensor([ 17, 193]) tensor([1, 1])
Matched 1 times with 17
Matched 1 times with 193
iou for matched labels tensor([0.5618, 0.3283])
Matched labels: ['shelf', 'shelf']
Clip similarities: [0.77197265625, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(82), tensor(263), tensor(90)]
DEBUG uniques tensor([ 82,  90, 263]) tensor([1, 1, 1])
Matched 1 times with 82
Matched 1 times with 90
Matched 1 times with 263
iou for matched labels tensor([0.5353, 0.4224, 0.4700])
Matched labels: ['sink', 'bin', 'folded_chair']
Clip similarities: [0.79833984375, 0.67822265625, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(94), tensor(206)]
DEBUG uniques tensor([ 94, 206]) tensor([1, 1])
Matched 1 times with 94
Matched 1 times with 206
iou for matched labels tensor([0.8110, 0.3803])
Matched labels: ['dresser', 'tv_stand']
Clip similarities: [0.74755859375, 0.7265625]
DEBUG best_match_after_iou_check [tensor(59), tensor(78), tensor(18)]
DEBUG uniques tensor([18, 59, 78]) tensor([1, 1, 1])
Matched 1 times with 18
Matched 1 times with 59
Matched 1 times with 78
iou for matched labels tensor([0.5890, 0.5532, 0.4149])
Matched labels: ['desk', 'desk', 'file_cabinet']
Clip similarities: [0.73095703125, 0.73095703125, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(57)]
DEBUG uniques tensor([57]) tensor([1])
Matched 1 times with 57
iou for matched labels tensor([0.7449])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(19), tensor(73), tensor(10), tensor(116), tensor(73)]
DEBUG uniques tensor([ 10,  19,  73, 116]) tensor([1, 1, 2, 1])
Matched 1 times with 10
Matched 1 times with 19
Matched 2 times with 73
Merge stage2 masks
Matched 1 times with 116
iou for matched labels tensor([0.6173, 0.6070, 0.5584, 0.3720])
Matched labels: ['desk', 'bed', 'tv_stand', 'desk']
Clip similarities: [0.73095703125, 0.62646484375, 0.7265625, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.6994])
Matched labels: ['table']
Clip similarities: [0.80908203125]
DEBUG best_match_after_iou_check [tensor(197), tensor(96), tensor(42)]
DEBUG uniques tensor([ 42,  96, 197]) tensor([1, 1, 1])
Matched 1 times with 42
Matched 1 times with 96
Matched 1 times with 197
iou for matched labels tensor([0.5825, 0.5172, 0.7559])
Matched labels: ['suitcase', 'desk', 'shelf']
Clip similarities: [0.74658203125, 0.73095703125, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(17), tensor(5), tensor(90)]
DEBUG uniques tensor([ 5, 17, 90]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 17
Matched 1 times with 90
iou for matched labels tensor([0.7857, 0.5206, 0.6549])
Matched labels: ['bathtub', 'plant', 'bathroom_counter']
Clip similarities: [0.638671875, 0.75439453125, 0.78466796875]
DEBUG best_match_after_iou_check [tensor(47), tensor(51), tensor(56), tensor(15), tensor(109), tensor(20), tensor(139)]
DEBUG uniques tensor([ 15,  20,  47,  51,  56, 109, 139]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 20
Matched 1 times with 47
Matched 1 times with 51
Matched 1 times with 56
Matched 1 times with 109
Matched 1 times with 139
iou for matched labels tensor([0.7134, 0.6927, 0.6785, 0.6578, 0.7625, 0.7620, 0.7211])
Matched labels: ['table', 'table', 'folded_chair', 'desk', 'table', 'table', 'folded_chair']
Clip similarities: [0.80908203125, 0.80908203125, 0.5634765625, 0.73095703125, 0.80908203125, 0.80908203125, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(82), tensor(55)]
DEBUG uniques tensor([55, 82]) tensor([1, 1])
Matched 1 times with 55
Matched 1 times with 82
iou for matched labels tensor([0.6837, 0.7533])
Matched labels: ['kitchen_counter', 'kitchen_counter']
Clip similarities: [0.83642578125, 0.83642578125]
DEBUG best_match_after_iou_check [tensor(153)]
DEBUG uniques tensor([153]) tensor([1])
Matched 1 times with 153
iou for matched labels tensor([0.6545])
Matched labels: ['furniture']
Clip similarities: [0.77197265625]
DEBUG best_match_after_iou_check [tensor(24), tensor(24), tensor(107), tensor(170), tensor(185), tensor(66)]
DEBUG uniques tensor([ 24,  66, 107, 170, 185]) tensor([2, 1, 1, 1, 1])
Select thresholds for refinement:  90%|█████████ | 128/142 [00:34<00:04,  3.43it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:34<00:03,  4.08it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:34<00:02,  4.01it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:34<00:02,  4.38it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:34<00:02,  4.36it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:35<00:02,  4.48it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:35<00:01,  5.36it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:35<00:01,  4.98it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:35<00:01,  4.33it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:35<00:01,  4.34it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:36<00:00,  4.37it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:36<00:00,  4.01it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:36<00:00,  4.28it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:36<00:00,  4.59it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  3.73it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  3.81it/s]
Matched 2 times with 24
Merge stage2 masks
Matched 1 times with 66
Matched 1 times with 107
Matched 1 times with 170
Matched 1 times with 185
iou for matched labels tensor([0.5948, 0.7863, 0.4787, 0.7095, 0.5724])
Matched labels: ['sink', 'laundry_detergent', 'washing_machine', 'bathroom_counter', 'washing_machine']
Clip similarities: [0.79833984375, 0.64892578125, 0.71533203125, 0.78466796875, 0.71533203125]
DEBUG best_match_after_iou_check [tensor(8), tensor(7), tensor(57), tensor(72)]
DEBUG uniques tensor([ 7,  8, 57, 72]) tensor([1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 8
Matched 1 times with 57
Matched 1 times with 72
iou for matched labels tensor([0.8671, 0.7546, 0.3284, 0.4114])
Matched labels: ['box', 'desk', 'radiator', 'shower_floor']
Clip similarities: [0.72607421875, 0.73095703125, 0.66748046875, 0.65185546875]
DEBUG best_match_after_iou_check [tensor(55), tensor(47), tensor(14)]
DEBUG uniques tensor([14, 47, 55]) tensor([1, 1, 1])
Matched 1 times with 14
Matched 1 times with 47
Matched 1 times with 55
iou for matched labels tensor([0.5252, 0.4596, 0.6527])
Matched labels: ['bin', 'printer', 'file_cabinet']
Clip similarities: [0.67822265625, 0.76171875, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(16), tensor(65)]
DEBUG uniques tensor([16, 65]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 65
iou for matched labels tensor([0.8101, 0.5506])
Matched labels: ['sink', 'shower_floor']
Clip similarities: [0.79833984375, 0.65185546875]
DEBUG best_match_after_iou_check [tensor(163), tensor(117), tensor(1)]
DEBUG uniques tensor([  1, 117, 163]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 117
Matched 1 times with 163
iou for matched labels tensor([0.0399, 0.1107, 0.1912])
Matched labels: ['office_chair', 'folded_chair', 'folded_chair']
Clip similarities: [0.67822265625, 0.5634765625, 0.5634765625]
DEBUG best_match_after_iou_check [tensor(103), tensor(68), tensor(51)]
DEBUG uniques tensor([ 51,  68, 103]) tensor([1, 1, 1])
Matched 1 times with 51
Matched 1 times with 68
Matched 1 times with 103
iou for matched labels tensor([0.3463, 0.7042, 0.4800])
Matched labels: ['sofa_chair', 'coffee_table', 'cabinet']
Clip similarities: [0.6044921875, 0.74951171875, 0.7431640625]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.7917])
Matched labels: ['bathroom_cabinet']
Clip similarities: [0.6611328125]
DEBUG best_match_after_iou_check [tensor(100), tensor(73), tensor(25), tensor(220), tensor(132)]
DEBUG uniques tensor([ 25,  73, 100, 132, 220]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 25
Matched 1 times with 73
Matched 1 times with 100
Matched 1 times with 132
Matched 1 times with 220
iou for matched labels tensor([0.3509, 0.5005, 0.5510, 0.3657, 0.2391])
Matched labels: ['closet_wall', 'rail', 'desk', 'dresser', 'closet_wall']
Clip similarities: [0.6416015625, 0.72314453125, 0.73095703125, 0.74755859375, 0.6416015625]
DEBUG best_match_after_iou_check [tensor(58), tensor(154)]
DEBUG uniques tensor([ 58, 154]) tensor([1, 1])
Matched 1 times with 58
Matched 1 times with 154
iou for matched labels tensor([0.7199, 0.7040])
Matched labels: ['table', 'dining_table']
Clip similarities: [0.80908203125, 0.76220703125]
DEBUG best_match_after_iou_check [tensor(35), tensor(36), tensor(53), tensor(15)]
DEBUG uniques tensor([15, 35, 36, 53]) tensor([1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 35
Matched 1 times with 36
Matched 1 times with 53
iou for matched labels tensor([0.6657, 0.6906, 0.7030, 0.5507])
Matched labels: ['dresser', 'dresser', 'radiator', 'dresser']
Clip similarities: [0.74755859375, 0.74755859375, 0.66748046875, 0.74755859375]
DEBUG best_match_after_iou_check [tensor(178), tensor(81), tensor(138)]
DEBUG uniques tensor([ 81, 138, 178]) tensor([1, 1, 1])
Matched 1 times with 81
Matched 1 times with 138
Matched 1 times with 178
iou for matched labels tensor([0.6931, 0.8375, 0.5963])
Matched labels: ['dresser', 'radiator', 'desk']
Clip similarities: [0.74755859375, 0.66748046875, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(107), tensor(240), tensor(240)]
DEBUG uniques tensor([107, 240]) tensor([1, 2])
Matched 1 times with 107
Matched 2 times with 240
Merge stage2 masks
iou for matched labels tensor([0.7033, 0.5324])
Matched labels: ['file_cabinet', 'monitor']
Clip similarities: [0.70361328125, 0.71875]
DEBUG best_match_after_iou_check [tensor(39)]
DEBUG uniques tensor([39]) tensor([1])
Matched 1 times with 39
iou for matched labels tensor([0.8044])
Matched labels: ['ottoman']
Clip similarities: [0.61376953125]
DEBUG best_match_after_iou_check [tensor(32), tensor(95), tensor(95), tensor(87), tensor(32), tensor(123)]
DEBUG uniques tensor([ 32,  87,  95, 123]) tensor([2, 1, 2, 1])
Matched 2 times with 32
Merge stage2 masks
Matched 1 times with 87
Matched 2 times with 95
Merge stage2 masks
Matched 1 times with 123
iou for matched labels tensor([0.8094, 0.3782, 0.7062, 0.2968])
Matched labels: ['bathroom_stall_door', 'shower_wall', 'shower_floor', 'shower_wall']
Clip similarities: [0.615234375, 0.65673828125, 0.65185546875, 0.65673828125]
DEBUG best_match_after_iou_check [tensor(332), tensor(55), tensor(97), tensor(323), tensor(323), tensor(157), tensor(157), tensor(82), tensor(160), tensor(31), tensor(31), tensor(64), tensor(332), tensor(55), tensor(463), tensor(160), tensor(92), tensor(92), tensor(64), tensor(122)]
DEBUG uniques tensor([ 31,  55,  64,  82,  92,  97, 122, 157, 160, 323, 332, 463]) tensor([2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1])
Matched 2 times with 31
Merge stage2 masks
Matched 2 times with 55
Merge stage2 masks
Matched 2 times with 64
Merge stage2 masks
Matched 1 times with 82
Matched 2 times with 92
Merge stage2 masks
Matched 1 times with 97
Matched 1 times with 122
Matched 2 times with 157
Merge stage2 masks
Matched 2 times with 160
Merge stage2 masks
Matched 2 times with 323
Merge stage2 masks
Matched 2 times with 332
Merge stage2 masks
Matched 1 times with 463
iou for matched labels tensor([0.0883, 0.1245, 0.0485, 0.0471, 0.2946, 0.3593, 0.2087, 0.2803, 0.3973,
        0.3763, 0.2147, 0.1235])
Matched labels: ['bin', 'table', 'power_outlet', 'box', 'copier', 'bin', 'box', 'desk', 'paper_cutter', 'printer', 'counter', 'dustpan']
Clip similarities: [0.67822265625, 0.80908203125, 0.72607421875, 0.72607421875, 0.75341796875, 0.67822265625, 0.72607421875, 0.73095703125, 0.669921875, 0.76171875, 1.0009765625, 0.68798828125]
Unique similarities: [0.5634765625, 0.58984375, 0.6044921875, 0.61376953125, 0.615234375, 0.61962890625, 0.62646484375, 0.634765625, 0.63525390625, 0.638671875, 0.6416015625, 0.64453125, 0.6484375, 0.64892578125, 0.65185546875, 0.65380859375, 0.65673828125, 0.6611328125, 0.66748046875, 0.6689453125, 0.669921875, 0.67236328125, 0.67822265625, 0.6826171875, 0.68310546875, 0.68408203125, 0.68505859375, 0.68798828125, 0.69677734375, 0.69775390625, 0.69873046875, 0.7021484375, 0.70361328125, 0.70458984375, 0.70751953125, 0.7119140625, 0.71533203125, 0.71630859375, 0.71875, 0.72314453125, 0.72607421875, 0.7265625, 0.7294921875, 0.73095703125, 0.73388671875, 0.73681640625, 0.73828125, 0.7431640625, 0.74560546875, 0.74658203125, 0.74755859375, 0.74951171875, 0.751953125, 0.75341796875, 0.75439453125, 0.755859375, 0.7578125, 0.76171875, 0.76220703125, 0.76611328125, 0.76806640625, 0.77197265625, 0.78466796875, 0.79833984375, 0.80908203125, 0.83642578125, 1.0009765625]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 45it [00:00, 447.58it/s]DEBUG all ious tensor([0.3560, 0.4506])
USE STAGE 2 MASK tensor(0.3560)
USE STAGE 1 MASK tensor(0.4506)
DEBUG all ious tensor([0.6997, 0.7044, 0.5471, 0.5368, 0.6144, 0.6496])
USE STAGE 1 MASK tensor(0.6997)
USE STAGE 1 MASK tensor(0.7044)
USE STAGE 1 MASK tensor(0.5471)
USE STAGE 1 MASK tensor(0.5368)
USE STAGE 1 MASK tensor(0.6144)
USE STAGE 1 MASK tensor(0.6496)
DEBUG all ious tensor([0.6576, 0.3045, 0.2144, 0.5102])
USE STAGE 1 MASK tensor(0.6576)
USE STAGE 2 MASK tensor(0.3045)
USE STAGE 2 MASK tensor(0.2144)
USE STAGE 1 MASK tensor(0.5102)
DEBUG all ious tensor([0.2770, 0.3573, 0.4423, 0.4943, 0.3072])
USE STAGE 2 MASK tensor(0.2770)
USE STAGE 2 MASK tensor(0.3573)
USE STAGE 2 MASK tensor(0.4423)
USE STAGE 1 MASK tensor(0.4943)
USE STAGE 2 MASK tensor(0.3072)
DEBUG all ious tensor([0.7988, 0.7858, 0.5747])
USE STAGE 1 MASK tensor(0.7988)
USE STAGE 1 MASK tensor(0.7858)
USE STAGE 1 MASK tensor(0.5747)
DEBUG all ious tensor([0.7731, 0.4213, 0.4488, 0.8299, 0.6014])
USE STAGE 1 MASK tensor(0.7731)
USE STAGE 2 MASK tensor(0.4213)
USE STAGE 2 MASK tensor(0.4488)
USE STAGE 1 MASK tensor(0.8299)
USE STAGE 1 MASK tensor(0.6014)
DEBUG all ious tensor([0.6739, 0.8014, 0.5376, 0.5408, 0.6233, 0.6744])
USE STAGE 1 MASK tensor(0.6739)
USE STAGE 1 MASK tensor(0.8014)
USE STAGE 1 MASK tensor(0.5376)
USE STAGE 1 MASK tensor(0.5408)
USE STAGE 1 MASK tensor(0.6233)
USE STAGE 1 MASK tensor(0.6744)
DEBUG all ious tensor([0.7476, 0.4997, 0.5299])
USE STAGE 1 MASK tensor(0.7476)
USE STAGE 1 MASK tensor(0.4997)
USE STAGE 1 MASK tensor(0.5299)
DEBUG all ious tensor([0.7729, 0.7834])
USE STAGE 1 MASK tensor(0.7729)
USE STAGE 1 MASK tensor(0.7834)
DEBUG all ious tensor([0.7019, 0.3409])
USE STAGE 1 MASK tensor(0.7019)
USE STAGE 2 MASK tensor(0.3409)
DEBUG all ious tensor([0.6971, 0.5649, 0.6943])
USE STAGE 1 MASK tensor(0.6971)
USE STAGE 1 MASK tensor(0.5649)
USE STAGE 1 MASK tensor(0.6943)
DEBUG all ious tensor([0.7688, 0.7042, 0.5856])
USE STAGE 1 MASK tensor(0.7688)
USE STAGE 1 MASK tensor(0.7042)
USE STAGE 1 MASK tensor(0.5856)
DEBUG all ious tensor([0.8168, 0.6450, 0.2482])
USE STAGE 1 MASK tensor(0.8168)
USE STAGE 1 MASK tensor(0.6450)
USE STAGE 2 MASK tensor(0.2482)
DEBUG all ious tensor([0.8513])
USE STAGE 1 MASK tensor(0.8513)
DEBUG all ious tensor([0.5151, 0.4545])
USE STAGE 1 MASK tensor(0.5151)
USE STAGE 1 MASK tensor(0.4545)
DEBUG all ious tensor([0.8308])
USE STAGE 1 MASK tensor(0.8308)
DEBUG all ious tensor([0.4499, 0.4848])
USE STAGE 2 MASK tensor(0.4499)
USE STAGE 1 MASK tensor(0.4848)
DEBUG all ious tensor([0.6959, 0.5818, 0.4526, 0.3354, 0.6526, 0.6152])
USE STAGE 1 MASK tensor(0.6959)
USE STAGE 1 MASK tensor(0.5818)
USE STAGE 1 MASK tensor(0.4526)
USE STAGE 2 MASK tensor(0.3354)
USE STAGE 1 MASK tensor(0.6526)
USE STAGE 1 MASK tensor(0.6152)
DEBUG all ious tensor([0.2989, 0.2953, 0.2776, 0.0455, 0.0226, 0.0711])
USE STAGE 2 MASK tensor(0.2989)
USE STAGE 2 MASK tensor(0.2953)
USE STAGE 2 MASK tensor(0.2776)
USE STAGE 2 MASK tensor(0.0455)
USE STAGE 2 MASK tensor(0.0226)
USE STAGE 2 MASK tensor(0.0711)
DEBUG all ious tensor([0.5182, 0.0015, 0.6374, 0.4021])
USE STAGE 1 MASK tensor(0.5182)
USE STAGE 2 MASK tensor(0.0015)
USE STAGE 1 MASK tensor(0.6374)
USE STAGE 2 MASK tensor(0.4021)
DEBUG all ious tensor([0.4221, 0.3945])
USE STAGE 2 MASK tensor(0.4221)
USE STAGE 2 MASK tensor(0.3945)
DEBUG all ious tensor([0.7838, 0.3998])
USE STAGE 1 MASK tensor(0.7838)
USE STAGE 2 MASK tensor(0.3998)
DEBUG all ious tensor([0.3944])
USE STAGE 2 MASK tensor(0.3944)
DEBUG all ious tensor([0.7096, 0.6887])
USE STAGE 1 MASK tensor(0.7096)
USE STAGE 1 MASK tensor(0.6887)
DEBUG all ious tensor([0.7702, 0.5786, 0.6403, 0.3027, 0.8463])
USE STAGE 1 MASK tensor(0.7702)
USE STAGE 1 MASK tensor(0.5786)
USE STAGE 1 MASK tensor(0.6403)
USE STAGE 2 MASK tensor(0.3027)
USE STAGE 1 MASK tensor(0.8463)
DEBUG all ious tensor([0.6157, 0.5290])
USE STAGE 1 MASK tensor(0.6157)
USE STAGE 1 MASK tensor(0.5290)
DEBUG all ious tensor([0.6338, 0.4778])
USE STAGE 1 MASK tensor(0.6338)
USE STAGE 1 MASK tensor(0.4778)
DEBUG all ious tensor([0.4312, 0.5881])
USE STAGE 2 MASK tensor(0.4312)
USE STAGE 1 MASK tensor(0.5881)
DEBUG all ious tensor([0.5774, 0.5000, 0.4936, 0.3634])
USE STAGE 1 MASK tensor(0.5774)
USE STAGE 1 MASK tensor(0.5000)
USE STAGE 1 MASK tensor(0.4936)
USE STAGE 2 MASK tensor(0.3634)
DEBUG all ious tensor([0.1944, 0.4606, 0.1107, 0.1357, 0.4656, 0.3091, 0.6891])
USE STAGE 2 MASK tensor(0.1944)
USE STAGE 1 MASK tensor(0.4606)
USE STAGE 2 MASK tensor(0.1107)
USE STAGE 2 MASK tensor(0.1357)
USE STAGE 1 MASK tensor(0.4656)
USE STAGE 2 MASK tensor(0.3091)
USE STAGE 1 MASK tensor(0.6891)
DEBUG all ious tensor([0.6124, 0.6620, 0.6221])
USE STAGE 1 MASK tensor(0.6124)
USE STAGE 1 MASK tensor(0.6620)
USE STAGE 1 MASK tensor(0.6221)
DEBUG all ious tensor([0.6953, 0.7133, 0.3926, 0.8202, 0.5603, 0.6149, 0.6707])
USE STAGE 1 MASK tensor(0.6953)
USE STAGE 1 MASK tensor(0.7133)
USE STAGE 2 MASK tensor(0.3926)
USE STAGE 1 MASK tensor(0.8202)
USE STAGE 1 MASK tensor(0.5603)
USE STAGE 1 MASK tensor(0.6149)
USE STAGE 1 MASK tensor(0.6707)
DEBUG all ious tensor([0.3717, 0.5315, 0.3985])
USE STAGE 2 MASK tensor(0.3717)
USE STAGE 1 MASK tensor(0.5315)
USE STAGE 2 MASK tensor(0.3985)
DEBUG all ious tensor([0.5061, 0.6275, 0.5162, 0.3886, 0.3461])
USE STAGE 1 MASK tensor(0.5061)
USE STAGE 1 MASK tensor(0.6275)
USE STAGE 1 MASK tensor(0.5162)
USE STAGE 2 MASK tensor(0.3886)
USE STAGE 2 MASK tensor(0.3461)
DEBUG all ious tensor([0.6257, 0.8114, 0.4560])
USE STAGE 1 MASK tensor(0.6257)
USE STAGE 1 MASK tensor(0.8114)
USE STAGE 1 MASK tensor(0.4560)
DEBUG all ious tensor([0.7092, 0.8527, 0.4804])
USE STAGE 1 MASK tensor(0.7092)
USE STAGE 1 MASK tensor(0.8527)
USE STAGE 1 MASK tensor(0.4804)
DEBUG all ious tensor([0.7323, 0.6098, 0.7720, 0.8072])
USE STAGE 1 MASK tensor(0.7323)
USE STAGE 1 MASK tensor(0.6098)
USE STAGE 1 MASK tensor(0.7720)
USE STAGE 1 MASK tensor(0.8072)
DEBUG all ious tensor([0.5201])
USE STAGE 1 MASK tensor(0.5201)
DEBUG all ious tensor([0.7371, 0.5831, 0.3381, 0.3087, 0.5321, 0.7389, 0.0213])
USE STAGE 1 MASK tensor(0.7371)
USE STAGE 1 MASK tensor(0.5831)
USE STAGE 2 MASK tensor(0.3381)
USE STAGE 2 MASK tensor(0.3087)
USE STAGE 1 MASK tensor(0.5321)
USE STAGE 1 MASK tensor(0.7389)
USE STAGE 2 MASK tensor(0.0213)
DEBUG all ious tensor([0.7733, 0.8438])
USE STAGE 1 MASK tensor(0.7733)
USE STAGE 1 MASK tensor(0.8438)
DEBUG all ious tensor([0.5799, 0.4188, 0.1785])
USE STAGE 1 MASK tensor(0.5799)
USE STAGE 2 MASK tensor(0.4188)
USE STAGE 2 MASK tensor(0.1785)
DEBUG all ious tensor([0.7015, 0.6700])
USE STAGE 1 MASK tensor(0.7015)
USE STAGE 1 MASK tensor(0.6700)
DEBUG all ious tensor([0.7835])
USE STAGE 1 MASK tensor(0.7835)
DEBUG all ious tensor([0.7851, 0.6596, 0.5246, 0.4405])
USE STAGE 1 MASK tensor(0.7851)
USE STAGE 1 MASK tensor(0.6596)
USE STAGE 1 MASK tensor(0.5246)
USE STAGE 2 MASK tensor(0.4405)
DEBUG all ious tensor([0.5372])
USE STAGE 1 MASK tensor(0.5372)
DEBUG all ious tensor([0.6895, 0.8492, 0.5169])
USE STAGE 1 MASK tensor(0.6895)
USE STAGE 1 MASK tensor(0.8492)
USE STAGE 1 MASK tensor(0.5169)
DEBUG all ious tensor([0.3136])
USE STAGE 2 MASK tensor(0.3136)
DEBUG all ious tensor([0.5467, 0.8395, 0.4989, 0.0453, 0.5767, 0.4339, 0.4205])
USE STAGE 1 MASK tensor(0.5467)
USE STAGE 1 MASK tensor(0.8395)
USE STAGE 1 MASK tensor(0.4989)
USE STAGE 2 MASK tensor(0.0453)
USE STAGE 1 MASK tensor(0.5767)
USE STAGE 2 MASK tensor(0.4339)
USE STAGE 2 MASK tensor(0.4205)
DEBUG all ious tensor([0.8522, 0.6341, 0.6807, 0.7565])
USE STAGE 1 MASK tensor(0.8522)
USE STAGE 1 MASK tensor(0.6341)
USE STAGE 1 MASK tensor(0.6807)
USE STAGE 1 MASK tensor(0.7565)
DEBUG all ious tensor([0.8044, 0.5876, 0.6066])
USE STAGE 1 MASK tensor(0.8044)
USE STAGE 1 MASK tensor(0.5876)
USE STAGE 1 MASK tensor(0.6066)
DEBUG all ious tensor([0.6310])
USE STAGE 1 MASK tensor(0.6310)
DEBUG all ious tensor([0.7064, 0.4996, 0.3224, 0.5795, 0.6674, 0.4982])
USE STAGE 1 MASK tensor(0.7064)
USE STAGE 1 MASK tensor(0.4996)
USE STAGE 2 MASK tensor(0.3224)
USE STAGE 1 MASK tensor(0.5795)
USE STAGE 1 MASK tensor(0.6674)
USE STAGE 1 MASK tensor(0.4982)
DEBUG all ious tensor([0.3775, 0.4546])
USE STAGE 2 MASK Refining stage1 output with stage2 outcomes: 90it [00:00, 411.98it/s]tensor(0.3775)
USE STAGE 1 MASK tensor(0.4546)
DEBUG all ious tensor([0.5083, 0.5479, 0.3125])
USE STAGE 1 MASK tensor(0.5083)
USE STAGE 1 MASK tensor(0.5479)
USE STAGE 2 MASK tensor(0.3125)
DEBUG all ious tensor([0.3716, 0.2289, 0.1209, 0.0812])
USE STAGE 2 MASK tensor(0.3716)
USE STAGE 2 MASK tensor(0.2289)
USE STAGE 2 MASK tensor(0.1209)
USE STAGE 2 MASK tensor(0.0812)
DEBUG all ious tensor([0.6577, 0.6446, 0.7044, 0.5727])
USE STAGE 1 MASK tensor(0.6577)
USE STAGE 1 MASK tensor(0.6446)
USE STAGE 1 MASK tensor(0.7044)
USE STAGE 1 MASK tensor(0.5727)
DEBUG all ious tensor([0.6266, 0.5073, 0.9216])
USE STAGE 1 MASK tensor(0.6266)
USE STAGE 1 MASK tensor(0.5073)
USE STAGE 1 MASK tensor(0.9216)
DEBUG all ious tensor([0.3077, 0.6607, 0.4425])
USE STAGE 2 MASK tensor(0.3077)
USE STAGE 1 MASK tensor(0.6607)
USE STAGE 2 MASK tensor(0.4425)
DEBUG all ious tensor([0.4334, 0.6351, 0.6924])
USE STAGE 2 MASK tensor(0.4334)
USE STAGE 1 MASK tensor(0.6351)
USE STAGE 1 MASK tensor(0.6924)
DEBUG all ious tensor([0.6762, 0.4010, 0.5896])
USE STAGE 1 MASK tensor(0.6762)
USE STAGE 2 MASK tensor(0.4010)
USE STAGE 1 MASK tensor(0.5896)
DEBUG all ious tensor([0.8651, 0.4435])
USE STAGE 1 MASK tensor(0.8651)
USE STAGE 2 MASK tensor(0.4435)
DEBUG all ious tensor([0.8022, 0.8223, 0.1542, 0.7131, 0.6804])
USE STAGE 1 MASK tensor(0.8022)
USE STAGE 1 MASK tensor(0.8223)
USE STAGE 2 MASK tensor(0.1542)
USE STAGE 1 MASK tensor(0.7131)
USE STAGE 1 MASK tensor(0.6804)
DEBUG all ious tensor([0.5751, 0.5248])
USE STAGE 1 MASK tensor(0.5751)
USE STAGE 1 MASK tensor(0.5248)
DEBUG all ious tensor([0.8563, 0.3419, 0.4635, 0.1668])
USE STAGE 1 MASK tensor(0.8563)
USE STAGE 2 MASK tensor(0.3419)
USE STAGE 1 MASK tensor(0.4635)
USE STAGE 2 MASK tensor(0.1668)
DEBUG all ious tensor([0.7208, 0.4951])
USE STAGE 1 MASK tensor(0.7208)
USE STAGE 1 MASK tensor(0.4951)
DEBUG all ious tensor([0.3338, 0.2077, 0.2907, 0.5254])
USE STAGE 2 MASK tensor(0.3338)
USE STAGE 2 MASK tensor(0.2077)
USE STAGE 2 MASK tensor(0.2907)
USE STAGE 1 MASK tensor(0.5254)
DEBUG all ious tensor([0.6828])
USE STAGE 1 MASK tensor(0.6828)
DEBUG all ious tensor([0.8474])
USE STAGE 1 MASK tensor(0.8474)
DEBUG all ious []
DEBUG all ious tensor([0.7583])
USE STAGE 1 MASK tensor(0.7583)
DEBUG all ious tensor([0.6939, 0.6991, 0.6312, 0.5809])
USE STAGE 1 MASK tensor(0.6939)
USE STAGE 1 MASK tensor(0.6991)
USE STAGE 1 MASK tensor(0.6312)
USE STAGE 1 MASK tensor(0.5809)
DEBUG all ious tensor([0.6354, 0.7594, 0.6881, 0.1569])
USE STAGE 1 MASK tensor(0.6354)
USE STAGE 1 MASK tensor(0.7594)
USE STAGE 1 MASK tensor(0.6881)
USE STAGE 2 MASK tensor(0.1569)
DEBUG all ious tensor([0.7390])
USE STAGE 1 MASK tensor(0.7390)
DEBUG all ious tensor([0.8392, 0.7946])
USE STAGE 1 MASK tensor(0.8392)
USE STAGE 1 MASK tensor(0.7946)
DEBUG all ious tensor([0.5893, 0.3758, 0.6323])
USE STAGE 1 MASK tensor(0.5893)
USE STAGE 2 MASK tensor(0.3758)
USE STAGE 1 MASK tensor(0.6323)
DEBUG all ious tensor([0.5784, 0.3924, 0.3698])
USE STAGE 1 MASK tensor(0.5784)
USE STAGE 2 MASK tensor(0.3924)
USE STAGE 2 MASK tensor(0.3698)
DEBUG all ious tensor([0.7522])
USE STAGE 1 MASK tensor(0.7522)
DEBUG all ious tensor([0.9039])
USE STAGE 1 MASK tensor(0.9039)
DEBUG all ious tensor([0.7684])
USE STAGE 1 MASK tensor(0.7684)
DEBUG all ious tensor([0.6173, 0.5301, 0.4493, 0.5083])
USE STAGE 1 MASK tensor(0.6173)
USE STAGE 1 MASK tensor(0.5301)
USE STAGE 2 MASK tensor(0.4493)
USE STAGE 1 MASK tensor(0.5083)
DEBUG all ious tensor([0.7446, 0.7196, 0.6711])
USE STAGE 1 MASK tensor(0.7446)
USE STAGE 1 MASK tensor(0.7196)
USE STAGE 1 MASK tensor(0.6711)
DEBUG all ious tensor([0.5924, 0.8014])
USE STAGE 1 MASK tensor(0.5924)
USE STAGE 1 MASK tensor(0.8014)
DEBUG all ious tensor([0.4269, 0.5690])
USE STAGE 2 MASK tensor(0.4269)
USE STAGE 1 MASK tensor(0.5690)
DEBUG all ious tensor([0.6847, 0.5209, 0.5567, 0.6217, 0.6146])
USE STAGE 1 MASK tensor(0.6847)
USE STAGE 1 MASK tensor(0.5209)
USE STAGE 1 MASK tensor(0.5567)
USE STAGE 1 MASK tensor(0.6217)
USE STAGE 1 MASK tensor(0.6146)
DEBUG all ious tensor([0.2574, 0.4658, 0.4699, 0.8310, 0.4513, 0.4598])
USE STAGE 2 MASK tensor(0.2574)
USE STAGE 1 MASK tensor(0.4658)
USE STAGE 1 MASK tensor(0.4699)
USE STAGE 1 MASK tensor(0.8310)
USE STAGE 1 MASK tensor(0.4513)
USE STAGE 1 MASK tensor(0.4598)
DEBUG all ious tensor([0.6977, 0.2285, 0.6444, 0.6820, 0.3070, 0.2618])
USE STAGE 1 MASK tensor(0.6977)
USE STAGE 2 MASK tensor(0.2285)
USE STAGE 1 MASK tensor(0.6444)
USE STAGE 1 MASK tensor(0.6820)
USE STAGE 2 MASK tensor(0.3070)
USE STAGE 2 MASK tensor(0.2618)
DEBUG all ious tensor([0.7056, 0.8756, 0.7935, 0.6139, 0.0286])
USE STAGE 1 MASK tensor(0.7056)
USE STAGE 1 MASK tensor(0.8756)
USE STAGE 1 MASK tensor(0.7935)
USE STAGE 1 MASK tensor(0.6139)
USE STAGE 2 MASK tensor(0.0286)
DEBUG all ious tensor([0.1870, 0.7243, 0.7153])
USE STAGE 2 MASK tensor(0.1870)
USE STAGE 1 MASK tensor(0.7243)
USE STAGE 1 MASK tensor(0.7153)
DEBUG all ious tensor([0.4898, 0.6087, 0.7412])
USE STAGE 1 MASK tensor(0.4898)
USE STAGE 1 MASK tensor(0.6087)
USE STAGE 1 MASK tensor(0.7412)
DEBUG all ious tensor([0.8463, 0.5209])
USE STAGE 1 MASK tensor(0.8463)
USE STAGE 1 MASK tensor(0.5209)
DEBUG all ious tensor([0.6327, 0.3237, 0.6770])
USE STAGE 1 MASK tensor(0.6327)
USE STAGE 2 MASK tensor(0.3237)
USE STAGE 1 MASK tensor(0.6770)
DEBUG all ious tensor([0.6871, 0.3730, 0.1062, 0.4385, 0.7726, 0.7504])
USE STAGE 1 MASK tensor(0.6871)
USE STAGE 2 MASK tensor(0.3730)
USE STAGE 2 MASK tensor(0.1062)
USE STAGE 2 MASK tensor(0.4385)
USE STAGE 1 MASK tensor(0.7726)
USE STAGE 1 MASK tensor(0.7504)
DEBUG all ious tensor([0.7505, 0.6543])
USE STAGE 1 MASK tensor(0.7505)
USE STAGE 1 MASK tensor(0.6543)
DEBUG all ious tensor([0.7251])
USE STAGE 1 MASK tensor(0.7251)
DEBUG all ious tensor([0.7830])
USE STAGE 1 MASK tensor(0.7830)
DEBUG all ious tensor([0.4046, 0.7164, 0.5833, 0.5379, 0.6712])
USE STAGE 2 MASK tensor(0.4046)
USE STAGE 1 MASK tensor(0.7164)
USE STAGE 1 MASK tensor(0.5833)
USE STAGE 1 MASK tensor(0.5379)
USE STAGE 1 MASK tensor(0.6712)
DEBUG all ious tensor([0.7155])
USE STAGE 1 MASK tensor(0.7155)
DEBUG all ious tensor([0.4566, 0.4127, 0.4351, 0.6508, 0.6847])
USE STAGE 1 MASK tensor(0.4566)
USE STAGE 2 MASK tensor(0.4127)
USE STAGE 2 MASK tensor(0.4351)
USE STAGE 1 MASK tensor(0.6508)
USE STAGE 1 MASK tensor(0.6847)
DEBUG all ious tensor([0.4514, 0.8074, 0.5745, 0.5408, 0.3824, 0.5651, 0.5863, 0.3862])
USE STAGE 1 MASK tensor(0.4514)
USE STAGE 1 MASK tensor(0.8074)
USE STAGE 1 MASK tensor(0.5745)
USE STAGE 1 MASK tensor(0.5408)
USE STAGE 2 MASK tensor(0.3824)
USE STAGE 1 MASK tensor(0.5651)
USE STAGE 1 MASK tensor(0.5863)
USE STAGE 2 MASK tensor(0.3862)
DEBUG all ious tensor([0.5904, 0.7935, 0.3053])
USE STAGE 1 MASK tensor(0.5904)
USE STAGE 1 MASK tensor(0.7935)
USE STAGE 2 MASK tensor(0.3053)
DEBUG all ious tensor([0.6613, 0.0295, 0.6268])
USE STAGE 1 MASK tensor(0.6613)
USE STAGE 2 MASK tensor(0.0295)
USE STAGE 1 MASK tensor(0.6268)
DEBUG all ious tensor([0.6745])
USE STAGE 1 MASK tensor(0.6745)
DEBUG all ious tensor([0.6082, 0.5561])
USE STAGE 1 MASK tensor(0.6082)
USE STAGE 1 MASK tensor(0.5561)
DEBUG all ious tensor([0.8265, 0.5351])
USE STAGE 1 MASK tensor(0.8265)
USE STAGE 1 MASK tensor(0.5351)
DEBUG all ious tensor([0.7792, 0.5582, 0.3315, 0.6954, 0.2720])
USE STAGE 1 MASK tensor(0.7792)
USE STAGE 1 MASK tensor(0.5582)
USE STAGE 2 MASK tensor(0.3315)
USE STAGE 1 MASK tensor(0.6954)
USE STAGE 2 MASK tensor(0.2720)
DEBUG all ious tensor([0.6946, 0.5129, 0.6363])
USE STAGE 1 MASK tensor(0.6946)
USE STAGE 1 MASK tensor(0.5129)
USE STAGE 1 MASK tensor(0.6363)
DEBUG all ious tensor([0.8752, 0.8469])
USE STAGE 1 MASK tensor(0.8752)
USE STAGE 1 MASK tensor(0.8469)
DEBUG all ious tensor([0.4340, 0.5733, 0.7847, 0.5804])
USE STAGE 2 MASK tensor(0.4340)
USE STAGE 1 MASK tensor(0.5733)
USE STAGE 1 MASK tensor(0.7847)
USE STAGE 1 MASK tensor(0.5804)
DEBUG all ious tensor([0.4877, 0.7709, 0.6819, 0.6230, 0.1905, 0.6824])
USE STAGE 1 MASK tensor(0.4877)
USE STAGE 1 MASK tensor(0.7709)
USE STAGE 1 MASK tensor(0.6819)
USE STAGE 1 MASK tensor(0.6230)
USE STAGE 2 MASK tensor(0.1905)
USE STAGE 1 MASK tensor(0.6824)
DEBUG all ious tensor([0.6897, 0.7664])
Refining stage1 output with stage2 outcomes: 132it [00:00, 350.12it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 358.29it/s]
USE STAGE 1 MASK tensor(0.6897)
USE STAGE 1 MASK tensor(0.7664)
DEBUG all ious tensor([0.6925, 0.7834, 0.6264, 0.3317])
USE STAGE 1 MASK tensor(0.6925)
USE STAGE 1 MASK tensor(0.7834)
USE STAGE 1 MASK tensor(0.6264)
USE STAGE 2 MASK tensor(0.3317)
DEBUG all ious tensor([0.5262, 0.4453, 0.6027, 0.5094, 0.2572, 0.5533, 0.3222])
USE STAGE 1 MASK tensor(0.5262)
USE STAGE 2 MASK tensor(0.4453)
USE STAGE 1 MASK tensor(0.6027)
USE STAGE 1 MASK tensor(0.5094)
USE STAGE 2 MASK tensor(0.2572)
USE STAGE 1 MASK tensor(0.5533)
USE STAGE 2 MASK tensor(0.3222)
DEBUG all ious tensor([0.4614, 0.4496, 0.3588, 0.4088])
USE STAGE 1 MASK tensor(0.4614)
USE STAGE 2 MASK tensor(0.4496)
USE STAGE 2 MASK tensor(0.3588)
USE STAGE 2 MASK tensor(0.4088)
DEBUG all ious tensor([0.5391, 0.5018, 0.2725, 0.4961, 0.6350, 0.5001])
USE STAGE 1 MASK tensor(0.5391)
USE STAGE 1 MASK tensor(0.5018)
USE STAGE 2 MASK tensor(0.2725)
USE STAGE 1 MASK tensor(0.4961)
USE STAGE 1 MASK tensor(0.6350)
USE STAGE 1 MASK tensor(0.5001)
DEBUG all ious tensor([0.7054, 0.6473, 0.7716])
USE STAGE 1 MASK tensor(0.7054)
USE STAGE 1 MASK tensor(0.6473)
USE STAGE 1 MASK tensor(0.7716)
DEBUG all ious tensor([0.5618, 0.3283])
USE STAGE 1 MASK tensor(0.5618)
USE STAGE 2 MASK tensor(0.3283)
DEBUG all ious tensor([0.5353, 0.4224, 0.4700])
USE STAGE 1 MASK tensor(0.5353)
USE STAGE 2 MASK tensor(0.4224)
USE STAGE 1 MASK tensor(0.4700)
DEBUG all ious tensor([0.8110, 0.3803])
USE STAGE 1 MASK tensor(0.8110)
USE STAGE 2 MASK tensor(0.3803)
DEBUG all ious tensor([0.5890, 0.5532, 0.4149])
USE STAGE 1 MASK tensor(0.5890)
USE STAGE 1 MASK tensor(0.5532)
USE STAGE 2 MASK tensor(0.4149)
DEBUG all ious tensor([0.7449])
USE STAGE 1 MASK tensor(0.7449)
DEBUG all ious tensor([0.6173, 0.6070, 0.5584, 0.3720])
USE STAGE 1 MASK tensor(0.6173)
USE STAGE 1 MASK tensor(0.6070)
USE STAGE 1 MASK tensor(0.5584)
USE STAGE 2 MASK tensor(0.3720)
DEBUG all ious tensor([0.6994])
USE STAGE 1 MASK tensor(0.6994)
DEBUG all ious tensor([0.5825, 0.5172, 0.7559])
USE STAGE 1 MASK tensor(0.5825)
USE STAGE 1 MASK tensor(0.5172)
USE STAGE 1 MASK tensor(0.7559)
DEBUG all ious tensor([0.7857, 0.5206, 0.6549])
USE STAGE 1 MASK tensor(0.7857)
USE STAGE 1 MASK tensor(0.5206)
USE STAGE 1 MASK tensor(0.6549)
DEBUG all ious tensor([0.7134, 0.6927, 0.6785, 0.6578, 0.7625, 0.7620, 0.7211])
USE STAGE 1 MASK tensor(0.7134)
USE STAGE 1 MASK tensor(0.6927)
USE STAGE 1 MASK tensor(0.6785)
USE STAGE 1 MASK tensor(0.6578)
USE STAGE 1 MASK tensor(0.7625)
USE STAGE 1 MASK tensor(0.7620)
USE STAGE 1 MASK tensor(0.7211)
DEBUG all ious tensor([0.6837, 0.7533])
USE STAGE 1 MASK tensor(0.6837)
USE STAGE 1 MASK tensor(0.7533)
DEBUG all ious tensor([0.6545])
USE STAGE 1 MASK tensor(0.6545)
DEBUG all ious tensor([0.5948, 0.7863, 0.4787, 0.7095, 0.5724])
USE STAGE 1 MASK tensor(0.5948)
USE STAGE 1 MASK tensor(0.7863)
USE STAGE 1 MASK tensor(0.4787)
USE STAGE 1 MASK tensor(0.7095)
USE STAGE 1 MASK tensor(0.5724)
DEBUG all ious tensor([0.8671, 0.7546, 0.3284, 0.4114])
USE STAGE 1 MASK tensor(0.8671)
USE STAGE 1 MASK tensor(0.7546)
USE STAGE 2 MASK tensor(0.3284)
USE STAGE 2 MASK tensor(0.4114)
DEBUG all ious tensor([0.5252, 0.4596, 0.6527])
USE STAGE 1 MASK tensor(0.5252)
USE STAGE 1 MASK tensor(0.4596)
USE STAGE 1 MASK tensor(0.6527)
DEBUG all ious tensor([0.8101, 0.5506])
USE STAGE 1 MASK tensor(0.8101)
USE STAGE 1 MASK tensor(0.5506)
DEBUG all ious tensor([0.0399, 0.1107, 0.1912])
USE STAGE 2 MASK tensor(0.0399)
USE STAGE 2 MASK tensor(0.1107)
USE STAGE 2 MASK tensor(0.1912)
DEBUG all ious tensor([0.3463, 0.7042, 0.4800])
USE STAGE 2 MASK tensor(0.3463)
USE STAGE 1 MASK tensor(0.7042)
USE STAGE 1 MASK tensor(0.4800)
DEBUG all ious tensor([0.7917])
USE STAGE 1 MASK tensor(0.7917)
DEBUG all ious tensor([0.3509, 0.5005, 0.5510, 0.3657, 0.2391])
USE STAGE 2 MASK tensor(0.3509)
USE STAGE 1 MASK tensor(0.5005)
USE STAGE 1 MASK tensor(0.5510)
USE STAGE 2 MASK tensor(0.3657)
USE STAGE 2 MASK tensor(0.2391)
DEBUG all ious tensor([0.7199, 0.7040])
USE STAGE 1 MASK tensor(0.7199)
USE STAGE 1 MASK tensor(0.7040)
DEBUG all ious tensor([0.6657, 0.6906, 0.7030, 0.5507])
USE STAGE 1 MASK tensor(0.6657)
USE STAGE 1 MASK tensor(0.6906)
USE STAGE 1 MASK tensor(0.7030)
USE STAGE 1 MASK tensor(0.5507)
DEBUG all ious tensor([0.6931, 0.8375, 0.5963])
USE STAGE 1 MASK tensor(0.6931)
USE STAGE 1 MASK tensor(0.8375)
USE STAGE 1 MASK tensor(0.5963)
DEBUG all ious tensor([0.7033, 0.5324])
USE STAGE 1 MASK tensor(0.7033)
USE STAGE 1 MASK tensor(0.5324)
DEBUG all ious tensor([0.8044])
USE STAGE 1 MASK tensor(0.8044)
DEBUG all ious tensor([0.8094, 0.3782, 0.7062, 0.2968])
USE STAGE 1 MASK tensor(0.8094)
USE STAGE 2 MASK tensor(0.3782)
USE STAGE 1 MASK tensor(0.7062)
USE STAGE 2 MASK tensor(0.2968)
DEBUG all ious tensor([0.0883, 0.1245, 0.0485, 0.0471, 0.2946, 0.3593, 0.2087, 0.2803, 0.3973,
        0.3763, 0.2147, 0.1235])
USE STAGE 2 MASK tensor(0.0883)
USE STAGE 2 MASK tensor(0.1245)
USE STAGE 2 MASK tensor(0.0485)
USE STAGE 2 MASK tensor(0.0471)
USE STAGE 2 MASK tensor(0.2946)
USE STAGE 2 MASK tensor(0.3593)
USE STAGE 2 MASK tensor(0.2087)
USE STAGE 2 MASK tensor(0.2803)
USE STAGE 2 MASK tensor(0.3973)
USE STAGE 2 MASK tensor(0.3763)
USE STAGE 2 MASK tensor(0.2147)
USE STAGE 2 MASK tensor(0.1235)
Evaluating class counter...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class counter...:   1%|▏         | 2/142 [00:00<00:09, 14.15it/s]Evaluating class counter...:   4%|▎         | 5/142 [00:00<00:09, 15.19it/s]Evaluating class counter...:   5%|▍         | 7/142 [00:00<00:08, 15.24it/s]Evaluating class counter...:   6%|▋         | 9/142 [00:00<00:08, 16.46it/s]Evaluating class counter...:   8%|▊         | 12/142 [00:00<00:06, 20.45it/s]Evaluating class counter...:  11%|█         | 15/142 [00:00<00:06, 19.52it/s]Evaluating class counter...:  13%|█▎        | 18/142 [00:00<00:05, 20.86it/s]Evaluating class counter...:  15%|█▍        | 21/142 [00:01<00:05, 22.27it/s]Evaluating class counter...:  17%|█▋        | 24/142 [00:01<00:05, 22.35it/s]Evaluating class counter...:  19%|█▉        | 27/142 [00:01<00:04, 23.46it/s]Evaluating class counter...:  21%|██        | 30/142 [00:01<00:07, 15.12it/s]Evaluating class counter...:  23%|██▎       | 32/142 [00:01<00:06, 15.82it/s]Evaluating class counter...:  24%|██▍       | 34/142 [00:02<00:08, 12.61it/s]Evaluating class counter...:  25%|██▌       | 36/142 [00:02<00:08, 12.50it/s]Evaluating class counter...:  27%|██▋       | 39/142 [00:02<00:07, 14.69it/s]Evaluating class counter...:  30%|███       | 43/142 [00:02<00:05, 16.82it/s]Evaluating class counter...:  32%|███▏      | 45/142 [00:02<00:06, 15.22it/s]Evaluating class counter...:  34%|███▍      | 48/142 [00:02<00:05, 16.15it/s]Evaluating class counter...:  35%|███▌      | 50/142 [00:02<00:05, 16.33it/s]Evaluating class counter...:  37%|███▋      | 53/142 [00:03<00:04, 18.08it/s]Evaluating class counter...:  39%|███▊      | 55/142 [00:03<00:04, 18.33it/s]Evaluating class counter...:  41%|████      | 58/142 [00:03<00:04, 20.27it/s]Evaluating class counter...:  43%|████▎     | 61/142 [00:03<00:03, 21.77it/s]Evaluating class counter...:  45%|████▌     | 64/142 [00:03<00:03, 21.41it/s]Evaluating class counter...:  47%|████▋     | 67/142 [00:03<00:03, 21.85it/s]Evaluating class counter...:  50%|█████     | 71/142 [00:03<00:03, 22.13it/s]Evaluating class counter...:  53%|█████▎    | 75/142 [00:04<00:03, 21.84it/s]Evaluating class counter...:  55%|█████▍    | 78/142 [00:04<00:02, 21.40it/s]Evaluating class counter...:  57%|█████▋    | 81/142 [00:04<00:03, 20.07it/s]Evaluating class counter...:  59%|█████▉    | 84/142 [00:04<00:02, 22.08it/s]Evaluating class counter...:  61%|██████▏   | 87/142 [00:04<00:02, 20.37it/s]Evaluating class counter...:  64%|██████▍   | 91/142 [00:04<00:02, 22.81it/s]Evaluating class counter...:  66%|██████▌   | 94/142 [00:04<00:02, 21.75it/s]Evaluating class counter...:  68%|██████▊   | 97/142 [00:05<00:02, 21.39it/s]Evaluating class counter...:  70%|███████   | 100/142 [00:05<00:02, 17.99it/s]Evaluating class counter...:  72%|███████▏  | 102/142 [00:05<00:02, 18.26it/s]Evaluating class counter...:  73%|███████▎  | 104/142 [00:05<00:02, 18.40it/s]Evaluating class counter...:  75%|███████▌  | 107/142 [00:05<00:02, 16.74it/s]Evaluating class counter...:  77%|███████▋  | 109/142 [00:05<00:02, 16.12it/s]Evaluating class counter...:  78%|███████▊  | 111/142 [00:06<00:02, 14.64it/s]Evaluating class counter...:  80%|███████▉  | 113/142 [00:06<00:01, 14.69it/s]Evaluating class counter...:  81%|████████  | 115/142 [00:06<00:01, 13.65it/s]Evaluating class counter...:  83%|████████▎ | 118/142 [00:06<00:01, 16.42it/s]Evaluating class counter...:  85%|████████▍ | 120/142 [00:06<00:01, 15.78it/s]Evaluating class counter...:  87%|████████▋ | 123/142 [00:06<00:01, 17.73it/s]Evaluating class counter...:  89%|████████▊ | 126/142 [00:06<00:00, 18.38it/s]Evaluating class counter...:  90%|█████████ | 128/142 [00:07<00:00, 14.99it/s]Evaluating class counter...:  92%|█████████▏| 131/142 [00:07<00:00, 17.62it/s]Evaluating class counter...:  95%|█████████▌| 135/142 [00:07<00:00, 20.70it/s]Evaluating class counter...:  97%|█████████▋| 138/142 [00:07<00:00, 18.82it/s]Evaluating class counter...:  99%|█████████▉| 141/142 [00:07<00:00, 21.05it/s]Evaluating class counter...: 100%|██████████| 142/142 [00:07<00:00, 18.22it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 10%|▉         | 14/142 [00:00<00:01, 115.56it/s] 23%|██▎       | 32/142 [00:00<00:00, 146.62it/s] 34%|███▍      | 48/142 [00:00<00:00, 151.95it/s] 53%|█████▎    | 75/142 [00:00<00:00, 196.44it/s] 70%|██████▉   | 99/142 [00:00<00:00, 209.67it/s] 85%|████████▌ | 121/142 [00:00<00:00, 197.66it/s]100%|██████████| 142/142 [00:00<00:00, 192.92it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.002   0.003   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.003   0.004   0.009
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.001   0.001   0.002
################################################

DEBUG avg value {'ap': 0.14332473988674577, 'ap50%': 0.21521068859198356, 'ap25%': 0.432712215320911, 'rc': 0.2857142857142857, 'rc50%': 0.42857142857142855, 'rc25%': 0.8571428571428571}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  60%|██████    | 6/10 [36:28<24:54, 373.52s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class stool
masks_to_be_merged [[0, 2, 3, 5], [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 92, 96, 98, 104, 105, 106, 107], [4, 6, 7, 8, 10], [22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 91], [27, 38, 39, 43], [35, 40], [44, 120, 121, 123, 124], [45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 68, 70, 72, 109, 110, 111, 113, 115, 117, 119], [63, 69, 71, 74, 80, 81, 82, 84, 86, 87, 88], [95, 97, 100], [108, 122], [112, 114, 116, 118], [129, 130, 131]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/238 [00:00<00:02, 95.52it/s][A
Calculating viewed counts for every point:  10%|▉         | 23/238 [00:00<00:01, 112.03it/s][A
Calculating viewed counts for every point:  15%|█▍        | 35/238 [00:00<00:02, 98.92it/s] [A
Calculating viewed counts for every point:  19%|█▉        | 46/238 [00:00<00:02, 88.70it/s][A
Calculating viewed counts for every point:  24%|██▎       | 56/238 [00:00<00:02, 83.31it/s][A
Calculating viewed counts for every point:  28%|██▊       | 67/238 [00:00<00:01, 89.76it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/238 [00:00<00:01, 91.28it/s][A
Calculating viewed counts for every point:  37%|███▋      | 87/238 [00:00<00:01, 88.81it/s][A
Calculating viewed counts for every point:  40%|████      | 96/238 [00:01<00:01, 84.25it/s][A
Calculating viewed counts for every point:  45%|████▍     | 107/238 [00:01<00:01, 89.41it/s][A
Calculating viewed counts for every point:  49%|████▉     | 117/238 [00:01<00:01, 87.75it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 129/238 [00:01<00:01, 95.69it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 139/238 [00:01<00:01, 94.04it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 151/238 [00:01<00:00, 100.96it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 162/238 [00:01<00:00, 101.79it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 173/238 [00:01<00:00, 89.49it/s] [A
Calculating viewed counts for every point:  77%|███████▋  | 183/238 [00:01<00:00, 91.62it/s][A
Calculating viewed counts for every point:  81%|████████  | 193/238 [00:02<00:00, 88.03it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 202/238 [00:02<00:00, 78.67it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 211/238 [00:02<00:00, 80.23it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 224/238 [00:02<00:00, 92.47it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 234/238 [00:02<00:00, 89.98it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:08<21:00,  8.94s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(17689, device='cuda:0')
before filtering torch.Size([13, 237360])
after filtering torch.Size([9, 237360])
num_ins_points_after_filtering tensor([ 991, 2664,  794, 1836,  647, 4423, 2152, 2160,  342], device='cuda:0')
Working on scene0015_00 class stool
masks_to_be_merged [[0, 2, 20, 21], [6, 7, 8, 9, 10, 11, 12], [14, 15, 16, 23], [18, 19]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 16/198 [00:00<00:01, 159.82it/s][A
Calculating viewed counts for every point:  16%|█▌        | 32/198 [00:00<00:01, 149.21it/s][A
Calculating viewed counts for every point:  27%|██▋       | 53/198 [00:00<00:00, 174.56it/s][A
Calculating viewed counts for every point:  36%|███▌      | 71/198 [00:00<00:00, 171.85it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/198 [00:00<00:00, 152.70it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 106/198 [00:00<00:00, 157.16it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 122/198 [00:00<00:00, 141.24it/s][A
Calculating viewed counts for every point:  71%|███████   | 140/198 [00:00<00:00, 151.66it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 156/198 [00:01<00:00, 149.10it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

Calculating viewed counts for every point:  87%|████████▋ | 172/198 [00:01<00:00, 145.07it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 187/198 [00:01<00:00, 143.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:10<11:08,  4.77s/it]detected_ratio_thres_value tensor(0.0690, device='cuda:0')
final masked points tensor(6149, device='cuda:0')
before filtering torch.Size([4, 217086])
after filtering torch.Size([4, 217086])
num_ins_points_after_filtering tensor([2174,  644,  575,  607], device='cuda:0')
Working on scene0019_00 class stool
masks_to_be_merged [[0, 1, 2, 18, 20]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 10/58 [00:00<00:00, 97.61it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 31/58 [00:00<00:00, 160.57it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 56/58 [00:00<00:00, 200.15it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:11<06:44,  2.91s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(4336, device='cuda:0')
before filtering torch.Size([1, 136769])
after filtering torch.Size([1, 136769])
num_ins_points_after_filtering tensor([3847], device='cuda:0')
Working on scene0025_00 class stool
masks_to_be_merged [[0, 2, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 89, 90, 91, 92, 94, 95], [1, 4], [5, 73, 74], [6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 20, 27, 28, 30, 32, 35, 38, 76, 78, 79, 80, 81], [15, 17, 19, 21, 22, 23, 24, 25, 26, 29, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 77, 82, 83, 84, 85], [51, 52, 53, 65, 86, 87, 88, 93], [57, 60], [69, 70]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 5/195 [00:00<00:04, 45.35it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/195 [00:00<00:03, 58.04it/s][A
Calculating viewed counts for every point:  13%|█▎        | 26/195 [00:00<00:01, 89.01it/s][A
Calculating viewed counts for every point:  20%|██        | 39/195 [00:00<00:01, 101.72it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/195 [00:00<00:01, 118.23it/s][A
Calculating viewed counts for every point:  34%|███▍      | 66/195 [00:00<00:01, 104.18it/s][A
Calculating viewed counts for every point:  39%|███▉      | 77/195 [00:00<00:01, 81.13it/s] [A
Calculating viewed counts for every point:  48%|████▊     | 93/195 [00:00<00:01, 99.10it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 104/195 [00:01<00:00, 100.13it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 115/195 [00:01<00:00, 100.96it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 126/195 [00:01<00:00, 85.36it/s] [A
Calculating viewed counts for every point:  70%|██████▉   | 136/195 [00:01<00:00, 83.04it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 145/195 [00:01<00:00, 79.35it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 155/195 [00:01<00:00, 82.68it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 164/195 [00:02<00:00, 57.89it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 171/195 [00:02<00:00, 58.73it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 180/195 [00:02<00:00, 64.31it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 189/195 [00:02<00:00, 69.66it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:15<08:05,  3.52s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(8201, device='cuda:0')
before filtering torch.Size([8, 173392])
after filtering torch.Size([3, 173392])
num_ins_points_after_filtering tensor([1142, 1355, 4653], device='cuda:0')
Working on scene0030_00 class stool
masks_to_be_merged [[0, 43, 46], [2, 3, 4, 5, 44, 45, 47, 48], [7, 8], [9, 13, 14, 17, 18, 19, 27], [10, 11, 12], [15, 16, 21, 22, 23, 24, 25, 26, 28, 29], [30, 31], [32, 33], [35, 36], [37, 38, 39, 40, 42], [49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 7/250 [00:00<00:03, 66.34it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/250 [00:00<00:04, 58.68it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/250 [00:00<00:04, 56.72it/s][A
Calculating viewed counts for every point:  10%|█         | 26/250 [00:00<00:04, 55.05it/s][A
Calculating viewed counts for every point:  13%|█▎        | 32/250 [00:00<00:04, 51.06it/s][A
Calculating viewed counts for every point:  15%|█▌        | 38/250 [00:00<00:04, 49.74it/s][A
Calculating viewed counts for every point:  18%|█▊        | 44/250 [00:00<00:03, 51.66it/s][A
Calculating viewed counts for every point:  20%|██        | 51/250 [00:00<00:03, 54.41it/s][A
Calculating viewed counts for every point:  23%|██▎       | 58/250 [00:01<00:03, 57.48it/s][A
Calculating viewed counts for every point:  26%|██▋       | 66/250 [00:01<00:02, 63.47it/s][A
Calculating viewed counts for every point:  30%|███       | 75/250 [00:01<00:02, 69.62it/s][A
Calculating viewed counts for every point:  33%|███▎      | 83/250 [00:01<00:02, 69.75it/s][A
Calculating viewed counts for every point:  36%|███▋      | 91/250 [00:01<00:02, 72.00it/s][A
Calculating viewed counts for every point:  40%|███▉      | 99/250 [00:01<00:02, 66.52it/s][A
Calculating viewed counts for every point:  42%|████▏     | 106/250 [00:01<00:02, 64.07it/s][A
Calculating viewed counts for every point:  45%|████▌     | 113/250 [00:01<00:02, 56.63it/s][A
Calculating viewed counts for every point:  48%|████▊     | 119/250 [00:01<00:02, 57.35it/s][A
Calculating viewed counts for every point:  50%|█████     | 125/250 [00:02<00:02, 53.33it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 131/250 [00:02<00:02, 54.01it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 139/250 [00:02<00:01, 59.77it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 146/250 [00:02<00:01, 60.55it/s][A
Calculating viewed counts for every point:  61%|██████    | 153/250 [00:02<00:01, 62.50it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 160/250 [00:02<00:01, 61.24it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 167/250 [00:02<00:01, 61.34it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 174/250 [00:02<00:01, 58.94it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 180/250 [00:03<00:01, 44.17it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 186/250 [00:03<00:01, 46.68it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 192/250 [00:03<00:01, 47.27it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 198/250 [00:03<00:01, 49.01it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 205/250 [00:03<00:00, 52.16it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 211/250 [00:03<00:00, 54.10it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 217/250 [00:04<00:01, 32.75it/s][A
Calculating viewed counts for every point:  90%|█████████ | 225/250 [00:04<00:00, 38.73it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 230/250 [00:04<00:00, 40.43it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 236/250 [00:04<00:00, 41.29it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 243/250 [00:04<00:00, 46.86it/s][A
Calculating viewed counts for every point: 100%|██████████| 250/250 [00:04<00:00, 50.88it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:22<10:24,  4.56s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(7967, device='cuda:0')
before filtering torch.Size([11, 293811])
after filtering torch.Size([5, 293811])
num_ins_points_after_filtering tensor([1938, 1435, 1067, 1573,  269], device='cuda:0')
Working on scene0046_00 class stool
masks_to_be_merged [[0, 1, 2], [3, 6, 7, 8, 16, 17, 18, 19, 20, 33, 34, 35, 36, 37, 38, 39], [4, 5, 9, 10, 11], [13, 14, 15], [21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 32]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 11/249 [00:00<00:02, 109.53it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/249 [00:00<00:02, 83.46it/s] [A
Calculating viewed counts for every point:  12%|█▏        | 31/249 [00:00<00:02, 74.61it/s][A
Calculating viewed counts for every point:  17%|█▋        | 42/249 [00:00<00:02, 84.29it/s][A
Calculating viewed counts for every point:  21%|██        | 52/249 [00:00<00:02, 88.68it/s][A
Calculating viewed counts for every point:  25%|██▍       | 62/249 [00:00<00:02, 88.71it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/249 [00:00<00:02, 78.14it/s][A
Calculating viewed counts for every point:  33%|███▎      | 81/249 [00:01<00:02, 71.02it/s][A
Calculating viewed counts for every point:  36%|███▌      | 90/249 [00:01<00:02, 75.56it/s][A
Calculating viewed counts for every point:  39%|███▉      | 98/249 [00:01<00:02, 73.38it/s][A
Calculating viewed counts for every point:  44%|████▍     | 109/249 [00:01<00:01, 82.02it/s][A
Calculating viewed counts for every point:  47%|████▋     | 118/249 [00:01<00:01, 80.18it/s][A
Calculating viewed counts for every point:  51%|█████     | 127/249 [00:01<00:01, 75.20it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 136/249 [00:01<00:01, 75.93it/s][A
Calculating viewed counts for every point:  61%|██████    | 151/249 [00:01<00:01, 95.11it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 164/249 [00:01<00:00, 104.19it/s][A
Calculating viewed counts for every point:  70%|███████   | 175/249 [00:02<00:00, 105.52it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 190/249 [00:02<00:00, 115.37it/s][A
Calculating viewed counts for every point:  81%|████████  | 202/249 [00:02<00:00, 102.84it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 213/249 [00:02<00:00, 92.24it/s] [A
Calculating viewed counts for every point:  90%|████████▉ | 223/249 [00:02<00:00, 91.04it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 233/249 [00:02<00:00, 89.46it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 245/249 [00:02<00:00, 89.49it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:26<09:43,  4.29s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(4607, device='cuda:0')
before filtering torch.Size([6, 186857])
after filtering torch.Size([4, 186857])
num_ins_points_after_filtering tensor([ 123, 2489, 1637,  199], device='cuda:0')
Working on scene0050_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 261, 263, 264, 265, 266, 267, 268], [11, 12, 13, 14, 82, 83, 84, 86, 89, 91, 92, 94, 105, 106, 109, 124, 151, 152, 153, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 192, 194, 196, 197, 198, 200, 202, 249, 260, 262], [15, 16, 17, 18, 100, 102, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 257, 258, 259], [19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 104, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 250, 251, 252, 253, 254, 255, 256], [22, 24], [35, 36, 37, 38, 39, 40], [42, 68, 69], [85, 87, 88, 90, 93, 95, 96, 97, 98, 99, 108], [172, 173], [186, 188, 191, 193, 195, 199, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 199.10it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 165.26it/s][A
Calculating viewed counts for every point:  13%|█▎        | 60/466 [00:00<00:02, 165.37it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/466 [00:00<00:02, 166.59it/s][A
Calculating viewed counts for every point:  21%|██        | 97/466 [00:00<00:02, 173.89it/s][A
Calculating viewed counts for every point:  25%|██▍       | 115/466 [00:00<00:02, 172.89it/s][A
Calculating viewed counts for every point:  29%|██▊       | 133/466 [00:00<00:02, 154.10it/s][A
Calculating viewed counts for every point:  32%|███▏      | 151/466 [00:00<00:01, 160.96it/s][A
Calculating viewed counts for every point:  37%|███▋      | 171/466 [00:01<00:01, 169.74it/s][A
Calculating viewed counts for every point:  41%|████      | 189/466 [00:01<00:01, 151.64it/s][A
Calculating viewed counts for every point:  45%|████▍     | 209/466 [00:01<00:01, 163.94it/s][A
Calculating viewed counts for every point:  49%|████▉     | 230/466 [00:01<00:01, 176.10it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 251/466 [00:01<00:01, 184.63it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 270/466 [00:01<00:01, 179.92it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 292/466 [00:01<00:00, 190.69it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 312/466 [00:01<00:00, 183.81it/s][A
Calculating viewed counts for every point:  71%|███████   | 331/466 [00:01<00:00, 181.47it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 350/466 [00:02<00:00, 177.83it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 370/466 [00:02<00:00, 183.42it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 389/466 [00:02<00:00, 165.27it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 406/466 [00:02<00:00, 153.90it/s][A
Calculating viewed counts for every point:  91%|█████████ | 422/466 [00:02<00:00, 145.71it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 437/466 [00:02<00:00, 126.22it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 455/466 [00:02<00:00, 138.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:34<12:55,  5.75s/it]detected_ratio_thres_value tensor(0.2807, device='cuda:0')
final masked points tensor(18405, device='cuda:0')
before filtering torch.Size([10, 211406])
after filtering torch.Size([4, 211406])
num_ins_points_after_filtering tensor([1282, 4071, 6655, 4296], device='cuda:0')
Working on scene0063_00 class stool
masks_to_be_merged [[2, 3], [6, 7, 8], [11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 28/84 [00:00<00:00, 246.67it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 55/84 [00:00<00:00, 257.45it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 81/84 [00:00<00:00, 224.89it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:35<09:25,  4.22s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(1392, device='cuda:0')
before filtering torch.Size([3, 76966])
after filtering torch.Size([3, 76966])
num_ins_points_after_filtering tensor([565,  43,   9], device='cuda:0')
Working on scene0064_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 9, 10, 13, 35, 36], [7, 8, 11, 12, 15, 16, 17, 32], [20, 21, 22, 23, 24, 25, 26, 27], [30, 31], [37, 38], [40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 12/121 [00:00<00:00, 116.71it/s][A
Calculating viewed counts for every point:  24%|██▍       | 29/121 [00:00<00:00, 135.46it/s][A
Calculating viewed counts for every point:  36%|███▌      | 43/121 [00:00<00:00, 133.46it/s][A
Calculating viewed counts for every point:  47%|████▋     | 57/121 [00:00<00:00, 134.99it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 71/121 [00:00<00:00, 133.83it/s][A
Calculating viewed counts for every point:  70%|███████   | 85/121 [00:00<00:00, 133.57it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 99/121 [00:00<00:00, 135.43it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 113/121 [00:00<00:00, 116.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [00:37<07:43,  3.49s/it]detected_ratio_thres_value tensor(0.1923, device='cuda:0')
final masked points tensor(11280, device='cuda:0')
before filtering torch.Size([6, 230672])
after filtering torch.Size([5, 230672])
num_ins_points_after_filtering tensor([4800, 3054, 1280,  724,  481], device='cuda:0')
Working on scene0077_00 class stool
masks_to_be_merged [[0, 1], [2, 3], [4, 5, 6, 7, 8, 10]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 23/61 [00:00<00:00, 229.00it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 48/61 [00:00<00:00, 241.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:38<05:45,  2.62s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(1264, device='cuda:0')
before filtering torch.Size([3, 92807])
after filtering torch.Size([2, 92807])
num_ins_points_after_filtering tensor([ 105, 1016], device='cuda:0')
Working on scene0081_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 23, 24, 25, 26], [4, 5, 6, 7, 8, 9, 15, 17, 18, 19, 20], [10, 11, 12, 13, 14, 16]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
                                                                                 [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [00:39<04:32,  2.08s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(3480, device='cuda:0')
before filtering torch.Size([3, 51381])
after filtering torch.Size([3, 51381])
num_ins_points_after_filtering tensor([1012, 1210, 1225], device='cuda:0')
Working on scene0084_00 class stool
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [42, 43, 44], [45, 46, 47, 48, 49, 50, 51, 53, 55, 57], [52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 8/198 [00:00<00:02, 75.44it/s][A
Calculating viewed counts for every point:   8%|▊         | 16/198 [00:00<00:02, 75.54it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/198 [00:00<00:02, 76.77it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/198 [00:00<00:02, 69.53it/s][A
Calculating viewed counts for every point:  21%|██        | 41/198 [00:00<00:02, 69.81it/s][A
Calculating viewed counts for every point:  25%|██▌       | 50/198 [00:00<00:01, 74.03it/s][A
Calculating viewed counts for every point:  30%|██▉       | 59/198 [00:00<00:01, 72.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 74/198 [00:00<00:01, 94.12it/s][A
Calculating viewed counts for every point:  47%|████▋     | 94/198 [00:01<00:00, 122.75it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/198 [00:01<00:00, 116.76it/s][A
Calculating viewed counts for every point:  60%|██████    | 119/198 [00:01<00:00, 110.58it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 131/198 [00:01<00:00, 91.81it/s] [A
Calculating viewed counts for every point:  71%|███████   | 141/198 [00:01<00:00, 78.63it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 162/198 [00:01<00:00, 107.41it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 175/198 [00:01<00:00, 105.99it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 187/198 [00:02<00:00, 89.64it/s] [A
Calculating viewed counts for every point:  99%|█████████▉| 197/198 [00:02<00:00, 79.25it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:43<06:01,  2.78s/it]detected_ratio_thres_value tensor(0.3103, device='cuda:0')
final masked points tensor(2433, device='cuda:0')
before filtering torch.Size([5, 116845])
after filtering torch.Size([3, 116845])
num_ins_points_after_filtering tensor([1169,  868,   36], device='cuda:0')
Working on scene0086_00 class stool
masks_to_be_merged [[0, 1], [3, 4]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 7/143 [00:00<00:01, 68.62it/s][A
Calculating viewed counts for every point:  10%|▉         | 14/143 [00:00<00:02, 60.57it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/143 [00:00<00:02, 58.95it/s][A
Calculating viewed counts for every point:  19%|█▉        | 27/143 [00:00<00:01, 59.01it/s][A
Calculating viewed counts for every point:  24%|██▍       | 34/143 [00:00<00:01, 58.98it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/143 [00:00<00:01, 58.50it/s][A
Calculating viewed counts for every point:  34%|███▎      | 48/143 [00:00<00:01, 62.73it/s][A
Calculating viewed counts for every point:  39%|███▉      | 56/143 [00:00<00:01, 64.69it/s][A
Calculating viewed counts for every point:  44%|████▍     | 63/143 [00:01<00:01, 63.87it/s][A
Calculating viewed counts for every point:  49%|████▉     | 70/143 [00:01<00:01, 59.99it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 78/143 [00:01<00:01, 64.88it/s][A
Calculating viewed counts for every point:  60%|██████    | 86/143 [00:01<00:00, 67.44it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 93/143 [00:01<00:00, 66.10it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 100/143 [00:01<00:00, 63.29it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 107/143 [00:01<00:00, 62.67it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 114/143 [00:01<00:00, 58.75it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 121/143 [00:01<00:00, 59.78it/s][A
Calculating viewed counts for every point:  90%|█████████ | 129/143 [00:02<00:00, 63.47it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 136/143 [00:02<00:00, 59.77it/s][A
Calculating viewed counts for every point: 100%|██████████| 143/143 [00:02<00:00, 58.98it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:46<05:47,  2.70s/it]detected_ratio_thres_value tensor(0.0645, device='cuda:0')
final masked points tensor(693, device='cuda:0')
before filtering torch.Size([2, 124572])
after filtering torch.Size([2, 124572])
num_ins_points_after_filtering tensor([ 77, 572], device='cuda:0')
Working on scene0088_00 class stool
masks_to_be_merged [[3, 4], [5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 8/110 [00:00<00:01, 66.28it/s][A
Calculating viewed counts for every point:  19%|█▉        | 21/110 [00:00<00:00, 97.27it/s][A
Calculating viewed counts for every point:  33%|███▎      | 36/110 [00:00<00:00, 117.57it/s][A
Calculating viewed counts for every point:  51%|█████     | 56/110 [00:00<00:00, 147.85it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 76/110 [00:00<00:00, 164.98it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 93/110 [00:00<00:00, 153.52it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [00:47<04:42,  2.21s/it]detected_ratio_thres_value tensor(0.0625, device='cuda:0')
final masked points tensor(2324, device='cuda:0')
before filtering torch.Size([2, 166872])
after filtering torch.Size([2, 166872])
num_ins_points_after_filtering tensor([661, 675], device='cuda:0')
Working on scene0095_00 class stool
masks_to_be_merged [[1, 2, 3], [4, 15], [5, 6, 7, 8], [9, 10, 12, 14], [11, 13], [16, 19]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 7/166 [00:00<00:02, 65.53it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:02, 69.42it/s][A
Calculating viewed counts for every point:  16%|█▋        | 27/166 [00:00<00:01, 79.84it/s][A
Calculating viewed counts for every point:  23%|██▎       | 39/166 [00:00<00:01, 93.17it/s][A
Calculating viewed counts for every point:  33%|███▎      | 54/166 [00:00<00:01, 110.05it/s][A
Calculating viewed counts for every point:  40%|███▉      | 66/166 [00:00<00:00, 113.06it/s][A
Calculating viewed counts for every point:  49%|████▉     | 82/166 [00:00<00:00, 126.81it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 96/166 [00:00<00:00, 127.67it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 109/166 [00:00<00:00, 121.33it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 126/166 [00:01<00:00, 134.31it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 140/166 [00:01<00:00, 135.08it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 154/166 [00:01<00:00, 129.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:49<04:31,  2.14s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(4330, device='cuda:0')
before filtering torch.Size([6, 214895])
after filtering torch.Size([5, 214895])
num_ins_points_after_filtering tensor([ 659,  438, 1119,  211,  383], device='cuda:0')
Working on scene0100_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 33, 34], [7, 31, 32], [12, 13, 14, 15, 16, 17, 18, 19, 26], [20, 21, 22, 23, 24, 25], [27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 17/102 [00:00<00:00, 167.84it/s][A
Calculating viewed counts for every point:  33%|███▎      | 34/102 [00:00<00:00, 162.36it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 53/102 [00:00<00:00, 172.07it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 71/102 [00:00<00:00, 159.75it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 89/102 [00:00<00:00, 165.26it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:50<04:06,  1.96s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(2420, device='cuda:0')
before filtering torch.Size([5, 52304])
after filtering torch.Size([4, 52304])
num_ins_points_after_filtering tensor([613, 776, 194, 829], device='cuda:0')
Working on scene0131_00 class stool
masks_to_be_merged [[0, 1, 2, 10, 11, 13, 14, 15, 34, 35, 36, 37], [3, 4, 5, 6, 7, 8, 9, 16, 17], [20, 21], [22, 23], [24, 25], [26, 27, 28], [30, 31, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 10/108 [00:00<00:00, 98.35it/s][A
Calculating viewed counts for every point:  25%|██▌       | 27/108 [00:00<00:00, 139.49it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/108 [00:00<00:00, 141.14it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 63/108 [00:00<00:00, 165.17it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 86/108 [00:00<00:00, 180.37it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 104/108 [00:00<00:00, 167.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [00:52<03:43,  1.79s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(6212, device='cuda:0')
before filtering torch.Size([7, 177091])
after filtering torch.Size([6, 177091])
num_ins_points_after_filtering tensor([1317, 1074,  834,   90,  750,  740], device='cuda:0')
Working on scene0139_00 class stool
masks_to_be_merged [[2, 3], [4, 5, 6, 7, 8, 9, 10], [11, 12]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 20/136 [00:00<00:00, 197.97it/s][A
Calculating viewed counts for every point:  29%|██▉       | 40/136 [00:00<00:00, 156.91it/s][A
Calculating viewed counts for every point:  46%|████▌     | 62/136 [00:00<00:00, 178.78it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 87/136 [00:00<00:00, 204.22it/s][A
Calculating viewed counts for every point:  81%|████████  | 110/136 [00:00<00:00, 210.93it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 132/136 [00:00<00:00, 192.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:53<03:24,  1.65s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(4451, device='cuda:0')
before filtering torch.Size([3, 72007])
after filtering torch.Size([3, 72007])
num_ins_points_after_filtering tensor([1385,  370, 1487], device='cuda:0')
Working on scene0144_00 class stool
masks_to_be_merged [[6, 7, 8, 40], [9, 41, 42], [12, 13, 43, 44], [19, 20], [27, 28, 29, 31, 32, 33], [36, 37]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 9/144 [00:00<00:01, 88.39it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/144 [00:00<00:01, 91.27it/s][A
Calculating viewed counts for every point:  28%|██▊       | 41/144 [00:00<00:00, 148.35it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/144 [00:00<00:00, 162.00it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 77/144 [00:00<00:00, 144.43it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 99/144 [00:00<00:00, 166.34it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 117/144 [00:00<00:00, 167.04it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 134/144 [00:00<00:00, 144.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:55<03:41,  1.80s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(9890, device='cuda:0')
before filtering torch.Size([6, 126879])
after filtering torch.Size([6, 126879])
num_ins_points_after_filtering tensor([1678, 1679, 2582,  430,  881,  865], device='cuda:0')
Working on scene0146_00 class stool
masks_to_be_merged [[0, 1, 10, 20, 21, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [2, 3, 4], [5, 6, 7, 8, 9, 27, 30, 32], [11, 12, 13, 14, 15, 16, 17, 18, 19], [28, 29, 31]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 12/141 [00:00<00:01, 118.99it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/141 [00:00<00:01, 104.84it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/141 [00:00<00:00, 127.20it/s][A
Calculating viewed counts for every point:  38%|███▊      | 53/141 [00:00<00:00, 122.10it/s][A
Calculating viewed counts for every point:  50%|████▉     | 70/141 [00:00<00:00, 136.59it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 87/141 [00:00<00:00, 143.03it/s][A
Calculating viewed counts for every point:  80%|████████  | 113/141 [00:00<00:00, 166.29it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 134/141 [00:00<00:00, 172.24it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:57<03:40,  1.81s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(1420, device='cuda:0')
before filtering torch.Size([5, 60438])
after filtering torch.Size([2, 60438])
num_ins_points_after_filtering tensor([503,  26], device='cuda:0')
Working on scene0149_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19], [14, 15, 20], [22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 14/141 [00:00<00:00, 139.40it/s][A
Calculating viewed counts for every point:  23%|██▎       | 32/141 [00:00<00:00, 161.98it/s][A
Calculating viewed counts for every point:  38%|███▊      | 54/141 [00:00<00:00, 188.14it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 74/141 [00:00<00:00, 185.78it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 93/141 [00:00<00:00, 172.19it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 111/141 [00:00<00:00, 161.66it/s][A
Calculating viewed counts for every point:  91%|█████████ | 128/141 [00:00<00:00, 157.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:58<03:29,  1.73s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(4133, device='cuda:0')
before filtering torch.Size([3, 162396])
after filtering torch.Size([2, 162396])
num_ins_points_after_filtering tensor([2941,  986], device='cuda:0')
Working on scene0153_00 class stool
masks_to_be_merged [[1, 4, 5], [3, 7]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 8/59 [00:00<00:00, 79.53it/s][A
Calculating viewed counts for every point:  27%|██▋       | 16/59 [00:00<00:00, 65.99it/s][A
Calculating viewed counts for every point:  51%|█████     | 30/59 [00:00<00:00, 95.02it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 40/59 [00:00<00:00, 92.54it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 53/59 [00:00<00:00, 104.52it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:59<03:03,  1.53s/it]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(935, device='cuda:0')
before filtering torch.Size([2, 47709])
after filtering torch.Size([2, 47709])
num_ins_points_after_filtering tensor([448, 207], device='cuda:0')
Working on scene0164_00 class stool
masks_to_be_merged [[1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 11/189 [00:00<00:01, 89.54it/s][A
Calculating viewed counts for every point:  14%|█▍        | 27/189 [00:00<00:01, 124.61it/s][A
Calculating viewed counts for every point:  23%|██▎       | 43/189 [00:00<00:01, 137.46it/s][A
Calculating viewed counts for every point:  32%|███▏      | 60/189 [00:00<00:00, 144.93it/s][A
Calculating viewed counts for every point:  40%|███▉      | 75/189 [00:00<00:00, 145.91it/s][A
Calculating viewed counts for every point:  49%|████▉     | 93/189 [00:00<00:00, 151.34it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 116/189 [00:00<00:00, 174.91it/s][A
Calculating viewed counts for every point:  71%|███████   | 134/189 [00:00<00:00, 167.76it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 151/189 [00:00<00:00, 167.95it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 170/189 [00:01<00:00, 167.69it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 187/189 [00:01<00:00, 146.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [01:01<02:58,  1.50s/it]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(588, device='cuda:0')
before filtering torch.Size([1, 94315])
after filtering torch.Size([1, 94315])
num_ins_points_after_filtering tensor([576], device='cuda:0')
Working on scene0169_00 class stool
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [22, 23, 24, 25, 94], [26, 28], [27, 29, 31, 33, 36, 40, 42, 43, 46, 48, 50, 52, 99, 106, 107, 110, 112, 114, 115], [32, 34, 38, 41, 44, 45, 47, 49, 51, 53, 102, 103, 108, 109, 111, 113, 116], [35, 104], [37, 105], [56, 57, 58, 59, 60, 61, 63, 65, 69, 70, 71, 72, 73], [62, 64], [75, 76, 78, 80, 82, 84], [77, 79, 81, 83, 85], [88, 89, 90], [98, 101]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/204 [00:00<00:03, 58.18it/s][A
Calculating viewed counts for every point:   7%|▋         | 15/204 [00:00<00:02, 76.02it/s][A
Calculating viewed counts for every point:  14%|█▎        | 28/204 [00:00<00:01, 96.96it/s][A
Calculating viewed counts for every point:  19%|█▊        | 38/204 [00:00<00:01, 83.82it/s][A
Calculating viewed counts for every point:  23%|██▎       | 47/204 [00:00<00:02, 64.52it/s][A
Calculating viewed counts for every point:  27%|██▋       | 55/204 [00:00<00:02, 68.05it/s][A
Calculating viewed counts for every point:  31%|███       | 63/204 [00:00<00:02, 68.47it/s][A
Calculating viewed counts for every point:  37%|███▋      | 76/204 [00:00<00:01, 83.12it/s][A
Calculating viewed counts for every point:  42%|████▏     | 85/204 [00:01<00:01, 82.69it/s][A
Calculating viewed counts for every point:  46%|████▌     | 94/204 [00:01<00:01, 75.02it/s][A
Calculating viewed counts for every point:  50%|█████     | 102/204 [00:01<00:01, 74.42it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 113/204 [00:01<00:01, 82.56it/s][A
Calculating viewed counts for every point:  61%|██████    | 124/204 [00:01<00:00, 88.20it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 134/204 [00:01<00:00, 77.19it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 146/204 [00:01<00:00, 87.80it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 156/204 [00:02<00:00, 76.98it/s][A
Calculating viewed counts for every point:  81%|████████  | 165/204 [00:02<00:00, 64.53it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 173/204 [00:02<00:00, 66.96it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 183/204 [00:02<00:00, 74.08it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 195/204 [00:02<00:00, 81.91it/s][A
Calculating viewed counts for every point: 100%|██████████| 204/204 [00:02<00:00, 82.24it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [01:07<05:28,  2.78s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(10253, device='cuda:0')
before filtering torch.Size([14, 239354])
after filtering torch.Size([4, 239354])
num_ins_points_after_filtering tensor([ 908, 3100,  315, 2230], device='cuda:0')
Working on scene0187_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 152, 154, 155, 157, 158, 160, 162, 164, 165], [9, 16, 19, 21, 23, 25, 147, 149, 151, 153, 156, 159, 161, 163, 166, 167, 168], [44, 45, 51, 53, 55, 57, 59, 61, 63, 64, 65, 67, 69, 71, 73, 240, 243, 245, 248, 251, 253, 256, 263], [46, 47, 48, 49, 50, 52, 54, 56, 58, 60, 62, 66, 68, 70, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 96, 100, 104, 186, 190, 191, 193, 194, 195, 235, 236, 237, 238, 239, 241, 244, 246, 250, 252, 254, 257, 259], [74, 242], [78, 88, 90, 92, 94, 98, 102, 107, 125, 204, 206, 212, 214, 215, 216, 220, 223, 224, 227, 229, 232], [95, 97, 101, 108], [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 198, 199, 201, 203, 210, 211, 213, 217, 218, 219, 221, 222, 225, 226, 228, 231, 234], [182, 185], [200, 202]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 11/227 [00:00<00:01, 109.42it/s][A
Calculating viewed counts for every point:  14%|█▎        | 31/227 [00:00<00:01, 160.42it/s][A
Calculating viewed counts for every point:  21%|██        | 48/227 [00:00<00:01, 158.19it/s][A
Calculating viewed counts for every point:  30%|██▉       | 68/227 [00:00<00:00, 172.51it/s][A
Calculating viewed counts for every point:  40%|████      | 91/227 [00:00<00:00, 191.68it/s][A
Calculating viewed counts for every point:  51%|█████     | 115/227 [00:00<00:00, 206.06it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 136/227 [00:00<00:00, 205.48it/s][A
Calculating viewed counts for every point:  70%|███████   | 159/227 [00:00<00:00, 211.95it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 181/227 [00:00<00:00, 181.52it/s][A
Calculating viewed counts for every point:  90%|█████████ | 205/227 [00:01<00:00, 195.90it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 226/227 [00:01<00:00, 193.82it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [01:14<08:19,  4.27s/it]detected_ratio_thres_value tensor(0.3036, device='cuda:0')
final masked points tensor(12264, device='cuda:0')
before filtering torch.Size([10, 173752])
after filtering torch.Size([5, 173752])
num_ins_points_after_filtering tensor([1159, 1438, 1589, 1921, 4112], device='cuda:0')
Working on scene0193_00 class stool
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 44, 45], [25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40], [41, 42, 43]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 9/72 [00:00<00:00, 84.63it/s][A
Calculating viewed counts for every point:  33%|███▎      | 24/72 [00:00<00:00, 118.40it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 39/72 [00:00<00:00, 131.37it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 53/72 [00:00<00:00, 106.81it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 67/72 [00:00<00:00, 115.46it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [01:16<06:46,  3.50s/it]Projecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [01:17<04:56,  2.58s/it]detected_ratio_thres_value tensor(0.2903, device='cuda:0')
final masked points tensor(6574, device='cuda:0')
before filtering torch.Size([4, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([3856, 2631], device='cuda:0')
Working on scene0196_00 class stool
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0203_00 class stool
masks_to_be_merged [[8, 19], [12, 15, 26, 27, 30], [13, 14, 16, 17, 20, 21, 24, 25], [22, 23], [28, 29, 37, 38], [33, 34, 35], [42, 43, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 14/146 [00:00<00:00, 136.68it/s][A
Calculating viewed counts for every point:  19%|█▉        | 28/146 [00:00<00:01, 117.83it/s][A
Calculating viewed counts for every point:  27%|██▋       | 40/146 [00:00<00:00, 113.30it/s][A
Calculating viewed counts for every point:  36%|███▌      | 52/146 [00:00<00:00, 106.91it/s][A
Calculating viewed counts for every point:  47%|████▋     | 68/146 [00:00<00:00, 122.44it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 81/146 [00:00<00:00, 120.06it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 94/146 [00:00<00:00, 115.80it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 106/146 [00:00<00:00, 115.30it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 124/146 [00:01<00:00, 132.49it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 138/146 [00:01<00:00, 124.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [01:19<04:38,  2.44s/it]detected_ratio_thres_value tensor(0.1034, device='cuda:0')
final masked points tensor(7893, device='cuda:0')
before filtering torch.Size([7, 205756])
after filtering torch.Size([6, 205756])
num_ins_points_after_filtering tensor([ 555,  736,  827, 1134,  363,  607], device='cuda:0')
Working on scene0207_00 class stool
masks_to_be_merged [[0, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15], [1, 3, 34, 35], [16, 17], [19, 20, 21], [25, 26, 27, 28, 29], [31, 32, 36], [37, 38, 39, 40]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/199 [00:00<00:03, 56.13it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:03, 54.91it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/199 [00:00<00:03, 50.73it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:03, 52.92it/s][A
Calculating viewed counts for every point:  16%|█▌        | 32/199 [00:00<00:02, 60.16it/s][A
Calculating viewed counts for every point:  20%|█▉        | 39/199 [00:00<00:02, 62.62it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/199 [00:00<00:02, 53.93it/s][A
Calculating viewed counts for every point:  26%|██▌       | 52/199 [00:00<00:02, 51.78it/s][A
Calculating viewed counts for every point:  30%|███       | 60/199 [00:01<00:02, 58.95it/s][A
Calculating viewed counts for every point:  34%|███▎      | 67/199 [00:01<00:02, 61.86it/s][A
Calculating viewed counts for every point:  37%|███▋      | 74/199 [00:01<00:02, 57.88it/s][A
Calculating viewed counts for every point:  40%|████      | 80/199 [00:01<00:02, 56.19it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/199 [00:01<00:01, 61.13it/s][A
Calculating viewed counts for every point:  48%|████▊     | 95/199 [00:01<00:02, 49.31it/s][A
Calculating viewed counts for every point:  51%|█████     | 101/199 [00:01<00:01, 50.10it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/199 [00:01<00:01, 51.17it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 113/199 [00:02<00:01, 53.22it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 119/199 [00:02<00:01, 50.51it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 125/199 [00:02<00:01, 46.23it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 133/199 [00:02<00:01, 53.51it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 139/199 [00:02<00:01, 49.05it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 145/199 [00:02<00:01, 47.62it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 152/199 [00:02<00:00, 48.34it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 159/199 [00:02<00:00, 51.60it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 165/199 [00:03<00:00, 52.33it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 172/199 [00:03<00:00, 52.46it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 178/199 [00:03<00:00, 53.61it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 184/199 [00:03<00:00, 49.98it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 191/199 [00:03<00:00, 51.93it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 198/199 [00:03<00:00, 56.45it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [01:24<06:02,  3.21s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(5959, device='cuda:0')
before filtering torch.Size([7, 304396])
after filtering torch.Size([4, 304396])
num_ins_points_after_filtering tensor([1585, 1221,  490, 1516], device='cuda:0')
Working on scene0208_00 class stool
masks_to_be_merged [[5, 6, 7], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/239 [00:00<00:04, 55.57it/s][A
Calculating viewed counts for every point:   6%|▋         | 15/239 [00:00<00:03, 70.90it/s][A
Calculating viewed counts for every point:  10%|▉         | 23/239 [00:00<00:03, 62.48it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/239 [00:00<00:03, 62.80it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/239 [00:00<00:03, 64.41it/s][A
Calculating viewed counts for every point:  21%|██        | 49/239 [00:00<00:02, 76.96it/s][A
Calculating viewed counts for every point:  25%|██▍       | 59/239 [00:00<00:02, 81.79it/s][A
Calculating viewed counts for every point:  28%|██▊       | 68/239 [00:00<00:02, 78.23it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/239 [00:01<00:02, 72.44it/s][A
Calculating viewed counts for every point:  36%|███▌      | 86/239 [00:01<00:02, 75.74it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/239 [00:01<00:02, 70.60it/s][A
Calculating viewed counts for every point:  43%|████▎     | 102/239 [00:01<00:02, 66.98it/s][A
Calculating viewed counts for every point:  46%|████▌     | 109/239 [00:01<00:01, 65.53it/s][A
Calculating viewed counts for every point:  49%|████▉     | 118/239 [00:01<00:01, 67.47it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 128/239 [00:01<00:01, 73.75it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 136/239 [00:01<00:01, 70.35it/s][A
Calculating viewed counts for every point:  60%|██████    | 144/239 [00:02<00:01, 68.17it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 154/239 [00:02<00:01, 75.58it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 165/239 [00:02<00:00, 83.70it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 174/239 [00:02<00:00, 77.77it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 182/239 [00:02<00:00, 77.02it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 191/239 [00:02<00:00, 78.88it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 199/239 [00:02<00:00, 71.81it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 207/239 [00:02<00:00, 63.35it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 214/239 [00:03<00:00, 61.68it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 223/239 [00:03<00:00, 68.31it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 231/239 [00:03<00:00, 50.71it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [01:28<06:37,  3.55s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(13317, device='cuda:0')
before filtering torch.Size([2, 407386])
after filtering torch.Size([2, 407386])
num_ins_points_after_filtering tensor([331, 572], device='cuda:0')
Working on scene0217_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 51, 52], [5, 6, 7, 8, 9, 40, 44, 45, 46, 47, 48, 49, 50], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 53, 55], [21, 22, 23], [24, 25], [54, 56, 57, 58]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 9/125 [00:00<00:01, 87.42it/s][A
Calculating viewed counts for every point:  14%|█▍        | 18/125 [00:00<00:01, 82.26it/s][A
Calculating viewed counts for every point:  23%|██▎       | 29/125 [00:00<00:01, 93.55it/s][A
Calculating viewed counts for every point:  31%|███       | 39/125 [00:00<00:01, 74.57it/s][A
Calculating viewed counts for every point:  38%|███▊      | 48/125 [00:00<00:00, 77.05it/s][A
Calculating viewed counts for every point:  46%|████▋     | 58/125 [00:00<00:00, 81.92it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 67/125 [00:00<00:00, 77.40it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 82/125 [00:00<00:00, 97.37it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 95/125 [00:01<00:00, 105.21it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 106/125 [00:01<00:00, 99.98it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 117/125 [00:01<00:00, 84.01it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [01:31<06:14,  3.38s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(15249, device='cuda:0')
before filtering torch.Size([6, 126385])
after filtering torch.Size([4, 126385])
num_ins_points_after_filtering tensor([8426,  826, 1751, 2910], device='cuda:0')
Working on scene0221_00 class stool
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8], [9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 8/98 [00:00<00:01, 79.70it/s][A
Calculating viewed counts for every point:  26%|██▌       | 25/98 [00:00<00:00, 128.91it/s][A
Calculating viewed counts for every point:  45%|████▍     | 44/98 [00:00<00:00, 126.75it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 64/98 [00:00<00:00, 151.33it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 80/98 [00:00<00:00, 151.36it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 97/98 [00:00<00:00, 152.22it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [01:32<04:54,  2.67s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(2814, device='cuda:0')
before filtering torch.Size([2, 185828])
after filtering torch.Size([2, 185828])
num_ins_points_after_filtering tensor([1334, 1456], device='cuda:0')
Working on scene0222_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 40, 44, 45, 46, 47], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 59, 60, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 138, 139, 142, 143, 145, 149, 153, 154, 156, 159, 160, 162, 165, 166, 168, 171, 172, 173, 174, 176], [30, 147, 150], [34, 35, 36], [38, 39], [41, 42, 43], [48, 49, 52, 53], [50, 51], [55, 56, 57, 58], [64, 66, 69], [65, 67, 68, 72], [70, 71], [86, 131, 133, 134, 137, 140, 141, 144, 146, 148, 151, 152, 155, 157, 158, 161, 163, 164, 167, 169, 177], [87, 100, 102, 103], [89, 90, 91, 92], [93, 94], [96, 99], [97, 98], [110, 112, 170, 175]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/543 [00:00<00:05, 94.21it/s][A
Calculating viewed counts for every point:   5%|▍         | 26/543 [00:00<00:03, 129.43it/s][A
Calculating viewed counts for every point:   7%|▋         | 39/543 [00:00<00:04, 119.37it/s][A
Calculating viewed counts for every point:  10%|▉         | 52/543 [00:00<00:04, 115.25it/s][A
Calculating viewed counts for every point:  12%|█▏        | 64/543 [00:00<00:04, 107.00it/s][A
Calculating viewed counts for every point:  15%|█▌        | 83/543 [00:00<00:03, 130.96it/s][A
Calculating viewed counts for every point:  18%|█▊        | 98/543 [00:00<00:03, 136.22it/s][A
Calculating viewed counts for every point:  21%|██        | 112/543 [00:00<00:03, 136.52it/s][A
Calculating viewed counts for every point:  24%|██▍       | 131/543 [00:00<00:02, 150.80it/s][A
Calculating viewed counts for every point:  27%|██▋       | 147/543 [00:01<00:02, 137.65it/s][A
Calculating viewed counts for every point:  30%|██▉       | 162/543 [00:01<00:02, 133.48it/s][A
Calculating viewed counts for every point:  33%|███▎      | 178/543 [00:01<00:02, 138.12it/s][A
Calculating viewed counts for every point:  36%|███▌      | 195/543 [00:01<00:02, 146.17it/s][A
Calculating viewed counts for every point:  39%|███▊      | 210/543 [00:01<00:02, 127.83it/s][A
Calculating viewed counts for every point:  41%|████▏     | 224/543 [00:01<00:02, 124.02it/s][A
Calculating viewed counts for every point:  44%|████▍     | 240/543 [00:01<00:02, 127.14it/s][A
Calculating viewed counts for every point:  47%|████▋     | 253/543 [00:01<00:02, 126.99it/s][A
Calculating viewed counts for every point:  49%|████▉     | 268/543 [00:02<00:02, 131.33it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 282/543 [00:02<00:02, 123.27it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 295/543 [00:02<00:02, 120.68it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 308/543 [00:02<00:01, 121.33it/s][A
Calculating viewed counts for every point:  60%|██████    | 327/543 [00:02<00:01, 139.80it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 342/543 [00:02<00:01, 120.13it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 355/543 [00:02<00:01, 122.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 368/543 [00:02<00:01, 124.31it/s][A
Calculating viewed counts for every point:  70%|███████   | 381/543 [00:03<00:01, 108.66it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 394/543 [00:03<00:01, 113.10it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 414/543 [00:03<00:00, 134.37it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 429/543 [00:03<00:00, 138.09it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 444/543 [00:03<00:00, 140.90it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 460/543 [00:03<00:00, 144.64it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 475/543 [00:03<00:00, 141.58it/s][A
Calculating viewed counts for every point:  90%|█████████ | 490/543 [00:03<00:00, 133.52it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 507/543 [00:03<00:00, 141.43it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 522/543 [00:04<00:00, 121.19it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 540/543 [00:04<00:00, 134.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [01:40<07:43,  4.26s/it]detected_ratio_thres_value tensor(0.3273, device='cuda:0')
final masked points tensor(5152, device='cuda:0')
before filtering torch.Size([19, 234831])
after filtering torch.Size([2, 234831])
num_ins_points_after_filtering tensor([3053,  970], device='cuda:0')
Working on scene0231_00 class stool
masks_to_be_merged [[0, 1, 33, 101, 102, 103], [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 30, 31, 32, 107], [17, 18, 19, 20, 21], [27, 28, 29], [35, 38, 39, 41, 42, 44], [36, 37, 40, 43, 45, 47, 48, 49, 50, 52, 56, 62, 64, 65, 69, 73, 78, 80, 82, 84], [53, 54, 55, 57, 58, 59, 61, 63, 67, 68, 72, 75], [70, 74, 76, 77, 79, 81, 83, 85, 88, 89, 90, 91, 92, 97], [95, 96], [98, 99], [104, 105]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   1%|▏         | 6/444 [00:00<00:07, 56.43it/s][A
Calculating viewed counts for every point:   4%|▎         | 16/444 [00:00<00:05, 79.41it/s][A
Calculating viewed counts for every point:   5%|▌         | 24/444 [00:00<00:05, 74.85it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/444 [00:00<00:06, 68.05it/s][A
Calculating viewed counts for every point:   9%|▉         | 39/444 [00:00<00:06, 62.45it/s][A
Calculating viewed counts for every point:  10%|█         | 46/444 [00:00<00:06, 63.26it/s][A
Calculating viewed counts for every point:  13%|█▎        | 56/444 [00:00<00:05, 72.57it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/444 [00:00<00:04, 79.37it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/444 [00:01<00:04, 86.27it/s][A
Calculating viewed counts for every point:  20%|█▉        | 87/444 [00:01<00:04, 88.38it/s][A
Calculating viewed counts for every point:  22%|██▏       | 96/444 [00:01<00:04, 85.68it/s][A
Calculating viewed counts for every point:  24%|██▎       | 105/444 [00:01<00:04, 73.54it/s][A
Calculating viewed counts for every point:  25%|██▌       | 113/444 [00:01<00:04, 72.69it/s][A
Calculating viewed counts for every point:  27%|██▋       | 121/444 [00:01<00:04, 69.05it/s][A
Calculating viewed counts for every point:  29%|██▉       | 129/444 [00:01<00:04, 69.10it/s][A
Calculating viewed counts for every point:  31%|███▏      | 139/444 [00:01<00:04, 75.63it/s][A
Calculating viewed counts for every point:  33%|███▎      | 148/444 [00:01<00:03, 75.59it/s][A
Calculating viewed counts for every point:  35%|███▌      | 156/444 [00:02<00:03, 75.64it/s][A
Calculating viewed counts for every point:  37%|███▋      | 166/444 [00:02<00:03, 81.26it/s][A
Calculating viewed counts for every point:  40%|███▉      | 176/444 [00:02<00:03, 80.11it/s][A
Calculating viewed counts for every point:  42%|████▏     | 185/444 [00:02<00:03, 78.70it/s][A
Calculating viewed counts for every point:  43%|████▎     | 193/444 [00:02<00:03, 76.90it/s][A
Calculating viewed counts for every point:  46%|████▌     | 204/444 [00:02<00:02, 84.98it/s][A
Calculating viewed counts for every point:  48%|████▊     | 213/444 [00:02<00:03, 65.67it/s][A
Calculating viewed counts for every point:  50%|████▉     | 221/444 [00:02<00:03, 66.93it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 229/444 [00:03<00:03, 66.65it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 237/444 [00:03<00:03, 65.77it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 244/444 [00:03<00:03, 66.63it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 252/444 [00:03<00:02, 68.49it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 261/444 [00:03<00:02, 72.64it/s][A
Calculating viewed counts for every point:  61%|██████    | 269/444 [00:03<00:02, 74.50it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 277/444 [00:03<00:02, 66.34it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 284/444 [00:03<00:02, 61.89it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 291/444 [00:04<00:02, 63.47it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 298/444 [00:04<00:02, 62.65it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 309/444 [00:04<00:01, 73.51it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 318/444 [00:04<00:01, 74.63it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 326/444 [00:04<00:01, 66.63it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 334/444 [00:04<00:01, 69.99it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 342/444 [00:04<00:01, 65.88it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 349/444 [00:04<00:01, 65.04it/s][A
Calculating viewed counts for every point:  81%|████████  | 358/444 [00:04<00:01, 71.07it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 367/444 [00:05<00:01, 74.12it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 375/444 [00:05<00:00, 72.08it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 383/444 [00:05<00:00, 71.89it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 391/444 [00:05<00:00, 64.75it/s][A
Calculating viewed counts for every point:  90%|█████████ | 400/444 [00:05<00:00, 70.70it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 408/444 [00:05<00:00, 67.09it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 416/444 [00:05<00:00, 69.17it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 427/444 [00:05<00:00, 77.98it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 435/444 [00:06<00:00, 75.06it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 443/444 [00:06<00:00, 70.09it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [01:49<10:12,  5.67s/it]detected_ratio_thres_value tensor(0.1562, device='cuda:0')
final masked points tensor(8183, device='cuda:0')
before filtering torch.Size([11, 419537])
after filtering torch.Size([5, 419537])
num_ins_points_after_filtering tensor([ 199,  584, 1775, 1302, 2732], device='cuda:0')
Working on scene0246_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 17, 20, 21, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 106], [24, 25, 26, 27], [43, 45, 47, 48], [49, 50, 51], [52, 53, 54, 55], [56, 57], [70, 71, 72], [73, 74], [76, 77], [80, 81, 82, 83, 84, 85, 86, 87, 101], [88, 89], [90, 91, 92, 93, 100], [95, 96, 97, 99], [102, 103], [110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144], [121, 123], [140, 142], [145, 146]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 12/296 [00:00<00:02, 112.56it/s][A
Calculating viewed counts for every point:   8%|▊         | 24/296 [00:00<00:02, 109.99it/s][A
Calculating viewed counts for every point:  14%|█▍        | 41/296 [00:00<00:01, 133.09it/s][A
Calculating viewed counts for every point:  21%|██        | 61/296 [00:00<00:01, 156.12it/s][A
Calculating viewed counts for every point:  26%|██▋       | 78/296 [00:00<00:01, 159.28it/s][A
Calculating viewed counts for every point:  32%|███▏      | 94/296 [00:00<00:01, 154.30it/s][A
Calculating viewed counts for every point:  37%|███▋      | 110/296 [00:00<00:01, 146.24it/s][A
Calculating viewed counts for every point:  42%|████▏     | 125/296 [00:00<00:01, 134.03it/s][A
Calculating viewed counts for every point:  49%|████▉     | 145/296 [00:00<00:00, 151.93it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 161/296 [00:01<00:00, 147.39it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 177/296 [00:01<00:00, 144.66it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 192/296 [00:01<00:00, 144.46it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 207/296 [00:01<00:00, 139.63it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 222/296 [00:01<00:00, 138.71it/s][A
Calculating viewed counts for every point:  81%|████████  | 240/296 [00:01<00:00, 148.70it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 258/296 [00:01<00:00, 151.22it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 274/296 [00:01<00:00, 151.41it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 290/296 [00:01<00:00, 151.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [01:54<09:55,  5.57s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(4315, device='cuda:0')
before filtering torch.Size([18, 201062])
after filtering torch.Size([2, 201062])
num_ins_points_after_filtering tensor([2414,  986], device='cuda:0')
Working on scene0249_00 class stool
masks_to_be_merged [[0, 1, 3, 4, 5], [2, 6, 7], [8, 10], [9, 11, 38], [13, 42, 43], [19, 22, 25, 53, 55, 56, 57], [20, 21, 23, 24, 26, 27, 28, 54], [29, 30, 31, 32, 61, 62, 63, 64, 65], [33, 66, 67], [34, 35], [41, 44], [47, 48, 49], [50, 51], [58, 59]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 12/274 [00:00<00:02, 117.00it/s][A
Calculating viewed counts for every point:   9%|▉         | 24/274 [00:00<00:02, 113.86it/s][A
Calculating viewed counts for every point:  13%|█▎        | 36/274 [00:00<00:02, 107.29it/s][A
Calculating viewed counts for every point:  17%|█▋        | 47/274 [00:00<00:02, 98.54it/s] [A
Calculating viewed counts for every point:  21%|██        | 58/274 [00:00<00:02, 99.82it/s][A
Calculating viewed counts for every point:  26%|██▋       | 72/274 [00:00<00:01, 105.88it/s][A
Calculating viewed counts for every point:  31%|███       | 84/274 [00:00<00:01, 108.63it/s][A
Calculating viewed counts for every point:  35%|███▍      | 95/274 [00:00<00:01, 106.23it/s][A
Calculating viewed counts for every point:  39%|███▊      | 106/274 [00:01<00:01, 105.62it/s][A
Calculating viewed counts for every point:  43%|████▎     | 119/274 [00:01<00:01, 109.69it/s][A
Calculating viewed counts for every point:  47%|████▋     | 130/274 [00:01<00:01, 108.88it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 141/274 [00:01<00:01, 103.77it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 154/274 [00:01<00:01, 111.03it/s][A
Calculating viewed counts for every point:  61%|██████    | 166/274 [00:01<00:01, 101.99it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 177/274 [00:01<00:00, 101.85it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 188/274 [00:01<00:00, 93.18it/s] [A
Calculating viewed counts for every point:  72%|███████▏  | 198/274 [00:01<00:00, 92.98it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 208/274 [00:02<00:00, 92.04it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 218/274 [00:02<00:00, 86.57it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 227/274 [00:02<00:00, 86.90it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 241/274 [00:02<00:00, 99.65it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 255/274 [00:02<00:00, 110.33it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 269/274 [00:02<00:00, 115.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [01:58<08:57,  5.07s/it]detected_ratio_thres_value tensor(0.1132, device='cuda:0')
final masked points tensor(8780, device='cuda:0')
before filtering torch.Size([14, 331031])
after filtering torch.Size([9, 331031])
num_ins_points_after_filtering tensor([1758,  517, 1495,  306, 1010, 1521,  765,  453,  450], device='cuda:0')
Working on scene0251_00 class stool
masks_to_be_merged [[4, 5, 6, 7, 8, 9, 10, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64], [11, 13, 14, 15], [12, 16, 17, 18, 19, 20, 21, 22, 23], [25, 26], [29, 30, 31, 34, 37, 38, 39, 41, 43, 45, 47, 49, 51], [32, 33, 35, 36, 40, 42, 44, 46, 50]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 6/155 [00:00<00:02, 57.02it/s][A
Calculating viewed counts for every point:  11%|█         | 17/155 [00:00<00:01, 86.56it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 87.58it/s][A
Calculating viewed counts for every point:  24%|██▍       | 37/155 [00:00<00:01, 95.59it/s][A
Calculating viewed counts for every point:  32%|███▏      | 49/155 [00:00<00:01, 102.99it/s][A
Calculating viewed counts for every point:  40%|████      | 62/155 [00:00<00:00, 111.55it/s][A
Calculating viewed counts for every point:  48%|████▊     | 74/155 [00:00<00:00, 105.51it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 86/155 [00:00<00:00, 107.95it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 97/155 [00:00<00:00, 106.03it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 111/155 [00:01<00:00, 115.57it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 123/155 [00:01<00:00, 98.58it/s] [A
Calculating viewed counts for every point:  86%|████████▋ | 134/155 [00:01<00:00, 91.93it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 144/155 [00:01<00:00, 89.46it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 154/155 [00:01<00:00, 90.91it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [02:01<07:39,  4.38s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(10429, device='cuda:0')
before filtering torch.Size([6, 226765])
after filtering torch.Size([3, 226765])
num_ins_points_after_filtering tensor([3979, 1731, 2533], device='cuda:0')
Working on scene0256_00 class stool
masks_to_be_merged [[0, 2, 3], [4, 5, 10, 11, 12], [6, 7, 8, 9, 19, 21, 22, 31], [14, 15], [20, 32], [34, 35]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 22/156 [00:00<00:00, 213.26it/s][A
Calculating viewed counts for every point:  30%|███       | 47/156 [00:00<00:00, 229.65it/s][A
Calculating viewed counts for every point:  45%|████▍     | 70/156 [00:00<00:00, 229.44it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 99/156 [00:00<00:00, 250.23it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 128/156 [00:00<00:00, 262.11it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 155/156 [00:00<00:00, 248.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [02:02<05:58,  3.44s/it]detected_ratio_thres_value tensor(0.0741, device='cuda:0')
final masked points tensor(2257, device='cuda:0')
before filtering torch.Size([6, 108517])
after filtering torch.Size([6, 108517])
num_ins_points_after_filtering tensor([751, 238, 396, 172, 172, 397], device='cuda:0')
Working on scene0257_00 class stool
masks_to_be_merged [[1, 2], [3, 5, 6, 7, 9, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], [4, 8, 10, 13, 14, 17, 33, 34, 35, 36, 37, 38, 39, 40], [42, 43, 44, 45, 46, 47], [50, 51], [53, 54, 55, 56, 57, 59, 62], [58, 60, 61, 63, 64, 65, 66, 67, 69, 70], [72, 73, 74]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/165 [00:00<00:00, 166.88it/s][A
Calculating viewed counts for every point:  22%|██▏       | 36/165 [00:00<00:00, 167.99it/s][A
Calculating viewed counts for every point:  32%|███▏      | 53/165 [00:00<00:00, 163.74it/s][A
Calculating viewed counts for every point:  43%|████▎     | 71/165 [00:00<00:00, 168.87it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 94/165 [00:00<00:00, 186.92it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 113/165 [00:00<00:00, 177.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 131/165 [00:00<00:00, 177.88it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 157/165 [00:00<00:00, 201.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [02:04<05:12,  3.03s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(6058, device='cuda:0')
before filtering torch.Size([8, 180928])
after filtering torch.Size([5, 180928])
num_ins_points_after_filtering tensor([2117, 2108,   55, 1134,   97], device='cuda:0')
Working on scene0277_00 class stool
masks_to_be_merged [[0, 1, 2, 38, 39, 40, 41, 42, 69, 71, 73, 77, 78, 80], [3, 4, 43, 44], [12, 13, 48, 49, 50, 51, 52, 53], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 76, 79]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 22/115 [00:00<00:00, 206.08it/s][A
Calculating viewed counts for every point:  37%|███▋      | 43/115 [00:00<00:00, 178.41it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 68/115 [00:00<00:00, 207.60it/s][A
Calculating viewed counts for every point:  80%|████████  | 92/115 [00:00<00:00, 217.18it/s][A
Calculating viewed counts for every point: 100%|██████████| 115/115 [00:00<00:00, 218.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [02:06<04:23,  2.59s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(11332, device='cuda:0')
before filtering torch.Size([4, 79184])
after filtering torch.Size([3, 79184])
num_ins_points_after_filtering tensor([1095, 1445, 8184], device='cuda:0')
Working on scene0278_00 class stool
masks_to_be_merged [[0, 1, 7, 12, 13, 14], [2, 15], [4, 5, 6, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▎      | 26/80 [00:00<00:00, 253.89it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 59/80 [00:00<00:00, 292.32it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [02:06<03:20,  1.99s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(2058, device='cuda:0')
before filtering torch.Size([3, 77020])
after filtering torch.Size([2, 77020])
num_ins_points_after_filtering tensor([ 808, 1237], device='cuda:0')
Working on scene0300_00 class stool
masks_to_be_merged [[0, 1, 2, 3], [5, 6], [7, 8, 9, 10, 11, 32, 34, 35, 36, 37, 38, 39], [17, 18, 19, 30, 31, 33], [20, 21, 22, 23], [24, 25], [28, 29]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 18/175 [00:00<00:00, 178.34it/s][A
Calculating viewed counts for every point:  23%|██▎       | 41/175 [00:00<00:00, 205.74it/s][A
Calculating viewed counts for every point:  38%|███▊      | 67/175 [00:00<00:00, 229.53it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 91/175 [00:00<00:00, 232.72it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 116/175 [00:00<00:00, 236.28it/s][A
Calculating viewed counts for every point:  81%|████████  | 141/175 [00:00<00:00, 239.47it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 165/175 [00:00<00:00, 235.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [02:08<03:00,  1.80s/it]detected_ratio_thres_value tensor(0.0984, device='cuda:0')
final masked points tensor(4046, device='cuda:0')
before filtering torch.Size([7, 140216])
after filtering torch.Size([2, 140216])
num_ins_points_after_filtering tensor([1528,  886], device='cuda:0')
Working on scene0304_00 class stool
masks_to_be_merged [[1, 2, 3, 9, 10, 11, 12, 18, 19], [4, 5]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 19/178 [00:00<00:00, 184.62it/s][A
Calculating viewed counts for every point:  21%|██▏       | 38/178 [00:00<00:00, 181.13it/s][A
Calculating viewed counts for every point:  34%|███▍      | 61/178 [00:00<00:00, 200.73it/s][A
Calculating viewed counts for every point:  47%|████▋     | 84/178 [00:00<00:00, 209.98it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 106/178 [00:00<00:00, 209.24it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 127/178 [00:00<00:00, 204.06it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 148/178 [00:00<00:00, 204.70it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 172/178 [00:00<00:00, 212.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [02:09<02:37,  1.59s/it]detected_ratio_thres_value tensor(0.0862, device='cuda:0')
final masked points tensor(5313, device='cuda:0')
before filtering torch.Size([2, 164016])
after filtering torch.Size([2, 164016])
num_ins_points_after_filtering tensor([2215,  397], device='cuda:0')
Working on scene0307_00 class stool
masks_to_be_merged [[14, 92], [17, 18, 19, 32, 33], [21, 22], [28, 29, 30, 89, 90, 91], [31, 93, 94, 95, 96], [34, 37, 38, 39, 42, 44, 46, 50, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66], [35, 40, 41, 43, 45, 47, 48, 49, 51, 53, 57, 58], [68, 69, 70], [71, 73, 74, 79, 80, 81, 83], [72, 84], [77, 78]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 109.74it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 98.97it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 32/205 [00:00<00:01, 91.03it/s][A
Calculating viewed counts for every point:  21%|██        | 43/205 [00:00<00:01, 96.17it/s][A
Calculating viewed counts for every point:  26%|██▌       | 53/205 [00:00<00:01, 96.48it/s][A
Calculating viewed counts for every point:  31%|███       | 63/205 [00:00<00:01, 93.38it/s][A
Calculating viewed counts for every point:  36%|███▌      | 74/205 [00:00<00:01, 97.54it/s][A
Calculating viewed counts for every point:  41%|████      | 84/205 [00:00<00:01, 94.30it/s][A
Calculating viewed counts for every point:  46%|████▌     | 94/205 [00:00<00:01, 90.89it/s][A
Calculating viewed counts for every point:  51%|█████     | 104/205 [00:01<00:01, 90.32it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 114/205 [00:01<00:01, 89.08it/s][A
Calculating viewed counts for every point:  60%|██████    | 123/205 [00:01<00:00, 88.81it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 134/205 [00:01<00:00, 92.82it/s][A
Calculating viewed counts for every point:  70%|███████   | 144/205 [00:01<00:00, 89.42it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 154/205 [00:01<00:00, 92.00it/s][A
Calculating viewed counts for every point:  80%|████████  | 164/205 [00:01<00:00, 88.56it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 173/205 [00:01<00:00, 88.80it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 182/205 [00:01<00:00, 88.55it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 191/205 [00:02<00:00, 87.07it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 201/205 [00:02<00:00, 90.60it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [02:13<03:51,  2.36s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(6061, device='cuda:0')
before filtering torch.Size([11, 371616])
after filtering torch.Size([6, 371616])
num_ins_points_after_filtering tensor([ 661,   93,  508, 1614, 1826,  485], device='cuda:0')
Working on scene0314_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 16, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 28/93 [00:00<00:00, 273.63it/s][A
Calculating viewed counts for every point:  60%|██████    | 56/93 [00:00<00:00, 250.55it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 82/93 [00:00<00:00, 252.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 45/142 [02:14<02:57,  1.83s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(3156, device='cuda:0')
before filtering torch.Size([1, 87446])
after filtering torch.Size([1, 87446])
num_ins_points_after_filtering tensor([3109], device='cuda:0')
Working on scene0316_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [9, 10, 11, 68], [12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 29, 33, 69, 70, 71, 73, 75, 78, 80, 83], [21, 22, 23, 24, 26, 31, 32, 35, 38, 39, 41, 44, 45, 48, 49, 72, 74, 77, 79, 81], [28, 30, 34, 36], [37, 40, 42, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56], [76, 82]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|██▉       | 23/77 [00:00<00:00, 228.54it/s][A
Calculating viewed counts for every point:  61%|██████    | 47/77 [00:00<00:00, 231.72it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 71/77 [00:00<00:00, 228.81it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [02:15<02:40,  1.67s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(8889, device='cuda:0')
before filtering torch.Size([7, 78769])
after filtering torch.Size([4, 78769])
num_ins_points_after_filtering tensor([2007, 3003, 2025, 1392], device='cuda:0')
Working on scene0328_00 class stool
masks_to_be_merged [[1, 2, 3, 7, 8, 9], [4, 10]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 24/142 [00:00<00:00, 238.64it/s][A
Calculating viewed counts for every point:  37%|███▋      | 52/142 [00:00<00:00, 254.43it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 82/142 [00:00<00:00, 274.22it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 110/142 [00:00<00:00, 264.36it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 139/142 [00:00<00:00, 271.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [02:16<02:11,  1.39s/it]detected_ratio_thres_value tensor(0.0541, device='cuda:0')
final masked points tensor(2372, device='cuda:0')
before filtering torch.Size([2, 111467])
after filtering torch.Size([2, 111467])
num_ins_points_after_filtering tensor([1754,  197], device='cuda:0')
Working on scene0329_00 class stool
masks_to_be_merged [[2, 3, 21, 22, 23, 24, 36, 38, 40, 42, 43, 44, 45, 48], [4, 5, 6, 8, 11, 19, 33, 34, 35, 37, 39, 41, 59, 61, 62, 63, 64, 67, 68], [7, 9, 10, 12, 14, 17, 18, 20, 31, 32, 60, 69], [46, 47, 49, 50, 51, 52, 53], [55, 56], [70, 71], [72, 73, 74, 75, 76, 77]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/156 [00:00<00:01, 137.56it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/156 [00:00<00:00, 136.38it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/156 [00:00<00:00, 134.26it/s][A
Calculating viewed counts for every point:  36%|███▌      | 56/156 [00:00<00:00, 128.82it/s][A
Calculating viewed counts for every point:  44%|████▍     | 69/156 [00:00<00:00, 127.50it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 82/156 [00:00<00:00, 123.44it/s][A
Calculating viewed counts for every point:  61%|██████    | 95/156 [00:00<00:00, 118.55it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 107/156 [00:00<00:00, 117.22it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 119/156 [00:00<00:00, 117.97it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 131/156 [00:01<00:00, 117.98it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 144/156 [00:01<00:00, 120.09it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [02:18<02:46,  1.77s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(15488, device='cuda:0')
before filtering torch.Size([7, 355413])
after filtering torch.Size([4, 355413])
num_ins_points_after_filtering tensor([3891, 2019, 4765, 3256], device='cuda:0')
Working on scene0334_00 class stool
masks_to_be_merged [[0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 94, 96, 98, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115], [1, 2, 3, 6], [23, 24, 95, 97], [27, 28, 33, 51, 53, 54, 55, 57, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [40, 42, 45], [49, 50, 52], [56, 60], [61, 63, 77, 78, 79, 80, 81, 86, 87], [82, 83, 84, 85]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/119 [00:00<00:00, 151.46it/s][A
Calculating viewed counts for every point:  27%|██▋       | 32/119 [00:00<00:00, 139.25it/s][A
Calculating viewed counts for every point:  39%|███▉      | 47/119 [00:00<00:00, 143.65it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 62/119 [00:00<00:00, 131.22it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 76/119 [00:00<00:00, 131.21it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 90/119 [00:00<00:00, 133.32it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 105/119 [00:00<00:00, 137.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [02:21<03:12,  2.07s/it]detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(8557, device='cuda:0')
before filtering torch.Size([9, 197174])
after filtering torch.Size([3, 197174])
num_ins_points_after_filtering tensor([3211, 2470, 1809], device='cuda:0')
Working on scene0338_00 class stool
masks_to_be_merged [[1, 3]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 29/81 [00:00<00:00, 286.28it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 59/81 [00:00<00:00, 294.16it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [02:21<02:23,  1.56s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(4153, device='cuda:0')
before filtering torch.Size([1, 106339])
after filtering torch.Size([1, 106339])
num_ins_points_after_filtering tensor([1278], device='cuda:0')
Working on scene0342_00 class stool
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0343_00 class stool
masks_to_be_merged [[0, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95], [1, 22, 98, 102], [2, 11], [14, 16, 18, 24, 26, 27, 80, 83, 93, 94, 101, 103, 104, 105], [19, 20, 21, 23, 25, 28, 33, 96, 97, 99, 100, 107, 109], [31, 32], [34, 106, 108], [36, 41, 43, 44, 45, 46, 52, 53, 54, 56, 58, 59, 61], [37, 38, 39, 40, 42, 47, 50, 55], [64, 66, 67, 68, 69], [70, 71, 72], [76, 77]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 23/124 [00:00<00:00, 227.89it/s][A
Calculating viewed counts for every point:  37%|███▋      | 46/124 [00:00<00:00, 204.92it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 67/124 [00:00<00:00, 206.24it/s][A
Calculating viewed counts for every point:  71%|███████   | 88/124 [00:00<00:00, 200.89it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 109/124 [00:00<00:00, 199.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [02:24<02:00,  1.33s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(9745, device='cuda:0')
before filtering torch.Size([12, 165618])
after filtering torch.Size([4, 165618])
num_ins_points_after_filtering tensor([3476,  818,  881,  900], device='cuda:0')
Working on scene0351_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 9, 40, 41, 42], [4, 5, 6, 7, 8], [10, 11, 12, 13], [14, 15, 16, 17], [18, 19], [21, 22, 23, 24, 25], [26, 27], [30, 31, 32, 33, 34, 45, 46, 47], [36, 37]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 18/147 [00:00<00:00, 170.01it/s][A
Calculating viewed counts for every point:  24%|██▍       | 36/147 [00:00<00:00, 162.78it/s][A
Calculating viewed counts for every point:  37%|███▋      | 54/147 [00:00<00:00, 165.75it/s][A
Calculating viewed counts for every point:  48%|████▊     | 71/147 [00:00<00:00, 158.89it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 87/147 [00:00<00:00, 151.94it/s][A
Calculating viewed counts for every point:  71%|███████   | 104/147 [00:00<00:00, 154.99it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 120/147 [00:00<00:00, 155.23it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 137/147 [00:00<00:00, 157.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [02:25<02:03,  1.39s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(3610, device='cuda:0')
before filtering torch.Size([9, 172134])
after filtering torch.Size([6, 172134])
num_ins_points_after_filtering tensor([1908,  240,   12,  592,  499,   76], device='cuda:0')
Working on scene0353_00 class stool
masks_to_be_merged [[0, 1, 4], [2, 3, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], [36, 88, 89, 90, 91, 94, 95, 96, 97], [38, 39, 102, 103, 104, 105, 106], [41, 42], [43, 44, 45, 46, 47], [99, 100, 101]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 20/299 [00:00<00:01, 193.38it/s][A
Calculating viewed counts for every point:  14%|█▎        | 41/299 [00:00<00:01, 201.46it/s][A
Calculating viewed counts for every point:  21%|██        | 62/299 [00:00<00:01, 199.83it/s][A
Calculating viewed counts for every point:  27%|██▋       | 82/299 [00:00<00:01, 182.21it/s][A
Calculating viewed counts for every point:  34%|███▍      | 101/299 [00:00<00:01, 175.40it/s][A
Calculating viewed counts for every point:  41%|████      | 123/299 [00:00<00:00, 187.03it/s][A
Calculating viewed counts for every point:  47%|████▋     | 142/299 [00:00<00:00, 182.67it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 161/299 [00:00<00:00, 182.02it/s][A
Calculating viewed counts for every point:  61%|██████    | 181/299 [00:00<00:00, 186.10it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 200/299 [00:01<00:00, 177.65it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 219/299 [00:01<00:00, 178.43it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 238/299 [00:01<00:00, 180.97it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 257/299 [00:01<00:00, 178.04it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 278/299 [00:01<00:00, 186.59it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 297/299 [00:01<00:00, 178.40it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [02:28<02:41,  1.84s/it]detected_ratio_thres_value tensor(0.3824, device='cuda:0')
final masked points tensor(1942, device='cuda:0')
before filtering torch.Size([8, 208782])
after filtering torch.Size([2, 208782])
num_ins_points_after_filtering tensor([1461,  233], device='cuda:0')
Working on scene0354_00 class stool
No 3d masks detected in backprojection!
Working on scene0355_00 class stool
masks_to_be_merged [[0, 2, 3, 62], [1, 23, 24, 63], [4, 5, 7, 13, 14, 15, 16, 17], [6, 8, 9, 10, 11, 12], [18, 19], [20, 22], [26, 28, 45, 47, 48, 49, 50, 51, 52, 53, 54], [29, 30, 31, 32, 33, 34, 35, 36, 37, 56, 57, 58], [38, 40, 41, 59, 60], [42, 43, 44, 46]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 24/115 [00:00<00:00, 238.03it/s][A
Calculating viewed counts for every point:  42%|████▏     | 48/115 [00:00<00:00, 236.83it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 75/115 [00:00<00:00, 251.53it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 101/115 [00:00<00:00, 223.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [02:30<01:53,  1.31s/it]detected_ratio_thres_value tensor(0.1515, device='cuda:0')
final masked points tensor(8214, device='cuda:0')
before filtering torch.Size([10, 136135])
after filtering torch.Size([7, 136135])
num_ins_points_after_filtering tensor([ 732,  674,  340, 2461, 1659,  832,  577], device='cuda:0')
Working on scene0356_00 class stool
masks_to_be_merged [[0, 52, 53, 56, 57, 58, 65, 68, 105, 106, 107], [1, 3, 5, 6, 10, 13, 14, 15, 67], [2, 4, 54, 55, 66, 69], [7, 8, 9, 11, 12, 59, 60, 63, 64, 70, 71, 72, 73, 74, 108], [16, 17, 18, 19, 20, 21, 22, 23, 26, 28, 75, 76, 77, 78, 79, 80, 84, 85], [25, 27, 29, 30, 31, 32, 33, 34, 86], [38, 41, 92, 94, 95], [42, 43, 44, 45, 46, 97, 98, 99, 100, 101], [47, 48, 49, 50, 51, 102, 103, 104], [61, 62], [81, 82, 83], [88, 90]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 25/136 [00:00<00:00, 247.54it/s][A
Calculating viewed counts for every point:  37%|███▋      | 50/136 [00:00<00:00, 228.33it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 75/136 [00:00<00:00, 235.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 99/136 [00:00<00:00, 226.09it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 122/136 [00:00<00:00, 224.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [02:31<02:03,  1.45s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(9256, device='cuda:0')
before filtering torch.Size([12, 81172])
after filtering torch.Size([8, 81172])
num_ins_points_after_filtering tensor([2075,  745,  276, 2192,   61,   14, 2013,  389], device='cuda:0')
Working on scene0357_00 class stool
masks_to_be_merged [[1, 2, 3], [4, 5, 6, 7, 8], [11, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 161.66it/s][A
Calculating viewed counts for every point:  37%|███▋      | 34/91 [00:00<00:00, 166.34it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 52/91 [00:00<00:00, 169.37it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 71/91 [00:00<00:00, 173.21it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [02:32<01:46,  1.27s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(2446, device='cuda:0')
before filtering torch.Size([3, 136945])
after filtering torch.Size([3, 136945])
num_ins_points_after_filtering tensor([ 276, 1204,  880], device='cuda:0')
Working on scene0377_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [27, 28, 29, 30, 31, 32, 34, 35], [38, 39, 40]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 18/91 [00:00<00:00, 176.18it/s][A
Calculating viewed counts for every point:  40%|███▉      | 36/91 [00:00<00:00, 163.83it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 59/91 [00:00<00:00, 189.93it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 79/91 [00:00<00:00, 188.14it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [02:33<01:46,  1.28s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(3043, device='cuda:0')
before filtering torch.Size([3, 111811])
after filtering torch.Size([1, 111811])
num_ins_points_after_filtering tensor([1555], device='cuda:0')
Working on scene0378_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 74, 75, 76, 77, 78], [9, 10, 12, 13, 18, 19, 20, 21, 22, 23], [14, 16], [15, 17], [24, 25, 26], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [60, 61], [64, 65, 66, 67, 68, 69, 70, 71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/190 [00:00<00:00, 172.96it/s][A
Calculating viewed counts for every point:  19%|█▉        | 36/190 [00:00<00:00, 172.06it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/190 [00:00<00:00, 173.24it/s][A
Calculating viewed counts for every point:  38%|███▊      | 72/190 [00:00<00:00, 171.21it/s][A
Calculating viewed counts for every point:  47%|████▋     | 90/190 [00:00<00:00, 170.77it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 108/190 [00:00<00:00, 171.98it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 126/190 [00:00<00:00, 166.79it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 143/190 [00:00<00:00, 164.36it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 160/190 [00:00<00:00, 165.60it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 178/190 [00:01<00:00, 169.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [02:36<02:09,  1.57s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(5676, device='cuda:0')
before filtering torch.Size([8, 156298])
after filtering torch.Size([3, 156298])
num_ins_points_after_filtering tensor([1380, 1567, 1893], device='cuda:0')
Working on scene0382_00 class stool
masks_to_be_merged [[0, 1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78], [2, 3], [4, 5, 6, 7, 8, 9, 38, 40, 55, 56, 57], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35], [32, 33, 34], [37, 39, 41, 59]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 20/113 [00:00<00:00, 192.39it/s][A
Calculating viewed counts for every point:  35%|███▌      | 40/113 [00:00<00:00, 193.92it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 63/113 [00:00<00:00, 206.94it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 89/113 [00:00<00:00, 223.85it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 112/113 [00:00<00:00, 219.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [02:37<02:06,  1.56s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(7745, device='cuda:0')
before filtering torch.Size([6, 100285])
after filtering torch.Size([3, 100285])
num_ins_points_after_filtering tensor([2172, 1432, 3908], device='cuda:0')
Working on scene0389_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 57, 58, 59, 60, 61, 62, 63], [6, 7, 8, 9], [17, 18], [19, 20], [21, 22, 25], [26, 27], [28, 29], [30, 31, 32, 33, 47, 51, 52], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/142 [00:00<00:00, 197.53it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/142 [00:00<00:00, 198.93it/s][A
Calculating viewed counts for every point:  44%|████▎     | 62/142 [00:00<00:00, 205.22it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 83/142 [00:00<00:00, 202.50it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 104/142 [00:00<00:00, 202.98it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 125/142 [00:00<00:00, 195.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [02:39<02:07,  1.59s/it]detected_ratio_thres_value tensor(0.3043, device='cuda:0')
final masked points tensor(4900, device='cuda:0')
before filtering torch.Size([9, 201003])
after filtering torch.Size([2, 201003])
num_ins_points_after_filtering tensor([2602, 1034], device='cuda:0')
Working on scene0406_00 class stool
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 34/142 [00:00<00:00, 333.78it/s][A
Calculating viewed counts for every point:  48%|████▊     | 68/142 [00:00<00:00, 293.08it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 98/142 [00:00<00:00, 288.92it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 133/142 [00:00<00:00, 308.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [02:40<01:44,  1.32s/it]detected_ratio_thres_value tensor(0.0667, device='cuda:0')
final masked points tensor(550, device='cuda:0')
before filtering torch.Size([1, 48864])
after filtering torch.Size([1, 48864])
num_ins_points_after_filtering tensor([143], device='cuda:0')
Working on scene0412_00 class stool
masks_to_be_merged [[0, 1, 5, 6], [2, 3], [4, 32], [10, 11, 34, 35, 36, 37, 38, 44], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], [23, 24, 25, 26, 27, 28], [30, 31], [41, 42, 43]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 23/237 [00:00<00:00, 223.03it/s][A
Calculating viewed counts for every point:  19%|█▉        | 46/237 [00:00<00:00, 209.57it/s][A
Calculating viewed counts for every point:  29%|██▊       | 68/237 [00:00<00:00, 209.54it/s][A
Calculating viewed counts for every point:  38%|███▊      | 89/237 [00:00<00:00, 202.97it/s][A
Calculating viewed counts for every point:  47%|████▋     | 112/237 [00:00<00:00, 210.68it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 136/237 [00:00<00:00, 217.58it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 160/237 [00:00<00:00, 222.30it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/237 [00:00<00:00, 217.60it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 205/237 [00:00<00:00, 210.23it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 227/237 [00:01<00:00, 207.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [02:41<01:54,  1.47s/it]detected_ratio_thres_value tensor(0.1163, device='cuda:0')
final masked points tensor(5056, device='cuda:0')
before filtering torch.Size([8, 175557])
after filtering torch.Size([4, 175557])
num_ins_points_after_filtering tensor([2374,  200,  245,  219], device='cuda:0')
Working on scene0414_00 class stool
masks_to_be_merged [[0, 1, 2, 5, 6, 8, 37, 38, 39, 40, 43, 44, 45, 46, 47], [3, 4], [9, 10], [41, 42]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 16/117 [00:00<00:00, 158.99it/s][A
Calculating viewed counts for every point:  32%|███▏      | 37/117 [00:00<00:00, 184.48it/s][A
Calculating viewed counts for every point:  49%|████▊     | 57/117 [00:00<00:00, 185.29it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 76/117 [00:00<00:00, 170.96it/s][A
Calculating viewed counts for every point:  80%|████████  | 94/117 [00:00<00:00, 164.16it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 111/117 [00:00<00:00, 165.36it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [02:43<01:48,  1.41s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(4658, device='cuda:0')
before filtering torch.Size([4, 192685])
after filtering torch.Size([2, 192685])
num_ins_points_after_filtering tensor([1050,  785], device='cuda:0')
Working on scene0423_00 class stool
masks_to_be_merged [[0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 31, 32, 33, 37, 39, 40, 41, 42, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [2, 5], [44, 46, 47], [45, 48, 49]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 25/77 [00:00<00:00, 248.41it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 53/77 [00:00<00:00, 257.98it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  46%|████▋     | 66/142 [02:44<01:36,  1.27s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(1972, device='cuda:0')
before filtering torch.Size([4, 53074])
after filtering torch.Size([1, 53074])
num_ins_points_after_filtering tensor([1880], device='cuda:0')
Working on scene0426_00 class stool
masks_to_be_merged [[1, 2], [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61], [13, 58], [17, 18], [19, 20, 21, 25, 28, 32, 35, 64, 65, 66, 67, 70, 71, 74], [23, 24, 26, 27, 31, 33, 34, 36, 37, 38, 39, 40, 72, 73], [29, 30], [41, 42, 43, 44, 46], [59, 60], [62, 63], [68, 69]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 28/231 [00:00<00:00, 274.65it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/231 [00:00<00:00, 260.16it/s][A
Calculating viewed counts for every point:  36%|███▋      | 84/231 [00:00<00:00, 264.38it/s][A
Calculating viewed counts for every point:  48%|████▊     | 112/231 [00:00<00:00, 269.98it/s][A
Calculating viewed counts for every point:  61%|██████    | 140/231 [00:00<00:00, 257.60it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 167/231 [00:00<00:00, 260.19it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 194/231 [00:00<00:00, 254.94it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 223/231 [00:00<00:00, 263.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [02:46<01:49,  1.46s/it]detected_ratio_thres_value tensor(0.2581, device='cuda:0')
final masked points tensor(7231, device='cuda:0')
before filtering torch.Size([11, 135867])
after filtering torch.Size([4, 135867])
num_ins_points_after_filtering tensor([2462, 1181,  174, 2744], device='cuda:0')
Working on scene0427_00 class stool
masks_to_be_merged [[0, 2, 4, 7, 9, 11, 12, 58, 60, 61, 65, 67, 68, 85, 136, 138, 139, 140, 142, 143, 144], [1, 3, 5, 6, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 73, 74, 75, 77, 145, 147], [8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 69, 70, 71, 72, 76, 78, 80, 82, 84, 87, 89, 90, 91, 124, 125, 126, 128, 129, 132, 133, 134, 137], [22, 26, 28, 31, 32, 33, 34, 35, 37, 98, 99, 102, 106, 108, 109, 117, 118, 119, 120, 121, 122, 123, 127, 130, 131], [23, 24, 25, 27, 29, 30, 36, 38, 39, 40, 92, 93, 97, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116], [41, 42], [79, 81, 83], [94, 96]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 37/132 [00:00<00:00, 367.43it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 77/132 [00:00<00:00, 385.32it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 116/132 [00:00<00:00, 368.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [02:48<02:04,  1.68s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(10582, device='cuda:0')
before filtering torch.Size([8, 74074])
after filtering torch.Size([5, 74074])
num_ins_points_after_filtering tensor([2926, 2121, 2491, 1048, 1968], device='cuda:0')
Working on scene0430_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 33, 34, 35, 36, 37, 38, 54], [20, 21, 27, 28, 29, 30, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [22, 23], [24, 25], [26, 53]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 17/231 [00:00<00:01, 165.51it/s][A
Calculating viewed counts for every point:  15%|█▌        | 35/231 [00:00<00:01, 173.01it/s][A
Calculating viewed counts for every point:  23%|██▎       | 53/231 [00:00<00:01, 171.34it/s][A
Calculating viewed counts for every point:  31%|███       | 71/231 [00:00<00:01, 159.48it/s][A
Calculating viewed counts for every point:  38%|███▊      | 88/231 [00:00<00:00, 162.23it/s][A
Calculating viewed counts for every point:  46%|████▋     | 107/231 [00:00<00:00, 168.65it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 124/231 [00:00<00:00, 166.38it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 142/231 [00:00<00:00, 169.82it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 160/231 [00:00<00:00, 171.64it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 178/231 [00:01<00:00, 161.96it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 195/231 [00:01<00:00, 157.81it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 216/231 [00:01<00:00, 171.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [02:50<02:10,  1.78s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(2086, device='cuda:0')
before filtering torch.Size([5, 210249])
after filtering torch.Size([1, 210249])
num_ins_points_after_filtering tensor([813], device='cuda:0')
Working on scene0432_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 23, 26], [9, 12, 22, 27, 29, 34, 36], [19, 21, 24, 25, 30], [32, 37, 38]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 33/52 [00:00<00:00, 324.00it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [02:50<01:43,  1.44s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(4024, device='cuda:0')
before filtering torch.Size([4, 39529])
after filtering torch.Size([2, 39529])
num_ins_points_after_filtering tensor([3099,  231], device='cuda:0')
Working on scene0435_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 28, 29, 30, 31, 32, 33, 45], [20, 21], [22, 23], [25, 26, 27], [34, 35, 36, 38, 39, 40, 41, 44], [42, 43]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 16/328 [00:00<00:02, 154.94it/s][A
Calculating viewed counts for every point:  10%|▉         | 32/328 [00:00<00:01, 151.38it/s][A
Calculating viewed counts for every point:  15%|█▍        | 48/328 [00:00<00:01, 152.21it/s][A
Calculating viewed counts for every point:  20%|█▉        | 64/328 [00:00<00:01, 151.56it/s][A
Calculating viewed counts for every point:  25%|██▌       | 82/328 [00:00<00:01, 159.20it/s][A
Calculating viewed counts for every point:  30%|██▉       | 98/328 [00:00<00:01, 157.10it/s][A
Calculating viewed counts for every point:  35%|███▍      | 114/328 [00:00<00:01, 157.99it/s][A
Calculating viewed counts for every point:  40%|███▉      | 131/328 [00:00<00:01, 161.05it/s][A
Calculating viewed counts for every point:  45%|████▌     | 148/328 [00:00<00:01, 159.67it/s][A
Calculating viewed counts for every point:  50%|█████     | 164/328 [00:01<00:01, 158.60it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 180/328 [00:01<00:00, 156.19it/s][A
Calculating viewed counts for every point:  60%|██████    | 198/328 [00:01<00:00, 161.29it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 215/328 [00:01<00:00, 163.52it/s][A
Calculating viewed counts for every point:  71%|███████   | 232/328 [00:01<00:00, 163.27it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 249/328 [00:01<00:00, 158.64it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 267/328 [00:01<00:00, 164.39it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 284/328 [00:01<00:00, 162.95it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 301/328 [00:01<00:00, 156.24it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 319/328 [00:01<00:00, 162.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [02:53<02:07,  1.80s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(2262, device='cuda:0')
before filtering torch.Size([6, 254998])
after filtering torch.Size([2, 254998])
num_ins_points_after_filtering tensor([1093,  536], device='cuda:0')
Working on scene0441_00 class stool
masks_to_be_merged [[2, 3, 4, 5, 7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 21/77 [00:00<00:00, 205.66it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 42/77 [00:00<00:00, 193.77it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 64/77 [00:00<00:00, 203.40it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [02:54<01:42,  1.47s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(1441, device='cuda:0')
before filtering torch.Size([1, 86191])
after filtering torch.Size([1, 86191])
num_ins_points_after_filtering tensor([1374], device='cuda:0')
Working on scene0458_00 class stool
masks_to_be_merged [[0, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [1, 29], [3, 16], [7, 9], [33, 34, 35, 36, 39, 40, 41], [37, 38], [43, 44, 45, 46, 47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/199 [00:00<00:00, 242.54it/s][A
Calculating viewed counts for every point:  26%|██▌       | 52/199 [00:00<00:00, 256.86it/s][A
Calculating viewed counts for every point:  39%|███▉      | 78/199 [00:00<00:00, 252.04it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 104/199 [00:00<00:00, 250.63it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 131/199 [00:00<00:00, 253.39it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 163/199 [00:00<00:00, 274.00it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 191/199 [00:00<00:00, 271.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [02:55<01:37,  1.42s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(1726, device='cuda:0')
before filtering torch.Size([7, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([ 517, 1022], device='cuda:0')
Working on scene0461_00 class stool
masks_to_be_merged [[0, 2, 10, 12, 14, 16, 18, 20, 22, 24, 28, 32, 56, 57, 58, 59, 60, 61], [1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 19, 21, 23, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 49, 50, 51, 55, 64, 65, 66, 68, 71, 73], [25, 31, 41, 44, 46, 48, 52, 53, 62, 63], [26, 30, 54, 67, 69, 70, 72]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 19/52 [00:00<00:00, 185.56it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 39/52 [00:00<00:00, 191.05it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [02:56<01:29,  1.31s/it]detected_ratio_thres_value tensor(0.2821, device='cuda:0')
final masked points tensor(3777, device='cuda:0')
before filtering torch.Size([4, 59134])
after filtering torch.Size([2, 59134])
num_ins_points_after_filtering tensor([1497, 2103], device='cuda:0')
Working on scene0462_00 class stool
masks_to_be_merged [[3, 4, 5, 6, 7, 8], [10, 11]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 22/114 [00:00<00:00, 213.19it/s][A
Calculating viewed counts for every point:  40%|████      | 46/114 [00:00<00:00, 227.19it/s][A
Calculating viewed counts for every point:  61%|██████    | 69/114 [00:00<00:00, 227.49it/s][A
Calculating viewed counts for every point:  81%|████████  | 92/114 [00:00<00:00, 209.88it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [02:57<01:18,  1.17s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(8305, device='cuda:0')
before filtering torch.Size([2, 156714])
after filtering torch.Size([2, 156714])
num_ins_points_after_filtering tensor([1785, 5544], device='cuda:0')
Working on scene0474_00 class stool
masks_to_be_merged [[1, 2], [4, 24, 25], [6, 7, 8, 27], [9, 31], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/164 [00:00<00:00, 168.66it/s][A
Calculating viewed counts for every point:  21%|██        | 34/164 [00:00<00:00, 156.02it/s][A
Calculating viewed counts for every point:  31%|███       | 51/164 [00:00<00:00, 161.11it/s][A
Calculating viewed counts for every point:  41%|████▏     | 68/164 [00:00<00:00, 156.89it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/164 [00:00<00:00, 154.84it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 101/164 [00:00<00:00, 159.26it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 117/164 [00:00<00:00, 155.66it/s][A
Calculating viewed counts for every point:  81%|████████  | 133/164 [00:00<00:00, 149.48it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 150/164 [00:00<00:00, 153.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [02:59<01:25,  1.30s/it]detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(1690, device='cuda:0')
before filtering torch.Size([5, 182281])
after filtering torch.Size([1, 182281])
num_ins_points_after_filtering tensor([1103], device='cuda:0')
Working on scene0488_00 class stool
No 3d masks detected in backprojection!
Working on scene0490_00 class stool
masks_to_be_merged [[3, 25, 26, 27], [5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15], [16, 17, 20, 21, 23], [22, 24]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 26/129 [00:00<00:00, 254.23it/s][A
Calculating viewed counts for every point:  42%|████▏     | 54/129 [00:00<00:00, 265.94it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 82/129 [00:00<00:00, 268.38it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 109/129 [00:00<00:00, 256.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [02:59<00:55,  1.15it/s]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(3998, device='cuda:0')
before filtering torch.Size([5, 131283])
after filtering torch.Size([4, 131283])
num_ins_points_after_filtering tensor([1319,  819, 1310,  509], device='cuda:0')
Working on scene0494_00 class stool
masks_to_be_merged [[2, 3, 4], [6, 7, 8, 9, 10, 12], [11, 13, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 25/75 [00:00<00:00, 246.04it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 54/75 [00:00<00:00, 269.78it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [03:00<00:49,  1.28it/s]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(1848, device='cuda:0')
before filtering torch.Size([3, 62048])
after filtering torch.Size([3, 62048])
num_ins_points_after_filtering tensor([287, 352, 893], device='cuda:0')
Working on scene0496_00 class stool
masks_to_be_merged [[2, 3], [10, 11], [12, 14, 15, 16, 17, 18, 19, 20, 22, 25], [21, 24, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 17/134 [00:00<00:00, 167.40it/s][A
Calculating viewed counts for every point:  25%|██▌       | 34/134 [00:00<00:00, 148.95it/s][A
Calculating viewed counts for every point:  37%|███▋      | 50/134 [00:00<00:00, 146.73it/s][A
Calculating viewed counts for every point:  49%|████▊     | 65/134 [00:00<00:00, 146.68it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 80/134 [00:00<00:00, 145.42it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 98/134 [00:00<00:00, 154.25it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 114/134 [00:00<00:00, 144.29it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 129/134 [00:00<00:00, 142.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [03:01<00:57,  1.08it/s]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(2433, device='cuda:0')
before filtering torch.Size([4, 192962])
after filtering torch.Size([3, 192962])
num_ins_points_after_filtering tensor([  45, 1052,  724], device='cuda:0')
Working on scene0500_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [8, 9, 13], [17, 18, 19, 20], [21, 22], [23, 24, 26, 28, 30, 31, 33, 35], [25, 27, 29, 32, 34], [36, 37], [38, 39, 40, 41]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/219 [00:00<00:02, 86.29it/s][A
Calculating viewed counts for every point:   9%|▊         | 19/219 [00:00<00:02, 91.51it/s][A
Calculating viewed counts for every point:  14%|█▎        | 30/219 [00:00<00:01, 97.90it/s][A
Calculating viewed counts for every point:  18%|█▊        | 40/219 [00:00<00:01, 98.34it/s][A
Calculating viewed counts for every point:  23%|██▎       | 51/219 [00:00<00:01, 99.10it/s][A
Calculating viewed counts for every point:  28%|██▊       | 61/219 [00:00<00:01, 90.54it/s][A
Calculating viewed counts for every point:  32%|███▏      | 71/219 [00:00<00:01, 87.57it/s][A
Calculating viewed counts for every point:  37%|███▋      | 80/219 [00:00<00:01, 84.65it/s][A
Calculating viewed counts for every point:  41%|████      | 89/219 [00:00<00:01, 84.22it/s][A
Calculating viewed counts for every point:  45%|████▍     | 98/219 [00:01<00:01, 84.16it/s][A
Calculating viewed counts for every point:  49%|████▉     | 107/219 [00:01<00:01, 81.72it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 116/219 [00:01<00:01, 82.85it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 128/219 [00:01<00:01, 90.65it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 138/219 [00:01<00:00, 86.86it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 147/219 [00:01<00:00, 87.06it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 157/219 [00:01<00:00, 89.72it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 167/219 [00:01<00:00, 91.44it/s][A
Calculating viewed counts for every point:  81%|████████  | 177/219 [00:01<00:00, 92.01it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 187/219 [00:02<00:00, 87.56it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 196/219 [00:02<00:00, 83.95it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 205/219 [00:02<00:00, 84.04it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 214/219 [00:02<00:00, 83.48it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [03:04<01:35,  1.57s/it]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(5254, device='cuda:0')
before filtering torch.Size([8, 396942])
after filtering torch.Size([4, 396942])
num_ins_points_after_filtering tensor([ 120, 2821,  658,  948], device='cuda:0')
Working on scene0518_00 class stool
masks_to_be_merged [[0, 7, 9, 10, 12, 13, 14, 15, 16, 18, 27, 28, 30, 33, 47, 49, 51, 54, 56, 58, 60], [1, 2, 3, 4, 5, 6], [8, 11, 57, 61], [17, 22, 24, 29, 31, 32, 44, 46, 50, 52, 53, 55, 59, 74, 75, 76, 78, 79, 80, 81, 82, 83], [20, 21, 23, 25, 34, 35, 36, 37, 62, 63, 64, 66, 67, 68, 69], [38, 39, 40, 41], [43, 48], [65, 70], [71, 72]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 24/147 [00:00<00:00, 231.89it/s][A
Calculating viewed counts for every point:  33%|███▎      | 48/147 [00:00<00:00, 224.18it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 76/147 [00:00<00:00, 245.21it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 101/147 [00:00<00:00, 242.51it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 129/147 [00:00<00:00, 254.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [03:06<01:34,  1.57s/it]detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(6265, device='cuda:0')
before filtering torch.Size([9, 130180])
after filtering torch.Size([3, 130180])
num_ins_points_after_filtering tensor([2406, 1850,  100], device='cuda:0')
Working on scene0527_00 class stool
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8], [9, 11], [10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 35/68 [00:00<00:00, 345.68it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [03:06<01:12,  1.23s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(2923, device='cuda:0')
before filtering torch.Size([4, 65893])
after filtering torch.Size([2, 65893])
num_ins_points_after_filtering tensor([ 872, 1798], device='cuda:0')
Working on scene0535_00 class stool
masks_to_be_merged [[0, 1, 2, 4], [7, 8, 9, 38, 40], [10, 11], [12, 13], [14, 15, 16, 17], [18, 20, 21, 22], [33, 34, 35, 36, 37, 39]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 22/69 [00:00<00:00, 213.80it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 44/69 [00:00<00:00, 209.75it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 68/69 [00:00<00:00, 218.70it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [03:07<01:05,  1.12s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(4165, device='cuda:0')
before filtering torch.Size([7, 90268])
after filtering torch.Size([6, 90268])
num_ins_points_after_filtering tensor([117, 474, 895, 578, 431, 491], device='cuda:0')
Working on scene0549_00 class stool
masks_to_be_merged [[0, 1], [3, 4, 5], [7, 8], [9, 11, 13, 14, 15, 16], [10, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40], [19, 20, 22, 23, 24, 25, 26], [41, 42]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 25/83 [00:00<00:00, 241.73it/s][A
Calculating viewed counts for every point:  60%|██████    | 50/83 [00:00<00:00, 219.37it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 73/83 [00:00<00:00, 220.18it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [03:08<00:58,  1.03s/it]detected_ratio_thres_value tensor(0.2381, device='cuda:0')
final masked points tensor(7239, device='cuda:0')
before filtering torch.Size([7, 161973])
after filtering torch.Size([4, 161973])
num_ins_points_after_filtering tensor([ 569, 1324, 1992, 2622], device='cuda:0')
Working on scene0550_00 class stool
masks_to_be_merged [[1, 2, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78], [3, 4, 54, 82, 83, 97], [5, 6], [7, 8, 13, 14, 15, 16, 17, 18, 19, 20], [9, 10, 11, 12], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [79, 80, 81], [84, 85, 86, 87, 88, 89], [90, 91], [92, 93, 94, 95, 96], [98, 99, 100, 101, 102], [103, 104]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/392 [00:00<00:01, 276.89it/s][A
Calculating viewed counts for every point:  14%|█▍        | 56/392 [00:00<00:01, 273.15it/s][A
Calculating viewed counts for every point:  22%|██▏       | 86/392 [00:00<00:01, 283.55it/s][A
Calculating viewed counts for every point:  29%|██▉       | 115/392 [00:00<00:00, 277.54it/s][A
Calculating viewed counts for every point:  36%|███▋      | 143/392 [00:00<00:00, 269.14it/s][A
Calculating viewed counts for every point:  44%|████▍     | 172/392 [00:00<00:00, 273.11it/s][A
Calculating viewed counts for every point:  51%|█████     | 200/392 [00:00<00:00, 267.40it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 227/392 [00:00<00:00, 262.44it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 255/392 [00:00<00:00, 267.51it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 282/392 [00:01<00:00, 263.64it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 311/392 [00:01<00:00, 269.68it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 339/392 [00:01<00:00, 270.58it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 367/392 [00:01<00:00, 257.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [03:11<01:25,  1.53s/it]detected_ratio_thres_value tensor(0.2099, device='cuda:0')
final masked points tensor(5325, device='cuda:0')
before filtering torch.Size([12, 127677])
after filtering torch.Size([4, 127677])
num_ins_points_after_filtering tensor([ 976, 1534, 1685,   89], device='cuda:0')
Working on scene0552_00 class stool
masks_to_be_merged [[1, 2], [3, 4, 5, 13, 14, 15], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 27/89 [00:00<00:00, 262.52it/s][A
Calculating viewed counts for every point:  61%|██████    | 54/89 [00:00<00:00, 254.34it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 83/89 [00:00<00:00, 267.04it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [03:11<01:07,  1.23s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(1888, device='cuda:0')
before filtering torch.Size([3, 123103])
after filtering torch.Size([2, 123103])
num_ins_points_after_filtering tensor([1516,   22], device='cuda:0')
Working on scene0553_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 33/151 [00:00<00:00, 322.25it/s][A
Calculating viewed counts for every point:  44%|████▎     | 66/151 [00:00<00:00, 312.19it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 98/151 [00:00<00:00, 285.98it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 127/151 [00:00<00:00, 285.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [03:12<01:00,  1.12s/it]detected_ratio_thres_value tensor(0.1212, device='cuda:0')
final masked points tensor(3481, device='cuda:0')
before filtering torch.Size([3, 62854])
after filtering torch.Size([2, 62854])
num_ins_points_after_filtering tensor([ 966, 2085], device='cuda:0')
Working on scene0558_00 class stool
masks_to_be_merged [[2, 3], [4, 5, 6], [7, 8, 9, 10, 13, 14, 15, 18, 21, 22], [20, 23, 24, 26]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  49%|████▉     | 35/71 [00:00<00:00, 345.84it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 70/71 [00:00<00:00, 311.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [03:13<00:48,  1.08it/s]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(4747, device='cuda:0')
before filtering torch.Size([4, 92953])
after filtering torch.Size([3, 92953])
num_ins_points_after_filtering tensor([1911, 1081, 1467], device='cuda:0')
Working on scene0559_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [17, 19], [18, 21, 24, 27], [20, 22, 23, 25, 26, 29, 30, 31], [32, 33, 34], [35, 36, 37, 39]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 31/58 [00:00<00:00, 302.90it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [03:13<00:44,  1.17it/s]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(3847, device='cuda:0')
before filtering torch.Size([6, 89796])
after filtering torch.Size([5, 89796])
num_ins_points_after_filtering tensor([ 889,  487,  747,  599, 1058], device='cuda:0')
Working on scene0565_00 class stool
masks_to_be_merged [[6, 7, 8, 9, 10, 12, 15], [11, 13, 14, 16, 17, 20, 26, 27, 28, 29, 30, 31], [18, 19, 21, 22, 23, 24, 25], [32, 35], [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 20/107 [00:00<00:00, 192.29it/s][A
Calculating viewed counts for every point:  37%|███▋      | 40/107 [00:00<00:00, 191.86it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 64/107 [00:00<00:00, 211.71it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 87/107 [00:00<00:00, 215.09it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [03:15<00:48,  1.05it/s]detected_ratio_thres_value tensor(0.1707, device='cuda:0')
final masked points tensor(4175, device='cuda:0')
before filtering torch.Size([5, 167558])
after filtering torch.Size([3, 167558])
num_ins_points_after_filtering tensor([1044, 1002, 1775], device='cuda:0')
Working on scene0568_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 133, 134, 135, 137, 138, 139], [4, 5, 6, 7], [8, 10, 12, 14, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 31, 34, 36, 39, 41, 42, 45, 47, 48, 50, 53, 55, 57, 59, 62, 64], [9, 11, 13, 15, 20, 24, 26, 28, 30, 32, 33, 35, 37, 38, 40, 43, 44, 46, 49, 51, 52, 54, 56, 58, 61, 63, 65, 66], [60, 67, 68], [69, 70, 71], [72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 89, 90, 92, 93, 95, 97, 99, 101, 103, 104, 106, 107, 109], [74, 80, 91, 94, 96, 98, 100, 102, 105, 108, 110, 111, 112, 113], [85, 86, 87], [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 14/166 [00:00<00:01, 135.80it/s][A
Calculating viewed counts for every point:  17%|█▋        | 28/166 [00:00<00:01, 131.15it/s][A
Calculating viewed counts for every point:  25%|██▌       | 42/166 [00:00<00:00, 129.12it/s][A
Calculating viewed counts for every point:  33%|███▎      | 55/166 [00:00<00:00, 127.71it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 133.86it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/166 [00:00<00:00, 132.47it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 98/166 [00:00<00:00, 128.97it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 111/166 [00:00<00:00, 128.01it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 124/166 [00:00<00:00, 127.85it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 137/166 [00:01<00:00, 125.23it/s][A
Calculating viewed counts for every point:  91%|█████████ | 151/166 [00:01<00:00, 127.05it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 164/166 [00:01<00:00, 122.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [03:18<01:22,  1.65s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(8500, device='cuda:0')
before filtering torch.Size([10, 232453])
after filtering torch.Size([5, 232453])
num_ins_points_after_filtering tensor([ 778, 1497, 2039, 1369, 1045], device='cuda:0')
Working on scene0574_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], [24, 25]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 29/103 [00:00<00:00, 286.51it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 61/103 [00:00<00:00, 302.16it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 92/103 [00:00<00:00, 286.58it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [03:18<01:05,  1.34s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(1958, device='cuda:0')
before filtering torch.Size([2, 55521])
after filtering torch.Size([1, 55521])
num_ins_points_after_filtering tensor([1794], device='cuda:0')
Working on scene0575_00 class stool
masks_to_be_merged [[2, 3], [9, 10, 11, 12, 13, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109], [14, 45], [16, 19], [18, 21, 25, 26, 33], [20, 31], [23, 35], [29, 46, 112], [48, 49, 50], [51, 52, 53], [68, 71], [77, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 102, 111, 114], [80, 82], [113, 115], [117, 119, 120], [121, 123]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 179.00it/s][A
Calculating viewed counts for every point:  13%|█▎        | 37/294 [00:00<00:01, 180.34it/s][A
Calculating viewed counts for every point:  20%|█▉        | 58/294 [00:00<00:01, 191.27it/s][A
Calculating viewed counts for every point:  27%|██▋       | 78/294 [00:00<00:01, 189.46it/s][A
Calculating viewed counts for every point:  34%|███▎      | 99/294 [00:00<00:01, 193.96it/s][A
Calculating viewed counts for every point:  40%|████      | 119/294 [00:00<00:00, 186.94it/s][A
Calculating viewed counts for every point:  47%|████▋     | 138/294 [00:00<00:00, 180.99it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 159/294 [00:00<00:00, 187.94it/s][A
Calculating viewed counts for every point:  61%|██████    | 178/294 [00:00<00:00, 186.61it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 197/294 [00:01<00:00, 177.00it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 215/294 [00:01<00:00, 168.27it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 232/294 [00:01<00:00, 163.56it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 252/294 [00:01<00:00, 172.60it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 270/294 [00:01<00:00, 170.61it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 288/294 [00:01<00:00, 166.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [03:22<01:37,  2.02s/it]detected_ratio_thres_value tensor(0.1455, device='cuda:0')
final masked points tensor(3959, device='cuda:0')
before filtering torch.Size([16, 194207])
after filtering torch.Size([2, 194207])
num_ins_points_after_filtering tensor([2686,  289], device='cuda:0')
Working on scene0578_00 class stool
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 24/149 [00:00<00:00, 234.83it/s][A
Calculating viewed counts for every point:  32%|███▏      | 48/149 [00:00<00:00, 220.10it/s][A
Calculating viewed counts for every point:  48%|████▊     | 72/149 [00:00<00:00, 226.46it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 95/149 [00:00<00:00, 219.07it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 118/149 [00:00<00:00, 219.52it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 142/149 [00:00<00:00, 224.64it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [03:23<01:21,  1.73s/it]detected_ratio_thres_value tensor(0.1525, device='cuda:0')
final masked points tensor(4275, device='cuda:0')
before filtering torch.Size([1, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([4251], device='cuda:0')
Working on scene0580_00 class stool
masks_to_be_merged [[0, 1, 2, 133, 134, 135], [3, 4, 5], [7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 106, 107, 108, 109, 110, 113, 114, 115, 116, 128, 129, 131, 132, 136, 137], [15, 16, 17], [22, 23], [25, 26, 27, 28, 29, 30, 31, 32, 35, 37, 39, 41, 45, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81], [33, 34, 36, 38, 40, 42, 43, 44, 46, 53, 55, 56, 79, 82, 117, 118, 119, 120, 121, 122, 123, 127, 138], [62, 63], [83, 84, 85, 86, 87, 88, 90, 93], [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112], [124, 125]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 21/477 [00:00<00:02, 206.50it/s][A
Calculating viewed counts for every point:  10%|▉         | 47/477 [00:00<00:01, 234.61it/s][A
Calculating viewed counts for every point:  15%|█▍        | 71/477 [00:00<00:01, 235.62it/s][A
Calculating viewed counts for every point:  20%|██        | 97/477 [00:00<00:01, 241.01it/s][A
Calculating viewed counts for every point:  26%|██▌       | 122/477 [00:00<00:01, 232.40it/s][A
Calculating viewed counts for every point:  31%|███       | 146/477 [00:00<00:01, 228.74it/s][A
Calculating viewed counts for every point:  36%|███▌      | 170/477 [00:00<00:01, 229.72it/s][A
Calculating viewed counts for every point:  40%|████      | 193/477 [00:00<00:01, 224.73it/s][A
Calculating viewed counts for every point:  45%|████▌     | 216/477 [00:00<00:01, 226.18it/s][A
Calculating viewed counts for every point:  50%|█████     | 239/477 [00:01<00:01, 226.44it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 262/477 [00:01<00:00, 221.39it/s][A
Calculating viewed counts for every point:  60%|██████    | 287/477 [00:01<00:00, 229.25it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 310/477 [00:01<00:00, 228.53it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 333/477 [00:01<00:00, 221.14it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 357/477 [00:01<00:00, 225.67it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 380/477 [00:01<00:00, 223.13it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 403/477 [00:01<00:00, 221.10it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 426/477 [00:01<00:00, 221.00it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 450/477 [00:01<00:00, 226.31it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 475/477 [00:02<00:00, 231.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [03:27<01:52,  2.45s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(7382, device='cuda:0')
before filtering torch.Size([11, 158047])
after filtering torch.Size([3, 158047])
num_ins_points_after_filtering tensor([1138, 2271, 1213], device='cuda:0')
Working on scene0583_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 52, 53, 54, 55, 56, 65, 66, 67, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85], [6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 77], [46, 47, 48, 49, 50, 51, 62, 63, 64]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 235.95it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/198 [00:00<00:00, 235.31it/s][A
Calculating viewed counts for every point:  37%|███▋      | 74/198 [00:00<00:00, 246.00it/s][A
Calculating viewed counts for every point:  50%|█████     | 99/198 [00:00<00:00, 243.22it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 124/198 [00:00<00:00, 241.25it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 149/198 [00:00<00:00, 237.60it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 173/198 [00:00<00:00, 232.90it/s][A
Calculating viewed counts for every point: 100%|██████████| 198/198 [00:00<00:00, 234.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [03:29<01:40,  2.23s/it]detected_ratio_thres_value tensor(0.3023, device='cuda:0')
final masked points tensor(2376, device='cuda:0')
before filtering torch.Size([3, 146782])
after filtering torch.Size([3, 146782])
num_ins_points_after_filtering tensor([1508,  436,  431], device='cuda:0')
Working on scene0591_00 class stool
masks_to_be_merged [[3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19], [9, 10, 11, 12, 13, 38], [20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31], [23, 37], [32, 33, 34, 35, 36], [39, 40]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 16/173 [00:00<00:01, 151.62it/s][A
Calculating viewed counts for every point:  19%|█▉        | 33/173 [00:00<00:00, 156.79it/s][A
Calculating viewed counts for every point:  29%|██▉       | 50/173 [00:00<00:00, 158.59it/s][A
Calculating viewed counts for every point:  38%|███▊      | 66/173 [00:00<00:00, 151.46it/s][A
Calculating viewed counts for every point:  47%|████▋     | 82/173 [00:00<00:00, 152.07it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 98/173 [00:00<00:00, 152.59it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 114/173 [00:00<00:00, 150.98it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 131/173 [00:00<00:00, 156.59it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 147/173 [00:00<00:00, 155.60it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 163/173 [00:01<00:00, 153.07it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [03:31<01:31,  2.07s/it]detected_ratio_thres_value tensor(0.0976, device='cuda:0')
final masked points tensor(8773, device='cuda:0')
before filtering torch.Size([6, 175600])
after filtering torch.Size([4, 175600])
num_ins_points_after_filtering tensor([1053, 4502,  810,  575], device='cuda:0')
Working on scene0593_00 class stool
masks_to_be_merged [[0, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 52, 53, 54, 55, 56, 57, 58], [2, 3, 4, 5, 6], [7, 8], [9, 10], [15, 16, 17], [33, 34, 38, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [73, 74, 75]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/230 [00:00<00:01, 158.76it/s][A
Calculating viewed counts for every point:  15%|█▌        | 35/230 [00:00<00:01, 174.96it/s][A
Calculating viewed counts for every point:  24%|██▍       | 55/230 [00:00<00:00, 182.42it/s][A
Calculating viewed counts for every point:  32%|███▏      | 74/230 [00:00<00:00, 172.98it/s][A
Calculating viewed counts for every point:  40%|████      | 92/230 [00:00<00:00, 159.36it/s][A
Calculating viewed counts for every point:  50%|████▉     | 114/230 [00:00<00:00, 175.39it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 132/230 [00:00<00:00, 170.30it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 150/230 [00:00<00:00, 164.86it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 170/230 [00:00<00:00, 174.34it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 188/230 [00:01<00:00, 166.63it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 205/230 [00:01<00:00, 166.43it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 223/230 [00:01<00:00, 170.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [03:33<01:34,  2.20s/it]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(5198, device='cuda:0')
before filtering torch.Size([8, 211902])
after filtering torch.Size([3, 211902])
num_ins_points_after_filtering tensor([4068,   65,  492], device='cuda:0')
Working on scene0595_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 22/76 [00:00<00:00, 214.30it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 44/76 [00:00<00:00, 204.43it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 71/76 [00:00<00:00, 226.89it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [03:34<01:11,  1.70s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(1885, device='cuda:0')
before filtering torch.Size([1, 142330])
after filtering torch.Size([1, 142330])
num_ins_points_after_filtering tensor([1876], device='cuda:0')
Working on scene0598_00 class stool
masks_to_be_merged [[1, 2, 3, 4], [5, 6], [8, 9], [10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 24/101 [00:00<00:00, 237.56it/s][A
Calculating viewed counts for every point:  48%|████▊     | 48/101 [00:00<00:00, 236.74it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 75/101 [00:00<00:00, 247.33it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 100/101 [00:00<00:00, 232.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [03:34<00:56,  1.38s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2018, device='cuda:0')
before filtering torch.Size([4, 145562])
after filtering torch.Size([3, 145562])
num_ins_points_after_filtering tensor([805, 696, 328], device='cuda:0')
Working on scene0599_00 class stool
masks_to_be_merged [[0, 1, 2, 8, 9, 10], [5, 6]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/189 [00:00<00:00, 248.96it/s][A
Calculating viewed counts for every point:  26%|██▋       | 50/189 [00:00<00:00, 227.16it/s][A
Calculating viewed counts for every point:  41%|████      | 77/189 [00:00<00:00, 244.60it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 102/189 [00:00<00:00, 228.00it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 126/189 [00:00<00:00, 231.10it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 150/189 [00:00<00:00, 228.50it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 173/189 [00:00<00:00, 218.07it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [03:35<00:51,  1.28s/it]detected_ratio_thres_value tensor(0.0417, device='cuda:0')
final masked points tensor(3855, device='cuda:0')
before filtering torch.Size([2, 141933])
after filtering torch.Size([2, 141933])
num_ins_points_after_filtering tensor([2008, 1345], device='cuda:0')
Working on scene0606_00 class stool
masks_to_be_merged [[0, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 57, 58, 59, 60, 61, 62, 63, 64], [1, 3, 14, 16], [32, 33, 34, 35, 36, 37, 38, 39], [40, 41, 42], [43, 44, 45, 46], [48, 49, 50], [51, 52, 54, 55, 56], [67, 68, 69]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 25/250 [00:00<00:00, 247.74it/s][A
Calculating viewed counts for every point:  20%|██        | 50/250 [00:00<00:00, 235.12it/s][A
Calculating viewed counts for every point:  30%|███       | 75/250 [00:00<00:00, 240.53it/s][A
Calculating viewed counts for every point:  40%|████      | 100/250 [00:00<00:00, 228.79it/s][A
Calculating viewed counts for every point:  49%|████▉     | 123/250 [00:00<00:00, 226.07it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 146/250 [00:00<00:00, 217.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 168/250 [00:00<00:00, 205.49it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 189/250 [00:00<00:00, 202.70it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 213/250 [00:00<00:00, 212.72it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 235/250 [00:01<00:00, 210.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [03:37<00:58,  1.51s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(2830, device='cuda:0')
before filtering torch.Size([8, 164401])
after filtering torch.Size([5, 164401])
num_ins_points_after_filtering tensor([ 510,  221,  321, 1100,  462], device='cuda:0')
Working on scene0607_00 class stool
masks_to_be_merged [[3, 4, 5, 6, 9, 11, 16], [14, 15], [18, 19, 20], [23, 24]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 24/100 [00:00<00:00, 237.59it/s][A
Calculating viewed counts for every point:  48%|████▊     | 48/100 [00:00<00:00, 238.96it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 78/100 [00:00<00:00, 265.78it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [03:38<00:49,  1.30s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(5847, device='cuda:0')
before filtering torch.Size([4, 113156])
after filtering torch.Size([4, 113156])
num_ins_points_after_filtering tensor([2356,  709, 1531,  817], device='cuda:0')
Working on scene0608_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 171, 173, 174, 176, 178, 179], [20, 21, 22, 23, 24, 25], [31, 32], [39, 40], [43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 66, 68, 71, 73, 75, 77, 79, 80, 82, 84, 86, 88, 89, 91, 93, 95, 98, 100, 102, 104, 106, 108, 111, 166, 168, 170], [65, 67, 69, 70, 72, 74, 76, 78, 81, 83, 85, 90, 92, 94, 96, 99, 101, 103, 105, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 165, 167, 169], [143, 144], [148, 149], [162, 163], [172, 175, 177], [180, 181, 182, 183], [185, 186, 187, 188, 189, 190, 191, 192, 195], [193, 194]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 22/339 [00:00<00:01, 216.78it/s][A
Calculating viewed counts for every point:  13%|█▎        | 44/339 [00:00<00:01, 199.30it/s][A
Calculating viewed counts for every point:  20%|██        | 68/339 [00:00<00:01, 214.87it/s][A
Calculating viewed counts for every point:  27%|██▋       | 90/339 [00:00<00:01, 207.76it/s][A
Calculating viewed counts for every point:  33%|███▎      | 111/339 [00:00<00:01, 207.39it/s][A
Calculating viewed counts for every point:  39%|███▉      | 132/339 [00:00<00:01, 203.17it/s][A
Calculating viewed counts for every point:  45%|████▌     | 153/339 [00:00<00:00, 187.87it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 175/339 [00:00<00:00, 193.66it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 195/339 [00:00<00:00, 188.10it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 214/339 [00:01<00:00, 187.86it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 235/339 [00:01<00:00, 192.18it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 255/339 [00:01<00:00, 193.60it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 276/339 [00:01<00:00, 198.24it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 296/339 [00:01<00:00, 196.59it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 316/339 [00:01<00:00, 194.90it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 338/339 [00:01<00:00, 200.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [03:43<01:25,  2.31s/it]detected_ratio_thres_value tensor(0.2326, device='cuda:0')
final masked points tensor(5556, device='cuda:0')
before filtering torch.Size([13, 186579])
after filtering torch.Size([3, 186579])
num_ins_points_after_filtering tensor([1837, 1310, 1112], device='cuda:0')
Working on scene0609_00 class stool
masks_to_be_merged [[0, 1, 2], [19, 20], [22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 33/110 [00:00<00:00, 328.01it/s][A
Calculating viewed counts for every point:  60%|██████    | 66/110 [00:00<00:00, 304.42it/s][A
Calculating viewed counts for every point:  91%|█████████ | 100/110 [00:00<00:00, 317.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▍  | 106/142 [03:43<01:04,  1.78s/it]detected_ratio_thres_value tensor(0.0526, device='cuda:0')
final masked points tensor(6478, device='cuda:0')
before filtering torch.Size([3, 78836])
after filtering torch.Size([3, 78836])
num_ins_points_after_filtering tensor([2192, 1492, 1434], device='cuda:0')
Working on scene0616_00 class stool
masks_to_be_merged [[0, 1, 57, 64, 94, 95, 96, 101, 102, 108, 109, 110, 111, 112, 123, 126, 128, 129, 136, 138, 141, 142, 146, 148, 161, 163, 165, 167, 168, 169], [2, 3, 4, 50, 51, 52, 53, 54, 55, 56, 97, 98, 117, 130, 131, 132, 133, 158], [6, 7, 8, 9, 10, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 82, 83, 85, 86], [17, 25, 26, 28, 30, 31, 36, 71, 73, 74, 77, 78, 80, 84, 87, 172], [32, 34, 35, 79, 173], [33, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 75, 76, 81, 89, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 113, 115, 116, 170, 171], [118, 119, 120, 121, 122, 124, 125, 134, 137, 139, 143, 145, 147, 157, 160, 162, 164, 166], [149, 150, 151], [152, 153]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 104.82it/s][A
Calculating viewed counts for every point:   7%|▋         | 22/304 [00:00<00:02, 105.83it/s][A
Calculating viewed counts for every point:  11%|█         | 34/304 [00:00<00:02, 111.03it/s][A
Calculating viewed counts for every point:  15%|█▌        | 46/304 [00:00<00:02, 112.76it/s][A
Calculating viewed counts for every point:  19%|█▉        | 58/304 [00:00<00:02, 113.00it/s][A
Calculating viewed counts for every point:  23%|██▎       | 70/304 [00:00<00:02, 111.27it/s][A
Calculating viewed counts for every point:  27%|██▋       | 82/304 [00:00<00:02, 105.66it/s][A
Calculating viewed counts for every point:  31%|███▏      | 95/304 [00:00<00:01, 110.57it/s][A
Calculating viewed counts for every point:  35%|███▌      | 107/304 [00:00<00:01, 111.92it/s][A
Calculating viewed counts for every point:  39%|███▉      | 119/304 [00:01<00:01, 109.37it/s][A
Calculating viewed counts for every point:  43%|████▎     | 132/304 [00:01<00:01, 114.32it/s][A
Calculating viewed counts for every point:  47%|████▋     | 144/304 [00:01<00:01, 109.94it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 157/304 [00:01<00:01, 113.97it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 169/304 [00:01<00:01, 112.58it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 181/304 [00:01<00:01, 113.82it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 193/304 [00:01<00:00, 112.44it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 205/304 [00:01<00:00, 106.56it/s][A
Calculating viewed counts for every point:  71%|███████   | 216/304 [00:01<00:00, 107.03it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 228/304 [00:02<00:00, 110.61it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 241/304 [00:02<00:00, 113.78it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 253/304 [00:02<00:00, 115.47it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 265/304 [00:02<00:00, 107.57it/s][A
Calculating viewed counts for every point:  91%|█████████ | 276/304 [00:02<00:00, 105.35it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 287/304 [00:02<00:00, 104.31it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 298/304 [00:02<00:00, 104.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [03:50<01:50,  3.16s/it]detected_ratio_thres_value tensor(0.1711, device='cuda:0')
final masked points tensor(12887, device='cuda:0')
before filtering torch.Size([10, 310248])
after filtering torch.Size([6, 310248])
num_ins_points_after_filtering tensor([2031, 1012, 2993, 2598, 1404, 1240], device='cuda:0')
Working on scene0618_00 class stool
masks_to_be_merged [[0, 1, 115, 117, 119, 121, 123, 125, 126, 128, 130, 134], [2, 3, 127], [4, 6, 7, 9, 10, 11, 13, 15, 131, 133, 135, 136, 137], [12, 14, 16, 18, 138, 139, 142, 146], [19, 20, 21, 22, 23, 31, 140, 141, 143, 144, 145], [26, 40], [27, 32, 35, 38], [33, 36], [42, 43, 47], [46, 48, 51, 52, 56, 57, 60, 62, 65, 69, 72, 75, 77, 78, 79, 80, 82, 83, 85], [53, 58, 63, 67, 71], [54, 55], [59, 61, 64, 70, 73, 74, 76], [88, 91, 93, 95, 96, 107, 109, 110, 111, 112, 113, 116, 118, 120, 122], [89, 92], [97, 102]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 13/90 [00:00<00:00, 127.80it/s][A
Calculating viewed counts for every point:  29%|██▉       | 26/90 [00:00<00:00, 128.34it/s][A
Calculating viewed counts for every point:  43%|████▎     | 39/90 [00:00<00:00, 122.34it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 52/90 [00:00<00:00, 123.87it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 65/90 [00:00<00:00, 123.55it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 78/90 [00:00<00:00, 120.55it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [03:53<01:48,  3.18s/it]detected_ratio_thres_value tensor(0.2917, device='cuda:0')
final masked points tensor(17297, device='cuda:0')
before filtering torch.Size([16, 232740])
after filtering torch.Size([8, 232740])
num_ins_points_after_filtering tensor([2393, 1383, 1313,  305, 6442, 1199, 1309, 1764], device='cuda:0')
Working on scene0621_00 class stool
masks_to_be_merged [[0, 1, 3, 51, 53, 54, 55], [2, 27, 28, 29, 30], [5, 32, 33, 35, 36, 37, 39, 41, 44, 45, 47, 48, 50, 52], [9, 11, 34, 38, 40, 42, 43, 46], [18, 19, 20], [21, 22, 24, 26, 85], [23, 25, 80, 82], [56, 57, 58], [68, 69, 70], [73, 75], [77, 78, 79, 81, 83], [88, 89, 90]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/268 [00:00<00:01, 176.63it/s][A
Calculating viewed counts for every point:  13%|█▎        | 36/268 [00:00<00:01, 149.66it/s][A
Calculating viewed counts for every point:  19%|█▉        | 52/268 [00:00<00:01, 151.67it/s][A
Calculating viewed counts for every point:  25%|██▌       | 68/268 [00:00<00:01, 151.36it/s][A
Calculating viewed counts for every point:  31%|███▏      | 84/268 [00:00<00:01, 148.91it/s][A
Calculating viewed counts for every point:  37%|███▋      | 100/268 [00:00<00:01, 149.08it/s][A
Calculating viewed counts for every point:  43%|████▎     | 116/268 [00:00<00:00, 152.02it/s][A
Calculating viewed counts for every point:  49%|████▉     | 132/268 [00:00<00:00, 152.63it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 151/268 [00:00<00:00, 163.07it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 168/268 [00:01<00:00, 157.73it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 185/268 [00:01<00:00, 160.92it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 202/268 [00:01<00:00, 161.02it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 219/268 [00:01<00:00, 154.15it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 236/268 [00:01<00:00, 156.05it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 252/268 [00:01<00:00, 154.23it/s][A
Calculating viewed counts for every point: 100%|██████████| 268/268 [00:01<00:00, 151.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [03:56<01:43,  3.13s/it]detected_ratio_thres_value tensor(0.1395, device='cuda:0')
final masked points tensor(7008, device='cuda:0')
before filtering torch.Size([12, 250821])
after filtering torch.Size([6, 250821])
num_ins_points_after_filtering tensor([1028, 1166,  980, 1128,  614,  951], device='cuda:0')
Working on scene0629_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171], [19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 141, 142, 143, 144, 145], [52, 53], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 146, 147], [64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 149, 150, 151], [111, 115, 121, 123], [133, 134, 135, 136, 137, 138, 140]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 16/275 [00:00<00:01, 158.61it/s][A
Calculating viewed counts for every point:  12%|█▏        | 32/275 [00:00<00:01, 158.41it/s][A
Calculating viewed counts for every point:  18%|█▊        | 50/275 [00:00<00:01, 166.23it/s][A
Calculating viewed counts for every point:  24%|██▍       | 67/275 [00:00<00:01, 166.72it/s][A
Calculating viewed counts for every point:  31%|███       | 84/275 [00:00<00:01, 165.24it/s][A
Calculating viewed counts for every point:  37%|███▋      | 101/275 [00:00<00:01, 158.36it/s][A
Calculating viewed counts for every point:  43%|████▎     | 118/275 [00:00<00:00, 158.88it/s][A
Calculating viewed counts for every point:  49%|████▊     | 134/275 [00:00<00:00, 151.92it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 151/275 [00:00<00:00, 154.48it/s][A
Calculating viewed counts for every point:  61%|██████    | 167/275 [00:01<00:00, 146.75it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 182/275 [00:01<00:00, 146.94it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 198/275 [00:01<00:00, 148.69it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 216/275 [00:01<00:00, 155.21it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 232/275 [00:01<00:00, 152.46it/s][A
Calculating viewed counts for every point:  90%|█████████ | 248/275 [00:01<00:00, 150.97it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 265/275 [00:01<00:00, 154.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [04:02<02:02,  3.84s/it]detected_ratio_thres_value tensor(0.2895, device='cuda:0')
final masked points tensor(9532, device='cuda:0')
before filtering torch.Size([7, 255083])
after filtering torch.Size([2, 255083])
num_ins_points_after_filtering tensor([1349, 7075], device='cuda:0')
Working on scene0633_00 class stool
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 22, 23, 24, 29, 33, 34, 35, 36, 54, 55, 56, 57, 59, 60], [13, 18, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 65, 66], [14, 61], [15, 16], [17, 20, 37, 52, 53, 58, 62, 63, 64], [19, 41, 42, 43], [25, 27, 32], [26, 28, 31]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 30/160 [00:00<00:00, 299.78it/s][A
Calculating viewed counts for every point:  39%|███▉      | 62/160 [00:00<00:00, 306.75it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 93/160 [00:00<00:00, 301.16it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 124/160 [00:00<00:00, 303.53it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 155/160 [00:00<00:00, 293.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [04:03<01:35,  3.09s/it]detected_ratio_thres_value tensor(0.1967, device='cuda:0')
final masked points tensor(8604, device='cuda:0')
before filtering torch.Size([8, 101007])
after filtering torch.Size([3, 101007])
num_ins_points_after_filtering tensor([2660,  146, 2473], device='cuda:0')
Working on scene0643_00 class stool
masks_to_be_merged [[0, 1, 2, 3], [7, 8], [9, 10, 11, 12, 13], [14, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39], [16, 17], [18, 21], [19, 20, 22, 40], [29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/194 [00:00<00:01, 169.81it/s][A
Calculating viewed counts for every point:  18%|█▊        | 35/194 [00:00<00:00, 170.86it/s][A
Calculating viewed counts for every point:  28%|██▊       | 55/194 [00:00<00:00, 182.08it/s][A
Calculating viewed counts for every point:  38%|███▊      | 74/194 [00:00<00:00, 173.72it/s][A
Calculating viewed counts for every point:  47%|████▋     | 92/194 [00:00<00:00, 165.65it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 111/194 [00:00<00:00, 170.81it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 129/194 [00:00<00:00, 164.88it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 147/194 [00:00<00:00, 169.29it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 165/194 [00:00<00:00, 167.92it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 182/194 [00:01<00:00, 166.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [04:05<01:20,  2.68s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(7230, device='cuda:0')
before filtering torch.Size([8, 167360])
after filtering torch.Size([6, 167360])
num_ins_points_after_filtering tensor([ 436,  197, 2270, 2656,    7,  993], device='cuda:0')
Working on scene0644_00 class stool
masks_to_be_merged [[0, 1, 3, 4, 12, 13, 14, 15], [2, 11, 16, 17], [6, 7], [18, 19]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/201 [00:00<00:01, 112.01it/s][A
Calculating viewed counts for every point:  12%|█▏        | 25/201 [00:00<00:01, 116.81it/s][A
Calculating viewed counts for every point:  18%|█▊        | 37/201 [00:00<00:01, 110.25it/s][A
Calculating viewed counts for every point:  24%|██▍       | 49/201 [00:00<00:01, 105.85it/s][A
Calculating viewed counts for every point:  30%|██▉       | 60/201 [00:00<00:01, 106.78it/s][A
Calculating viewed counts for every point:  35%|███▌      | 71/201 [00:00<00:01, 106.04it/s][A
Calculating viewed counts for every point:  41%|████▏     | 83/201 [00:00<00:01, 110.32it/s][A
Calculating viewed counts for every point:  47%|████▋     | 95/201 [00:00<00:00, 107.62it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 107/201 [00:00<00:00, 109.66it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 119/201 [00:01<00:00, 108.93it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 130/201 [00:01<00:00, 108.64it/s][A
Calculating viewed counts for every point:  70%|███████   | 141/201 [00:01<00:00, 108.17it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 152/201 [00:01<00:00, 107.04it/s][A
Calculating viewed counts for every point:  81%|████████  | 163/201 [00:01<00:00, 104.33it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 176/201 [00:01<00:00, 108.43it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 187/201 [00:01<00:00, 105.47it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 198/201 [00:01<00:00, 104.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [04:07<01:15,  2.60s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(3320, device='cuda:0')
before filtering torch.Size([4, 299472])
after filtering torch.Size([2, 299472])
num_ins_points_after_filtering tensor([896, 875], device='cuda:0')
Working on scene0645_00 class stool
masks_to_be_merged [[1, 3, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], [2, 4, 5, 6, 8, 11, 13, 14, 15, 19, 20, 21, 25, 29], [7, 9, 10, 12, 22, 23, 24, 26, 27], [17, 18], [45, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84], [48, 57, 58, 59, 73, 74], [60, 61, 66, 67, 70, 71, 72], [68, 69], [85, 86, 87, 88, 89, 90, 91], [93, 94, 95, 96, 97, 98, 99, 100], [101, 102, 103, 104, 105]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 103.16it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 102.52it/s][A
Calculating viewed counts for every point:   8%|▊         | 34/451 [00:00<00:03, 106.66it/s][A
Calculating viewed counts for every point:  10%|▉         | 45/451 [00:00<00:03, 104.23it/s][A
Calculating viewed counts for every point:  12%|█▏        | 56/451 [00:00<00:03, 101.11it/s][A
Calculating viewed counts for every point:  15%|█▍        | 67/451 [00:00<00:03, 103.49it/s][A
Calculating viewed counts for every point:  17%|█▋        | 78/451 [00:00<00:03, 100.50it/s][A
Calculating viewed counts for every point:  20%|█▉        | 89/451 [00:00<00:03, 95.48it/s] [A
Calculating viewed counts for every point:  22%|██▏       | 99/451 [00:00<00:03, 95.18it/s][A
Calculating viewed counts for every point:  24%|██▍       | 110/451 [00:01<00:03, 98.04it/s][A
Calculating viewed counts for every point:  27%|██▋       | 121/451 [00:01<00:03, 98.96it/s][A
Calculating viewed counts for every point:  29%|██▉       | 132/451 [00:01<00:03, 99.65it/s][A
Calculating viewed counts for every point:  31%|███▏      | 142/451 [00:01<00:03, 99.08it/s][A
Calculating viewed counts for every point:  34%|███▎      | 152/451 [00:01<00:03, 96.55it/s][A
Calculating viewed counts for every point:  36%|███▌      | 162/451 [00:01<00:02, 97.24it/s][A
Calculating viewed counts for every point:  38%|███▊      | 172/451 [00:01<00:02, 97.03it/s][A
Calculating viewed counts for every point:  40%|████      | 182/451 [00:01<00:02, 97.01it/s][A
Calculating viewed counts for every point:  43%|████▎     | 193/451 [00:01<00:02, 99.04it/s][A
Calculating viewed counts for every point:  45%|████▌     | 205/451 [00:02<00:02, 104.75it/s][A
Calculating viewed counts for every point:  48%|████▊     | 217/451 [00:02<00:02, 108.16it/s][A
Calculating viewed counts for every point:  51%|█████     | 228/451 [00:02<00:02, 105.70it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 239/451 [00:02<00:02, 104.80it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 251/451 [00:02<00:01, 106.59it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 262/451 [00:02<00:01, 105.06it/s][A
Calculating viewed counts for every point:  61%|██████    | 273/451 [00:02<00:01, 100.21it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 284/451 [00:02<00:01, 96.83it/s] [A
Calculating viewed counts for every point:  65%|██████▌   | 294/451 [00:02<00:01, 96.65it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 304/451 [00:03<00:01, 97.11it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 315/451 [00:03<00:01, 100.43it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 327/451 [00:03<00:01, 104.26it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 340/451 [00:03<00:01, 109.24it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 352/451 [00:03<00:00, 110.13it/s][A
Calculating viewed counts for every point:  81%|████████  | 364/451 [00:03<00:00, 108.99it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 376/451 [00:03<00:00, 109.40it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 387/451 [00:03<00:00, 108.55it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 398/451 [00:03<00:00, 108.45it/s][A
Calculating viewed counts for every point:  91%|█████████ | 410/451 [00:03<00:00, 111.41it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 422/451 [00:04<00:00, 107.52it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 433/451 [00:04<00:00, 105.37it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 444/451 [00:04<00:00, 99.97it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [04:13<01:44,  3.75s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(13835, device='cuda:0')
before filtering torch.Size([11, 352477])
after filtering torch.Size([9, 352477])
num_ins_points_after_filtering tensor([1842, 2467, 1630, 2883,  771, 1246,  698,  147, 1314], device='cuda:0')
Working on scene0647_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 5, 140, 141, 142, 143, 144, 145, 146, 147], [9, 11, 13, 15, 17, 18, 21, 24, 26, 28, 30, 32, 33, 36, 37, 39, 151, 153], [12, 14], [20, 23, 25, 27, 29], [34, 35, 38, 40, 42, 43, 46, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61], [44, 45, 47, 49, 51, 54, 55], [62, 63, 64, 65, 66, 67, 68, 70], [69, 71, 72, 73, 74, 75], [78, 79], [82, 85, 87, 88, 90, 92, 94, 97, 98, 100, 102, 104, 106, 109, 112, 115, 116], [83, 86], [93, 95, 96, 99, 101, 103, 105, 107, 111, 113, 114, 117, 118, 119, 121, 123, 124, 125]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 183.45it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 181.36it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 60/110 [00:00<00:00, 195.96it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 80/110 [00:00<00:00, 181.14it/s][A
Calculating viewed counts for every point:  91%|█████████ | 100/110 [00:00<00:00, 182.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [04:16<01:32,  3.44s/it]detected_ratio_thres_value tensor(0.2195, device='cuda:0')
final masked points tensor(8888, device='cuda:0')
before filtering torch.Size([12, 196185])
after filtering torch.Size([7, 196185])
num_ins_points_after_filtering tensor([ 382, 1815, 1053, 1257,  612, 1313,  888], device='cuda:0')
Working on scene0648_00 class stool
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 10, 11, 13, 15, 17, 19, 20, 21, 22, 23, 39, 41, 43, 45, 46, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 94, 95, 96], [7, 8, 9, 12, 14, 16, 18, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 47, 48, 54, 57, 111, 112, 113], [28, 29, 30, 31, 105, 108, 109, 110, 114, 115, 116], [75, 76, 78, 79, 80], [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], [97, 98, 99, 100, 101, 103], [118, 119, 120, 121, 122, 123]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 21/419 [00:00<00:01, 202.02it/s][A
Calculating viewed counts for every point:  10%|█         | 42/419 [00:00<00:01, 204.75it/s][A
Calculating viewed counts for every point:  16%|█▌        | 65/419 [00:00<00:01, 215.22it/s][A
Calculating viewed counts for every point:  21%|██        | 87/419 [00:00<00:01, 210.98it/s][A
Calculating viewed counts for every point:  26%|██▌       | 109/419 [00:00<00:01, 208.14it/s][A
Calculating viewed counts for every point:  31%|███▏      | 131/419 [00:00<00:01, 210.83it/s][A
Calculating viewed counts for every point:  37%|███▋      | 153/419 [00:00<00:01, 204.17it/s][A
Calculating viewed counts for every point:  42%|████▏     | 174/419 [00:00<00:01, 202.22it/s][A
Calculating viewed counts for every point:  47%|████▋     | 195/419 [00:00<00:01, 203.65it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 216/419 [00:01<00:01, 193.99it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 240/419 [00:01<00:00, 204.39it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 263/419 [00:01<00:00, 209.90it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 285/419 [00:01<00:00, 205.38it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 308/419 [00:01<00:00, 211.97it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 330/419 [00:01<00:00, 204.60it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 351/419 [00:01<00:00, 200.02it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 375/419 [00:01<00:00, 209.53it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 397/419 [00:01<00:00, 209.82it/s][A
Calculating viewed counts for every point: 100%|██████████| 419/419 [00:02<00:00, 206.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [04:20<01:32,  3.57s/it]detected_ratio_thres_value tensor(0.2432, device='cuda:0')
final masked points tensor(5768, device='cuda:0')
before filtering torch.Size([7, 167915])
after filtering torch.Size([3, 167915])
num_ins_points_after_filtering tensor([2894,  914,  326], device='cuda:0')
Working on scene0651_00 class stool
masks_to_be_merged [[0, 2], [1, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 27/104 [00:00<00:00, 263.17it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 54/104 [00:00<00:00, 232.93it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 78/104 [00:00<00:00, 224.85it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 101/104 [00:00<00:00, 217.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [04:21<01:07,  2.69s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(2334, device='cuda:0')
before filtering torch.Size([2, 88450])
after filtering torch.Size([1, 88450])
num_ins_points_after_filtering tensor([1949], device='cuda:0')
Working on scene0652_00 class stool
masks_to_be_merged [[2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15], [16, 17, 18, 50, 51, 52], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 56, 59, 60, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], [48, 49], [61, 63, 64, 66]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▎       | 34/144 [00:00<00:00, 337.42it/s][A
Calculating viewed counts for every point:  47%|████▋     | 68/144 [00:00<00:00, 302.18it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 100/144 [00:00<00:00, 301.59it/s][A
Calculating viewed counts for every point:  91%|█████████ | 131/144 [00:00<00:00, 294.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [04:22<00:55,  2.31s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(3273, device='cuda:0')
before filtering torch.Size([5, 100286])
after filtering torch.Size([3, 100286])
num_ins_points_after_filtering tensor([ 333, 1825,  412], device='cuda:0')
Working on scene0653_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 21, 22, 34, 35, 118, 120, 121, 123, 125, 128, 129, 131], [7, 9, 18, 23, 24, 25, 112, 113, 114, 115, 117, 122, 124, 126, 127, 130], [15, 16, 17, 19, 20, 110, 116], [26, 28, 30], [27, 29, 31], [36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54], [44, 45], [47, 48], [55, 57], [58, 59, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [66, 71, 86], [69, 70], [83, 87, 88, 89, 90, 92, 93], [84, 85], [91, 94, 96, 97, 98, 99], [101, 102, 103], [105, 106, 107, 108, 109]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 15/388 [00:00<00:02, 148.37it/s][A
Calculating viewed counts for every point:   8%|▊         | 30/388 [00:00<00:02, 146.08it/s][A
Calculating viewed counts for every point:  12%|█▏        | 45/388 [00:00<00:02, 145.05it/s][A
Calculating viewed counts for every point:  15%|█▌        | 60/388 [00:00<00:02, 139.23it/s][A
Calculating viewed counts for every point:  19%|█▉        | 74/388 [00:00<00:02, 137.12it/s][A
Calculating viewed counts for every point:  23%|██▎       | 88/388 [00:00<00:02, 137.07it/s][A
Calculating viewed counts for every point:  26%|██▋       | 102/388 [00:00<00:02, 135.45it/s][A
Calculating viewed counts for every point:  30%|██▉       | 116/388 [00:00<00:02, 134.05it/s][A
Calculating viewed counts for every point:  34%|███▍      | 131/388 [00:00<00:01, 135.93it/s][A
Calculating viewed counts for every point:  37%|███▋      | 145/388 [00:01<00:01, 136.83it/s][A
Calculating viewed counts for every point:  41%|████      | 159/388 [00:01<00:01, 134.51it/s][A
Calculating viewed counts for every point:  45%|████▍     | 174/388 [00:01<00:01, 137.06it/s][A
Calculating viewed counts for every point:  48%|████▊     | 188/388 [00:01<00:01, 137.14it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 203/388 [00:01<00:01, 137.65it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 218/388 [00:01<00:01, 141.06it/s][A
Calculating viewed counts for every point:  60%|██████    | 233/388 [00:01<00:01, 137.58it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 249/388 [00:01<00:00, 142.65it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 264/388 [00:01<00:00, 138.71it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 278/388 [00:02<00:00, 134.39it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 292/388 [00:02<00:00, 134.63it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 306/388 [00:02<00:00, 136.07it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 320/388 [00:02<00:00, 134.04it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 335/388 [00:02<00:00, 138.48it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 349/388 [00:02<00:00, 135.92it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 364/388 [00:02<00:00, 138.67it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 378/388 [00:02<00:00, 138.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [04:27<01:12,  3.15s/it]detected_ratio_thres_value tensor(0.1636, device='cuda:0')
final masked points tensor(9958, device='cuda:0')
before filtering torch.Size([17, 284951])
after filtering torch.Size([8, 284951])
num_ins_points_after_filtering tensor([1253, 1324,  119,  669, 2984, 1424,  166, 1597], device='cuda:0')
Working on scene0655_00 class stool
masks_to_be_merged [[4, 5]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 18/111 [00:00<00:00, 171.19it/s][A
Calculating viewed counts for every point:  32%|███▏      | 36/111 [00:00<00:00, 164.54it/s][A
Calculating viewed counts for every point:  50%|████▉     | 55/111 [00:00<00:00, 172.22it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 73/111 [00:00<00:00, 171.96it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 96/111 [00:00<00:00, 190.06it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [04:28<00:53,  2.44s/it]detected_ratio_thres_value tensor(0.0667, device='cuda:0')
final masked points tensor(2688, device='cuda:0')
before filtering torch.Size([1, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([1306], device='cuda:0')
Working on scene0658_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12, 13], [18, 19]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 18/55 [00:00<00:00, 173.00it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 36/55 [00:00<00:00, 171.33it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 54/55 [00:00<00:00, 174.30it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [04:29<00:39,  1.89s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(7803, device='cuda:0')
before filtering torch.Size([4, 129951])
after filtering torch.Size([4, 129951])
num_ins_points_after_filtering tensor([2016, 2232,  924, 2126], device='cuda:0')
Working on scene0660_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 6, 7, 9], [4, 5, 8, 10, 11], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [29, 30], [31, 35]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 27/105 [00:00<00:00, 269.10it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 54/105 [00:00<00:00, 245.29it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 81/105 [00:00<00:00, 254.03it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [04:29<00:31,  1.57s/it]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(4266, device='cuda:0')
before filtering torch.Size([5, 110960])
after filtering torch.Size([3, 110960])
num_ins_points_after_filtering tensor([1365, 1005, 1515], device='cuda:0')
Working on scene0663_00 class stool
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 56, 57, 58], [2, 32], [17, 18], [27, 28], [29, 30], [31, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], [40, 41, 42]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 21/295 [00:00<00:01, 209.28it/s][A
Calculating viewed counts for every point:  14%|█▍        | 42/295 [00:00<00:01, 200.05it/s][A
Calculating viewed counts for every point:  22%|██▏       | 64/295 [00:00<00:01, 202.58it/s][A
Calculating viewed counts for every point:  29%|██▉       | 85/295 [00:00<00:01, 202.55it/s][A
Calculating viewed counts for every point:  36%|███▌      | 106/295 [00:00<00:00, 197.70it/s][A
Calculating viewed counts for every point:  43%|████▎     | 127/295 [00:00<00:00, 199.91it/s][A
Calculating viewed counts for every point:  50%|█████     | 148/295 [00:00<00:00, 199.60it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 168/295 [00:00<00:00, 182.68it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 187/295 [00:00<00:00, 181.88it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 206/295 [00:01<00:00, 183.00it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 228/295 [00:01<00:00, 192.21it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 248/295 [00:01<00:00, 182.04it/s][A
Calculating viewed counts for every point:  91%|█████████ | 267/295 [00:01<00:00, 183.95it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 290/295 [00:01<00:00, 195.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [04:32<00:34,  1.79s/it]detected_ratio_thres_value tensor(0.2200, device='cuda:0')
final masked points tensor(1760, device='cuda:0')
before filtering torch.Size([7, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([1064,  634], device='cuda:0')
Working on scene0664_00 class stool
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 35/144 [00:00<00:00, 345.37it/s][A
Calculating viewed counts for every point:  51%|█████     | 73/144 [00:00<00:00, 362.23it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 110/144 [00:00<00:00, 326.41it/s][A
Calculating viewed counts for every point: 100%|██████████| 144/144 [00:00<00:00, 329.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [04:32<00:25,  1.42s/it]detected_ratio_thres_value tensor(0.0645, device='cuda:0')
final masked points tensor(206, device='cuda:0')
before filtering torch.Size([1, 44585])
after filtering torch.Size([1, 44585])
num_ins_points_after_filtering tensor([191], device='cuda:0')
Working on scene0665_00 class stool
masks_to_be_merged [[10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 12/104 [00:00<00:00, 116.00it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 117.99it/s][A
Calculating viewed counts for every point:  37%|███▋      | 38/104 [00:00<00:00, 122.71it/s][A
Calculating viewed counts for every point:  49%|████▉     | 51/104 [00:00<00:00, 124.55it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 64/104 [00:00<00:00, 120.30it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 77/104 [00:00<00:00, 121.39it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 90/104 [00:00<00:00, 118.04it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 102/104 [00:00<00:00, 116.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [04:34<00:23,  1.37s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(2746, device='cuda:0')
before filtering torch.Size([1, 252726])
after filtering torch.Size([1, 252726])
num_ins_points_after_filtering tensor([547], device='cuda:0')
Working on scene0670_00 class stool
masks_to_be_merged [[1, 4], [2, 3, 50, 51, 52, 54], [24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36], [29, 37, 39], [40, 41, 47, 48], [45, 46]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 23/303 [00:00<00:01, 220.97it/s][A
Calculating viewed counts for every point:  15%|█▌        | 46/303 [00:00<00:01, 196.38it/s][A
Calculating viewed counts for every point:  22%|██▏       | 68/303 [00:00<00:01, 202.27it/s][A
Calculating viewed counts for every point:  29%|██▉       | 89/303 [00:00<00:01, 205.02it/s][A
Calculating viewed counts for every point:  36%|███▋      | 110/303 [00:00<00:00, 204.96it/s][A
Calculating viewed counts for every point:  44%|████▍     | 133/303 [00:00<00:00, 210.71it/s][A
Calculating viewed counts for every point:  51%|█████     | 155/303 [00:00<00:00, 200.45it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 177/303 [00:00<00:00, 203.66it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 198/303 [00:00<00:00, 200.21it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 219/303 [00:01<00:00, 202.55it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 241/303 [00:01<00:00, 205.93it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 262/303 [00:01<00:00, 205.07it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 284/303 [00:01<00:00, 209.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [04:36<00:25,  1.60s/it]detected_ratio_thres_value tensor(0.0789, device='cuda:0')
final masked points tensor(1777, device='cuda:0')
before filtering torch.Size([6, 176038])
after filtering torch.Size([4, 176038])
num_ins_points_after_filtering tensor([842, 236, 316,   8], device='cuda:0')
Working on scene0671_00 class stool
masks_to_be_merged [[1, 2, 3, 4], [5, 6, 7, 13, 14, 15, 16], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 28/78 [00:00<00:00, 275.14it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 56/78 [00:00<00:00, 277.22it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [04:36<00:19,  1.28s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2443, device='cuda:0')
before filtering torch.Size([3, 81469])
after filtering torch.Size([3, 81469])
num_ins_points_after_filtering tensor([ 553, 1209,  402], device='cuda:0')
Working on scene0678_00 class stool
masks_to_be_merged [[1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29], [7, 33, 34, 35, 36, 37], [18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 92.43it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 93.39it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 86.53it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 90.57it/s][A
Calculating viewed counts for every point:  20%|██        | 50/245 [00:00<00:02, 88.94it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 92.62it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/245 [00:00<00:01, 96.28it/s][A
Calculating viewed counts for every point:  33%|███▎      | 82/245 [00:00<00:01, 96.82it/s][A
Calculating viewed counts for every point:  38%|███▊      | 93/245 [00:00<00:01, 99.75it/s][A
Calculating viewed counts for every point:  42%|████▏     | 104/245 [00:01<00:01, 96.61it/s][A
Calculating viewed counts for every point:  47%|████▋     | 114/245 [00:01<00:01, 94.60it/s][A
Calculating viewed counts for every point:  51%|█████     | 125/245 [00:01<00:01, 94.71it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 135/245 [00:01<00:01, 95.72it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 145/245 [00:01<00:01, 93.82it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 157/245 [00:01<00:00, 97.31it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 169/245 [00:01<00:00, 101.55it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 180/245 [00:01<00:00, 98.82it/s] [A
Calculating viewed counts for every point:  78%|███████▊  | 190/245 [00:01<00:00, 96.43it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 201/245 [00:02<00:00, 98.13it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 212/245 [00:02<00:00, 98.97it/s][A
Calculating viewed counts for every point:  91%|█████████ | 223/245 [00:02<00:00, 99.51it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 233/245 [00:02<00:00, 97.41it/s][A
Calculating viewed counts for every point: 100%|██████████| 245/245 [00:02<00:00, 101.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [04:39<00:26,  1.88s/it]detected_ratio_thres_value tensor(0.1481, device='cuda:0')
final masked points tensor(1760, device='cuda:0')
before filtering torch.Size([3, 364811])
after filtering torch.Size([2, 364811])
num_ins_points_after_filtering tensor([621, 359], device='cuda:0')
Working on scene0684_00 class stool
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31], [18, 19, 20], [22, 24]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 34/87 [00:00<00:00, 332.66it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 69/87 [00:00<00:00, 337.92it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [04:40<00:19,  1.51s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(1467, device='cuda:0')
before filtering torch.Size([3, 41364])
after filtering torch.Size([2, 41364])
num_ins_points_after_filtering tensor([1302,  113], device='cuda:0')
Working on scene0685_00 class stool
masks_to_be_merged [[0, 2, 3, 4, 6, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31], [7, 8, 9], [10, 11, 13], [14, 15], [17, 19], [26, 28, 29]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 28/196 [00:00<00:00, 272.22it/s][A
Calculating viewed counts for every point:  29%|██▊       | 56/196 [00:00<00:00, 246.50it/s][A
Calculating viewed counts for every point:  41%|████▏     | 81/196 [00:00<00:00, 242.11it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 106/196 [00:00<00:00, 236.52it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 133/196 [00:00<00:00, 246.47it/s][A
Calculating viewed counts for every point:  81%|████████  | 159/196 [00:00<00:00, 248.80it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 189/196 [00:00<00:00, 264.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [04:41<00:17,  1.44s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(3823, device='cuda:0')
before filtering torch.Size([6, 132720])
after filtering torch.Size([3, 132720])
num_ins_points_after_filtering tensor([2201,  402,  132], device='cuda:0')
Working on scene0686_00 class stool
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 19/153 [00:00<00:00, 188.95it/s][A
Calculating viewed counts for every point:  25%|██▌       | 39/153 [00:00<00:00, 193.45it/s][A
Calculating viewed counts for every point:  41%|████      | 62/153 [00:00<00:00, 209.22it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 83/153 [00:00<00:00, 206.03it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 107/153 [00:00<00:00, 215.43it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 129/153 [00:00<00:00, 216.90it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 151/153 [00:00<00:00, 211.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [04:42<00:14,  1.31s/it]detected_ratio_thres_value tensor(0.0455, device='cuda:0')
final masked points tensor(1095, device='cuda:0')
before filtering torch.Size([2, 89776])
after filtering torch.Size([2, 89776])
num_ins_points_after_filtering tensor([ 48, 751], device='cuda:0')
Working on scene0689_00 class stool
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0690_00 class stool
masks_to_be_merged [[0, 1, 2, 5, 25, 26], [6, 7, 10, 12, 13, 30, 31], [15, 16, 17, 21, 23]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 31/90 [00:00<00:00, 300.93it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 62/90 [00:00<00:00, 295.45it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [04:43<00:07,  1.13it/s]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(8169, device='cuda:0')
before filtering torch.Size([3, 106050])
after filtering torch.Size([3, 106050])
num_ins_points_after_filtering tensor([3171, 2279, 2638], device='cuda:0')
Working on scene0693_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13], [14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 36/174 [00:00<00:00, 352.10it/s][A
Calculating viewed counts for every point:  41%|████▏     | 72/174 [00:00<00:00, 349.22it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 107/174 [00:00<00:00, 344.79it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 142/174 [00:00<00:00, 346.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [04:44<00:06,  1.19it/s]detected_ratio_thres_value tensor(0.0638, device='cuda:0')
final masked points tensor(646, device='cuda:0')
before filtering torch.Size([3, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([426], device='cuda:0')
Working on scene0695_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [14, 15, 19, 20], [16, 23]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 28/182 [00:00<00:00, 274.18it/s][A
Calculating viewed counts for every point:  31%|███       | 56/182 [00:00<00:00, 263.00it/s][A
Calculating viewed counts for every point:  46%|████▌     | 83/182 [00:00<00:00, 257.70it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 109/182 [00:00<00:00, 234.64it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 137/182 [00:00<00:00, 246.04it/s][A
Calculating viewed counts for every point:  90%|█████████ | 164/182 [00:00<00:00, 251.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [04:45<00:06,  1.16it/s]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(2193, device='cuda:0')
before filtering torch.Size([3, 133418])
after filtering torch.Size([2, 133418])
num_ins_points_after_filtering tensor([ 654, 1291], device='cuda:0')
Working on scene0696_00 class stool
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0697_00 class stool
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39], [11, 50], [14, 15, 16, 17, 18, 19], [20, 21], [40, 44], [41, 42, 43], [45, 46, 47], [48, 49], [52, 53]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 29/288 [00:00<00:00, 288.64it/s][A
Calculating viewed counts for every point:  20%|██        | 58/288 [00:00<00:00, 274.36it/s][A
Calculating viewed counts for every point:  30%|██▉       | 86/288 [00:00<00:00, 268.52it/s][A
Calculating viewed counts for every point:  39%|███▉      | 113/288 [00:00<00:00, 250.75it/s][A
Calculating viewed counts for every point:  48%|████▊     | 139/288 [00:00<00:00, 243.38it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 168/288 [00:00<00:00, 256.83it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 195/288 [00:00<00:00, 260.84it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 224/288 [00:00<00:00, 266.85it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 251/288 [00:00<00:00, 260.30it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 278/288 [00:01<00:00, 249.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [04:47<00:04,  1.11it/s]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(5616, device='cuda:0')
before filtering torch.Size([10, 139300])
after filtering torch.Size([2, 139300])
num_ins_points_after_filtering tensor([3372, 1283], device='cuda:0')
Working on scene0699_00 class stool
masks_to_be_merged [[0, 1, 2, 3, 103, 104], [5, 7, 8, 133, 134, 135, 136], [6, 128, 129], [9, 10, 11, 12, 13, 14, 24, 25, 27, 28, 29, 30, 31, 32], [15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 33, 34, 35, 36, 37, 38, 39, 41, 50, 51, 53, 56, 57, 59, 61, 63, 65, 68, 70, 73, 74, 75, 77], [40, 42, 43, 45, 46, 47, 48, 49, 52, 54, 55, 58, 60, 62, 64, 66, 67, 69, 71, 72, 76, 78, 79, 80], [44, 81, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95], [83, 85, 87], [96, 97, 98], [99, 100, 101], [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120], [118, 121, 122, 123, 124, 125, 127]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/220 [00:00<00:01, 166.55it/s][A
Calculating viewed counts for every point:  16%|█▋        | 36/220 [00:00<00:01, 179.00it/s][A
Calculating viewed counts for every point:  26%|██▌       | 57/220 [00:00<00:00, 192.74it/s][A
Calculating viewed counts for every point:  35%|███▌      | 77/220 [00:00<00:00, 187.99it/s][A
Calculating viewed counts for every point:  44%|████▎     | 96/220 [00:00<00:00, 181.74it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 116/220 [00:00<00:00, 187.20it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 135/220 [00:00<00:00, 177.44it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 153/220 [00:00<00:00, 178.15it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 171/220 [00:00<00:00, 174.58it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 189/220 [00:01<00:00, 174.82it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 210/220 [00:01<00:00, 185.16it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [04:50<00:05,  1.42s/it]detected_ratio_thres_value tensor(0.2286, device='cuda:0')
final masked points tensor(9032, device='cuda:0')
before filtering torch.Size([12, 153041])
after filtering torch.Size([6, 153041])
num_ins_points_after_filtering tensor([1834, 1443,  959,  423, 1102, 3013], device='cuda:0')
Working on scene0700_00 class stool
masks_to_be_merged [[0, 14, 15, 17, 30, 32, 34, 47, 79], [1, 3, 35, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80], [2, 4, 36, 37, 38, 39, 40, 41, 44, 46, 48, 82, 83, 84], [6, 7, 8, 9, 10, 11, 12, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 104, 105, 106], [22, 23, 24, 28, 29], [25, 26, 27], [31, 33], [49, 50, 64, 65, 66, 67, 68], [51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 81, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131], [60, 61], [109, 115, 116, 119], [110, 111, 112, 113]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 17/459 [00:00<00:02, 169.79it/s][A
Calculating viewed counts for every point:   7%|▋         | 34/459 [00:00<00:02, 168.38it/s][A
Calculating viewed counts for every point:  12%|█▏        | 54/459 [00:00<00:02, 181.81it/s][A
Calculating viewed counts for every point:  16%|█▌        | 73/459 [00:00<00:02, 184.22it/s][A
Calculating viewed counts for every point:  20%|██        | 92/459 [00:00<00:02, 180.80it/s][A
Calculating viewed counts for every point:  24%|██▍       | 111/459 [00:00<00:01, 183.80it/s][A
Calculating viewed counts for every point:  28%|██▊       | 130/459 [00:00<00:01, 181.67it/s][A
Calculating viewed counts for every point:  33%|███▎      | 151/459 [00:00<00:01, 186.54it/s][A
Calculating viewed counts for every point:  37%|███▋      | 170/459 [00:00<00:01, 184.38it/s][A
Calculating viewed counts for every point:  41%|████      | 189/459 [00:01<00:01, 182.68it/s][A
Calculating viewed counts for every point:  45%|████▌     | 208/459 [00:01<00:01, 182.57it/s][A
Calculating viewed counts for every point:  49%|████▉     | 227/459 [00:01<00:01, 184.15it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 246/459 [00:01<00:01, 183.49it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 265/459 [00:01<00:01, 179.33it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 283/459 [00:01<00:01, 175.49it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 302/459 [00:01<00:00, 178.27it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 320/459 [00:01<00:00, 178.74it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 341/459 [00:01<00:00, 185.89it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 360/459 [00:01<00:00, 182.45it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 379/459 [00:02<00:00, 176.38it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 397/459 [00:02<00:00, 174.25it/s][A
Calculating viewed counts for every point:  90%|█████████ | 415/459 [00:02<00:00, 174.99it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 434/459 [00:02<00:00, 178.01it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 452/459 [00:02<00:00, 177.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [04:54<00:06,  2.23s/it]detected_ratio_thres_value tensor(0.1628, device='cuda:0')
final masked points tensor(9458, device='cuda:0')
before filtering torch.Size([12, 167755])
after filtering torch.Size([4, 167755])
num_ins_points_after_filtering tensor([ 448, 1710, 2152, 3389], device='cuda:0')
Working on scene0701_00 class stool
masks_to_be_merged [[0, 45], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [27, 29, 32]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▋      | 37/102 [00:00<00:00, 367.83it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 74/102 [00:00<00:00, 332.83it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [04:55<00:03,  1.85s/it]detected_ratio_thres_value tensor(0.4146, device='cuda:0')
final masked points tensor(3160, device='cuda:0')
before filtering torch.Size([3, 73550])
after filtering torch.Size([1, 73550])
num_ins_points_after_filtering tensor([3155], device='cuda:0')
Working on scene0702_00 class stool
masks_to_be_merged [[0, 1], [2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 30/84 [00:00<00:00, 290.48it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 61/84 [00:00<00:00, 295.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [04:56<00:01,  1.48s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(1247, device='cuda:0')
before filtering torch.Size([2, 54769])
after filtering torch.Size([2, 54769])
num_ins_points_after_filtering tensor([ 143, 1010], device='cuda:0')
Working on scene0704_00 class stool
masks_to_be_merged [[1, 2, 4, 5], [7, 9, 10], [15, 16, 17, 18], [20, 21, 22, 23, 24, 60, 61, 62, 91, 92, 93, 94], [33, 34], [43, 44, 45], [68, 69, 70], [71, 72, 73, 75, 77, 84, 85], [74, 76, 78, 79, 81, 82, 83, 86, 87, 88, 89, 90], [109, 110]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/241 [00:00<00:01, 186.62it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/241 [00:00<00:01, 163.48it/s][A
Calculating viewed counts for every point:  23%|██▎       | 56/241 [00:00<00:01, 167.11it/s][A
Calculating viewed counts for every point:  31%|███       | 75/241 [00:00<00:00, 172.84it/s][A
Calculating viewed counts for every point:  39%|███▊      | 93/241 [00:00<00:00, 169.93it/s][A
Calculating viewed counts for every point:  47%|████▋     | 113/241 [00:00<00:00, 178.71it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 131/241 [00:00<00:00, 165.75it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 150/241 [00:00<00:00, 171.14it/s][A
Calculating viewed counts for every point:  71%|███████   | 171/241 [00:00<00:00, 181.35it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 190/241 [00:01<00:00, 178.97it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 209/241 [00:01<00:00, 178.18it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 230/241 [00:01<00:00, 181.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [04:59<00:00,  1.94s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [04:59<00:00,  2.11s/it]
detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(18958, device='cuda:0')
before filtering torch.Size([10, 183029])
after filtering torch.Size([6, 183029])
num_ins_points_after_filtering tensor([1755, 1608, 3428, 1196,  505,  124], device='cuda:0')
Processing class: stool
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<02:33,  1.09s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:26,  1.62it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:00,  2.29it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:49,  2.77it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:48,  2.85it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:45,  2.98it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:45,  2.96it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:02<00:36,  3.65it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:41,  3.17it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:37,  3.47it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:35,  3.71it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:04<00:31,  4.07it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:04<00:30,  4.16it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:29,  4.34it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:30,  4.14it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:04<00:26,  4.82it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:05<00:29,  4.31it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:05<00:26,  4.75it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:27,  4.47it/s]DEBUG best_match_after_iou_check [tensor(83), tensor(131), tensor(208), tensor(158), tensor(128), tensor(155), tensor(104), tensor(61), tensor(131)]
DEBUG uniques tensor([ 61,  83, 104, 128, 131, 155, 158, 208]) tensor([1, 1, 1, 1, 2, 1, 1, 1])
Matched 1 times with 61
Matched 1 times with 83
Matched 1 times with 104
Matched 1 times with 128
Matched 2 times with 131
Merge stage2 masks
Matched 1 times with 155
Matched 1 times with 158
Matched 1 times with 208
iou for matched labels tensor([0.1988, 0.2793, 0.5239, 0.2712, 0.5887, 0.5395, 0.6660, 0.7503])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'folded_chair', 'desk', 'chair', 'couch', 'folded_chair']
Clip similarities: [0.7080078125, 0.7080078125, 0.7080078125, 0.7080078125, 0.6826171875, 0.8369140625, 0.6962890625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(34), tensor(114), tensor(16), tensor(7)]
DEBUG uniques tensor([  7,  16,  34, 114]) tensor([1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 16
Matched 1 times with 34
Matched 1 times with 114
iou for matched labels tensor([0.7338, 0.4372, 0.2920, 0.3183])
Matched labels: ['folded_chair', 'chair', 'folded_chair', 'chair']
Clip similarities: [0.7080078125, 0.8369140625, 0.7080078125, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(56)]
DEBUG uniques tensor([56]) tensor([1])
Matched 1 times with 56
iou for matched labels tensor([0.6009])
Matched labels: ['sofa_chair']
Clip similarities: [0.69384765625]
DEBUG best_match_after_iou_check [tensor(129), tensor(193), tensor(34)]
DEBUG uniques tensor([ 34, 129, 193]) tensor([1, 1, 1])
Matched 1 times with 34
Matched 1 times with 129
Matched 1 times with 193
iou for matched labels tensor([0.7452, 0.6978, 0.7703])
Matched labels: ['mini_fridge', 'bin', 'couch']
Clip similarities: [0.63720703125, 0.65234375, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(101), tensor(226), tensor(131), tensor(64), tensor(55)]
DEBUG uniques tensor([ 55,  64, 101, 131, 226]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 55
Matched 1 times with 64
Matched 1 times with 101
Matched 1 times with 131
Matched 1 times with 226
iou for matched labels tensor([0.6382, 0.7384, 0.2474, 0.6614, 0.3045])
Matched labels: ['folded_chair', 'office_chair', 'folded_chair', 'folded_chair', 'folded_chair']
Clip similarities: [0.7080078125, 0.76025390625, 0.7080078125, 0.7080078125, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(220), tensor(26), tensor(167), tensor(135)]
DEBUG uniques tensor([ 26, 135, 167, 220]) tensor([1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 135
Matched 1 times with 167
Matched 1 times with 220
iou for matched labels tensor([0.2383, 0.5641, 0.3264, 0.4933])
Matched labels: ['folded_chair', 'chair', 'closet_door', 'cup']
Clip similarities: [0.7080078125, 0.8369140625, 0.57275390625, 0.67138671875]
DEBUG best_match_after_iou_check [tensor(142), tensor(232), tensor(69), tensor(57)]
DEBUG uniques tensor([ 57,  69, 142, 232]) tensor([1, 1, 1, 1])
Matched 1 times with 57
Matched 1 times with 69
Matched 1 times with 142
Matched 1 times with 232
iou for matched labels tensor([0.9378, 0.7188, 0.8140, 0.3761])
Matched labels: ['end_table', 'couch', 'sofa_chair', 'couch']
Clip similarities: [0.7529296875, 0.6962890625, 0.69384765625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(52), tensor(84), tensor(84)]
DEBUG uniques tensor([52, 84]) tensor([1, 2])
Matched 1 times with 52
Matched 2 times with 84
Merge stage2 masks
iou for matched labels tensor([0.4502, 0.0195])
Matched labels: ['folded_chair', 'door']
Clip similarities: [0.7080078125, 0.68115234375]
DEBUG best_match_after_iou_check [tensor(10), tensor(49), tensor(226), tensor(226), tensor(336)]
DEBUG uniques tensor([ 10,  49, 226, 336]) tensor([1, 1, 2, 1])
Matched 1 times with 10
Matched 1 times with 49
Matched 2 times with 226
Merge stage2 masks
Matched 1 times with 336
iou for matched labels tensor([0.5578, 0.4610, 0.2761, 0.3148])
Matched labels: ['sofa_chair', 'sofa_chair', 'couch', 'couch']
Clip similarities: [0.69384765625, 0.69384765625, 0.6962890625, 0.6962890625]
DEBUG best_match_after_iou_check [tensor(134), tensor(36)]
DEBUG uniques tensor([ 36, 134]) tensor([1, 1])
Matched 1 times with 36
Matched 1 times with 134
iou for matched labels tensor([0.2406, 0.8304])
Matched labels: ['monitor', 'bin']
Clip similarities: [0.64453125, 0.65234375]
DEBUG best_match_after_iou_check [tensor(64), tensor(33), tensor(1)]
DEBUG uniques tensor([ 1, 33, 64]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 33
Matched 1 times with 64
iou for matched labels tensor([0.8024, 0.7840, 0.7634])
Matched labels: ['folded_chair', 'folded_chair', 'table']
Clip similarities: [0.7080078125, 0.7080078125, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(32), tensor(3), tensor(38)]
DEBUG uniques tensor([ 3, 32, 38]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 32
Matched 1 times with 38
iou for matched labels tensor([0.7439, 0.5231, 0.0017])
Matched labels: ['ironing_board', 'radiator', 'shower_floor']
Clip similarities: [0.623046875, 0.693359375, 0.5849609375]
DEBUG best_match_after_iou_check [tensor(145), tensor(46)]
DEBUG uniques tensor([ 46, 145]) tensor([1, 1])
Matched 1 times with 46
Matched 1 times with 145
iou for matched labels tensor([0.0289, 0.2903])
Matched labels: ['doorframe', 'toilet']
Clip similarities: [0.6494140625, 0.75244140625]
DEBUG best_match_after_iou_check [tensor(83), tensor(38)]
DEBUG uniques tensor([38, 83]) tensor([1, 1])
Matched 1 times with 38
Matched 1 times with 83
iou for matched labels tensor([0.1389, 0.2501])
Matched labels: ['desk', 'folded_chair']
Clip similarities: [0.6826171875, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(143), tensor(242), tensor(82), tensor(94), tensor(26)]
DEBUG uniques tensor([ 26,  82,  94, 143, 242]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 82
Matched 1 times with 94
Matched 1 times with 143
Matched 1 times with 242
iou for matched labels tensor([0.5970, 0.3276, 0.4902, 0.3777, 0.1294])
Matched labels: ['folded_chair', 'desk', 'desk', 'chair', 'chair']
Clip similarities: [0.7080078125, 0.6826171875, 0.6826171875, 0.8369140625, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(2), tensor(59), tensor(21), tensor(21)]
DEBUG uniques tensor([ 2, 21, 59]) tensor([1, 2, 1])
Matched 1 times with 2
Matched 2 times with 21
Merge stage2 masks
Matched 1 times with 59
iou for matched labels tensor([0.3367, 0.8448, 0.8272])
Matched labels: ['toilet', 'chair', 'mat']
Clip similarities: [0.75244140625, 0.8369140625, 0.64501953125]
DEBUG best_match_after_iou_check [tensor(49), tensor(81), tensor(67), tensor(73), tensor(45), tensor(130)]
DEBUG uniques tensor([ 45,  49,  67,  73,  81, 130]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 45
Matched 1 times with 49
Matched 1 times with 67
Matched 1 times with 73
Matched 1 times with 81
Matched 1 times with 130
iou for matched labels tensor([0.4950, 0.4312, 0.2512, 0.1233, 0.4757, 0.6682])
Matched labels: ['office_chair', 'chair', 'office_chair', 'office_chair', 'office_chair', 'folded_chair']
Clip similarities: [0.76025390625, 0.8369140625, 0.76025390625, 0.76025390625, 0.76025390625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(146), tensor(146), tensor(96)]
DEBUG uniques tensor([ 96, 146]) tensor([1, 2])
Matched 1 times with 96
Matched 2 times with 146
Merge stage2 masks
iou for matched labels tensor([0.3165, 0.4007])
Matched labels: ['laundry_hamper', 'laundry_hamper']
Clip similarities: [0.6533203125, 0.6533203125]
DEBUG best_match_after_iou_check [tensor(51), tensor(51), tensor(1), tensor(81), tensor(288), tensor(124)]
DEBUG uniques tensor([  1,  51,  81, 124, 288]) tensor([1, 2, 1, 1, 1])
Matched 1 times with 1
Matched 2 times with 51
Merge stage2 masks
Matched 1 times with 81
Matched 1 times with 124
Matched 1 times with 288
iou for matched labels tensor([0.2928, 0.1905, 0.0895, 0.1230, 0.2309])
Matched labels: ['sofa_chair', 'ironing_board', 'chair', 'closet', 'bag']
Clip similarities: [0.69384765625, 0.623046875, 0.8369140625, 0.65185546875, 0.67431640625]
DEBUG best_match_after_iou_check [tensor(18), tensor(20)]
Select thresholds for refinement:  14%|█▍        | 20/142 [00:05<00:24,  5.00it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:05<00:26,  4.65it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:06<00:22,  5.37it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:06<00:21,  5.54it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:26,  4.44it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:30,  3.78it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:07<00:30,  3.80it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:07<00:25,  4.58it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:07<00:28,  3.98it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:07<00:31,  3.56it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:08<00:35,  3.16it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:08<00:33,  3.35it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:08<00:30,  3.59it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:09<00:30,  3.58it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:09<00:35,  3.00it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:09<00:33,  3.18it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:10<00:35,  3.02it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:10<00:32,  3.23it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:10<00:30,  3.39it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:11<00:29,  3.50it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:11<00:26,  3.86it/s]DEBUG uniques tensor([18, 20]) tensor([1, 1])
Matched 1 times with 18
Matched 1 times with 20
iou for matched labels tensor([0.7987, 0.0024])
Matched labels: ['box', 'shower_floor']
Clip similarities: [0.6376953125, 0.5849609375]
DEBUG best_match_after_iou_check [tensor(237), tensor(215)]
DEBUG uniques tensor([215, 237]) tensor([1, 1])
Matched 1 times with 215
Matched 1 times with 237
iou for matched labels tensor([0.4551, 0.4059])
Matched labels: ['table', 'chair']
Clip similarities: [0.7685546875, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(27), tensor(109)]
DEBUG uniques tensor([ 27, 109]) tensor([1, 1])
Matched 1 times with 27
Matched 1 times with 109
iou for matched labels tensor([0.3453, 0.6678])
Matched labels: ['shower_floor', 'scale']
Clip similarities: [0.5849609375, 0.68505859375]
DEBUG best_match_after_iou_check [tensor(126)]
DEBUG uniques tensor([126]) tensor([1])
Matched 1 times with 126
iou for matched labels tensor([0.2807])
Matched labels: ['box']
Clip similarities: [0.6376953125]
DEBUG best_match_after_iou_check [tensor(124), tensor(104), tensor(183), tensor(143)]
DEBUG uniques tensor([104, 124, 143, 183]) tensor([1, 1, 1, 1])
Matched 1 times with 104
Matched 1 times with 124
Matched 1 times with 143
Matched 1 times with 183
iou for matched labels tensor([0.2032, 0.6360, 0.2573, 0.4661])
Matched labels: ['office_chair', 'chair', 'folded_chair', 'office_chair']
Clip similarities: [0.76025390625, 0.8369140625, 0.7080078125, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(21), tensor(32), tensor(109), tensor(63), tensor(15)]
DEBUG uniques tensor([ 15,  21,  32,  63, 109]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 21
Matched 1 times with 32
Matched 1 times with 63
Matched 1 times with 109
iou for matched labels tensor([0.8225, 0.7860, 0.7464, 0.3933, 0.8054])
Matched labels: ['stool', 'stool', 'ottoman', 'desk', 'sofa_chair']
Clip similarities: [1.0, 1.0, 0.69873046875, 0.6826171875, 0.69384765625]
DEBUG best_match_after_iou_check [tensor(12), tensor(25)]
DEBUG uniques tensor([12, 25]) tensor([1, 1])
Matched 1 times with 12
Matched 1 times with 25
iou for matched labels tensor([0.4495, 0.5445])
Matched labels: ['bed', 'folded_chair']
Clip similarities: [0.58203125, 0.7080078125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(6), tensor(136), tensor(35), tensor(218), tensor(101), tensor(108)]
DEBUG uniques tensor([  6,  35, 101, 108, 136, 218]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 35
Matched 1 times with 101
Matched 1 times with 108
Matched 1 times with 136
Matched 1 times with 218
iou for matched labels tensor([0.3968, 0.5130, 0.0657, 0.3779, 0.3092, 0.7099])
Matched labels: ['shoe', 'stool', 'shelf', 'coffee_table', 'bag', 'pillow']
Clip similarities: [0.7158203125, 1.0, 0.71826171875, 0.7060546875, 0.67431640625, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(102), tensor(38), tensor(278), tensor(392)]
DEBUG uniques tensor([ 38, 102, 278, 392]) tensor([1, 1, 1, 1])
Matched 1 times with 38
Matched 1 times with 102
Matched 1 times with 278
Matched 1 times with 392
iou for matched labels tensor([0.6251, 0.3303, 0.2450, 0.5096])
Matched labels: ['stool', 'chair', 'chair', 'stove']
Clip similarities: [1.0, 0.8369140625, 0.8369140625, 0.72705078125]
DEBUG best_match_after_iou_check [tensor(390), tensor(141)]
DEBUG uniques tensor([141, 390]) tensor([1, 1])
Matched 1 times with 141
Matched 1 times with 390
iou for matched labels tensor([0.2096, 0.5058])
Matched labels: ['cart', 'crate']
Clip similarities: [0.70166015625, 0.701171875]
DEBUG best_match_after_iou_check [tensor(30), tensor(99), tensor(110), tensor(89)]
DEBUG uniques tensor([ 30,  89,  99, 110]) tensor([1, 1, 1, 1])
Matched 1 times with 30
Matched 1 times with 89
Matched 1 times with 99
Matched 1 times with 110
iou for matched labels tensor([0.5836, 0.3161, 0.5493, 0.3872])
Matched labels: ['bed', 'office_chair', 'office_chair', 'bed']
Clip similarities: [0.58203125, 0.76025390625, 0.76025390625, 0.58203125]
DEBUG best_match_after_iou_check [tensor(60), tensor(58)]
DEBUG uniques tensor([58, 60]) tensor([1, 1])
Matched 1 times with 58
Matched 1 times with 60
iou for matched labels tensor([0.6752, 0.6447])
Matched labels: ['desk', 'closet_door']
Clip similarities: [0.6826171875, 0.57275390625]
DEBUG best_match_after_iou_check [tensor(77), tensor(106)]
DEBUG uniques tensor([ 77, 106]) tensor([1, 1])
Matched 1 times with 77
Matched 1 times with 106
iou for matched labels tensor([0.6415, 0.3265])
Matched labels: ['folded_chair', 'bed']
Clip similarities: [0.7080078125, 0.58203125]
DEBUG best_match_after_iou_check [tensor(429), tensor(302), tensor(157), tensor(5), tensor(52)]
DEBUG uniques tensor([  5,  52, 157, 302, 429]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 52
Matched 1 times with 157
Matched 1 times with 302
Matched 1 times with 429
iou for matched labels tensor([0.3488, 0.0282, 0.6605, 0.7791, 0.5787])
Matched labels: ['monitor', 'furniture', 'chair', 'ladder', 'chair']
Clip similarities: [0.64453125, 0.77783203125, 0.8369140625, 0.72607421875, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(85), tensor(276)]
DEBUG uniques tensor([ 85, 276]) tensor([1, 1])
Matched 1 times with 85
Matched 1 times with 276
iou for matched labels tensor([0.5780, 0.4702])
Matched labels: ['ladder', 'furniture']
Clip similarities: [0.72607421875, 0.77783203125]
DEBUG best_match_after_iou_check [tensor(0), tensor(96), tensor(45), tensor(16), tensor(50), tensor(74), tensor(79), tensor(49), tensor(10)]
DEBUG uniques tensor([ 0, 10, 16, 45, 49, 50, 74, 79, 96]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 10
Matched 1 times with 16
Matched 1 times with 45
Matched 1 times with 49
Matched 1 times with 50
Matched 1 times with 74
Matched 1 times with 79
Matched 1 times with 96
iou for matched labels tensor([0.6172, 0.6054, 0.5239, 0.5109, 0.1335, 0.1849, 0.7333, 0.5971, 0.3109])
Matched labels: ['desk', 'bar', 'folded_chair', 'chair', 'chair', 'chair', 'desk', 'monitor', 'chair']
Clip similarities: [0.6826171875, 0.65673828125, 0.7080078125, 0.8369140625, 0.8369140625, 0.8369140625, 0.6826171875, 0.64453125, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(12), tensor(12), tensor(14)]
DEBUG uniques tensor([12, 14]) tensor([2, 1])
Matched 2 times with 12
Merge stage2 masks
Matched 1 times with 14
iou for matched labels tensor([0.4058, 0.6042])
Matched labels: ['table', 'table']
Clip similarities: [0.7685546875, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(6), tensor(113), tensor(123), tensor(244), tensor(154), tensor(105)]
DEBUG uniques tensor([  6, 105, 113, 123, 154, 244]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 105
Matched 1 times with 113
Matched 1 times with 123
Matched 1 times with 154
Matched 1 times with 244
iou for matched labels tensor([0.5277, 0.3509, 0.3481, 0.0167, 0.0480, 0.0862])
Matched labels: ['folded_chair', 'file_cabinet', 'storage_bin', 'shelf', 'mat', 'shelf']
Clip similarities: [0.7080078125, 0.65234375, 0.68603515625, 0.71826171875, 0.64501953125, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(3), tensor(2), tensor(253), tensor(166), tensor(163)]
DEBUG uniques tensor([  2,   3, 163, 166, 253]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 3
Matched 1 times with 163
Matched 1 times with 166
Matched 1 times with 253
iou for matched labels tensor([0.7629, 0.6960, 0.0134, 0.5424, 0.0224])
Matched labels: ['table', 'chair', 'chair', 'chair', 'folded_chair']
Clip similarities: [0.7685546875, 0.8369140625, 0.8369140625, 0.8369140625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(97), tensor(126), tensor(93)]
DEBUG uniques tensor([ 93,  97, 126]) tensor([1, 1, 1])
Matched 1 times with 93
Matched 1 times with 97
Matched 1 times with 126
iou for matched labels tensor([0.6175, 0.6456, 0.7940])
Matched labels: ['folded_chair', 'desk', 'bed']
Clip similarities: [0.7080078125, 0.6826171875, 0.58203125]
DEBUG best_match_after_iou_check [tensor(31), tensor(37)]
DEBUG uniques tensor([31, 37]) tensor([1, 1])
Matched 1 times with 31
Select thresholds for refinement:  29%|██▉       | 41/142 [00:11<00:22,  4.40it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:11<00:24,  4.09it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:11<00:25,  3.87it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:12<00:29,  3.30it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:12<00:25,  3.80it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:12<00:22,  4.22it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:12<00:22,  4.26it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:13<00:25,  3.67it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:13<00:26,  3.55it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:13<00:24,  3.83it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:13<00:19,  4.64it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:14<00:20,  4.34it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:14<00:22,  4.04it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:14<00:21,  4.14it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:14<00:18,  4.72it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:15<00:19,  4.37it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:15<00:20,  4.12it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:15<00:19,  4.33it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:15<00:18,  4.59it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:16<00:18,  4.53it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:16<00:19,  4.18it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:16<00:20,  3.99it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:16<00:16,  4.65it/s]Matched 1 times with 37
iou for matched labels tensor([0.6806, 0.8574])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.7080078125, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(172), tensor(88)]
DEBUG uniques tensor([ 88, 172]) tensor([1, 1])
Matched 1 times with 88
Matched 1 times with 172
iou for matched labels tensor([0.2779, 0.8356])
Matched labels: ['chair', 'decoration']
Clip similarities: [0.8369140625, 0.6787109375]
DEBUG best_match_after_iou_check [tensor(56), tensor(55)]
DEBUG uniques tensor([55, 56]) tensor([1, 1])
Matched 1 times with 55
Matched 1 times with 56
iou for matched labels tensor([0.3487, 0.1480])
Matched labels: ['file_cabinet', 'bin']
Clip similarities: [0.65234375, 0.65234375]
DEBUG best_match_after_iou_check [tensor(280), tensor(111), tensor(15), tensor(129), tensor(43), tensor(235)]
DEBUG uniques tensor([ 15,  43, 111, 129, 235, 280]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 43
Matched 1 times with 111
Matched 1 times with 129
Matched 1 times with 235
Matched 1 times with 280
iou for matched labels tensor([0.4186, 0.0284, 0.1941, 0.5945, 0.1966, 0.6387])
Matched labels: ['shelf', 'door', 'chair', 'ironing_board', 'ironing_board', 'soap_dish']
Clip similarities: [0.71826171875, 0.68115234375, 0.8369140625, 0.623046875, 0.623046875, 0.6572265625]
DEBUG best_match_after_iou_check [tensor(79)]
DEBUG uniques tensor([79]) tensor([1])
Matched 1 times with 79
iou for matched labels tensor([0.6378])
Matched labels: ['chair']
Clip similarities: [0.8369140625]
DEBUG best_match_after_iou_check [tensor(17), tensor(1), tensor(99), tensor(99)]
DEBUG uniques tensor([ 1, 17, 99]) tensor([1, 1, 2])
Matched 1 times with 1
Matched 1 times with 17
Matched 2 times with 99
Merge stage2 masks
iou for matched labels tensor([0.8322, 0.8786, 0.8540])
Matched labels: ['folded_chair', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.7080078125, 0.69384765625, 0.69384765625]
DEBUG best_match_after_iou_check [tensor(159), tensor(125)]
DEBUG uniques tensor([125, 159]) tensor([1, 1])
Matched 1 times with 125
Matched 1 times with 159
iou for matched labels tensor([0.1537, 0.2420])
Matched labels: ['refrigerator', 'bar']
Clip similarities: [0.60400390625, 0.65673828125]
DEBUG best_match_after_iou_check [tensor(20), tensor(10), tensor(75), tensor(194)]
DEBUG uniques tensor([ 10,  20,  75, 194]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 20
Matched 1 times with 75
Matched 1 times with 194
iou for matched labels tensor([0.3790, 0.8561, 0.5631, 0.5418])
Matched labels: ['couch', 'coffee_table', 'couch', 'stair_rail']
Clip similarities: [0.6962890625, 0.7060546875, 0.6962890625, 0.6357421875]
DEBUG best_match_after_iou_check [tensor(12), tensor(42), tensor(21)]
DEBUG uniques tensor([12, 21, 42]) tensor([1, 1, 1])
Matched 1 times with 12
Matched 1 times with 21
Matched 1 times with 42
iou for matched labels tensor([0.8252, 0.5855, 0.5645])
Matched labels: ['coffee_table', 'bench', 'bench']
Clip similarities: [0.7060546875, 0.74267578125, 0.74267578125]
DEBUG best_match_after_iou_check [tensor(63)]
DEBUG uniques tensor([63]) tensor([1])
Matched 1 times with 63
iou for matched labels tensor([0.4018])
Matched labels: ['file_cabinet']
Clip similarities: [0.65234375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(69), tensor(63), tensor(62), tensor(116)]
DEBUG uniques tensor([ 62,  63,  69, 116]) tensor([1, 1, 1, 1])
Matched 1 times with 62
Matched 1 times with 63
Matched 1 times with 69
Matched 1 times with 116
iou for matched labels tensor([0.7623, 0.4194, 0.4487, 0.3739])
Matched labels: ['cart', 'furniture', 'furniture', 'shelf']
Clip similarities: [0.70166015625, 0.77783203125, 0.77783203125, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(53), tensor(118), tensor(0), tensor(37), tensor(37), tensor(99)]
DEBUG uniques tensor([  0,  37,  53,  99, 118]) tensor([1, 2, 1, 1, 1])
Matched 1 times with 0
Matched 2 times with 37
Merge stage2 masks
Matched 1 times with 53
Matched 1 times with 99
Matched 1 times with 118
iou for matched labels tensor([0.5418, 0.0972, 0.0000, 0.0138, 0.3323])
Matched labels: ['office_chair', 'chair', 'whiteboard', 'bottle', 'fan']
Clip similarities: [0.76025390625, 0.8369140625, 0.564453125, 0.68994140625, 0.67333984375]
DEBUG best_match_after_iou_check [tensor(126), tensor(106)]
DEBUG uniques tensor([106, 126]) tensor([1, 1])
Matched 1 times with 106
Matched 1 times with 126
iou for matched labels tensor([0.4763, 0.2493])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.7080078125, 0.7080078125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(106), tensor(13), tensor(106), tensor(64), tensor(35), tensor(22), tensor(75)]
DEBUG uniques tensor([ 13,  22,  35,  64,  75, 106]) tensor([1, 1, 1, 1, 1, 2])
Matched 1 times with 13
Matched 1 times with 22
Matched 1 times with 35
Matched 1 times with 64
Matched 1 times with 75
Matched 2 times with 106
Merge stage2 masks
iou for matched labels tensor([0.3464, 0.8701, 0.7985, 0.5729, 0.3789, 0.4368])
Matched labels: ['folded_chair', 'folded_chair', 'folded_chair', 'folded_chair', 'folded_chair', 'chair']
Clip similarities: [0.7080078125, 0.7080078125, 0.7080078125, 0.7080078125, 0.7080078125, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(2), tensor(80), tensor(80), tensor(32), tensor(24), tensor(196), tensor(72), tensor(168)]
DEBUG uniques tensor([  2,  24,  32,  72,  80, 168, 196]) tensor([1, 1, 1, 1, 2, 1, 1])
Matched 1 times with 2
Matched 1 times with 24
Matched 1 times with 32
Matched 1 times with 72
Matched 2 times with 80
Merge stage2 masks
Matched 1 times with 168
Matched 1 times with 196
iou for matched labels tensor([0.7100, 0.5643, 0.5673, 0.0445, 0.8939, 0.3712, 0.4653])
Matched labels: ['desk', 'bed', 'bed', 'person', 'dresser', 'person', 'desk']
Clip similarities: [0.6826171875, 0.58203125, 0.58203125, 0.68115234375, 0.689453125, 0.68115234375, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(191), tensor(104), tensor(24)]
DEBUG uniques tensor([ 24, 104, 191]) tensor([1, 1, 1])
Matched 1 times with 24
Matched 1 times with 104
Matched 1 times with 191
iou for matched labels tensor([0.4611, 0.5964, 0.4476])
Matched labels: ['crate', 'kitchen_counter', 'case_of_water_bottles']
Clip similarities: [0.701171875, 0.62890625, 0.61474609375]
DEBUG best_match_after_iou_check [tensor(14)]
DEBUG uniques tensor([14]) tensor([1])
Matched 1 times with 14
iou for matched labels tensor([0.8319])
Matched labels: ['crate']
Clip similarities: [0.701171875]
DEBUG best_match_after_iou_check [tensor(60), tensor(20), tensor(81)]
DEBUG uniques tensor([20, 60, 81]) tensor([1, 1, 1])
Matched 1 times with 20
Matched 1 times with 60
Matched 1 times with 81
iou for matched labels tensor([0.4761, 0.6886, 0.7836])
Matched labels: ['office_chair', 'office_chair', 'folded_chair']
Clip similarities: [0.76025390625, 0.76025390625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(13), tensor(3), tensor(73)]
DEBUG uniques tensor([ 3, 13, 73]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 13
Matched 1 times with 73
iou for matched labels tensor([0.8452, 0.2324, 0.6849])
Matched labels: ['folded_chair', 'desk', 'furniture']
Clip similarities: [0.7080078125, 0.6826171875, 0.77783203125]
DEBUG best_match_after_iou_check [tensor(178), tensor(86)]
DEBUG uniques tensor([ 86, 178]) tensor([1, 1])
Matched 1 times with 86
Matched 1 times with 178
iou for matched labels tensor([0.6888, 0.6854])
Matched labels: ['bar', 'refrigerator']
Clip similarities: [0.65673828125, 0.60400390625]
DEBUG best_match_after_iou_check [tensor(30)]
DEBUG uniques tensor([30]) tensor([1])
Matched 1 times with 30
iou for matched labels tensor([0.0752])
Matched labels: ['toilet']
Clip similarities: [0.75244140625]
DEBUG best_match_after_iou_check [tensor(6), tensor(151), tensor(177), tensor(143)]
DEBUG uniques tensor([  6, 143, 151, 177]) tensor([1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 143
Matched 1 times with 151
Matched 1 times with 177
iou for matched labels tensor([0.3201, 0.1583, 0.5687, 0.2227])
Matched labels: Select thresholds for refinement:  45%|████▌     | 64/142 [00:16<00:17,  4.34it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:17<00:18,  4.06it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:17<00:18,  4.05it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:17<00:17,  4.18it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:17<00:17,  4.23it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:18<00:17,  4.25it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:18<00:14,  4.99it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:18<00:15,  4.48it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:18<00:13,  5.17it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:18<00:12,  5.51it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:19<00:12,  5.27it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:19<00:14,  4.72it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:19<00:14,  4.61it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:19<00:14,  4.64it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:19<00:14,  4.55it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:20<00:13,  4.73it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:20<00:13,  4.46it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:20<00:16,  3.75it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:21<00:15,  3.84it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:21<00:13,  4.31it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:21<00:13,  4.37it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:21<00:13,  4.23it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:21<00:13,  4.19it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:22<00:12,  4.42it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:22<00:10,  4.97it/s]['ladder', 'recycling_bin', 'object', 'doorframe']
Clip similarities: [0.72607421875, 0.7080078125, 0.73388671875, 0.6494140625]
DEBUG best_match_after_iou_check [tensor(198), tensor(50)]
DEBUG uniques tensor([ 50, 198]) tensor([1, 1])
Matched 1 times with 50
Matched 1 times with 198
iou for matched labels tensor([0.3091, 0.5978])
Matched labels: ['office_chair', 'folded_chair']
Clip similarities: [0.76025390625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(65)]
DEBUG uniques tensor([65]) tensor([1])
Matched 1 times with 65
iou for matched labels tensor([0.9233])
Matched labels: ['stool']
Clip similarities: [1.0]
DEBUG best_match_after_iou_check [tensor(20), tensor(167), tensor(179), tensor(50)]
DEBUG uniques tensor([ 20,  50, 167, 179]) tensor([1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 50
Matched 1 times with 167
Matched 1 times with 179
iou for matched labels tensor([0.6648, 0.6145, 0.3630, 0.4105])
Matched labels: ['chair', 'office_chair', 'shower_curtain_rod', 'bed']
Clip similarities: [0.8369140625, 0.76025390625, 0.54248046875, 0.58203125]
DEBUG best_match_after_iou_check [tensor(13), tensor(73), tensor(90), tensor(39), tensor(49)]
DEBUG uniques tensor([13, 39, 49, 73, 90]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 39
Matched 1 times with 49
Matched 1 times with 73
Matched 1 times with 90
iou for matched labels tensor([0.8339, 0.6289, 0.6003, 0.3578, 0.5337])
Matched labels: ['chair', 'office_chair', 'chair', 'table', 'chair']
Clip similarities: [0.8369140625, 0.76025390625, 0.8369140625, 0.7685546875, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.5207])
Matched labels: ['chair']
Clip similarities: [0.8369140625]
DEBUG best_match_after_iou_check [tensor(16), tensor(50)]
DEBUG uniques tensor([16, 50]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 50
iou for matched labels tensor([0.8409, 0.2462])
Matched labels: ['ottoman', 'stool']
Clip similarities: [0.69873046875, 1.0]
DEBUG best_match_after_iou_check [tensor(26), tensor(167)]
DEBUG uniques tensor([ 26, 167]) tensor([1, 1])
Matched 1 times with 26
Matched 1 times with 167
iou for matched labels tensor([0.8058, 0.2905])
Matched labels: ['suitcase', 'suitcase']
Clip similarities: [0.72900390625, 0.72900390625]
DEBUG best_match_after_iou_check [tensor(36)]
DEBUG uniques tensor([36]) tensor([1])
Matched 1 times with 36
iou for matched labels tensor([0.6833])
Matched labels: ['bin']
Clip similarities: [0.65234375]
DEBUG best_match_after_iou_check [tensor(55), tensor(66)]
DEBUG uniques tensor([55, 66]) tensor([1, 1])
Matched 1 times with 55
Matched 1 times with 66
iou for matched labels tensor([0.7444, 0.5450])
Matched labels: ['trash_can', 'radiator']
Clip similarities: [0.7109375, 0.693359375]
DEBUG best_match_after_iou_check [tensor(23), tensor(84)]
DEBUG uniques tensor([23, 84]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 84
iou for matched labels tensor([0.8499, 0.8112])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.7060546875, 0.7060546875]
DEBUG best_match_after_iou_check [tensor(20), tensor(95)]
DEBUG uniques tensor([20, 95]) tensor([1, 1])
Matched 1 times with 20
Matched 1 times with 95
iou for matched labels tensor([0.7077, 0.2550])
Matched labels: ['laundry_hamper', 'mailbox']
Clip similarities: [0.6533203125, 0.69140625]
DEBUG best_match_after_iou_check [tensor(84)]
DEBUG uniques tensor([84]) tensor([1])
Matched 1 times with 84
iou for matched labels tensor([0.2679])
Matched labels: ['office_chair']
Clip similarities: [0.76025390625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(8), tensor(45), tensor(31), tensor(15)]
DEBUG uniques tensor([ 8, 15, 31, 45]) tensor([1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 15
Matched 1 times with 31
Matched 1 times with 45
iou for matched labels tensor([0.5243, 0.3297, 0.6379, 0.2439])
Matched labels: ['chair', 'folded_chair', 'chair', 'chair']
Clip similarities: [0.8369140625, 0.7080078125, 0.8369140625, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(7), tensor(7), tensor(2)]
DEBUG uniques tensor([2, 7]) tensor([1, 2])
Matched 1 times with 2
Matched 2 times with 7
Merge stage2 masks
iou for matched labels tensor([0.7521, 0.2351])
Matched labels: ['trash_can', 'desk']
Clip similarities: [0.7109375, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(13), tensor(48), tensor(119)]
DEBUG uniques tensor([ 13,  48, 119]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 48
Matched 1 times with 119
iou for matched labels tensor([0.0312, 0.7391, 0.1141])
Matched labels: ['chair', 'chair', 'desk']
Clip similarities: [0.8369140625, 0.8369140625, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(339), tensor(188), tensor(215), tensor(215)]
DEBUG uniques tensor([188, 215, 339]) tensor([1, 2, 1])
Matched 1 times with 188
Matched 2 times with 215
Merge stage2 masks
Matched 1 times with 339
iou for matched labels tensor([0.1600, 0.5732, 0.3562])
Matched labels: ['shower_curtain_rod', 'end_table', 'folded_chair']
Clip similarities: [0.54248046875, 0.7529296875, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(166), tensor(166), tensor(224)]
DEBUG uniques tensor([166, 224]) tensor([2, 1])
Matched 2 times with 166
Merge stage2 masks
Matched 1 times with 224
iou for matched labels tensor([0.0172, 0.7768])
Matched labels: ['crate', 'furniture']
Clip similarities: [0.701171875, 0.77783203125]
DEBUG best_match_after_iou_check [tensor(28), tensor(86)]
DEBUG uniques tensor([28, 86]) tensor([1, 1])
Matched 1 times with 28
Matched 1 times with 86
iou for matched labels tensor([0.7208, 0.6359])
Matched labels: ['chair', 'printer']
Clip similarities: [0.8369140625, 0.685546875]
DEBUG best_match_after_iou_check [tensor(23), tensor(129), tensor(95), tensor(2), tensor(112), tensor(23)]
DEBUG uniques tensor([  2,  23,  95, 112, 129]) tensor([1, 2, 1, 1, 1])
Matched 1 times with 2
Matched 2 times with 23
Merge stage2 masks
Matched 1 times with 95
Matched 1 times with 112
Matched 1 times with 129
iou for matched labels tensor([0.3354, 0.4152, 0.8224, 0.2764, 0.6690])
Matched labels: ['office_chair', 'office_chair', 'folded_chair', 'bar', 'folded_chair']
Clip similarities: [0.76025390625, 0.76025390625, 0.7080078125, 0.65673828125, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(32), tensor(74), tensor(45), tensor(17)]
DEBUG uniques tensor([17, 32, 45, 74]) tensor([1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 32
Matched 1 times with 45
Matched 1 times with 74
iou for matched labels tensor([0.2524, 0.5763, 0.6823, 0.5189])
Matched labels: ['folded_chair', 'end_table', 'end_table', 'coffee_table']
Clip similarities: [0.7080078125, 0.7529296875, 0.7529296875, 0.7060546875]
DEBUG best_match_after_iou_check [tensor(7), tensor(82), tensor(61), tensor(106)]
DEBUG uniques tensor([  7,  61,  82, 106]) tensor([1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 61
Matched 1 times with 82
Matched 1 times with 106
iou for matched labels tensor([0.3664, 0.3317, 0.8067, 0.7755])
Matched labels: ['toilet', 'sink', 'paper_towel_dispenser', 'lamp']
Clip similarities: [0.75244140625, 0.69384765625, 0.615234375, 0.6630859375]
DEBUG best_match_after_iou_check [tensor(51), tensor(109)]
DEBUG uniques tensor([ 51, 109]) tensor([1, 1])
Matched 1 times with 51
Matched 1 times with 109
iou for matched labels tensor([0.5351, 0.0629])
Matched labels: ['desk', 'column']
Clip similarities: [0.6826171875, 0.71533203125]
DEBUG best_match_after_iou_check [tensor(74), tensor(120)]
DEBUG uniques tensor([ 74, 120]) tensor([1, 1])
Matched 1 times with 74
Matched 1 times with 120
iou for matched labels tensor([0.6996, 0.5729])
Matched labels: ['paper_towel_dispenser', 'trash_can']
Clip similarities: [0.615234375, 0.7109375]
DEBUG best_match_after_iou_check [tensor(43), tensor(93), tensor(84)]
DEBUG uniques tensor([43, 84, 93]) tensor([1, 1, 1])
Matched 1 times with 43
Matched 1 times with 84
Matched 1 times with 93
iou for matched labels tensor([0.2203, 0.4929, 0.3699])
Matched labels: Select thresholds for refinement:  63%|██████▎   | 89/142 [00:22<00:10,  5.09it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:22<00:11,  4.53it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:22<00:11,  4.63it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:23<00:11,  4.29it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:23<00:09,  5.01it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:23<00:10,  4.58it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:23<00:10,  4.38it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:24<00:11,  4.01it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:24<00:11,  3.94it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:24<00:11,  3.90it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:24<00:11,  3.82it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:25<00:10,  3.95it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:25<00:10,  3.99it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:25<00:09,  4.02it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:25<00:09,  4.01it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:26<00:09,  4.09it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:26<00:09,  3.90it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:26<00:08,  4.23it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:27<00:10,  3.25it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:27<00:11,  3.06it/s]['bookshelf', 'backpack', 'table']
Clip similarities: [0.697265625, 0.71826171875, 0.7685546875]
DEBUG best_match_after_iou_check [tensor(52), tensor(87), tensor(100), tensor(100), tensor(100)]
DEBUG uniques tensor([ 52,  87, 100]) tensor([1, 1, 3])
Matched 1 times with 52
Matched 1 times with 87
Matched 3 times with 100
Merge stage2 masks
iou for matched labels tensor([0.8026, 0.6182, 0.5517])
Matched labels: ['ottoman', 'chair', 'ottoman']
Clip similarities: [0.69873046875, 0.8369140625, 0.69873046875]
DEBUG best_match_after_iou_check [tensor(16), tensor(65), tensor(44)]
DEBUG uniques tensor([16, 44, 65]) tensor([1, 1, 1])
Matched 1 times with 16
Matched 1 times with 44
Matched 1 times with 65
iou for matched labels tensor([0.3509, 0.4871, 0.4802])
Matched labels: ['office_chair', 'office_chair', 'office_chair']
Clip similarities: [0.76025390625, 0.76025390625, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(76), tensor(30), tensor(37), tensor(23), tensor(21)]
DEBUG uniques tensor([21, 23, 30, 37, 76]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 21
Matched 1 times with 23
Matched 1 times with 30
Matched 1 times with 37
Matched 1 times with 76
iou for matched labels tensor([0.3619, 0.6511, 0.6724, 0.7564, 0.6015])
Matched labels: ['bed', 'chair', 'chair', 'chair', 'chair']
Clip similarities: [0.58203125, 0.8369140625, 0.8369140625, 0.8369140625, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(80)]
DEBUG uniques tensor([80]) tensor([1])
Matched 1 times with 80
iou for matched labels tensor([0.8022])
Matched labels: ['chair']
Clip similarities: [0.8369140625]
DEBUG best_match_after_iou_check [tensor(37), tensor(150)]
DEBUG uniques tensor([ 37, 150]) tensor([1, 1])
Matched 1 times with 37
Matched 1 times with 150
iou for matched labels tensor([0.6435, 0.2709])
Matched labels: ['office_chair', 'office_chair']
Clip similarities: [0.76025390625, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(54)]
DEBUG uniques tensor([54]) tensor([1])
Matched 1 times with 54
iou for matched labels tensor([0.5040])
Matched labels: ['table']
Clip similarities: [0.7685546875]
DEBUG best_match_after_iou_check [tensor(75), tensor(85), tensor(140)]
DEBUG uniques tensor([ 75,  85, 140]) tensor([1, 1, 1])
Matched 1 times with 75
Matched 1 times with 85
Matched 1 times with 140
iou for matched labels tensor([0.4560, 0.3280, 0.4311])
Matched labels: ['chair', 'bookshelf', 'bin']
Clip similarities: [0.8369140625, 0.697265625, 0.65234375]
DEBUG best_match_after_iou_check [tensor(154), tensor(12), tensor(112)]
DEBUG uniques tensor([ 12, 112, 154]) tensor([1, 1, 1])
Matched 1 times with 12
Matched 1 times with 112
Matched 1 times with 154
iou for matched labels tensor([0.7697, 0.3975, 0.7354])
Matched labels: ['chair', 'toilet', 'toilet']
Clip similarities: [0.8369140625, 0.75244140625, 0.75244140625]
DEBUG best_match_after_iou_check [tensor(23), tensor(28), tensor(74), tensor(121)]
DEBUG uniques tensor([ 23,  28,  74, 121]) tensor([1, 1, 1, 1])
Matched 1 times with 23
Matched 1 times with 28
Matched 1 times with 74
Matched 1 times with 121
iou for matched labels tensor([0.6795, 0.6597, 0.8581, 0.3190])
Matched labels: ['file_cabinet', 'couch', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.65234375, 0.6962890625, 0.65234375, 0.65234375]
DEBUG best_match_after_iou_check [tensor(38), tensor(111), tensor(159)]
DEBUG uniques tensor([ 38, 111, 159]) tensor([1, 1, 1])
Matched 1 times with 38
Matched 1 times with 111
Matched 1 times with 159
iou for matched labels tensor([0.6978, 0.0810, 0.7734])
Matched labels: ['couch', 'desk', 'shelf']
Clip similarities: [0.6962890625, 0.6826171875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(74)]
DEBUG uniques tensor([74]) tensor([1])
Matched 1 times with 74
iou for matched labels tensor([0.5348])
Matched labels: ['bag']
Clip similarities: [0.67431640625]
DEBUG best_match_after_iou_check [tensor(10), tensor(43), tensor(36)]
DEBUG uniques tensor([10, 36, 43]) tensor([1, 1, 1])
Matched 1 times with 10
Matched 1 times with 36
Matched 1 times with 43
iou for matched labels tensor([0.2230, 0.5666, 0.3584])
Matched labels: ['desk', 'desk', 'folded_chair']
Clip similarities: [0.6826171875, 0.6826171875, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(20), tensor(7)]
DEBUG uniques tensor([ 7, 20]) tensor([1, 1])
Matched 1 times with 7
Matched 1 times with 20
iou for matched labels tensor([0.6046, 0.6451])
Matched labels: ['chair', 'bin']
Clip similarities: [0.8369140625, 0.65234375]
DEBUG best_match_after_iou_check [tensor(11), tensor(115), tensor(136), tensor(31), tensor(82)]
DEBUG uniques tensor([ 11,  31,  82, 115, 136]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 31
Matched 1 times with 82
Matched 1 times with 115
Matched 1 times with 136
iou for matched labels tensor([0.5519, 0.4092, 0.3560, 0.3475, 0.3086])
Matched labels: ['dustpan', 'coffee_kettle', 'pillow', 'sofa_chair', 'chair']
Clip similarities: [0.7177734375, 0.61669921875, 0.73095703125, 0.69384765625, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(11), tensor(182), tensor(100), tensor(153)]
DEBUG uniques tensor([ 11, 100, 153, 182]) tensor([1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 100
Matched 1 times with 153
Matched 1 times with 182
iou for matched labels tensor([0.1698, 0.0212, 0.2805, 0.0649])
Matched labels: ['table', 'folded_chair', 'folded_chair', 'folded_chair']
Clip similarities: [0.7685546875, 0.7080078125, 0.7080078125, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(135), tensor(7), tensor(55)]
DEBUG uniques tensor([  7,  55, 135]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 55
Matched 1 times with 135
iou for matched labels tensor([0.8381, 0.7618, 0.7953])
Matched labels: ['pillow', 'box', 'ottoman']
Clip similarities: [0.73095703125, 0.6376953125, 0.69873046875]
DEBUG best_match_after_iou_check [tensor(42), tensor(108), tensor(41)]
DEBUG uniques tensor([ 41,  42, 108]) tensor([1, 1, 1])
Matched 1 times with 41
Matched 1 times with 42
Matched 1 times with 108
iou for matched labels tensor([0.4674, 0.5142, 0.4255])
Matched labels: ['folded_chair', 'chair', 'folded_chair']
Clip similarities: [0.7080078125, 0.8369140625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(37), tensor(55), tensor(26), tensor(6), tensor(68), tensor(103)]
DEBUG uniques tensor([  6,  26,  37,  55,  68, 103]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 26
Matched 1 times with 37
Matched 1 times with 55
Matched 1 times with 68
Matched 1 times with 103
iou for matched labels tensor([0.6959, 0.5602, 0.3452, 0.6388, 0.7180, 0.5657])
Matched labels: ['table', 'chair', 'sofa_chair', 'table', 'folded_chair', 'chair']
Clip similarities: [0.7685546875, 0.8369140625, 0.69384765625, 0.7685546875, 0.7080078125, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(100), tensor(87), tensor(65), tensor(53), tensor(218), tensor(105), tensor(127), tensor(70)]
DEBUG uniques tensor([ 53,  65,  70,  87, 100, 105, 127, 218]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 53
Matched 1 times with 65
Matched 1 times with 70
Matched 1 times with 87
Matched 1 times with 100
Matched 1 times with 105
Matched 1 times with 127
Matched 1 times with 218
iou for matched labels tensor([0.5164, 0.5765, 0.3652, 0.2508, 0.7256, 0.4130, 0.3192, 0.5261])
Matched labels: ['folded_chair', 'chair', 'folded_chair', 'folded_chair', 'tv_stand', 'folded_chair', 'chair', 'folded_chair']
Clip similarities: [0.7080078125, 0.8369140625, 0.7080078125, 0.7080078125, 0.69580078125, 0.7080078125, 0.8369140625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(47), tensor(91), tensor(9), tensor(42), tensor(51), tensor(74)]
DEBUG uniques tensor([ 9, 42, 47, 51, 74, 91]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 42
Matched 1 times with 47
Matched 1 times with 51
Matched 1 times with 74
Matched 1 times with 91
iou for matched labels tensor([0.5087, 0.5820, 0.4250, 0.3713, 0.3700, 0.3844])
Matched labels: ['chair', 'office_chair', 'chair', 'folded_chair', 'office_chair', 'folded_chair']
Clip similarities: Select thresholds for refinement:  77%|███████▋  | 109/142 [00:27<00:10,  3.04it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:28<00:10,  3.10it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:28<00:09,  3.41it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:28<00:08,  3.53it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:28<00:08,  3.31it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:29<00:09,  2.86it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:29<00:08,  3.02it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:29<00:07,  3.27it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:30<00:06,  3.69it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:30<00:05,  4.03it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:30<00:06,  3.43it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:30<00:05,  3.76it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:31<00:05,  3.68it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:31<00:05,  3.96it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:31<00:04,  4.04it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:31<00:03,  4.53it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:32<00:04,  4.21it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:32<00:03,  4.01it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:32<00:03,  4.34it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:32<00:04,  3.48it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:33<00:03,  4.11it/s][0.8369140625, 0.76025390625, 0.8369140625, 0.7080078125, 0.76025390625, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(51), tensor(69)]
DEBUG uniques tensor([51, 69]) tensor([1, 1])
Matched 1 times with 51
Matched 1 times with 69
iou for matched labels tensor([0.7593, 0.5612])
Matched labels: ['end_table', 'chair']
Clip similarities: [0.7529296875, 0.8369140625]
DEBUG best_match_after_iou_check [tensor(8), tensor(0), tensor(103)]
DEBUG uniques tensor([  0,   8, 103]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 8
Matched 1 times with 103
iou for matched labels tensor([0.6675, 0.2581, 0.3512])
Matched labels: ['sofa_chair', 'ball', 'furniture']
Clip similarities: [0.69384765625, 0.70361328125, 0.77783203125]
DEBUG best_match_after_iou_check [tensor(97), tensor(333), tensor(36), tensor(85), tensor(191), tensor(72)]
DEBUG uniques tensor([ 36,  72,  85,  97, 191, 333]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 36
Matched 1 times with 72
Matched 1 times with 85
Matched 1 times with 97
Matched 1 times with 191
Matched 1 times with 333
iou for matched labels tensor([0.1607, 0.1425, 0.4723, 0.6537, 0.0007, 0.3231])
Matched labels: ['office_chair', 'tv_stand', 'folded_chair', 'office_chair', 'bulletin_board', 'office_chair']
Clip similarities: [0.76025390625, 0.69580078125, 0.7080078125, 0.76025390625, 0.62158203125, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(140), tensor(456)]
DEBUG uniques tensor([140, 456]) tensor([1, 1])
Matched 1 times with 140
Matched 1 times with 456
iou for matched labels tensor([0.1157, 0.4201])
Matched labels: ['desk', 'folded_chair']
Clip similarities: [0.6826171875, 0.7080078125]
DEBUG best_match_after_iou_check [tensor(136), tensor(27), tensor(52), tensor(35), tensor(66), tensor(97), tensor(169), tensor(180), tensor(8)]
DEBUG uniques tensor([  8,  27,  35,  52,  66,  97, 136, 169, 180]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 27
Matched 1 times with 35
Matched 1 times with 52
Matched 1 times with 66
Matched 1 times with 97
Matched 1 times with 136
Matched 1 times with 169
Matched 1 times with 180
iou for matched labels tensor([0.7912, 0.7171, 0.8371, 0.5606, 0.3249, 0.2000, 0.5875, 0.4286, 0.1911])
Matched labels: ['sofa_chair', 'crate', 'sofa_chair', 'chair', 'bin', 'desk', 'suitcase', 'bowl', 'bed']
Clip similarities: [0.69384765625, 0.701171875, 0.69384765625, 0.8369140625, 0.65234375, 0.6826171875, 0.72900390625, 0.69287109375, 0.58203125]
DEBUG best_match_after_iou_check [tensor(34), tensor(12), tensor(34), tensor(139), tensor(51), tensor(79), tensor(95)]
DEBUG uniques tensor([ 12,  34,  51,  79,  95, 139]) tensor([1, 2, 1, 1, 1, 1])
Matched 1 times with 12
Matched 2 times with 34
Merge stage2 masks
Matched 1 times with 51
Matched 1 times with 79
Matched 1 times with 95
Matched 1 times with 139
iou for matched labels tensor([0.7729, 0.4296, 0.3223, 0.6335, 0.6746, 0.6165])
Matched labels: ['stool', 'table', 'chair', 'stool', 'stool', 'stool']
Clip similarities: [1.0, 0.7685546875, 0.8369140625, 1.0, 1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(87), tensor(36), tensor(126)]
DEBUG uniques tensor([ 36,  87, 126]) tensor([1, 1, 1])
Matched 1 times with 36
Matched 1 times with 87
Matched 1 times with 126
iou for matched labels tensor([0.7233, 0.6632, 0.2791])
Matched labels: ['folded_chair', 'ottoman', 'office_chair']
Clip similarities: [0.7080078125, 0.69873046875, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(55)]
DEBUG uniques tensor([55]) tensor([1])
Matched 1 times with 55
iou for matched labels tensor([0.4796])
Matched labels: ['folded_chair']
Clip similarities: [0.7080078125]
DEBUG best_match_after_iou_check [tensor(58), tensor(60), tensor(206)]
DEBUG uniques tensor([ 58,  60, 206]) tensor([1, 1, 1])
Matched 1 times with 58
Matched 1 times with 60
Matched 1 times with 206
iou for matched labels tensor([0.3601, 0.5161, 0.5053])
Matched labels: ['couch', 'suitcase', 'tv_stand']
Clip similarities: [0.6962890625, 0.72900390625, 0.69580078125]
DEBUG best_match_after_iou_check [tensor(26), tensor(28), tensor(65), tensor(58), tensor(38), tensor(139), tensor(81), tensor(33)]
DEBUG uniques tensor([ 26,  28,  33,  38,  58,  65,  81, 139]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 28
Matched 1 times with 33
Matched 1 times with 38
Matched 1 times with 58
Matched 1 times with 65
Matched 1 times with 81
Matched 1 times with 139
iou for matched labels tensor([0.2992, 0.3634, 0.4301, 0.2634, 0.8434, 0.6330, 0.0565, 0.5817])
Matched labels: ['office_chair', 'office_chair', 'office_chair', 'office_chair', 'office_chair', 'file_cabinet', 'office_chair', 'office_chair']
Clip similarities: [0.76025390625, 0.76025390625, 0.76025390625, 0.76025390625, 0.76025390625, 0.65234375, 0.76025390625, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(33)]
DEBUG uniques tensor([33]) tensor([1])
Matched 1 times with 33
iou for matched labels tensor([0.4185])
Matched labels: ['chair']
Clip similarities: [0.8369140625]
DEBUG best_match_after_iou_check [tensor(82), tensor(116), tensor(10), tensor(38)]
DEBUG uniques tensor([ 10,  38,  82, 116]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 38
Matched 1 times with 82
Matched 1 times with 116
iou for matched labels tensor([0.6095, 0.4156, 0.1222, 0.2443])
Matched labels: ['office_chair', 'tv_stand', 'bed', 'tv_stand']
Clip similarities: [0.76025390625, 0.69580078125, 0.58203125, 0.69580078125]
DEBUG best_match_after_iou_check [tensor(195), tensor(75), tensor(46)]
DEBUG uniques tensor([ 46,  75, 195]) tensor([1, 1, 1])
Matched 1 times with 46
Matched 1 times with 75
Matched 1 times with 195
iou for matched labels tensor([0.5147, 0.2817, 0.4494])
Matched labels: ['chair', 'folded_chair', 'sofa_chair']
Clip similarities: [0.8369140625, 0.7080078125, 0.69384765625]
DEBUG best_match_after_iou_check [tensor(44), tensor(82)]
DEBUG uniques tensor([44, 82]) tensor([1, 1])
Matched 1 times with 44
Matched 1 times with 82
iou for matched labels tensor([0.1938, 0.1177])
Matched labels: ['office_chair', 'office_chair']
Clip similarities: [0.76025390625, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(34)]
DEBUG uniques tensor([34]) tensor([1])
Matched 1 times with 34
iou for matched labels tensor([0.1130])
Matched labels: ['toilet']
Clip similarities: [0.75244140625]
DEBUG best_match_after_iou_check [tensor(8)]
DEBUG uniques tensor([8]) tensor([1])
Matched 1 times with 8
iou for matched labels tensor([0.1351])
Matched labels: ['folded_chair']
Clip similarities: [0.7080078125]
DEBUG best_match_after_iou_check [tensor(505), tensor(113), tensor(127), tensor(5)]
DEBUG uniques tensor([  5, 113, 127, 505]) tensor([1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 113
Matched 1 times with 127
Matched 1 times with 505
iou for matched labels tensor([0.1869, 0.6572, 0.0161, 0.0009])
Matched labels: ['mat', 'pipe', 'storage_bin', 'refrigerator']
Clip similarities: [0.64501953125, 0.63037109375, 0.68603515625, 0.60400390625]
DEBUG best_match_after_iou_check [tensor(132), tensor(5), tensor(145)]
DEBUG uniques tensor([  5, 132, 145]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 132
Matched 1 times with 145
iou for matched labels tensor([0.4939, 0.6797, 0.1095])
Matched labels: ['doorframe', 'folded_chair', 'furniture']
Clip similarities: [0.6494140625, 0.7080078125, 0.77783203125]
DEBUG best_match_after_iou_check [tensor(186), tensor(441)]
DEBUG uniques tensor([186, 441]) tensor([1, 1])
Matched 1 times with 186
Matched 1 times with 441
iou for matched labels tensor([0.7827, 0.2043])
Matched labels: ['cup', 'person']
Clip similarities: [0.67138671875, 0.68115234375]
DEBUG best_match_after_iou_check [tensor(40), tensor(29)]
DEBUG uniques tensor([29, 40]) tensor([1, 1])
Matched 1 times with 29
Matched 1 times with 40
iou for matched labels tensor([0.8323, 0.4277])
Matched labels: ['office_chair', 'soap_dish']
Clip similarities: [0.76025390625, 0.6572265625]
DEBUG best_match_after_iou_check [tensor(55), tensor(70), tensor(5)]
DEBUG uniques tensor([ 5, 55, 70]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 55
Select thresholds for refinement:  92%|█████████▏| 130/142 [00:33<00:02,  4.19it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:33<00:02,  4.50it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:33<00:02,  4.93it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:33<00:01,  4.89it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:34<00:01,  5.58it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:34<00:01,  5.25it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:34<00:01,  5.63it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:34<00:00,  5.40it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:34<00:00,  4.88it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:35<00:00,  4.23it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:35<00:00,  4.40it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:35<00:00,  4.72it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:35<00:00,  4.26it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:35<00:00,  3.97it/s]
Matched 1 times with 70
iou for matched labels tensor([0.4796, 0.3517, 0.0583])
Matched labels: ['bin', 'trash_can', 'paper_cutter']
Clip similarities: [0.65234375, 0.7109375, 0.58642578125]
DEBUG best_match_after_iou_check [tensor(65), tensor(13)]
DEBUG uniques tensor([13, 65]) tensor([1, 1])
Matched 1 times with 13
Matched 1 times with 65
iou for matched labels tensor([0.0030, 0.7641])
Matched labels: ['shower_floor', 'shower_floor']
Clip similarities: [0.5849609375, 0.5849609375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(15), tensor(68), tensor(0)]
DEBUG uniques tensor([ 0, 15, 68]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 15
Matched 1 times with 68
iou for matched labels tensor([0.6296, 0.7191, 0.5676])
Matched labels: ['sofa_chair', 'coffee_table', 'sofa_chair']
Clip similarities: [0.69384765625, 0.7060546875, 0.69384765625]
DEBUG best_match_after_iou_check [tensor(18)]
DEBUG uniques tensor([18]) tensor([1])
Matched 1 times with 18
iou for matched labels tensor([0.2575])
Matched labels: ['toilet']
Clip similarities: [0.75244140625]
DEBUG best_match_after_iou_check [tensor(0), tensor(173)]
DEBUG uniques tensor([  0, 173]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 173
iou for matched labels tensor([0.8531, 0.3553])
Matched labels: ['lamp', 'trash_can']
Clip similarities: [0.6630859375, 0.7109375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(36), tensor(16)]
DEBUG uniques tensor([16, 36]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 36
iou for matched labels tensor([0.6562, 0.4988])
Matched labels: ['dresser', 'bed']
Clip similarities: [0.689453125, 0.58203125]
DEBUG best_match_after_iou_check [tensor(125), tensor(50), tensor(125), tensor(110), tensor(74), tensor(178)]
DEBUG uniques tensor([ 50,  74, 110, 125, 178]) tensor([1, 1, 1, 2, 1])
Matched 1 times with 50
Matched 1 times with 74
Matched 1 times with 110
Matched 2 times with 125
Merge stage2 masks
Matched 1 times with 178
iou for matched labels tensor([0.6626, 0.7050, 0.5199, 0.6923, 0.5594])
Matched labels: ['chair', 'vacuum_cleaner', 'toilet', 'dresser', 'desk']
Clip similarities: [0.8369140625, 0.6474609375, 0.75244140625, 0.689453125, 0.6826171875]
DEBUG best_match_after_iou_check [tensor(48), tensor(27), tensor(107), tensor(83)]
DEBUG uniques tensor([ 27,  48,  83, 107]) tensor([1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 48
Matched 1 times with 83
Matched 1 times with 107
iou for matched labels tensor([0.3456, 0.3178, 0.7158, 0.5359])
Matched labels: ['bin', 'chair', 'file_cabinet', 'office_chair']
Clip similarities: [0.65234375, 0.8369140625, 0.65234375, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(39)]
DEBUG uniques tensor([39]) tensor([1])
Matched 1 times with 39
iou for matched labels tensor([0.7764])
Matched labels: ['ottoman']
Clip similarities: [0.69873046875]
DEBUG best_match_after_iou_check [tensor(4), tensor(90)]
DEBUG uniques tensor([ 4, 90]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 90
iou for matched labels tensor([0.7606, 0.3664])
Matched labels: ['vent', 'bathroom_stall_door']
Clip similarities: [0.66064453125, 0.56640625]
DEBUG best_match_after_iou_check [tensor(44), tensor(194), tensor(194), tensor(31), tensor(113), tensor(82)]
DEBUG uniques tensor([ 31,  44,  82, 113, 194]) tensor([1, 1, 1, 1, 2])
Matched 1 times with 31
Matched 1 times with 44
Matched 1 times with 82
Matched 1 times with 113
Matched 2 times with 194
Merge stage2 masks
iou for matched labels tensor([0.1121, 0.2508, 0.1883, 0.0639, 0.3510])
Matched labels: ['box', 'copier', 'bin', 'table', 'table']
Clip similarities: [0.6376953125, 0.65869140625, 0.65234375, 0.7685546875, 0.7685546875]
Unique similarities: [0.54248046875, 0.564453125, 0.56640625, 0.57275390625, 0.58203125, 0.5849609375, 0.58642578125, 0.60400390625, 0.61474609375, 0.615234375, 0.61669921875, 0.62158203125, 0.623046875, 0.62890625, 0.63037109375, 0.6357421875, 0.63720703125, 0.6376953125, 0.64453125, 0.64501953125, 0.6474609375, 0.6494140625, 0.65185546875, 0.65234375, 0.6533203125, 0.65673828125, 0.6572265625, 0.65869140625, 0.66064453125, 0.6630859375, 0.67138671875, 0.67333984375, 0.67431640625, 0.6787109375, 0.68115234375, 0.6826171875, 0.68505859375, 0.685546875, 0.68603515625, 0.689453125, 0.68994140625, 0.69140625, 0.69287109375, 0.693359375, 0.69384765625, 0.69580078125, 0.6962890625, 0.697265625, 0.69873046875, 0.701171875, 0.70166015625, 0.70361328125, 0.7060546875, 0.7080078125, 0.7109375, 0.71533203125, 0.7158203125, 0.7177734375, 0.71826171875, 0.72607421875, 0.72705078125, 0.72900390625, 0.73095703125, 0.73388671875, 0.74267578125, 0.75244140625, 0.7529296875, 0.76025390625, 0.7685546875, 0.77783203125, 0.8369140625, 1.0]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 45it [00:00, 446.40it/s]DEBUG all ious tensor([0.1988, 0.2793, 0.5239, 0.2712, 0.5887, 0.5395, 0.6660, 0.7503])
USE STAGE 2 MASK tensor(0.1988)
USE STAGE 2 MASK tensor(0.2793)
USE STAGE 1 MASK tensor(0.5239)
USE STAGE 2 MASK tensor(0.2712)
USE STAGE 1 MASK tensor(0.5887)
USE STAGE 1 MASK tensor(0.5395)
USE STAGE 1 MASK tensor(0.6660)
USE STAGE 1 MASK tensor(0.7503)
DEBUG all ious tensor([0.7338, 0.4372, 0.2920, 0.3183])
USE STAGE 1 MASK tensor(0.7338)
USE STAGE 2 MASK tensor(0.4372)
USE STAGE 2 MASK tensor(0.2920)
USE STAGE 2 MASK tensor(0.3183)
DEBUG all ious tensor([0.6009])
USE STAGE 1 MASK tensor(0.6009)
DEBUG all ious tensor([0.7452, 0.6978, 0.7703])
USE STAGE 1 MASK tensor(0.7452)
USE STAGE 1 MASK tensor(0.6978)
USE STAGE 1 MASK tensor(0.7703)
DEBUG all ious tensor([0.6382, 0.7384, 0.2474, 0.6614, 0.3045])
USE STAGE 1 MASK tensor(0.6382)
USE STAGE 1 MASK tensor(0.7384)
USE STAGE 2 MASK tensor(0.2474)
USE STAGE 1 MASK tensor(0.6614)
USE STAGE 2 MASK tensor(0.3045)
DEBUG all ious tensor([0.2383, 0.5641, 0.3264, 0.4933])
USE STAGE 2 MASK tensor(0.2383)
USE STAGE 1 MASK tensor(0.5641)
USE STAGE 2 MASK tensor(0.3264)
USE STAGE 1 MASK tensor(0.4933)
DEBUG all ious tensor([0.9378, 0.7188, 0.8140, 0.3761])
USE STAGE 1 MASK tensor(0.9378)
USE STAGE 1 MASK tensor(0.7188)
USE STAGE 1 MASK tensor(0.8140)
USE STAGE 2 MASK tensor(0.3761)
DEBUG all ious tensor([0.4502, 0.0195])
USE STAGE 1 MASK tensor(0.4502)
USE STAGE 2 MASK tensor(0.0195)
DEBUG all ious tensor([0.5578, 0.4610, 0.2761, 0.3148])
USE STAGE 1 MASK tensor(0.5578)
USE STAGE 1 MASK tensor(0.4610)
USE STAGE 2 MASK tensor(0.2761)
USE STAGE 2 MASK tensor(0.3148)
DEBUG all ious tensor([0.2406, 0.8304])
USE STAGE 2 MASK tensor(0.2406)
USE STAGE 1 MASK tensor(0.8304)
DEBUG all ious tensor([0.8024, 0.7840, 0.7634])
USE STAGE 1 MASK tensor(0.8024)
USE STAGE 1 MASK tensor(0.7840)
USE STAGE 1 MASK tensor(0.7634)
DEBUG all ious tensor([0.7439, 0.5231, 0.0017])
USE STAGE 1 MASK tensor(0.7439)
USE STAGE 1 MASK tensor(0.5231)
USE STAGE 2 MASK tensor(0.0017)
DEBUG all ious tensor([0.0289, 0.2903])
USE STAGE 2 MASK tensor(0.0289)
USE STAGE 2 MASK tensor(0.2903)
DEBUG all ious tensor([0.1389, 0.2501])
USE STAGE 2 MASK tensor(0.1389)
USE STAGE 2 MASK tensor(0.2501)
DEBUG all ious tensor([0.5970, 0.3276, 0.4902, 0.3777, 0.1294])
USE STAGE 1 MASK tensor(0.5970)
USE STAGE 2 MASK tensor(0.3276)
USE STAGE 1 MASK tensor(0.4902)
USE STAGE 2 MASK tensor(0.3777)
USE STAGE 2 MASK tensor(0.1294)
DEBUG all ious tensor([0.3367, 0.8448, 0.8272])
USE STAGE 2 MASK tensor(0.3367)
USE STAGE 1 MASK tensor(0.8448)
USE STAGE 1 MASK tensor(0.8272)
DEBUG all ious tensor([0.4950, 0.4312, 0.2512, 0.1233, 0.4757, 0.6682])
USE STAGE 1 MASK tensor(0.4950)
USE STAGE 2 MASK tensor(0.4312)
USE STAGE 2 MASK tensor(0.2512)
USE STAGE 2 MASK tensor(0.1233)
USE STAGE 1 MASK tensor(0.4757)
USE STAGE 1 MASK tensor(0.6682)
DEBUG all ious tensor([0.3165, 0.4007])
USE STAGE 2 MASK tensor(0.3165)
USE STAGE 2 MASK tensor(0.4007)
DEBUG all ious tensor([0.2928, 0.1905, 0.0895, 0.1230, 0.2309])
USE STAGE 2 MASK tensor(0.2928)
USE STAGE 2 MASK tensor(0.1905)
USE STAGE 2 MASK tensor(0.0895)
USE STAGE 2 MASK tensor(0.1230)
USE STAGE 2 MASK tensor(0.2309)
DEBUG all ious tensor([0.7987, 0.0024])
USE STAGE 1 MASK tensor(0.7987)
USE STAGE 2 MASK tensor(0.0024)
DEBUG all ious tensor([0.4551, 0.4059])
USE STAGE 1 MASK tensor(0.4551)
USE STAGE 2 MASK tensor(0.4059)
DEBUG all ious tensor([0.3453, 0.6678])
USE STAGE 2 MASK tensor(0.3453)
USE STAGE 1 MASK tensor(0.6678)
DEBUG all ious tensor([0.2807])
USE STAGE 2 MASK tensor(0.2807)
DEBUG all ious tensor([0.2032, 0.6360, 0.2573, 0.4661])
USE STAGE 2 MASK tensor(0.2032)
USE STAGE 1 MASK tensor(0.6360)
USE STAGE 2 MASK tensor(0.2573)
USE STAGE 1 MASK tensor(0.4661)
DEBUG all ious tensor([0.8225, 0.7860, 0.7464, 0.3933, 0.8054])
USE STAGE 1 MASK tensor(0.8225)
USE STAGE 1 MASK tensor(0.7860)
USE STAGE 1 MASK tensor(0.7464)
USE STAGE 2 MASK tensor(0.3933)
USE STAGE 1 MASK tensor(0.8054)
DEBUG all ious tensor([0.4495, 0.5445])
USE STAGE 2 MASK tensor(0.4495)
USE STAGE 1 MASK tensor(0.5445)
DEBUG all ious []
DEBUG all ious tensor([0.3968, 0.5130, 0.0657, 0.3779, 0.3092, 0.7099])
USE STAGE 2 MASK tensor(0.3968)
USE STAGE 1 MASK tensor(0.5130)
USE STAGE 2 MASK tensor(0.0657)
USE STAGE 2 MASK tensor(0.3779)
USE STAGE 2 MASK tensor(0.3092)
USE STAGE 1 MASK tensor(0.7099)
DEBUG all ious tensor([0.6251, 0.3303, 0.2450, 0.5096])
USE STAGE 1 MASK tensor(0.6251)
USE STAGE 2 MASK tensor(0.3303)
USE STAGE 2 MASK tensor(0.2450)
USE STAGE 1 MASK tensor(0.5096)
DEBUG all ious tensor([0.2096, 0.5058])
USE STAGE 2 MASK tensor(0.2096)
USE STAGE 1 MASK tensor(0.5058)
DEBUG all ious tensor([0.5836, 0.3161, 0.5493, 0.3872])
USE STAGE 1 MASK tensor(0.5836)
USE STAGE 2 MASK tensor(0.3161)
USE STAGE 1 MASK tensor(0.5493)
USE STAGE 2 MASK tensor(0.3872)
DEBUG all ious tensor([0.6752, 0.6447])
USE STAGE 1 MASK tensor(0.6752)
USE STAGE 1 MASK tensor(0.6447)
DEBUG all ious tensor([0.6415, 0.3265])
USE STAGE 1 MASK tensor(0.6415)
USE STAGE 2 MASK tensor(0.3265)
DEBUG all ious tensor([0.3488, 0.0282, 0.6605, 0.7791, 0.5787])
USE STAGE 2 MASK tensor(0.3488)
USE STAGE 2 MASK tensor(0.0282)
USE STAGE 1 MASK tensor(0.6605)
USE STAGE 1 MASK tensor(0.7791)
USE STAGE 1 MASK tensor(0.5787)
DEBUG all ious tensor([0.5780, 0.4702])
USE STAGE 1 MASK tensor(0.5780)
USE STAGE 1 MASK tensor(0.4702)
DEBUG all ious tensor([0.6172, 0.6054, 0.5239, 0.5109, 0.1335, 0.1849, 0.7333, 0.5971, 0.3109])
USE STAGE 1 MASK tensor(0.6172)
USE STAGE 1 MASK tensor(0.6054)
USE STAGE 1 MASK tensor(0.5239)
USE STAGE 1 MASK tensor(0.5109)
USE STAGE 2 MASK tensor(0.1335)
USE STAGE 2 MASK tensor(0.1849)
USE STAGE 1 MASK tensor(0.7333)
USE STAGE 1 MASK tensor(0.5971)
USE STAGE 2 MASK tensor(0.3109)
DEBUG all ious tensor([0.4058, 0.6042])
USE STAGE 2 MASK tensor(0.4058)
USE STAGE 1 MASK tensor(0.6042)
DEBUG all ious tensor([0.5277, 0.3509, 0.3481, 0.0167, 0.0480, 0.0862])
USE STAGE 1 MASK tensor(0.5277)
USE STAGE 2 MASK tensor(0.3509)
USE STAGE 2 MASK tensor(0.3481)
USE STAGE 2 MASK tensor(0.0167)
USE STAGE 2 MASK tensor(0.0480)
USE STAGE 2 MASK tensor(0.0862)
DEBUG all ious tensor([0.7629, 0.6960, 0.0134, 0.5424, 0.0224])
USE STAGE 1 MASK tensor(0.7629)
USE STAGE 1 MASK tensor(0.6960)
USE STAGE 2 MASK tensor(0.0134)
USE STAGE 1 MASK tensor(0.5424)
USE STAGE 2 MASK tensor(0.0224)
DEBUG all ious tensor([0.6175, 0.6456, 0.7940])
USE STAGE 1 MASK tensor(0.6175)
USE STAGE 1 MASK tensor(0.6456)
USE STAGE 1 MASK tensor(0.7940)
DEBUG all ious tensor([0.6806, 0.8574])
USE STAGE 1 MASK tensor(0.6806)
USE STAGE 1 MASK tensor(0.8574)
DEBUG all ious tensor([0.2779, 0.8356])
USE STAGE 2 MASK tensor(0.2779)
USE STAGE 1 MASK tensor(0.8356)
DEBUG all ious tensor([0.3487, 0.1480])
USE STAGE 2 MASK tensor(0.3487)
USE STAGE 2 MASK tensor(0.1480)
DEBUG all ious tensor([0.4186, 0.0284, 0.1941, 0.5945, 0.1966, 0.6387])
USE STAGE 2 MASK tensor(0.4186)
USE STAGE 2 MASK tensor(0.0284)
USE STAGE 2 MASK tensor(0.1941)
USE STAGE 1 MASK tensor(0.5945)
USE STAGE 2 MASK tensor(0.1966)
USE STAGE 1 MASK tensor(0.6387)
DEBUG all ious tensor([0.6378])
USE STAGE 1 MASK tensor(0.6378)
DEBUG all ious tensor([0.8322, 0.8786, 0.8540])
USE STAGE 1 MASK tensor(0.8322)
USE STAGE 1 MASK tensor(0.8786)
USE STAGE 1 MASK tensor(0.8540)
DEBUG all ious tensor([0.1537, 0.2420])
USE STAGE 2 MASK tensor(0.1537)
USE STAGE 2 MASK tensor(0.2420)
DEBUG all ious tensor([0.3790, 0.8561, 0.5631, 0.5418])
USE STAGE 2 MASK tensor(0.3790)
USE STAGE 1 MASK tensor(0.8561)
USE STAGE 1 MASK tensor(0.5631)
USE STAGE 1 MASK tensor(0.5418)
DEBUG all ious tensor([0.8252, 0.5855, 0.5645])
USE STAGE 1 MASK tensor(0.8252)
USE STAGE 1 MASK tensor(0.5855)
USE STAGE 1 MASK tensor(0.5645)
DEBUG all ious tensor([0.4018])
USE STAGE 2 MASK tensor(0.4018)
DEBUG all ious []
DEBUG all ious tensor([0.7623, 0.4194, 0.4487, 0.3739])
USE STAGE 1 MASK tensor(0.7623)
USE STAGE 2 MASK tensor(0.4194)
USE STAGE 2 MASK tensor(0.4487)
USE STAGE 2 MASK tensor(0.3739)
DEBUG all ious tensor([0.5418, 0.0972, 0.0000, 0.0138, 0.3323])
USE STAGE 1 MASK tensor(0.5418)
USE STAGE 2 MASK tensor(0.0972)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.0138)
USE STAGE 2 MASK tensor(0.3323)
DEBUG all ious Refining stage1 output with stage2 outcomes: 90it [00:00, 382.11it/s]tensor([0.4763, 0.2493])
USE STAGE 1 MASK tensor(0.4763)
USE STAGE 2 MASK tensor(0.2493)
DEBUG all ious []
DEBUG all ious tensor([0.3464, 0.8701, 0.7985, 0.5729, 0.3789, 0.4368])
USE STAGE 2 MASK tensor(0.3464)
USE STAGE 1 MASK tensor(0.8701)
USE STAGE 1 MASK tensor(0.7985)
USE STAGE 1 MASK tensor(0.5729)
USE STAGE 2 MASK tensor(0.3789)
USE STAGE 2 MASK tensor(0.4368)
DEBUG all ious tensor([0.7100, 0.5643, 0.5673, 0.0445, 0.8939, 0.3712, 0.4653])
USE STAGE 1 MASK tensor(0.7100)
USE STAGE 1 MASK tensor(0.5643)
USE STAGE 1 MASK tensor(0.5673)
USE STAGE 2 MASK tensor(0.0445)
USE STAGE 1 MASK tensor(0.8939)
USE STAGE 2 MASK tensor(0.3712)
USE STAGE 1 MASK tensor(0.4653)
DEBUG all ious tensor([0.4611, 0.5964, 0.4476])
USE STAGE 1 MASK tensor(0.4611)
USE STAGE 1 MASK tensor(0.5964)
USE STAGE 2 MASK tensor(0.4476)
DEBUG all ious tensor([0.8319])
USE STAGE 1 MASK tensor(0.8319)
DEBUG all ious tensor([0.4761, 0.6886, 0.7836])
USE STAGE 1 MASK tensor(0.4761)
USE STAGE 1 MASK tensor(0.6886)
USE STAGE 1 MASK tensor(0.7836)
DEBUG all ious tensor([0.8452, 0.2324, 0.6849])
USE STAGE 1 MASK tensor(0.8452)
USE STAGE 2 MASK tensor(0.2324)
USE STAGE 1 MASK tensor(0.6849)
DEBUG all ious tensor([0.6888, 0.6854])
USE STAGE 1 MASK tensor(0.6888)
USE STAGE 1 MASK tensor(0.6854)
DEBUG all ious tensor([0.0752])
USE STAGE 2 MASK tensor(0.0752)
DEBUG all ious tensor([0.3201, 0.1583, 0.5687, 0.2227])
USE STAGE 2 MASK tensor(0.3201)
USE STAGE 2 MASK tensor(0.1583)
USE STAGE 1 MASK tensor(0.5687)
USE STAGE 2 MASK tensor(0.2227)
DEBUG all ious tensor([0.3091, 0.5978])
USE STAGE 2 MASK tensor(0.3091)
USE STAGE 1 MASK tensor(0.5978)
DEBUG all ious tensor([0.9233])
USE STAGE 1 MASK tensor(0.9233)
DEBUG all ious tensor([0.6648, 0.6145, 0.3630, 0.4105])
USE STAGE 1 MASK tensor(0.6648)
USE STAGE 1 MASK tensor(0.6145)
USE STAGE 2 MASK tensor(0.3630)
USE STAGE 2 MASK tensor(0.4105)
DEBUG all ious tensor([0.8339, 0.6289, 0.6003, 0.3578, 0.5337])
USE STAGE 1 MASK tensor(0.8339)
USE STAGE 1 MASK tensor(0.6289)
USE STAGE 1 MASK tensor(0.6003)
USE STAGE 2 MASK tensor(0.3578)
USE STAGE 1 MASK tensor(0.5337)
DEBUG all ious tensor([0.5207])
USE STAGE 1 MASK tensor(0.5207)
DEBUG all ious tensor([0.8409, 0.2462])
USE STAGE 1 MASK tensor(0.8409)
USE STAGE 2 MASK tensor(0.2462)
DEBUG all ious tensor([0.8058, 0.2905])
USE STAGE 1 MASK tensor(0.8058)
USE STAGE 2 MASK tensor(0.2905)
DEBUG all ious tensor([0.6833])
USE STAGE 1 MASK tensor(0.6833)
DEBUG all ious tensor([0.7444, 0.5450])
USE STAGE 1 MASK tensor(0.7444)
USE STAGE 1 MASK tensor(0.5450)
DEBUG all ious tensor([0.8499, 0.8112])
USE STAGE 1 MASK tensor(0.8499)
USE STAGE 1 MASK tensor(0.8112)
DEBUG all ious tensor([0.7077, 0.2550])
USE STAGE 1 MASK tensor(0.7077)
USE STAGE 2 MASK tensor(0.2550)
DEBUG all ious tensor([0.2679])
USE STAGE 2 MASK tensor(0.2679)
DEBUG all ious []
DEBUG all ious tensor([0.5243, 0.3297, 0.6379, 0.2439])
USE STAGE 1 MASK tensor(0.5243)
USE STAGE 2 MASK tensor(0.3297)
USE STAGE 1 MASK tensor(0.6379)
USE STAGE 2 MASK tensor(0.2439)
DEBUG all ious tensor([0.7521, 0.2351])
USE STAGE 1 MASK tensor(0.7521)
USE STAGE 2 MASK tensor(0.2351)
DEBUG all ious tensor([0.0312, 0.7391, 0.1141])
USE STAGE 2 MASK tensor(0.0312)
USE STAGE 1 MASK tensor(0.7391)
USE STAGE 2 MASK tensor(0.1141)
DEBUG all ious tensor([0.1600, 0.5732, 0.3562])
USE STAGE 2 MASK tensor(0.1600)
USE STAGE 1 MASK tensor(0.5732)
USE STAGE 2 MASK tensor(0.3562)
DEBUG all ious tensor([0.0172, 0.7768])
USE STAGE 2 MASK tensor(0.0172)
USE STAGE 1 MASK tensor(0.7768)
DEBUG all ious tensor([0.7208, 0.6359])
USE STAGE 1 MASK tensor(0.7208)
USE STAGE 1 MASK tensor(0.6359)
DEBUG all ious tensor([0.3354, 0.4152, 0.8224, 0.2764, 0.6690])
USE STAGE 2 MASK tensor(0.3354)
USE STAGE 2 MASK tensor(0.4152)
USE STAGE 1 MASK tensor(0.8224)
USE STAGE 2 MASK tensor(0.2764)
USE STAGE 1 MASK tensor(0.6690)
DEBUG all ious tensor([0.2524, 0.5763, 0.6823, 0.5189])
USE STAGE 2 MASK tensor(0.2524)
USE STAGE 1 MASK tensor(0.5763)
USE STAGE 1 MASK tensor(0.6823)
USE STAGE 1 MASK tensor(0.5189)
DEBUG all ious tensor([0.3664, 0.3317, 0.8067, 0.7755])
USE STAGE 2 MASK tensor(0.3664)
USE STAGE 2 MASK tensor(0.3317)
USE STAGE 1 MASK tensor(0.8067)
USE STAGE 1 MASK tensor(0.7755)
DEBUG all ious tensor([0.5351, 0.0629])
USE STAGE 1 MASK tensor(0.5351)
USE STAGE 2 MASK tensor(0.0629)
DEBUG all ious tensor([0.6996, 0.5729])
USE STAGE 1 MASK tensor(0.6996)
USE STAGE 1 MASK tensor(0.5729)
DEBUG all ious tensor([0.2203, 0.4929, 0.3699])
USE STAGE 2 MASK tensor(0.2203)
USE STAGE 1 MASK tensor(0.4929)
USE STAGE 2 MASK tensor(0.3699)
DEBUG all ious tensor([0.8026, 0.6182, 0.5517])
USE STAGE 1 MASK tensor(0.8026)
USE STAGE 1 MASK tensor(0.6182)
USE STAGE 1 MASK tensor(0.5517)
DEBUG all ious tensor([0.3509, 0.4871, 0.4802])
USE STAGE 2 MASK tensor(0.3509)
USE STAGE 1 MASK tensor(0.4871)
USE STAGE 1 MASK tensor(0.4802)
DEBUG all ious tensor([0.3619, 0.6511, 0.6724, 0.7564, 0.6015])
USE STAGE 2 MASK tensor(0.3619)
USE STAGE 1 MASK tensor(0.6511)
USE STAGE 1 MASK tensor(0.6724)
USE STAGE 1 MASK tensor(0.7564)
USE STAGE 1 MASK tensor(0.6015)
DEBUG all ious tensor([0.8022])
USE STAGE 1 MASK tensor(0.8022)
DEBUG all ious tensor([0.6435, 0.2709])
USE STAGE 1 MASK tensor(0.6435)
USE STAGE 2 MASK tensor(0.2709)
DEBUG all ious tensor([0.5040])
USE STAGE 1 MASK tensor(0.5040)
DEBUG all ious tensor([0.4560, 0.3280, 0.4311])
USE STAGE 1 MASK tensor(0.4560)
USE STAGE 2 MASK tensor(0.3280)
USE STAGE 2 MASK tensor(0.4311)
DEBUG all ious tensor([0.7697, 0.3975, 0.7354])
USE STAGE 1 MASK tensor(0.7697)
USE STAGE 2 MASK tensor(0.3975)
USE STAGE 1 MASK tensor(0.7354)
DEBUG all ious tensor([0.6795, 0.6597, 0.8581, 0.3190])
USE STAGE 1 MASK tensor(0.6795)
USE STAGE 1 MASK tensor(0.6597)
USE STAGE 1 MASK tensor(0.8581)
USE STAGE 2 MASK tensor(0.3190)
DEBUG all ious tensor([0.6978, 0.0810, 0.7734])
USE STAGE 1 MASK tensor(0.6978)
USE STAGE 2 MASK tensor(0.0810)
USE STAGE 1 MASK tensor(0.7734)
DEBUG all ious tensor([0.5348])
USE STAGE 1 MASK tensor(0.5348)
DEBUG all ious tensor([0.2230, 0.5666, 0.3584])
USE STAGE 2 MASK tensor(0.2230)
USE STAGE 1 MASK tensor(0.5666)
USE STAGE 2 MASK tensor(0.3584)
DEBUG all ious tensor([0.6046, 0.6451])
USE STAGE 1 MASK tensor(0.6046)
USE STAGE 1 MASK tensor(0.6451)
DEBUG all ious tensor([0.5519, 0.4092, 0.3560, 0.3475, 0.3086])
USE STAGE 1 MASK tensor(0.5519)
USE STAGE 2 MASK tensor(0.4092)
USE STAGE 2 MASK tensor(0.3560)
USE STAGE 2 MASK tensor(0.3475)
USE STAGE 2 MASK tensor(0.3086)
DEBUG all ious tensor([0.1698, 0.0212, 0.2805, 0.0649])
USE STAGE 2 MASK tensor(0.1698)
USE STAGE 2 MASK tensor(0.0212)
USE STAGE 2 MASK tensor(0.2805)
USE STAGE 2 MASK tensor(0.0649)
DEBUG all ious tensor([0.8381, 0.7618, 0.7953])
USE STAGE 1 MASK tensor(0.8381)
USE STAGE 1 MASK tensor(0.7618)
USE STAGE 1 MASK tensor(0.7953)
DEBUG all ious tensor([0.4674, 0.5142, 0.4255])
USE STAGE 1 MASK tensor(0.4674)
USE STAGE 1 MASK tensor(0.5142)
USE STAGE 2 MASK tensor(0.4255)
DEBUG all ious tensor([0.6959, 0.5602, 0.3452, 0.6388, 0.7180, 0.5657])
USE STAGE 1 MASK tensor(0.6959)
USE STAGE 1 MASK tensor(0.5602)
USE STAGE 2 MASK tensor(0.3452)
USE STAGE 1 MASK tensor(0.6388)
USE STAGE 1 MASK tensor(0.7180)
USE STAGE 1 MASK tensor(0.5657)
DEBUG all ious tensor([0.5164, 0.5765, 0.3652, 0.2508, 0.7256, 0.4130, 0.3192, 0.5261])
USE STAGE 1 MASK tensor(0.5164)
USE STAGE 1 MASK tensor(0.5765)
USE STAGE 2 MASK tensor(0.3652)
USE STAGE 2 MASK tensor(0.2508)
USE STAGE 1 MASK tensor(0.7256)
USE STAGE 2 MASK tensor(0.4130)
USE STAGE 2 MASK tensor(0.3192)
USE STAGE 1 MASK tensor(0.5261)
DEBUG all ious tensor([0.5087, 0.5820, 0.4250, 0.3713, 0.3700, 0.3844])
USE STAGE 1 MASK tensor(0.5087)
USE STAGE 1 MASK tensor(0.5820)
USE STAGE 2 MASK tensor(0.4250)
USE STAGE 2 MASK tensor(0.3713)
USE STAGE 2 MASK tensor(0.3700)
USE STAGE 2 MASK tensor(0.3844)
DEBUG all ious tensor([0.7593, 0.5612])
USE STAGE 1 MASK tensor(0.7593)
USE STAGE 1 MASK tensor(0.5612)
DEBUG all ious tensor([0.6675, 0.2581, 0.3512])
USE STAGE 1 MASK tensor(0.6675)
USE STAGE 2 MASK tensor(0.2581)
USE STAGE 2 MASK tensor(0.3512)
DEBUG all ious tensor([0.1607, 0.1425, 0.4723, 0.6537, 0.0007, 0.3231])
USE STAGE 2 MASK tensor(0.1607)
USE STAGE 2 MASK tensor(0.1425)
Refining stage1 output with stage2 outcomes: 129it [00:00, 314.10it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 338.53it/s]
USE STAGE 1 MASK tensor(0.4723)
USE STAGE 1 MASK tensor(0.6537)
USE STAGE 2 MASK tensor(0.0007)
USE STAGE 2 MASK tensor(0.3231)
DEBUG all ious tensor([0.1157, 0.4201])
USE STAGE 2 MASK tensor(0.1157)
USE STAGE 2 MASK tensor(0.4201)
DEBUG all ious tensor([0.7912, 0.7171, 0.8371, 0.5606, 0.3249, 0.2000, 0.5875, 0.4286, 0.1911])
USE STAGE 1 MASK tensor(0.7912)
USE STAGE 1 MASK tensor(0.7171)
USE STAGE 1 MASK tensor(0.8371)
USE STAGE 1 MASK tensor(0.5606)
USE STAGE 2 MASK tensor(0.3249)
USE STAGE 2 MASK tensor(0.2000)
USE STAGE 1 MASK tensor(0.5875)
USE STAGE 2 MASK tensor(0.4286)
USE STAGE 2 MASK tensor(0.1911)
DEBUG all ious tensor([0.7729, 0.4296, 0.3223, 0.6335, 0.6746, 0.6165])
USE STAGE 1 MASK tensor(0.7729)
USE STAGE 2 MASK tensor(0.4296)
USE STAGE 2 MASK tensor(0.3223)
USE STAGE 1 MASK tensor(0.6335)
USE STAGE 1 MASK tensor(0.6746)
USE STAGE 1 MASK tensor(0.6165)
DEBUG all ious tensor([0.7233, 0.6632, 0.2791])
USE STAGE 1 MASK tensor(0.7233)
USE STAGE 1 MASK tensor(0.6632)
USE STAGE 2 MASK tensor(0.2791)
DEBUG all ious tensor([0.4796])
USE STAGE 1 MASK tensor(0.4796)
DEBUG all ious tensor([0.3601, 0.5161, 0.5053])
USE STAGE 2 MASK tensor(0.3601)
USE STAGE 1 MASK tensor(0.5161)
USE STAGE 1 MASK tensor(0.5053)
DEBUG all ious tensor([0.2992, 0.3634, 0.4301, 0.2634, 0.8434, 0.6330, 0.0565, 0.5817])
USE STAGE 2 MASK tensor(0.2992)
USE STAGE 2 MASK tensor(0.3634)
USE STAGE 2 MASK tensor(0.4301)
USE STAGE 2 MASK tensor(0.2634)
USE STAGE 1 MASK tensor(0.8434)
USE STAGE 1 MASK tensor(0.6330)
USE STAGE 2 MASK tensor(0.0565)
USE STAGE 1 MASK tensor(0.5817)
DEBUG all ious tensor([0.4185])
USE STAGE 2 MASK tensor(0.4185)
DEBUG all ious tensor([0.6095, 0.4156, 0.1222, 0.2443])
USE STAGE 1 MASK tensor(0.6095)
USE STAGE 2 MASK tensor(0.4156)
USE STAGE 2 MASK tensor(0.1222)
USE STAGE 2 MASK tensor(0.2443)
DEBUG all ious tensor([0.5147, 0.2817, 0.4494])
USE STAGE 1 MASK tensor(0.5147)
USE STAGE 2 MASK tensor(0.2817)
USE STAGE 2 MASK tensor(0.4494)
DEBUG all ious tensor([0.1938, 0.1177])
USE STAGE 2 MASK tensor(0.1938)
USE STAGE 2 MASK tensor(0.1177)
DEBUG all ious tensor([0.1130])
USE STAGE 2 MASK tensor(0.1130)
DEBUG all ious tensor([0.1351])
USE STAGE 2 MASK tensor(0.1351)
DEBUG all ious tensor([0.1869, 0.6572, 0.0161, 0.0009])
USE STAGE 2 MASK tensor(0.1869)
USE STAGE 1 MASK tensor(0.6572)
USE STAGE 2 MASK tensor(0.0161)
USE STAGE 2 MASK tensor(0.0009)
DEBUG all ious tensor([0.4939, 0.6797, 0.1095])
USE STAGE 1 MASK tensor(0.4939)
USE STAGE 1 MASK tensor(0.6797)
USE STAGE 2 MASK tensor(0.1095)
DEBUG all ious tensor([0.7827, 0.2043])
USE STAGE 1 MASK tensor(0.7827)
USE STAGE 2 MASK tensor(0.2043)
DEBUG all ious tensor([0.8323, 0.4277])
USE STAGE 1 MASK tensor(0.8323)
USE STAGE 2 MASK tensor(0.4277)
DEBUG all ious tensor([0.4796, 0.3517, 0.0583])
USE STAGE 1 MASK tensor(0.4796)
USE STAGE 2 MASK tensor(0.3517)
USE STAGE 2 MASK tensor(0.0583)
DEBUG all ious tensor([0.0030, 0.7641])
USE STAGE 2 MASK tensor(0.0030)
USE STAGE 1 MASK tensor(0.7641)
DEBUG all ious []
DEBUG all ious tensor([0.6296, 0.7191, 0.5676])
USE STAGE 1 MASK tensor(0.6296)
USE STAGE 1 MASK tensor(0.7191)
USE STAGE 1 MASK tensor(0.5676)
DEBUG all ious tensor([0.2575])
USE STAGE 2 MASK tensor(0.2575)
DEBUG all ious tensor([0.8531, 0.3553])
USE STAGE 1 MASK tensor(0.8531)
USE STAGE 2 MASK tensor(0.3553)
DEBUG all ious []
DEBUG all ious tensor([0.6562, 0.4988])
USE STAGE 1 MASK tensor(0.6562)
USE STAGE 1 MASK tensor(0.4988)
DEBUG all ious tensor([0.6626, 0.7050, 0.5199, 0.6923, 0.5594])
USE STAGE 1 MASK tensor(0.6626)
USE STAGE 1 MASK tensor(0.7050)
USE STAGE 1 MASK tensor(0.5199)
USE STAGE 1 MASK tensor(0.6923)
USE STAGE 1 MASK tensor(0.5594)
DEBUG all ious tensor([0.3456, 0.3178, 0.7158, 0.5359])
USE STAGE 2 MASK tensor(0.3456)
USE STAGE 2 MASK tensor(0.3178)
USE STAGE 1 MASK tensor(0.7158)
USE STAGE 1 MASK tensor(0.5359)
DEBUG all ious tensor([0.7764])
USE STAGE 1 MASK tensor(0.7764)
DEBUG all ious tensor([0.7606, 0.3664])
USE STAGE 1 MASK tensor(0.7606)
USE STAGE 2 MASK tensor(0.3664)
DEBUG all ious tensor([0.1121, 0.2508, 0.1883, 0.0639, 0.3510])
USE STAGE 2 MASK tensor(0.1121)
USE STAGE 2 MASK tensor(0.2508)
USE STAGE 2 MASK tensor(0.1883)
USE STAGE 2 MASK tensor(0.0639)
USE STAGE 2 MASK tensor(0.3510)
Evaluating class stool...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class stool...:   1%|▏         | 2/142 [00:00<00:09, 14.16it/s]Evaluating class stool...:   4%|▎         | 5/142 [00:00<00:09, 14.90it/s]Evaluating class stool...:   5%|▍         | 7/142 [00:00<00:09, 14.97it/s]Evaluating class stool...:   6%|▋         | 9/142 [00:00<00:08, 16.22it/s]Evaluating class stool...:   8%|▊         | 12/142 [00:00<00:06, 19.78it/s]Evaluating class stool...:  11%|█         | 15/142 [00:00<00:06, 19.13it/s]Evaluating class stool...:  13%|█▎        | 18/142 [00:00<00:05, 20.75it/s]Evaluating class stool...:  15%|█▍        | 21/142 [00:01<00:05, 22.02it/s]Evaluating class stool...:  17%|█▋        | 24/142 [00:01<00:05, 22.32it/s]Evaluating class stool...:  19%|█▉        | 27/142 [00:01<00:04, 23.02it/s]Evaluating class stool...:  21%|██        | 30/142 [00:01<00:07, 14.81it/s]Evaluating class stool...:  23%|██▎       | 32/142 [00:01<00:07, 15.61it/s]Evaluating class stool...:  24%|██▍       | 34/142 [00:02<00:08, 12.58it/s]Evaluating class stool...:  25%|██▌       | 36/142 [00:02<00:08, 12.60it/s]Evaluating class stool...:  27%|██▋       | 39/142 [00:02<00:06, 14.86it/s]Evaluating class stool...:  30%|███       | 43/142 [00:02<00:05, 17.23it/s]Evaluating class stool...:  32%|███▏      | 45/142 [00:02<00:06, 15.44it/s]Evaluating class stool...:  34%|███▍      | 48/142 [00:02<00:05, 16.40it/s]Evaluating class stool...:  35%|███▌      | 50/142 [00:02<00:05, 16.49it/s]Evaluating class stool...:  37%|███▋      | 53/142 [00:03<00:04, 18.11it/s]Evaluating class stool...:  39%|███▊      | 55/142 [00:03<00:04, 18.33it/s]Evaluating class stool...:  41%|████      | 58/142 [00:03<00:04, 20.27it/s]Evaluating class stool...:  43%|████▎     | 61/142 [00:03<00:03, 21.73it/s]Evaluating class stool...:  45%|████▌     | 64/142 [00:03<00:03, 21.63it/s]Evaluating class stool...:  47%|████▋     | 67/142 [00:03<00:03, 22.06it/s]Evaluating class stool...:  50%|█████     | 71/142 [00:03<00:03, 22.11it/s]Evaluating class stool...:  53%|█████▎    | 75/142 [00:04<00:03, 22.26it/s]Evaluating class stool...:  55%|█████▍    | 78/142 [00:04<00:02, 21.96it/s]Evaluating class stool...:  57%|█████▋    | 81/142 [00:04<00:02, 20.63it/s]Evaluating class stool...:  60%|█████▉    | 85/142 [00:04<00:02, 22.63it/s]Evaluating class stool...:  62%|██████▏   | 88/142 [00:04<00:02, 21.84it/s]Evaluating class stool...:  64%|██████▍   | 91/142 [00:04<00:02, 23.14it/s]Evaluating class stool...:  66%|██████▌   | 94/142 [00:04<00:02, 22.01it/s]Evaluating class stool...:  68%|██████▊   | 97/142 [00:05<00:02, 21.36it/s]Evaluating class stool...:  70%|███████   | 100/142 [00:05<00:02, 17.95it/s]Evaluating class stool...:  73%|███████▎  | 103/142 [00:05<00:02, 17.93it/s]Evaluating class stool...:  74%|███████▍  | 105/142 [00:05<00:02, 18.28it/s]Evaluating class stool...:  75%|███████▌  | 107/142 [00:05<00:02, 16.19it/s]Evaluating class stool...:  77%|███████▋  | 109/142 [00:05<00:02, 15.13it/s]Evaluating class stool...:  78%|███████▊  | 111/142 [00:06<00:02, 13.98it/s]Evaluating class stool...:  80%|███████▉  | 113/142 [00:06<00:02, 14.22it/s]Evaluating class stool...:  81%|████████  | 115/142 [00:06<00:02, 13.24it/s]Evaluating class stool...:  83%|████████▎ | 118/142 [00:06<00:01, 16.07it/s]Evaluating class stool...:  85%|████████▍ | 120/142 [00:06<00:01, 15.67it/s]Evaluating class stool...:  87%|████████▋ | 123/142 [00:06<00:01, 17.73it/s]Evaluating class stool...:  89%|████████▊ | 126/142 [00:06<00:00, 18.49it/s]Evaluating class stool...:  90%|█████████ | 128/142 [00:07<00:00, 15.01it/s]Evaluating class stool...:  92%|█████████▏| 131/142 [00:07<00:00, 17.60it/s]Evaluating class stool...:  95%|█████████▌| 135/142 [00:07<00:00, 21.08it/s]Evaluating class stool...:  97%|█████████▋| 138/142 [00:07<00:00, 18.88it/s]Evaluating class stool...: 100%|██████████| 142/142 [00:07<00:00, 20.34it/s]Evaluating class stool...: 100%|██████████| 142/142 [00:07<00:00, 18.24it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 10%|▉         | 14/142 [00:00<00:01, 116.03it/s] 23%|██▎       | 32/142 [00:00<00:00, 146.19it/s] 34%|███▍      | 48/142 [00:00<00:00, 151.77it/s] 53%|█████▎    | 75/142 [00:00<00:00, 196.13it/s] 70%|██████▉   | 99/142 [00:00<00:00, 209.64it/s] 85%|████████▌ | 121/142 [00:00<00:00, 192.65it/s]100%|██████████| 142/142 [00:00<00:00, 191.05it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.007   0.007   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.000   0.000   0.000
Novel AP       :   0.003   0.004   0.004
------------------------------------------------
AP             :   0.002   0.003   0.003
################################################

DEBUG avg value {'ap': 0.417876537219198, 'ap50%': 0.449452269170579, 'ap25%': 0.44981537428667334, 'rc': 0.8271604938271605, 'rc50%': 0.8888888888888888, 'rc25%': 0.8888888888888888}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  70%|███████   | 7/10 [42:25<18:24, 368.24s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class refrigerator
masks_to_be_merged [[0, 4, 89, 93], [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 46], [39, 45], [42, 52, 54, 55, 56, 57, 58], [48, 49, 50, 51], [60, 61, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], [63, 64], [68, 70, 71, 72], [85, 87], [86, 88], [95, 96], [98, 99], [105, 106], [110, 111, 112], [120, 121, 122, 123, 125]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 133.26it/s][A
Calculating viewed counts for every point:  12%|█▏        | 29/238 [00:00<00:01, 139.19it/s][A
Calculating viewed counts for every point:  19%|█▉        | 45/238 [00:00<00:01, 145.90it/s][A
Calculating viewed counts for every point:  26%|██▌       | 61/238 [00:00<00:01, 148.89it/s][A
Calculating viewed counts for every point:  32%|███▏      | 76/238 [00:00<00:01, 145.62it/s][A
Calculating viewed counts for every point:  38%|███▊      | 91/238 [00:00<00:01, 139.66it/s][A
Calculating viewed counts for every point:  45%|████▍     | 106/238 [00:00<00:00, 137.89it/s][A
Calculating viewed counts for every point:  50%|█████     | 120/238 [00:00<00:00, 128.82it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 133/238 [00:00<00:00, 127.26it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 148/238 [00:01<00:00, 131.70it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 162/238 [00:01<00:00, 126.33it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 176/238 [00:01<00:00, 128.45it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 189/238 [00:01<00:00, 128.43it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 202/238 [00:01<00:00, 121.43it/s][A
Calculating viewed counts for every point:  91%|█████████ | 216/238 [00:01<00:00, 123.93it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 230/238 [00:01<00:00, 126.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:06<15:01,  6.39s/it]Projecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:06<06:20,  2.72s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(16303, device='cuda:0')
before filtering torch.Size([15, 237360])
after filtering torch.Size([8, 237360])
num_ins_points_after_filtering tensor([5786,  212, 2542,  551,  934,  845, 3106,  893], device='cuda:0')
Working on scene0015_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0019_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4, 5, 6], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  48%|████▊     | 28/58 [00:00<00:00, 277.27it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 56/58 [00:00<00:00, 260.55it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:07<04:07,  1.78s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(19290, device='cuda:0')
before filtering torch.Size([2, 136769])
after filtering torch.Size([2, 136769])
num_ins_points_after_filtering tensor([9987, 9201], device='cuda:0')
Working on scene0025_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 12, 13, 14], [7, 10], [8, 9, 11], [15, 16, 17, 19, 20, 21, 22], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 42, 43, 44, 45], [33, 34, 35, 36, 37], [38, 46], [47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 14/195 [00:00<00:01, 133.91it/s][A
Calculating viewed counts for every point:  15%|█▌        | 30/195 [00:00<00:01, 148.76it/s][A
Calculating viewed counts for every point:  25%|██▍       | 48/195 [00:00<00:00, 159.73it/s][A
Calculating viewed counts for every point:  33%|███▎      | 64/195 [00:00<00:00, 153.48it/s][A
Calculating viewed counts for every point:  42%|████▏     | 81/195 [00:00<00:00, 155.65it/s][A
Calculating viewed counts for every point:  50%|████▉     | 97/195 [00:00<00:00, 156.79it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 113/195 [00:00<00:00, 151.22it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 130/195 [00:00<00:00, 153.24it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 146/195 [00:00<00:00, 151.00it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 162/195 [00:01<00:00, 150.52it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 179/195 [00:01<00:00, 154.34it/s][A
Calculating viewed counts for every point: 100%|██████████| 195/195 [00:01<00:00, 154.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:09<04:15,  1.85s/it]detected_ratio_thres_value tensor(0.1395, device='cuda:0')
final masked points tensor(14343, device='cuda:0')
before filtering torch.Size([8, 173392])
after filtering torch.Size([6, 173392])
num_ins_points_after_filtering tensor([1403, 2620, 4626, 1244, 2384, 1092], device='cuda:0')
Working on scene0030_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0046_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 30], [12, 13, 14, 15, 18, 19], [16, 17], [20, 21, 22, 23, 24], [26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/249 [00:00<00:01, 136.47it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/249 [00:00<00:01, 148.54it/s][A
Calculating viewed counts for every point:  18%|█▊        | 46/249 [00:00<00:01, 150.87it/s][A
Calculating viewed counts for every point:  25%|██▍       | 62/249 [00:00<00:01, 152.44it/s][A
Calculating viewed counts for every point:  31%|███▏      | 78/249 [00:00<00:01, 148.67it/s][A
Calculating viewed counts for every point:  38%|███▊      | 94/249 [00:00<00:01, 151.63it/s][A
Calculating viewed counts for every point:  44%|████▍     | 110/249 [00:00<00:00, 145.36it/s][A
Calculating viewed counts for every point:  50%|█████     | 125/249 [00:00<00:00, 145.26it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 140/249 [00:00<00:00, 145.18it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 158/249 [00:01<00:00, 152.80it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 174/249 [00:01<00:00, 150.17it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 190/249 [00:01<00:00, 150.98it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 208/249 [00:01<00:00, 158.88it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 224/249 [00:01<00:00, 156.76it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 240/249 [00:01<00:00, 153.23it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:11<03:14,  1.43s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(16489, device='cuda:0')
before filtering torch.Size([5, 186857])
after filtering torch.Size([4, 186857])
num_ins_points_after_filtering tensor([3673, 6329, 4132, 1745], device='cuda:0')
Working on scene0050_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3], [5, 6], [7, 8, 9, 10, 11, 12, 13, 14], [15, 16], [17, 18, 19, 20, 33, 34, 35, 36, 37, 42, 44, 45, 46, 47, 48], [21, 29, 30, 31, 32], [22, 23, 24], [25, 50, 51, 52, 53, 54, 55, 56, 57], [26, 27], [38, 39, 40, 41, 49]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 197.19it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 190.89it/s][A
Calculating viewed counts for every point:  13%|█▎        | 61/466 [00:00<00:02, 194.21it/s][A
Calculating viewed counts for every point:  17%|█▋        | 81/466 [00:00<00:01, 192.50it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/466 [00:00<00:01, 194.03it/s][A
Calculating viewed counts for every point:  26%|██▌       | 121/466 [00:00<00:01, 195.81it/s][A
Calculating viewed counts for every point:  30%|███       | 141/466 [00:00<00:01, 188.98it/s][A
Calculating viewed counts for every point:  35%|███▍      | 163/466 [00:00<00:01, 197.78it/s][A
Calculating viewed counts for every point:  39%|███▉      | 183/466 [00:00<00:01, 182.94it/s][A
Calculating viewed counts for every point:  43%|████▎     | 202/466 [00:01<00:01, 175.88it/s][A
Calculating viewed counts for every point:  48%|████▊     | 222/466 [00:01<00:01, 181.12it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 241/466 [00:01<00:01, 183.02it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 263/466 [00:01<00:01, 193.04it/s][A
Calculating viewed counts for every point:  61%|██████    | 283/466 [00:01<00:00, 190.43it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 303/466 [00:01<00:00, 191.89it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 323/466 [00:01<00:00, 193.30it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 343/466 [00:01<00:00, 189.65it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 363/466 [00:01<00:00, 192.04it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 383/466 [00:02<00:00, 186.46it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 403/466 [00:02<00:00, 188.02it/s][A
Calculating viewed counts for every point:  91%|█████████ | 422/466 [00:02<00:00, 184.43it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 441/466 [00:02<00:00, 185.29it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 461/466 [00:02<00:00, 188.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:14<04:20,  1.93s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(10588, device='cuda:0')
before filtering torch.Size([10, 211406])
after filtering torch.Size([5, 211406])
num_ins_points_after_filtering tensor([ 804, 6241,  739,  562,  564], device='cuda:0')
Working on scene0063_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [17, 20]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 33/84 [00:00<00:00, 325.58it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 66/84 [00:00<00:00, 295.76it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:15<03:31,  1.58s/it]detected_ratio_thres_value tensor(0.5385, device='cuda:0')
final masked points tensor(4194, device='cuda:0')
before filtering torch.Size([3, 76966])
after filtering torch.Size([2, 76966])
num_ins_points_after_filtering tensor([ 594, 3599], device='cuda:0')
Working on scene0064_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0077_00 class refrigerator
masks_to_be_merged [[0, 1, 26, 27], [2, 3, 4, 6, 7, 8], [9, 11], [12, 13, 14, 15, 16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  48%|████▊     | 29/61 [00:00<00:00, 289.44it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:15<02:09,  1.02it/s]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(7066, device='cuda:0')
before filtering torch.Size([4, 92807])
after filtering torch.Size([3, 92807])
num_ins_points_after_filtering tensor([ 770, 1263, 3882], device='cuda:0')
Working on scene0081_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0084_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 39, 40, 41, 42, 43, 44], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 48, 49, 50, 51, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93], [45, 53, 54, 55], [46, 52, 87], [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [75, 76], [77, 78, 79, 80, 81, 82]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 22/198 [00:00<00:00, 219.42it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/198 [00:00<00:00, 209.94it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/198 [00:00<00:00, 213.83it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/198 [00:00<00:00, 196.01it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 108/198 [00:00<00:00, 181.56it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 129/198 [00:00<00:00, 188.13it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 149/198 [00:00<00:00, 190.57it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 171/198 [00:00<00:00, 196.30it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 191/198 [00:00<00:00, 192.26it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:18<02:18,  1.07s/it]detected_ratio_thres_value tensor(0.2903, device='cuda:0')
final masked points tensor(5912, device='cuda:0')
before filtering torch.Size([7, 116845])
after filtering torch.Size([3, 116845])
num_ins_points_after_filtering tensor([ 777, 3560, 1140], device='cuda:0')
Working on scene0086_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28], [18, 19], [20, 21], [22, 32, 33, 34, 35], [29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 20/143 [00:00<00:00, 198.28it/s][A
Calculating viewed counts for every point:  28%|██▊       | 40/143 [00:00<00:00, 188.10it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/143 [00:00<00:00, 189.31it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 79/143 [00:00<00:00, 182.29it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 99/143 [00:00<00:00, 184.64it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 118/143 [00:00<00:00, 186.20it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 137/143 [00:00<00:00, 185.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:19<02:24,  1.12s/it]detected_ratio_thres_value tensor(0.1786, device='cuda:0')
final masked points tensor(9087, device='cuda:0')
before filtering torch.Size([5, 124572])
after filtering torch.Size([3, 124572])
num_ins_points_after_filtering tensor([2370, 1626, 4197], device='cuda:0')
Working on scene0088_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0095_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:01, 145.48it/s][A
Calculating viewed counts for every point:  19%|█▊        | 31/166 [00:00<00:00, 152.85it/s][A
Calculating viewed counts for every point:  30%|███       | 50/166 [00:00<00:00, 167.53it/s][A
Calculating viewed counts for every point:  40%|████      | 67/166 [00:00<00:00, 164.20it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 87/166 [00:00<00:00, 172.55it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 105/166 [00:00<00:00, 166.08it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 122/166 [00:00<00:00, 159.41it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 139/166 [00:00<00:00, 162.09it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 156/166 [00:00<00:00, 161.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:20<02:01,  1.05it/s]detected_ratio_thres_value tensor(0.2917, device='cuda:0')
final masked points tensor(13071, device='cuda:0')
before filtering torch.Size([3, 214895])
after filtering torch.Size([3, 214895])
num_ins_points_after_filtering tensor([2648, 5893, 4527], device='cuda:0')
Working on scene0100_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4], [6, 7], [8, 9]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 30/102 [00:00<00:00, 288.65it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 66/102 [00:00<00:00, 328.08it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 99/102 [00:00<00:00, 311.30it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:21<01:48,  1.16it/s]detected_ratio_thres_value tensor(0.0645, device='cuda:0')
final masked points tensor(9247, device='cuda:0')
before filtering torch.Size([3, 52304])
after filtering torch.Size([3, 52304])
num_ins_points_after_filtering tensor([5910, 1537, 1070], device='cuda:0')
Working on scene0131_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 19], [18, 20, 21, 22, 23, 24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 21/108 [00:00<00:00, 202.68it/s][A
Calculating viewed counts for every point:  39%|███▉      | 42/108 [00:00<00:00, 197.96it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 62/108 [00:00<00:00, 198.04it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 82/108 [00:00<00:00, 197.43it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 104/108 [00:00<00:00, 204.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [00:22<01:50,  1.13it/s]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(5250, device='cuda:0')
before filtering torch.Size([4, 177091])
after filtering torch.Size([4, 177091])
num_ins_points_after_filtering tensor([ 230, 2174, 1553, 1293], device='cuda:0')
Working on scene0139_00 class refrigerator
masks_to_be_merged [[0, 110], [2, 106, 107, 108, 109], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 111, 112, 113, 114, 115], [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62], [61, 63, 67, 69], [64, 65, 66, 68]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▋       | 36/136 [00:00<00:00, 354.59it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 72/136 [00:00<00:00, 338.29it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 120/136 [00:00<00:00, 398.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:23<02:15,  1.10s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(18363, device='cuda:0')
before filtering torch.Size([6, 72007])
after filtering torch.Size([4, 72007])
num_ins_points_after_filtering tensor([2275, 8122, 6532,  720], device='cuda:0')
Working on scene0144_00 class refrigerator
masks_to_be_merged [[1, 2], [6, 7, 8], [10, 11], [14, 15, 16]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/144 [00:00<00:00, 229.87it/s][A
Calculating viewed counts for every point:  33%|███▎      | 47/144 [00:00<00:00, 231.53it/s][A
Calculating viewed counts for every point:  50%|█████     | 72/144 [00:00<00:00, 238.90it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 96/144 [00:00<00:00, 227.48it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 120/144 [00:00<00:00, 231.39it/s][A
Calculating viewed counts for every point: 100%|██████████| 144/144 [00:00<00:00, 227.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:24<02:09,  1.05s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(7868, device='cuda:0')
before filtering torch.Size([4, 126879])
after filtering torch.Size([4, 126879])
num_ins_points_after_filtering tensor([ 143, 2389,  771,   51], device='cuda:0')
Working on scene0146_00 class refrigerator
masks_to_be_merged [[0, 5], [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 29/141 [00:00<00:00, 279.62it/s][A
Calculating viewed counts for every point:  43%|████▎     | 60/141 [00:00<00:00, 296.46it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 90/141 [00:00<00:00, 291.85it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 121/141 [00:00<00:00, 294.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:26<02:09,  1.06s/it]detected_ratio_thres_value tensor(0.3438, device='cuda:0')
final masked points tensor(7399, device='cuda:0')
before filtering torch.Size([4, 60438])
after filtering torch.Size([2, 60438])
num_ins_points_after_filtering tensor([3285, 3812], device='cuda:0')
Working on scene0149_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76], [18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 36, 37, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110], [23, 24, 25, 31, 34, 35, 38, 40, 45], [53, 54, 55, 56, 57, 58, 88, 89], [59, 60, 61, 62, 63], [77, 78, 79, 80, 81, 82, 83], [90, 91, 92, 93], [98, 99, 100, 101]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 25/141 [00:00<00:00, 241.04it/s][A
Calculating viewed counts for every point:  35%|███▌      | 50/141 [00:00<00:00, 201.37it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 73/141 [00:00<00:00, 208.48it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 97/141 [00:00<00:00, 217.84it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 120/141 [00:00<00:00, 220.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:28<02:43,  1.35s/it]detected_ratio_thres_value tensor(0.3696, device='cuda:0')
final masked points tensor(10657, device='cuda:0')
before filtering torch.Size([8, 162396])
after filtering torch.Size([4, 162396])
num_ins_points_after_filtering tensor([3006, 2964, 1972, 1572], device='cuda:0')
Working on scene0153_00 class refrigerator
masks_to_be_merged [[0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [1, 2, 3], [15, 17], [16, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 31/59 [00:00<00:00, 304.67it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:28<02:08,  1.07s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(12608, device='cuda:0')
before filtering torch.Size([4, 47709])
after filtering torch.Size([3, 47709])
num_ins_points_after_filtering tensor([5912, 2659, 3272], device='cuda:0')
Working on scene0164_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 29, 31, 101, 110, 111, 158, 160], [8, 102, 103, 104, 105, 106, 107, 108, 109], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130], [24, 26, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 114], [37, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 60, 61, 62, 63, 64, 132, 133, 134, 135, 136, 137, 138, 139], [57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], [98, 99, 100, 159]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 36/189 [00:00<00:00, 353.30it/s][A
Calculating viewed counts for every point:  38%|███▊      | 72/189 [00:00<00:00, 327.65it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 106/189 [00:00<00:00, 328.44it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 139/189 [00:00<00:00, 315.06it/s][A
Calculating viewed counts for every point:  90%|█████████ | 171/189 [00:00<00:00, 308.32it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:31<03:02,  1.53s/it]detected_ratio_thres_value tensor(0.3636, device='cuda:0')
final masked points tensor(7811, device='cuda:0')
before filtering torch.Size([7, 94315])
after filtering torch.Size([4, 94315])
num_ins_points_after_filtering tensor([1580,  831,  450, 3606], device='cuda:0')
Working on scene0169_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/204 [00:00<00:01, 115.01it/s][A
Calculating viewed counts for every point:  14%|█▎        | 28/204 [00:00<00:01, 135.23it/s][A
Calculating viewed counts for every point:  21%|██        | 42/204 [00:00<00:01, 131.85it/s][A
Calculating viewed counts for every point:  27%|██▋       | 56/204 [00:00<00:01, 129.73it/s][A
Calculating viewed counts for every point:  34%|███▍      | 70/204 [00:00<00:01, 131.60it/s][A
Calculating viewed counts for every point:  41%|████      | 84/204 [00:00<00:00, 129.74it/s][A
Calculating viewed counts for every point:  48%|████▊     | 97/204 [00:00<00:00, 127.75it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 111/204 [00:00<00:00, 129.50it/s][A
Calculating viewed counts for every point:  61%|██████    | 124/204 [00:00<00:00, 129.13it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 137/204 [00:01<00:00, 127.61it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 151/204 [00:01<00:00, 130.03it/s][A
Calculating viewed counts for every point:  81%|████████  | 165/204 [00:01<00:00, 127.13it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 178/204 [00:01<00:00, 126.54it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 193/204 [00:01<00:00, 131.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:32<03:08,  1.60s/it]detected_ratio_thres_value tensor(0.0811, device='cuda:0')
final masked points tensor(3063, device='cuda:0')
before filtering torch.Size([1, 239354])
after filtering torch.Size([1, 239354])
num_ins_points_after_filtering tensor([2529], device='cuda:0')
Working on scene0187_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 13, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 21/227 [00:00<00:01, 204.95it/s][A
Calculating viewed counts for every point:  19%|█▊        | 42/227 [00:00<00:00, 204.63it/s][A
Calculating viewed counts for every point:  28%|██▊       | 63/227 [00:00<00:00, 206.42it/s][A
Calculating viewed counts for every point:  37%|███▋      | 84/227 [00:00<00:00, 205.55it/s][A
Calculating viewed counts for every point:  47%|████▋     | 106/227 [00:00<00:00, 208.79it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 127/227 [00:00<00:00, 208.67it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 148/227 [00:00<00:00, 203.77it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 169/227 [00:00<00:00, 202.51it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 190/227 [00:00<00:00, 200.49it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 211/227 [00:01<00:00, 199.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:34<03:00,  1.54s/it]detected_ratio_thres_value tensor(0.0600, device='cuda:0')
final masked points tensor(4111, device='cuda:0')
before filtering torch.Size([2, 173752])
after filtering torch.Size([1, 173752])
num_ins_points_after_filtering tensor([3287], device='cuda:0')
Working on scene0193_00 class refrigerator
masks_to_be_merged [[5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/72 [00:00<00:00, 178.69it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 40/72 [00:00<00:00, 200.50it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 61/72 [00:00<00:00, 199.38it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [00:34<02:27,  1.27s/it]Projecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [00:35<02:14,  1.17s/it]detected_ratio_thres_value tensor(0.0667, device='cuda:0')
final masked points tensor(8083, device='cuda:0')
before filtering torch.Size([1, 101783])
after filtering torch.Size([1, 101783])
num_ins_points_after_filtering tensor([3785], device='cuda:0')
Working on scene0196_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0203_00 class refrigerator
masks_to_be_merged [[0, 2, 3, 4, 5, 13, 14, 15], [7, 17, 18], [10, 11]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 21/146 [00:00<00:00, 204.71it/s][A
Calculating viewed counts for every point:  29%|██▉       | 42/146 [00:00<00:00, 192.35it/s][A
Calculating viewed counts for every point:  44%|████▍     | 64/146 [00:00<00:00, 200.75it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 85/146 [00:00<00:00, 192.63it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 105/146 [00:00<00:00, 188.69it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 126/146 [00:00<00:00, 192.47it/s][A
Calculating viewed counts for every point: 100%|██████████| 146/146 [00:00<00:00, 189.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:36<02:06,  1.11s/it]detected_ratio_thres_value tensor(0.1316, device='cuda:0')
final masked points tensor(7001, device='cuda:0')
before filtering torch.Size([3, 205756])
after filtering torch.Size([2, 205756])
num_ins_points_after_filtering tensor([1225, 2687], device='cuda:0')
Working on scene0207_00 class refrigerator
masks_to_be_merged [[2, 3, 4, 5], [6, 7, 8], [9, 10, 11, 12, 14, 15, 16, 19], [13, 17, 18, 20], [22, 27, 28, 29, 32, 34, 35], [23, 24, 25, 26], [31, 33], [36, 37, 38, 39, 40, 41, 42, 43], [45, 46, 47, 48, 49, 50], [51, 52]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 11/199 [00:00<00:01, 103.51it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/199 [00:00<00:01, 111.14it/s][A
Calculating viewed counts for every point:  18%|█▊        | 36/199 [00:00<00:01, 115.52it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/199 [00:00<00:01, 115.50it/s][A
Calculating viewed counts for every point:  30%|███       | 60/199 [00:00<00:01, 109.76it/s][A
Calculating viewed counts for every point:  36%|███▌      | 72/199 [00:00<00:01, 108.35it/s][A
Calculating viewed counts for every point:  42%|████▏     | 83/199 [00:00<00:01, 107.61it/s][A
Calculating viewed counts for every point:  48%|████▊     | 95/199 [00:00<00:00, 111.06it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/199 [00:00<00:00, 110.77it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 119/199 [00:01<00:00, 111.52it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 132/199 [00:01<00:00, 115.04it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 144/199 [00:01<00:00, 111.85it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 156/199 [00:01<00:00, 110.67it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 168/199 [00:01<00:00, 113.27it/s][A
Calculating viewed counts for every point:  90%|█████████ | 180/199 [00:01<00:00, 110.06it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 192/199 [00:01<00:00, 112.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:39<02:56,  1.56s/it]detected_ratio_thres_value tensor(0.1622, device='cuda:0')
final masked points tensor(34358, device='cuda:0')
before filtering torch.Size([10, 304396])
after filtering torch.Size([9, 304396])
num_ins_points_after_filtering tensor([3497,  346, 2701, 2105, 1589, 7561, 6261, 5284, 2414], device='cuda:0')
Working on scene0208_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3], [4, 6, 7, 8, 9, 32, 33, 34, 35], [16, 17, 18, 19, 20, 21, 22, 23, 59, 60, 61, 62], [25, 26, 27, 28, 29, 30], [39, 40, 41], [65, 66, 67, 68]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/239 [00:00<00:02, 89.82it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/239 [00:00<00:02, 95.71it/s][A
Calculating viewed counts for every point:  12%|█▏        | 29/239 [00:00<00:02, 97.44it/s][A
Calculating viewed counts for every point:  17%|█▋        | 41/239 [00:00<00:01, 103.90it/s][A
Calculating viewed counts for every point:  22%|██▏       | 52/239 [00:00<00:01, 104.10it/s][A
Calculating viewed counts for every point:  26%|██▋       | 63/239 [00:00<00:01, 102.12it/s][A
Calculating viewed counts for every point:  31%|███       | 74/239 [00:00<00:01, 99.53it/s] [A
Calculating viewed counts for every point:  35%|███▌      | 84/239 [00:00<00:01, 94.46it/s][A
Calculating viewed counts for every point:  40%|████      | 96/239 [00:00<00:01, 99.64it/s][A
Calculating viewed counts for every point:  45%|████▍     | 107/239 [00:01<00:01, 101.06it/s][A
Calculating viewed counts for every point:  49%|████▉     | 118/239 [00:01<00:01, 98.52it/s] [A
Calculating viewed counts for every point:  54%|█████▍    | 129/239 [00:01<00:01, 100.24it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 140/239 [00:01<00:01, 98.74it/s] [A
Calculating viewed counts for every point:  63%|██████▎   | 150/239 [00:01<00:00, 99.09it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 161/239 [00:01<00:00, 101.15it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 172/239 [00:01<00:00, 96.54it/s] [A
Calculating viewed counts for every point:  76%|███████▌  | 182/239 [00:01<00:00, 95.59it/s][A
Calculating viewed counts for every point:  81%|████████  | 194/239 [00:01<00:00, 100.42it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 205/239 [00:02<00:00, 98.57it/s] [A
Calculating viewed counts for every point:  90%|████████▉ | 215/239 [00:02<00:00, 97.21it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 227/239 [00:02<00:00, 98.81it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 238/239 [00:02<00:00, 101.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [00:43<04:21,  2.34s/it]detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(73396, device='cuda:0')
before filtering torch.Size([6, 407386])
after filtering torch.Size([3, 407386])
num_ins_points_after_filtering tensor([17085, 31922,  3746], device='cuda:0')
Working on scene0217_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [7, 10, 12, 13, 38, 39, 40, 41], [15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 18/125 [00:00<00:00, 178.36it/s][A
Calculating viewed counts for every point:  30%|██▉       | 37/125 [00:00<00:00, 179.49it/s][A
Calculating viewed counts for every point:  45%|████▍     | 56/125 [00:00<00:00, 182.58it/s][A
Calculating viewed counts for every point:  60%|██████    | 75/125 [00:00<00:00, 181.95it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 95/125 [00:00<00:00, 187.65it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 116/125 [00:00<00:00, 192.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [00:44<03:38,  1.97s/it]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(9991, device='cuda:0')
before filtering torch.Size([4, 126385])
after filtering torch.Size([4, 126385])
num_ins_points_after_filtering tensor([1976,  653, 2575, 4745], device='cuda:0')
Working on scene0221_00 class refrigerator
masks_to_be_merged [[0, 19, 20, 23], [1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11], [13, 14, 15, 16, 17, 18], [21, 22]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/98 [00:00<00:00, 211.57it/s][A
Calculating viewed counts for every point:  45%|████▍     | 44/98 [00:00<00:00, 208.91it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 66/98 [00:00<00:00, 209.61it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 87/98 [00:00<00:00, 200.61it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [00:45<02:59,  1.63s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(7140, device='cuda:0')
before filtering torch.Size([5, 185828])
after filtering torch.Size([3, 185828])
num_ins_points_after_filtering tensor([ 472, 1356, 3505], device='cuda:0')
Working on scene0222_00 class refrigerator
masks_to_be_merged [[0, 1, 27], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], [54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], [105, 106, 107, 108, 109, 110, 111, 112, 113], [117, 118, 119, 123, 124], [120, 121, 122], [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 146, 147, 148], [144, 145]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/543 [00:00<00:03, 156.03it/s][A
Calculating viewed counts for every point:   6%|▋         | 35/543 [00:00<00:02, 172.16it/s][A
Calculating viewed counts for every point:  10%|█         | 55/543 [00:00<00:02, 179.90it/s][A
Calculating viewed counts for every point:  13%|█▎        | 73/543 [00:00<00:02, 170.85it/s][A
Calculating viewed counts for every point:  17%|█▋        | 91/543 [00:00<00:02, 157.25it/s][A
Calculating viewed counts for every point:  20%|█▉        | 108/543 [00:00<00:02, 161.14it/s][A
Calculating viewed counts for every point:  23%|██▎       | 125/543 [00:00<00:02, 158.39it/s][A
Calculating viewed counts for every point:  26%|██▌       | 142/543 [00:00<00:02, 158.87it/s][A
Calculating viewed counts for every point:  30%|██▉       | 162/543 [00:00<00:02, 169.07it/s][A
Calculating viewed counts for every point:  33%|███▎      | 180/543 [00:01<00:02, 172.17it/s][A
Calculating viewed counts for every point:  37%|███▋      | 201/543 [00:01<00:01, 182.73it/s][A
Calculating viewed counts for every point:  41%|████      | 220/543 [00:01<00:01, 172.89it/s][A
Calculating viewed counts for every point:  44%|████▍     | 239/543 [00:01<00:01, 176.62it/s][A
Calculating viewed counts for every point:  47%|████▋     | 257/543 [00:01<00:01, 172.04it/s][A
Calculating viewed counts for every point:  51%|█████     | 275/543 [00:01<00:01, 168.58it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 293/543 [00:01<00:01, 171.02it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 311/543 [00:01<00:01, 167.95it/s][A
Calculating viewed counts for every point:  60%|██████    | 328/543 [00:01<00:01, 163.91it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 346/543 [00:02<00:01, 166.21it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 363/543 [00:02<00:01, 158.15it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 380/543 [00:02<00:01, 160.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 398/543 [00:02<00:00, 163.96it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 416/543 [00:02<00:00, 167.00it/s][A
Calculating viewed counts for every point:  80%|████████  | 436/543 [00:02<00:00, 173.73it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 454/543 [00:02<00:00, 167.28it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 471/543 [00:02<00:00, 162.95it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 488/543 [00:02<00:00, 163.80it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 505/543 [00:03<00:00, 155.24it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 521/543 [00:03<00:00, 147.64it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 538/543 [00:03<00:00, 149.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [00:51<05:16,  2.90s/it]detected_ratio_thres_value tensor(0.1884, device='cuda:0')
final masked points tensor(14772, device='cuda:0')
before filtering torch.Size([9, 234831])
after filtering torch.Size([4, 234831])
num_ins_points_after_filtering tensor([1632, 2285, 6952, 1295], device='cuda:0')
Working on scene0231_00 class refrigerator
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 9, 42, 43], [10, 11], [12, 13, 18, 19, 20, 21, 22, 40, 44, 45, 46, 47, 114, 115, 116, 117, 118, 147, 148, 149, 150], [14, 36, 37, 38], [15, 34, 35], [16, 17], [23, 24, 26, 27, 48, 49, 50], [51, 52], [61, 62], [64, 85, 87], [65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], [74, 75], [99, 100, 135, 137, 139], [101, 102, 103, 104, 105, 106], [109, 111, 112], [120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 143, 144], [124, 141, 142], [145, 146]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 95.96it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/444 [00:00<00:04, 105.25it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 106.45it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 103.14it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 99.05it/s] [A
Calculating viewed counts for every point:  15%|█▍        | 66/444 [00:00<00:03, 102.51it/s][A
Calculating viewed counts for every point:  18%|█▊        | 78/444 [00:00<00:03, 106.41it/s][A
Calculating viewed counts for every point:  20%|██        | 89/444 [00:00<00:03, 105.08it/s][A
Calculating viewed counts for every point:  23%|██▎       | 100/444 [00:00<00:03, 102.27it/s][A
Calculating viewed counts for every point:  25%|██▌       | 111/444 [00:01<00:03, 98.95it/s] [A
Calculating viewed counts for every point:  27%|██▋       | 122/444 [00:01<00:03, 99.95it/s][A
Calculating viewed counts for every point:  30%|██▉       | 133/444 [00:01<00:03, 94.50it/s][A
Calculating viewed counts for every point:  32%|███▏      | 144/444 [00:01<00:03, 98.59it/s][A
Calculating viewed counts for every point:  35%|███▍      | 155/444 [00:01<00:02, 100.91it/s][A
Calculating viewed counts for every point:  37%|███▋      | 166/444 [00:01<00:02, 101.20it/s][A
Calculating viewed counts for every point:  40%|███▉      | 177/444 [00:01<00:02, 98.96it/s] [A
Calculating viewed counts for every point:  42%|████▏     | 188/444 [00:01<00:02, 101.84it/s][A
Calculating viewed counts for every point:  45%|████▍     | 199/444 [00:01<00:02, 101.31it/s][A
Calculating viewed counts for every point:  47%|████▋     | 210/444 [00:02<00:02, 99.56it/s] [A
Calculating viewed counts for every point:  50%|████▉     | 220/444 [00:02<00:02, 98.01it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 230/444 [00:02<00:02, 98.23it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 241/444 [00:02<00:02, 100.04it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 253/444 [00:02<00:01, 103.76it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 264/444 [00:02<00:01, 102.09it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 276/444 [00:02<00:01, 104.85it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 287/444 [00:02<00:01, 103.03it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 298/444 [00:02<00:01, 101.93it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 309/444 [00:03<00:01, 96.54it/s] [A
Calculating viewed counts for every point:  72%|███████▏  | 319/444 [00:03<00:01, 94.52it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 329/444 [00:03<00:01, 94.68it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 339/444 [00:03<00:01, 92.11it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 351/444 [00:03<00:00, 97.83it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 363/444 [00:03<00:00, 101.45it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 374/444 [00:03<00:00, 101.48it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 385/444 [00:03<00:00, 98.17it/s] [A
Calculating viewed counts for every point:  89%|████████▉ | 395/444 [00:03<00:00, 97.11it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 407/444 [00:04<00:00, 101.24it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 418/444 [00:04<00:00, 98.49it/s] [A
Calculating viewed counts for every point:  96%|█████████▋| 428/444 [00:04<00:00, 98.61it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 439/444 [00:04<00:00, 101.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [00:59<07:48,  4.34s/it]detected_ratio_thres_value tensor(0.1724, device='cuda:0')
final masked points tensor(11079, device='cuda:0')
before filtering torch.Size([18, 419537])
after filtering torch.Size([4, 419537])
num_ins_points_after_filtering tensor([1051,  101, 4897, 1169], device='cuda:0')
Working on scene0246_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4], [6, 8, 9, 10, 11, 12], [16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [21, 22, 23, 24, 25, 26], [40, 41, 42, 43, 45, 46, 47, 48, 49, 55, 56, 57, 58, 59, 60], [51, 52, 53, 54], [62, 63], [64, 65], [66, 67, 68], [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86], [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/296 [00:00<00:01, 167.83it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/296 [00:00<00:01, 171.50it/s][A
Calculating viewed counts for every point:  18%|█▊        | 54/296 [00:00<00:01, 177.57it/s][A
Calculating viewed counts for every point:  24%|██▍       | 72/296 [00:00<00:01, 178.31it/s][A
Calculating viewed counts for every point:  31%|███       | 91/296 [00:00<00:01, 182.31it/s][A
Calculating viewed counts for every point:  38%|███▊      | 112/296 [00:00<00:00, 190.97it/s][A
Calculating viewed counts for every point:  45%|████▍     | 132/296 [00:00<00:00, 191.19it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 152/296 [00:00<00:00, 188.52it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 171/296 [00:00<00:00, 188.94it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 194/296 [00:01<00:00, 199.59it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 214/296 [00:01<00:00, 197.70it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 234/296 [00:01<00:00, 198.00it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 255/296 [00:01<00:00, 199.14it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 276/296 [00:01<00:00, 202.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [01:02<07:00,  3.93s/it]detected_ratio_thres_value tensor(0.1408, device='cuda:0')
final masked points tensor(24604, device='cuda:0')
before filtering torch.Size([11, 201062])
after filtering torch.Size([9, 201062])
num_ins_points_after_filtering tensor([ 773, 3517, 3969, 2153,  825,  474, 1627, 6765,  719], device='cuda:0')
Working on scene0249_00 class refrigerator
masks_to_be_merged [[0, 1], [8, 9, 10], [12, 13], [19, 20, 21, 23, 24, 27, 29], [22, 25, 26, 28, 30]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 14/274 [00:00<00:01, 138.15it/s][A
Calculating viewed counts for every point:  10%|█         | 28/274 [00:00<00:01, 125.88it/s][A
Calculating viewed counts for every point:  15%|█▍        | 41/274 [00:00<00:01, 116.94it/s][A
Calculating viewed counts for every point:  19%|█▉        | 53/274 [00:00<00:02, 108.65it/s][A
Calculating viewed counts for every point:  23%|██▎       | 64/274 [00:00<00:01, 108.18it/s][A
Calculating viewed counts for every point:  28%|██▊       | 76/274 [00:00<00:01, 107.61it/s][A
Calculating viewed counts for every point:  32%|███▏      | 89/274 [00:00<00:01, 112.33it/s][A
Calculating viewed counts for every point:  37%|███▋      | 101/274 [00:00<00:01, 109.09it/s][A
Calculating viewed counts for every point:  42%|████▏     | 114/274 [00:01<00:01, 114.19it/s][A
Calculating viewed counts for every point:  46%|████▋     | 127/274 [00:01<00:01, 116.89it/s][A
Calculating viewed counts for every point:  51%|█████     | 139/274 [00:01<00:01, 107.82it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 151/274 [00:01<00:01, 109.53it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 164/274 [00:01<00:00, 112.65it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 176/274 [00:01<00:00, 109.86it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 188/274 [00:01<00:00, 109.83it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 200/274 [00:01<00:00, 111.12it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 212/274 [00:01<00:00, 109.45it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 224/274 [00:02<00:00, 108.94it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 238/274 [00:02<00:00, 116.23it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 251/274 [00:02<00:00, 119.49it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 265/274 [00:02<00:00, 124.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [01:05<06:25,  3.64s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(6764, device='cuda:0')
before filtering torch.Size([5, 331031])
after filtering torch.Size([5, 331031])
num_ins_points_after_filtering tensor([1974,   90,  190, 2472, 1231], device='cuda:0')
Working on scene0251_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21], [22, 23], [24, 25], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 14/155 [00:00<00:01, 133.40it/s][A
Calculating viewed counts for every point:  18%|█▊        | 28/155 [00:00<00:00, 134.40it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/155 [00:00<00:00, 133.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 57/155 [00:00<00:00, 138.90it/s][A
Calculating viewed counts for every point:  46%|████▋     | 72/155 [00:00<00:00, 141.72it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 87/155 [00:00<00:00, 136.11it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 101/155 [00:00<00:00, 135.21it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 115/155 [00:00<00:00, 136.61it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 129/155 [00:00<00:00, 128.99it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 144/155 [00:01<00:00, 131.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [01:06<05:22,  3.08s/it]detected_ratio_thres_value tensor(0.2121, device='cuda:0')
final masked points tensor(14950, device='cuda:0')
before filtering torch.Size([5, 226765])
after filtering torch.Size([4, 226765])
num_ins_points_after_filtering tensor([2170,  981, 3102, 8567], device='cuda:0')
Working on scene0256_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 9, 10, 19, 20], [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31], [6, 7, 8], [26, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 23/156 [00:00<00:00, 229.95it/s][A
Calculating viewed counts for every point:  30%|███       | 47/156 [00:00<00:00, 232.41it/s][A
Calculating viewed counts for every point:  46%|████▌     | 72/156 [00:00<00:00, 238.48it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 100/156 [00:00<00:00, 254.52it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 132/156 [00:00<00:00, 277.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [01:07<04:15,  2.46s/it]detected_ratio_thres_value tensor(0.1077, device='cuda:0')
final masked points tensor(6951, device='cuda:0')
before filtering torch.Size([4, 108517])
after filtering torch.Size([3, 108517])
num_ins_points_after_filtering tensor([1096, 1622, 3474], device='cuda:0')
Working on scene0257_00 class refrigerator
masks_to_be_merged [[1, 2, 3], [4, 5, 6, 7, 8]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 18/165 [00:00<00:00, 179.19it/s][A
Calculating viewed counts for every point:  22%|██▏       | 37/165 [00:00<00:00, 182.85it/s][A
Calculating viewed counts for every point:  35%|███▍      | 57/165 [00:00<00:00, 188.44it/s][A
Calculating viewed counts for every point:  47%|████▋     | 78/165 [00:00<00:00, 195.66it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 102/165 [00:00<00:00, 208.58it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 123/165 [00:00<00:00, 207.70it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 148/165 [00:00<00:00, 218.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [01:08<03:25,  2.00s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(9076, device='cuda:0')
before filtering torch.Size([2, 180928])
after filtering torch.Size([2, 180928])
num_ins_points_after_filtering tensor([5228, 3287], device='cuda:0')
Working on scene0277_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 24, 25, 26, 27, 28, 46, 47], [13, 14, 32, 34, 35, 36, 37, 38], [15, 17], [16, 18, 19, 20, 21, 22, 39, 40, 41], [31, 33], [42, 43, 44, 45]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/115 [00:00<00:00, 249.31it/s][A
Calculating viewed counts for every point:  43%|████▎     | 50/115 [00:00<00:00, 218.61it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 74/115 [00:00<00:00, 224.81it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 97/115 [00:00<00:00, 224.24it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [01:09<02:51,  1.69s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(14493, device='cuda:0')
before filtering torch.Size([6, 79184])
after filtering torch.Size([4, 79184])
num_ins_points_after_filtering tensor([3726, 3469, 5014, 1299], device='cuda:0')
Working on scene0278_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [8, 36, 37], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 31/80 [00:00<00:00, 307.36it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 67/80 [00:00<00:00, 337.12it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [01:10<02:20,  1.39s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(8568, device='cuda:0')
before filtering torch.Size([3, 77020])
after filtering torch.Size([2, 77020])
num_ins_points_after_filtering tensor([4549, 4018], device='cuda:0')
Working on scene0300_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 7], [8, 9, 10, 11], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 26/175 [00:00<00:00, 257.46it/s][A
Calculating viewed counts for every point:  30%|██▉       | 52/175 [00:00<00:00, 242.21it/s][A
Calculating viewed counts for every point:  46%|████▌     | 80/175 [00:00<00:00, 254.58it/s][A
Calculating viewed counts for every point:  61%|██████    | 106/175 [00:00<00:00, 243.84it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 132/175 [00:00<00:00, 248.82it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 157/175 [00:00<00:00, 246.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [01:11<02:06,  1.27s/it]detected_ratio_thres_value tensor(0.0690, device='cuda:0')
final masked points tensor(13235, device='cuda:0')
before filtering torch.Size([4, 140216])
after filtering torch.Size([3, 140216])
num_ins_points_after_filtering tensor([8368, 3036, 1192], device='cuda:0')
Working on scene0304_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95], [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 29, 35, 36, 37, 38, 39, 51, 54, 55, 56, 96, 97, 98, 102, 104, 105, 106, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], [22, 24, 27, 28, 30, 31, 32, 33, 34, 103, 107, 108, 110], [57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73], [76, 77, 78, 79, 80, 81], [112, 113]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 20/178 [00:00<00:00, 194.20it/s][A
Calculating viewed counts for every point:  22%|██▏       | 40/178 [00:00<00:00, 192.38it/s][A
Calculating viewed counts for every point:  35%|███▌      | 63/178 [00:00<00:00, 206.35it/s][A
Calculating viewed counts for every point:  48%|████▊     | 86/178 [00:00<00:00, 212.43it/s][A
Calculating viewed counts for every point:  61%|██████    | 108/178 [00:00<00:00, 211.59it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 130/178 [00:00<00:00, 205.03it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 151/178 [00:00<00:00, 201.07it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 174/178 [00:00<00:00, 206.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [01:14<02:52,  1.74s/it]detected_ratio_thres_value tensor(0.3600, device='cuda:0')
final masked points tensor(26796, device='cuda:0')
before filtering torch.Size([6, 164016])
after filtering torch.Size([4, 164016])
num_ins_points_after_filtering tensor([11318,  6436,  1572,  3960], device='cuda:0')
Working on scene0307_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 29, 30, 31, 32, 33, 34, 35, 119, 133, 134, 136, 137, 140], [4, 144, 145, 146, 147], [7, 8, 9, 10, 11, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], [14, 15, 16, 17, 18], [20, 21, 22, 23, 24, 25, 26, 27, 28, 122, 124, 132, 135, 138, 139, 141, 142], [36, 37, 38, 39, 40, 41, 42, 148, 149, 150], [74, 75, 76, 77, 78], [79, 80, 81, 82, 83, 84, 85, 86], [87, 88, 90, 91, 93, 95, 97, 99, 100, 102], [94, 96, 98, 101], [104, 105, 106], [123, 125, 126, 127, 128, 129, 130, 131]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 109.14it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 103.00it/s][A
Calculating viewed counts for every point:  16%|█▌        | 33/205 [00:00<00:01, 95.10it/s] [A
Calculating viewed counts for every point:  21%|██▏       | 44/205 [00:00<00:01, 99.63it/s][A
Calculating viewed counts for every point:  27%|██▋       | 55/205 [00:00<00:01, 96.48it/s][A
Calculating viewed counts for every point:  32%|███▏      | 65/205 [00:00<00:01, 94.45it/s][A
Calculating viewed counts for every point:  37%|███▋      | 76/205 [00:00<00:01, 98.67it/s][A
Calculating viewed counts for every point:  42%|████▏     | 86/205 [00:00<00:01, 95.13it/s][A
Calculating viewed counts for every point:  47%|████▋     | 96/205 [00:00<00:01, 93.77it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 106/205 [00:01<00:01, 92.48it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 116/205 [00:01<00:00, 90.62it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 126/205 [00:01<00:00, 91.01it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 136/205 [00:01<00:00, 93.26it/s][A
Calculating viewed counts for every point:  71%|███████   | 146/205 [00:01<00:00, 90.33it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 156/205 [00:01<00:00, 87.27it/s][A
Calculating viewed counts for every point:  80%|████████  | 165/205 [00:01<00:00, 85.93it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 175/205 [00:01<00:00, 87.81it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 184/205 [00:02<00:00, 86.43it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 194/205 [00:02<00:00, 87.21it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 204/205 [00:02<00:00, 90.15it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [01:19<04:33,  2.79s/it]detected_ratio_thres_value tensor(0.3235, device='cuda:0')
final masked points tensor(37314, device='cuda:0')
before filtering torch.Size([12, 371616])
after filtering torch.Size([8, 371616])
num_ins_points_after_filtering tensor([2388, 8606, 2562, 4031, 4555, 2246, 2668, 3731], device='cuda:0')
Working on scene0314_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0316_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 8, 11, 29, 31, 34], [6, 7, 9, 10, 12, 13, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36], [14, 37], [15, 16, 17, 18, 19], [20, 21, 22]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 24/77 [00:00<00:00, 232.31it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 48/77 [00:00<00:00, 229.74it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 73/77 [00:00<00:00, 235.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [01:20<02:43,  1.70s/it]detected_ratio_thres_value tensor(0.2917, device='cuda:0')
final masked points tensor(8531, device='cuda:0')
before filtering torch.Size([5, 78769])
after filtering torch.Size([4, 78769])
num_ins_points_after_filtering tensor([1713, 3973, 1356, 1354], device='cuda:0')
Working on scene0328_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 64], [8, 19, 20, 21, 31, 32, 62, 63], [13, 14, 42, 43, 44, 46, 47], [15, 16, 17, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45], [23, 61], [24, 25, 26, 27, 28, 29, 30, 54, 55, 56, 57, 59, 60]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 27/142 [00:00<00:00, 267.54it/s][A
Calculating viewed counts for every point:  38%|███▊      | 54/142 [00:00<00:00, 259.68it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 87/142 [00:00<00:00, 287.13it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 116/142 [00:00<00:00, 280.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [01:21<02:31,  1.60s/it]detected_ratio_thres_value tensor(0.1724, device='cuda:0')
final masked points tensor(17988, device='cuda:0')
before filtering torch.Size([6, 111467])
after filtering torch.Size([4, 111467])
num_ins_points_after_filtering tensor([4412, 2670, 6948, 2713], device='cuda:0')
Working on scene0329_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 11, 12, 13, 14, 43, 44, 45, 46], [5, 36], [7, 8, 9, 37, 38, 39, 40, 41, 42], [10, 33, 34, 35], [15, 16, 17], [18, 19, 20], [22, 23, 24, 25], [26, 27], [29, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/156 [00:00<00:01, 126.19it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:01, 117.86it/s][A
Calculating viewed counts for every point:  25%|██▌       | 39/156 [00:00<00:00, 122.77it/s][A
Calculating viewed counts for every point:  33%|███▎      | 52/156 [00:00<00:00, 120.65it/s][A
Calculating viewed counts for every point:  42%|████▏     | 65/156 [00:00<00:00, 116.87it/s][A
Calculating viewed counts for every point:  50%|█████     | 78/156 [00:00<00:00, 118.82it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 90/156 [00:00<00:00, 118.60it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 103/156 [00:00<00:00, 121.12it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 116/156 [00:00<00:00, 116.76it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 128/156 [00:01<00:00, 114.76it/s][A
Calculating viewed counts for every point:  90%|█████████ | 141/156 [00:01<00:00, 117.14it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 153/156 [00:01<00:00, 114.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [01:23<02:44,  1.75s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(33839, device='cuda:0')
before filtering torch.Size([9, 355413])
after filtering torch.Size([7, 355413])
num_ins_points_after_filtering tensor([10228,  2973,  8622,  2002,  5263,   907,  3157], device='cuda:0')
Working on scene0334_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0338_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 4, 7, 10, 13, 36, 37, 40, 42, 44, 47, 49, 52], [3, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 38, 39, 41, 43, 45, 46, 48, 50, 51, 53, 54, 57], [18, 19, 20, 21, 22, 23, 24, 25, 55, 56, 58, 59, 60, 61], [26, 62, 63, 64, 65, 66, 67, 68], [27, 31, 32, 33], [28, 29], [69, 70, 71]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 31/81 [00:00<00:00, 307.21it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 62/81 [00:00<00:00, 284.71it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [01:25<01:56,  1.27s/it]detected_ratio_thres_value tensor(0.4091, device='cuda:0')
final masked points tensor(12342, device='cuda:0')
before filtering torch.Size([7, 106339])
after filtering torch.Size([4, 106339])
num_ins_points_after_filtering tensor([2425, 3106, 4622,  429], device='cuda:0')
Working on scene0342_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 32/93 [00:00<00:00, 312.23it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 64/93 [00:00<00:00, 279.87it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  36%|███▌      | 51/142 [01:25<01:35,  1.05s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(1214, device='cuda:0')
before filtering torch.Size([1, 89958])
after filtering torch.Size([1, 89958])
num_ins_points_after_filtering tensor([1214], device='cuda:0')
Working on scene0343_00 class refrigerator
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 30, 31], [8, 33], [9, 10, 12, 32, 36, 37], [11, 13, 14, 34, 35, 38, 39], [15, 17, 18, 19], [20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 23/124 [00:00<00:00, 220.16it/s][A
Calculating viewed counts for every point:  37%|███▋      | 46/124 [00:00<00:00, 198.82it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 70/124 [00:00<00:00, 212.53it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 92/124 [00:00<00:00, 200.26it/s][A
Calculating viewed counts for every point:  91%|█████████ | 113/124 [00:00<00:00, 198.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [01:26<01:38,  1.09s/it]detected_ratio_thres_value tensor(0.1562, device='cuda:0')
final masked points tensor(21172, device='cuda:0')
before filtering torch.Size([6, 165618])
after filtering torch.Size([4, 165618])
num_ins_points_after_filtering tensor([8861, 2080, 4695, 4131], device='cuda:0')
Working on scene0351_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], [9, 10, 11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 15/147 [00:00<00:00, 142.58it/s][A
Calculating viewed counts for every point:  22%|██▏       | 32/147 [00:00<00:00, 150.94it/s][A
Calculating viewed counts for every point:  34%|███▍      | 50/147 [00:00<00:00, 161.46it/s][A
Calculating viewed counts for every point:  46%|████▌     | 67/147 [00:00<00:00, 155.56it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 84/147 [00:00<00:00, 158.95it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 100/147 [00:00<00:00, 156.17it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 116/147 [00:00<00:00, 155.17it/s][A
Calculating viewed counts for every point:  90%|█████████ | 133/147 [00:00<00:00, 158.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [01:27<01:43,  1.16s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(8117, device='cuda:0')
before filtering torch.Size([2, 172134])
after filtering torch.Size([2, 172134])
num_ins_points_after_filtering tensor([5514, 2571], device='cuda:0')
Working on scene0353_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 72], [8, 9, 10, 11], [12, 13, 14, 15, 64, 65, 66, 67, 68, 69, 70, 71], [16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [31, 32, 33, 34], [36, 37], [53, 61], [57, 58], [59, 60], [62, 63]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 19/299 [00:00<00:01, 189.83it/s][A
Calculating viewed counts for every point:  13%|█▎        | 38/299 [00:00<00:01, 187.85it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/299 [00:00<00:01, 181.98it/s][A
Calculating viewed counts for every point:  25%|██▌       | 76/299 [00:00<00:01, 168.21it/s][A
Calculating viewed counts for every point:  31%|███       | 93/299 [00:00<00:01, 163.97it/s][A
Calculating viewed counts for every point:  38%|███▊      | 114/299 [00:00<00:01, 176.50it/s][A
Calculating viewed counts for every point:  44%|████▍     | 132/299 [00:00<00:00, 172.06it/s][A
Calculating viewed counts for every point:  51%|█████     | 151/299 [00:00<00:00, 175.20it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 170/299 [00:00<00:00, 177.57it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 188/299 [00:01<00:00, 169.27it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 207/299 [00:01<00:00, 174.06it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 225/299 [00:01<00:00, 174.88it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 245/299 [00:01<00:00, 180.40it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 264/299 [00:01<00:00, 182.05it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 283/299 [00:01<00:00, 181.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [01:30<02:18,  1.57s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(10470, device='cuda:0')
before filtering torch.Size([10, 208782])
after filtering torch.Size([4, 208782])
num_ins_points_after_filtering tensor([ 579, 1579, 6319,  324], device='cuda:0')
Working on scene0354_00 class refrigerator
masks_to_be_merged [[2, 3]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 26/113 [00:00<00:00, 255.71it/s][A
Calculating viewed counts for every point:  47%|████▋     | 53/113 [00:00<00:00, 262.79it/s][A
Calculating viewed counts for every point:  71%|███████   | 80/113 [00:00<00:00, 264.58it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 107/113 [00:00<00:00, 258.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [01:31<01:58,  1.36s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(928, device='cuda:0')
before filtering torch.Size([1, 110569])
after filtering torch.Size([1, 110569])
num_ins_points_after_filtering tensor([692], device='cuda:0')
Working on scene0355_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [13, 14]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 22/115 [00:00<00:00, 218.30it/s][A
Calculating viewed counts for every point:  38%|███▊      | 44/115 [00:00<00:00, 215.84it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 71/115 [00:00<00:00, 236.87it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 95/115 [00:00<00:00, 225.83it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [01:32<01:41,  1.19s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(2497, device='cuda:0')
before filtering torch.Size([2, 136135])
after filtering torch.Size([1, 136135])
num_ins_points_after_filtering tensor([2483], device='cuda:0')
Working on scene0356_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 31, 32], [4, 5, 33], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [21, 23, 25, 26, 27, 46, 47, 48, 49], [28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 235.57it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 222.93it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 72/136 [00:00<00:00, 228.29it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 95/136 [00:00<00:00, 216.49it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 117/136 [00:00<00:00, 214.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [01:33<01:40,  1.19s/it]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(5186, device='cuda:0')
before filtering torch.Size([5, 81172])
after filtering torch.Size([2, 81172])
num_ins_points_after_filtering tensor([2099, 2133], device='cuda:0')
Working on scene0357_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 37, 38, 39, 40, 48, 49, 50, 51], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 22, 23, 30, 31, 32, 33], [24, 25, 26, 27, 28, 29, 42, 43, 44, 45, 46, 47], [34, 35]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 165.87it/s][A
Calculating viewed counts for every point:  38%|███▊      | 35/91 [00:00<00:00, 170.32it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 53/91 [00:00<00:00, 172.43it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 71/91 [00:00<00:00, 168.83it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 90/91 [00:00<00:00, 172.80it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [01:34<01:42,  1.22s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(14230, device='cuda:0')
before filtering torch.Size([5, 136945])
after filtering torch.Size([3, 136945])
num_ins_points_after_filtering tensor([4301, 2821, 3116], device='cuda:0')
Working on scene0377_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 21, 22, 23, 24, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [14, 25, 26, 27, 28, 30, 31, 39, 40, 41, 42], [15, 16, 17, 19, 20, 43, 44, 45], [32, 33, 34, 35, 36], [37, 38], [58, 59]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 17/91 [00:00<00:00, 167.05it/s][A
Calculating viewed counts for every point:  37%|███▋      | 34/91 [00:00<00:00, 156.43it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 56/91 [00:00<00:00, 183.57it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 75/91 [00:00<00:00, 174.62it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [01:35<01:43,  1.25s/it]detected_ratio_thres_value tensor(0.2069, device='cuda:0')
final masked points tensor(11990, device='cuda:0')
before filtering torch.Size([6, 111811])
after filtering torch.Size([5, 111811])
num_ins_points_after_filtering tensor([1063, 4477, 1983, 1042, 2142], device='cuda:0')
Working on scene0378_00 class refrigerator
masks_to_be_merged [[0, 1, 16, 17, 18], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/190 [00:00<00:01, 169.04it/s][A
Calculating viewed counts for every point:  18%|█▊        | 34/190 [00:00<00:00, 157.26it/s][A
Calculating viewed counts for every point:  27%|██▋       | 52/190 [00:00<00:00, 166.33it/s][A
Calculating viewed counts for every point:  37%|███▋      | 70/190 [00:00<00:00, 168.98it/s][A
Calculating viewed counts for every point:  47%|████▋     | 89/190 [00:00<00:00, 175.12it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 107/190 [00:00<00:00, 171.77it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 125/190 [00:00<00:00, 170.63it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 143/190 [00:00<00:00, 167.33it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 160/190 [00:00<00:00, 166.81it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 177/190 [00:01<00:00, 165.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [01:37<01:52,  1.37s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(9166, device='cuda:0')
before filtering torch.Size([3, 156298])
after filtering torch.Size([2, 156298])
num_ins_points_after_filtering tensor([5629, 3305], device='cuda:0')
Working on scene0382_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 5, 6, 7, 36, 63, 64, 65, 66], [3, 4], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27], [20, 23, 24, 28], [29, 31, 32, 33, 34, 35, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 21/113 [00:00<00:00, 205.62it/s][A
Calculating viewed counts for every point:  37%|███▋      | 42/113 [00:00<00:00, 202.83it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 64/113 [00:00<00:00, 209.69it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 89/113 [00:00<00:00, 222.69it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 112/113 [00:00<00:00, 213.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [01:38<01:49,  1.36s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(10799, device='cuda:0')
before filtering torch.Size([5, 100285])
after filtering torch.Size([3, 100285])
num_ins_points_after_filtering tensor([4164, 1577, 3458], device='cuda:0')
Working on scene0389_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 3, 4, 62, 63, 64, 66, 67, 68], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [16, 18, 19, 20], [24, 25, 26], [27, 29, 32], [28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [60, 61]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/142 [00:00<00:00, 185.95it/s][A
Calculating viewed counts for every point:  27%|██▋       | 39/142 [00:00<00:00, 192.44it/s][A
Calculating viewed counts for every point:  43%|████▎     | 61/142 [00:00<00:00, 201.27it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 82/142 [00:00<00:00, 196.60it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 102/142 [00:00<00:00, 195.27it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 124/142 [00:00<00:00, 201.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [01:40<01:55,  1.45s/it]detected_ratio_thres_value tensor(0.2692, device='cuda:0')
final masked points tensor(10655, device='cuda:0')
before filtering torch.Size([8, 201003])
after filtering torch.Size([3, 201003])
num_ins_points_after_filtering tensor([1751, 2265, 1154], device='cuda:0')
Working on scene0406_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 33/142 [00:00<00:00, 320.02it/s][A
Calculating viewed counts for every point:  46%|████▋     | 66/142 [00:00<00:00, 275.26it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 99/142 [00:00<00:00, 296.15it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 132/142 [00:00<00:00, 307.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [01:41<01:36,  1.23s/it]detected_ratio_thres_value tensor(0.1026, device='cuda:0')
final masked points tensor(6287, device='cuda:0')
before filtering torch.Size([3, 48864])
after filtering torch.Size([3, 48864])
num_ins_points_after_filtering tensor([3289, 1090, 1908], device='cuda:0')
Working on scene0412_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [9, 10], [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 124, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], [45, 46, 47], [56, 57], [69, 70, 71, 72, 73, 74], [75, 76, 78, 79, 80], [77, 82, 84, 86], [119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [162, 163, 164]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 25/237 [00:00<00:00, 245.25it/s][A
Calculating viewed counts for every point:  21%|██        | 50/237 [00:00<00:00, 219.77it/s][A
Calculating viewed counts for every point:  31%|███       | 73/237 [00:00<00:00, 215.85it/s][A
Calculating viewed counts for every point:  41%|████      | 96/237 [00:00<00:00, 218.15it/s][A
Calculating viewed counts for every point:  50%|████▉     | 118/237 [00:00<00:00, 217.42it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 140/237 [00:00<00:00, 215.25it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 165/237 [00:00<00:00, 223.46it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 188/237 [00:00<00:00, 224.57it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 211/237 [00:00<00:00, 208.93it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 233/237 [00:01<00:00, 206.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [01:45<02:36,  2.00s/it]detected_ratio_thres_value tensor(0.2558, device='cuda:0')
final masked points tensor(22199, device='cuda:0')
before filtering torch.Size([10, 175557])
after filtering torch.Size([4, 175557])
num_ins_points_after_filtering tensor([9909,  351, 6098, 2217], device='cuda:0')
Working on scene0414_00 class refrigerator
masks_to_be_merged [[0, 8], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 13/117 [00:00<00:00, 128.59it/s][A
Calculating viewed counts for every point:  29%|██▉       | 34/117 [00:00<00:00, 172.37it/s][A
Calculating viewed counts for every point:  46%|████▌     | 54/117 [00:00<00:00, 183.70it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 73/117 [00:00<00:00, 168.11it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 90/117 [00:00<00:00, 159.71it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 107/117 [00:00<00:00, 157.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [01:46<02:10,  1.69s/it]detected_ratio_thres_value tensor(0.0571, device='cuda:0')
final masked points tensor(4246, device='cuda:0')
before filtering torch.Size([2, 192685])
after filtering torch.Size([2, 192685])
num_ins_points_after_filtering tensor([1923, 1440], device='cuda:0')
Working on scene0423_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0426_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], [12, 13, 14, 15, 17, 18, 19, 26, 45, 46, 47, 48], [20, 21, 22, 23, 24, 25, 27, 50, 51, 52], [28, 29, 30, 31, 53, 54, 55, 56, 57, 58, 59], [32, 33]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█▏        | 26/231 [00:00<00:00, 255.58it/s][A
Calculating viewed counts for every point:  23%|██▎       | 52/231 [00:00<00:00, 254.80it/s][A
Calculating viewed counts for every point:  35%|███▌      | 81/231 [00:00<00:00, 268.94it/s][A
Calculating viewed counts for every point:  48%|████▊     | 111/231 [00:00<00:00, 280.10it/s][A
Calculating viewed counts for every point:  61%|██████    | 140/231 [00:00<00:00, 273.09it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 168/231 [00:00<00:00, 262.10it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 197/231 [00:00<00:00, 268.85it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 225/231 [00:00<00:00, 272.18it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [01:47<01:37,  1.30s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(12308, device='cuda:0')
before filtering torch.Size([5, 135867])
after filtering torch.Size([2, 135867])
num_ins_points_after_filtering tensor([3907, 5448], device='cuda:0')
Working on scene0427_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 13, 14], [6, 7, 8, 10, 12], [9, 11], [15, 16]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 37/132 [00:00<00:00, 369.14it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 74/132 [00:00<00:00, 327.74it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 112/132 [00:00<00:00, 348.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [01:48<01:25,  1.15s/it]detected_ratio_thres_value tensor(0.1143, device='cuda:0')
final masked points tensor(6892, device='cuda:0')
before filtering torch.Size([4, 74074])
after filtering torch.Size([3, 74074])
num_ins_points_after_filtering tensor([1888, 2757, 1916], device='cuda:0')
Working on scene0430_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 3, 4, 5], [6, 7], [8, 10]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 17/231 [00:00<00:01, 166.01it/s][A
Calculating viewed counts for every point:  16%|█▌        | 36/231 [00:00<00:01, 175.82it/s][A
Calculating viewed counts for every point:  23%|██▎       | 54/231 [00:00<00:01, 176.21it/s][A
Calculating viewed counts for every point:  31%|███       | 72/231 [00:00<00:00, 173.51it/s][A
Calculating viewed counts for every point:  39%|███▉      | 91/231 [00:00<00:00, 176.60it/s][A
Calculating viewed counts for every point:  47%|████▋     | 109/231 [00:00<00:00, 171.40it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 127/231 [00:00<00:00, 169.57it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 147/231 [00:00<00:00, 176.74it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 165/231 [00:00<00:00, 168.49it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 182/231 [00:01<00:00, 163.65it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 199/231 [00:01<00:00, 165.33it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 219/231 [00:01<00:00, 173.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [01:50<01:32,  1.27s/it]detected_ratio_thres_value tensor(0.0500, device='cuda:0')
final masked points tensor(10711, device='cuda:0')
before filtering torch.Size([4, 210249])
after filtering torch.Size([4, 210249])
num_ins_points_after_filtering tensor([1212, 2163, 4078,  422], device='cuda:0')
Working on scene0432_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0435_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 33, 34, 35, 70, 71, 72], [36, 37, 38, 39, 62, 63, 64, 65, 66, 67, 68, 69], [40, 51, 53, 54, 55, 56, 57, 58, 60, 61], [43, 45, 47, 48, 49, 50, 52, 59]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 16/328 [00:00<00:02, 153.61it/s][A
Calculating viewed counts for every point:  10%|▉         | 32/328 [00:00<00:01, 149.17it/s][A
Calculating viewed counts for every point:  14%|█▍        | 47/328 [00:00<00:01, 149.20it/s][A
Calculating viewed counts for every point:  19%|█▉        | 62/328 [00:00<00:01, 144.04it/s][A
Calculating viewed counts for every point:  24%|██▍       | 79/328 [00:00<00:01, 151.40it/s][A
Calculating viewed counts for every point:  29%|██▉       | 95/328 [00:00<00:01, 151.13it/s][A
Calculating viewed counts for every point:  34%|███▍      | 111/328 [00:00<00:01, 149.06it/s][A
Calculating viewed counts for every point:  39%|███▉      | 128/328 [00:00<00:01, 154.41it/s][A
Calculating viewed counts for every point:  44%|████▍     | 144/328 [00:00<00:01, 147.90it/s][A
Calculating viewed counts for every point:  49%|████▉     | 160/328 [00:01<00:01, 150.24it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 176/328 [00:01<00:00, 152.68it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 192/328 [00:01<00:00, 148.39it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 207/328 [00:01<00:00, 148.44it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 224/328 [00:01<00:00, 153.19it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 240/328 [00:01<00:00, 154.02it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 258/328 [00:01<00:00, 158.03it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 274/328 [00:01<00:00, 158.22it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 290/328 [00:01<00:00, 153.13it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 308/328 [00:02<00:00, 156.67it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 325/328 [00:02<00:00, 160.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [01:53<01:40,  1.42s/it]detected_ratio_thres_value tensor(0.1795, device='cuda:0')
final masked points tensor(13105, device='cuda:0')
before filtering torch.Size([5, 254998])
after filtering torch.Size([5, 254998])
num_ins_points_after_filtering tensor([2177, 5909,  913,  932, 1929], device='cuda:0')
Working on scene0441_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 17, 18, 23, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46], [16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], [37, 38, 41]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▊       | 22/77 [00:00<00:00, 218.48it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 44/77 [00:00<00:00, 197.61it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 67/77 [00:00<00:00, 209.80it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [01:54<01:32,  1.32s/it]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(12059, device='cuda:0')
before filtering torch.Size([4, 86191])
after filtering torch.Size([3, 86191])
num_ins_points_after_filtering tensor([8084, 1667, 2098], device='cuda:0')
Working on scene0458_00 class refrigerator
masks_to_be_merged [[0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 83, 84, 85, 86], [3, 4, 32], [5, 38, 39, 40], [6, 7, 8, 41, 42, 43, 44], [9, 10, 11, 12, 13, 14, 15, 16, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [17, 60, 61], [27, 28, 29], [30, 31, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:00, 239.70it/s][A
Calculating viewed counts for every point:  27%|██▋       | 53/199 [00:00<00:00, 268.02it/s][A
Calculating viewed counts for every point:  40%|████      | 80/199 [00:00<00:00, 253.63it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 109/199 [00:00<00:00, 264.77it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 138/199 [00:00<00:00, 272.59it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 166/199 [00:00<00:00, 274.61it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 196/199 [00:00<00:00, 278.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [01:56<01:39,  1.44s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(9930, device='cuda:0')
before filtering torch.Size([8, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([2803, 4190], device='cuda:0')
Working on scene0461_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4, 5]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 16/52 [00:00<00:00, 156.27it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 36/52 [00:00<00:00, 179.66it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [01:56<01:18,  1.15s/it]detected_ratio_thres_value tensor(0.0714, device='cuda:0')
final masked points tensor(1151, device='cuda:0')
before filtering torch.Size([1, 59134])
after filtering torch.Size([1, 59134])
num_ins_points_after_filtering tensor([1100], device='cuda:0')
Working on scene0462_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 89], [6, 7, 8, 9, 10], [12, 27], [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 90], [35, 36], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 67, 68, 69], [57, 59, 62, 64, 65, 66, 72], [79, 80, 81]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/114 [00:00<00:00, 249.84it/s][A
Calculating viewed counts for every point:  44%|████▍     | 50/114 [00:00<00:00, 237.20it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 74/114 [00:00<00:00, 227.74it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 97/114 [00:00<00:00, 215.06it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [01:58<01:29,  1.33s/it]detected_ratio_thres_value tensor(0.4091, device='cuda:0')
final masked points tensor(32245, device='cuda:0')
before filtering torch.Size([8, 156714])
after filtering torch.Size([3, 156714])
num_ins_points_after_filtering tensor([ 3724,  1968, 22357], device='cuda:0')
Working on scene0474_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4, 5, 8, 9], [6, 10, 11], [7, 12]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 16/164 [00:00<00:00, 158.75it/s][A
Calculating viewed counts for every point:  20%|██        | 33/164 [00:00<00:00, 164.39it/s][A
Calculating viewed counts for every point:  30%|███       | 50/164 [00:00<00:00, 162.97it/s][A
Calculating viewed counts for every point:  41%|████      | 67/164 [00:00<00:00, 151.17it/s][A
Calculating viewed counts for every point:  51%|█████     | 83/164 [00:00<00:00, 152.18it/s][A
Calculating viewed counts for every point:  60%|██████    | 99/164 [00:00<00:00, 151.83it/s][A
Calculating viewed counts for every point:  70%|███████   | 115/164 [00:00<00:00, 152.90it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 131/164 [00:00<00:00, 150.63it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 147/164 [00:00<00:00, 152.78it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 163/164 [00:01<00:00, 148.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [01:59<01:26,  1.31s/it]detected_ratio_thres_value tensor(0.1154, device='cuda:0')
final masked points tensor(4493, device='cuda:0')
before filtering torch.Size([3, 182281])
after filtering torch.Size([2, 182281])
num_ins_points_after_filtering tensor([3491,  288], device='cuda:0')
Working on scene0488_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 17, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45], [9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 46]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 18/60 [00:00<00:00, 173.42it/s][A
Calculating viewed counts for every point:  60%|██████    | 36/60 [00:00<00:00, 176.95it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 55/60 [00:00<00:00, 181.33it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [02:00<01:15,  1.16s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(9118, device='cuda:0')
before filtering torch.Size([2, 108319])
after filtering torch.Size([2, 108319])
num_ins_points_after_filtering tensor([4461, 4657], device='cuda:0')
Working on scene0490_00 class refrigerator
masks_to_be_merged [[3, 4, 6], [7, 8, 9, 10, 11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 23/129 [00:00<00:00, 226.82it/s][A
Calculating viewed counts for every point:  39%|███▉      | 50/129 [00:00<00:00, 249.43it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 77/129 [00:00<00:00, 258.43it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 103/129 [00:00<00:00, 253.93it/s][A
Calculating viewed counts for every point: 100%|██████████| 129/129 [00:00<00:00, 249.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [02:01<01:05,  1.03s/it]detected_ratio_thres_value tensor(0.1290, device='cuda:0')
final masked points tensor(7333, device='cuda:0')
before filtering torch.Size([2, 131283])
after filtering torch.Size([1, 131283])
num_ins_points_after_filtering tensor([5953], device='cuda:0')
Working on scene0494_00 class refrigerator
masks_to_be_merged [[0, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 25/75 [00:00<00:00, 246.23it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 52/75 [00:00<00:00, 256.48it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [02:01<00:53,  1.17it/s]Projecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [02:01<00:41,  1.48it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(1872, device='cuda:0')
before filtering torch.Size([1, 62048])
after filtering torch.Size([1, 62048])
num_ins_points_after_filtering tensor([850], device='cuda:0')
Working on scene0496_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0500_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [18, 19, 20, 21]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/219 [00:00<00:02, 84.42it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/219 [00:00<00:02, 85.54it/s][A
Calculating viewed counts for every point:  13%|█▎        | 29/219 [00:00<00:02, 93.01it/s][A
Calculating viewed counts for every point:  18%|█▊        | 39/219 [00:00<00:01, 94.20it/s][A
Calculating viewed counts for every point:  23%|██▎       | 50/219 [00:00<00:01, 98.64it/s][A
Calculating viewed counts for every point:  27%|██▋       | 60/219 [00:00<00:01, 89.28it/s][A
Calculating viewed counts for every point:  32%|███▏      | 70/219 [00:00<00:01, 85.09it/s][A
Calculating viewed counts for every point:  36%|███▌      | 79/219 [00:00<00:01, 79.96it/s][A
Calculating viewed counts for every point:  40%|████      | 88/219 [00:01<00:01, 80.08it/s][A
Calculating viewed counts for every point:  44%|████▍     | 97/219 [00:01<00:01, 80.24it/s][A
Calculating viewed counts for every point:  48%|████▊     | 106/219 [00:01<00:01, 78.89it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 115/219 [00:01<00:01, 79.49it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 127/219 [00:01<00:01, 86.94it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 136/219 [00:01<00:00, 85.97it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 145/219 [00:01<00:00, 85.57it/s][A
Calculating viewed counts for every point:  71%|███████   | 155/219 [00:01<00:00, 87.48it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 165/219 [00:01<00:00, 90.13it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 175/219 [00:02<00:00, 91.92it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 185/219 [00:02<00:00, 86.41it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 194/219 [00:02<00:00, 83.12it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 203/219 [00:02<00:00, 80.72it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 212/219 [00:02<00:00, 78.83it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [02:04<01:25,  1.40s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(5502, device='cuda:0')
before filtering torch.Size([2, 396942])
after filtering torch.Size([1, 396942])
num_ins_points_after_filtering tensor([2056], device='cuda:0')
Working on scene0518_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4], [6, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35], [7, 8, 9, 10, 11], [12, 13, 14, 37, 39, 40, 41, 42, 43], [15, 16], [17, 18], [19, 46], [23, 30, 31, 32], [45, 47]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 22/147 [00:00<00:00, 219.96it/s][A
Calculating viewed counts for every point:  31%|███▏      | 46/147 [00:00<00:00, 227.73it/s][A
Calculating viewed counts for every point:  50%|█████     | 74/147 [00:00<00:00, 249.83it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 99/147 [00:00<00:00, 245.53it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 128/147 [00:00<00:00, 258.29it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [02:06<01:20,  1.34s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(9055, device='cuda:0')
before filtering torch.Size([9, 130180])
after filtering torch.Size([7, 130180])
num_ins_points_after_filtering tensor([ 282, 1337, 1503, 1519, 1043, 2654,  577], device='cuda:0')
Working on scene0527_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [6, 7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  50%|█████     | 34/68 [00:00<00:00, 335.22it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [02:06<01:03,  1.07s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(11328, device='cuda:0')
before filtering torch.Size([2, 65893])
after filtering torch.Size([2, 65893])
num_ins_points_after_filtering tensor([9619, 1633], device='cuda:0')
Working on scene0535_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11, 35], [13, 14, 15, 16, 17, 18, 19], [20, 21], [22, 23], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 21/69 [00:00<00:00, 209.63it/s][A
Calculating viewed counts for every point:  61%|██████    | 42/69 [00:00<00:00, 208.85it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 65/69 [00:00<00:00, 217.75it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [02:07<00:57,  1.01it/s]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(12121, device='cuda:0')
before filtering torch.Size([6, 90268])
after filtering torch.Size([5, 90268])
num_ins_points_after_filtering tensor([ 819,  732, 4782, 1475, 3504], device='cuda:0')
Working on scene0549_00 class refrigerator
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 24/83 [00:00<00:00, 235.74it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 48/83 [00:00<00:00, 224.75it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 72/83 [00:00<00:00, 228.38it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [02:07<00:46,  1.23it/s]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(3957, device='cuda:0')
before filtering torch.Size([1, 161973])
after filtering torch.Size([1, 161973])
num_ins_points_after_filtering tensor([3957], device='cuda:0')
Working on scene0550_00 class refrigerator
masks_to_be_merged [[0, 3], [1, 2, 44, 46, 56, 58, 59, 60, 61, 62, 63, 64], [4, 73, 79, 81, 84, 85, 95, 97, 99, 100, 101, 102, 105, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], [5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 27, 28], [18, 19, 20, 21, 22, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], [26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39], [40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57], [41, 42], [65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 103, 104, 106, 107, 108, 109, 113, 115], [133, 134, 135, 136, 137, 138, 139, 140, 141, 142], [176, 177, 178, 179, 180, 181, 182, 183]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 29/392 [00:00<00:01, 287.19it/s][A
Calculating viewed counts for every point:  15%|█▍        | 58/392 [00:00<00:01, 288.82it/s][A
Calculating viewed counts for every point:  23%|██▎       | 90/392 [00:00<00:01, 298.85it/s][A
Calculating viewed counts for every point:  31%|███       | 120/392 [00:00<00:00, 292.30it/s][A
Calculating viewed counts for every point:  38%|███▊      | 150/392 [00:00<00:00, 280.03it/s][A
Calculating viewed counts for every point:  46%|████▌     | 179/392 [00:00<00:00, 280.11it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 208/392 [00:00<00:00, 271.51it/s][A
Calculating viewed counts for every point:  60%|██████    | 236/392 [00:00<00:00, 260.66it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 265/392 [00:00<00:00, 267.21it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 292/392 [00:01<00:00, 258.01it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 321/392 [00:01<00:00, 265.03it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 348/392 [00:01<00:00, 264.85it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 375/392 [00:01<00:00, 257.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [02:12<01:48,  1.94s/it]detected_ratio_thres_value tensor(0.1750, device='cuda:0')
final masked points tensor(27705, device='cuda:0')
before filtering torch.Size([12, 127677])
after filtering torch.Size([6, 127677])
num_ins_points_after_filtering tensor([5398, 2980, 8236, 2828, 1717, 2090], device='cuda:0')
Working on scene0552_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 33, 34, 35, 36, 37, 38, 39, 40, 41], [9, 11, 12, 13, 14, 15, 16, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [18, 52, 53, 54], [19, 20, 21, 22, 23, 24, 25, 26, 27, 55, 56, 57], [28, 29, 30, 31]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 26/89 [00:00<00:00, 250.35it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 52/89 [00:00<00:00, 241.51it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 80/89 [00:00<00:00, 255.92it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [02:13<01:29,  1.63s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(13656, device='cuda:0')
before filtering torch.Size([5, 123103])
after filtering torch.Size([3, 123103])
num_ins_points_after_filtering tensor([4933, 3013, 5371], device='cuda:0')
Working on scene0553_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 7, 8, 9, 20, 30], [5, 6, 10, 12, 15, 17, 18, 23, 25, 27], [11, 13, 14, 16, 19, 21, 22, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [60, 62, 63, 64, 65, 66, 67], [68, 69, 70]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 28/151 [00:00<00:00, 278.99it/s][A
Calculating viewed counts for every point:  40%|████      | 61/151 [00:00<00:00, 308.03it/s][A
Calculating viewed counts for every point:  61%|██████    | 92/151 [00:00<00:00, 279.73it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 126/151 [00:00<00:00, 301.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [02:14<01:18,  1.46s/it]detected_ratio_thres_value tensor(0.2414, device='cuda:0')
final masked points tensor(8701, device='cuda:0')
before filtering torch.Size([5, 62854])
after filtering torch.Size([3, 62854])
num_ins_points_after_filtering tensor([2978, 1132, 3588], device='cuda:0')
Working on scene0558_00 class refrigerator
masks_to_be_merged [[0, 1, 2], [3, 4, 5], [6, 7]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  46%|████▋     | 33/71 [00:00<00:00, 328.93it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 67/71 [00:00<00:00, 331.92it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [02:14<01:01,  1.15s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(10713, device='cuda:0')
before filtering torch.Size([3, 92953])
after filtering torch.Size([3, 92953])
num_ins_points_after_filtering tensor([3185, 2709, 2082], device='cuda:0')
Working on scene0559_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 10], [11, 13, 14], [12, 18, 20, 21, 22, 23, 25], [15, 16, 17, 19, 24, 26]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 30/58 [00:00<00:00, 290.71it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [02:15<00:51,  1.01it/s]detected_ratio_thres_value tensor(0.2400, device='cuda:0')
final masked points tensor(11335, device='cuda:0')
before filtering torch.Size([4, 89796])
after filtering torch.Size([3, 89796])
num_ins_points_after_filtering tensor([3460, 2377, 3999], device='cuda:0')
Working on scene0565_00 class refrigerator
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 17/107 [00:00<00:00, 164.14it/s][A
Calculating viewed counts for every point:  38%|███▊      | 41/107 [00:00<00:00, 202.49it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 64/107 [00:00<00:00, 213.69it/s][A
Calculating viewed counts for every point:  80%|████████  | 86/107 [00:00<00:00, 203.97it/s][A
Calculating viewed counts for every point: 100%|██████████| 107/107 [00:00<00:00, 198.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [02:15<00:45,  1.13it/s]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(653, device='cuda:0')
before filtering torch.Size([1, 167558])
after filtering torch.Size([1, 167558])
num_ins_points_after_filtering tensor([476], device='cuda:0')
Working on scene0568_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8], [10, 11, 12, 13, 14, 15], [16, 17, 18, 19], [24, 25, 26, 27, 28, 29]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 14/166 [00:00<00:01, 134.26it/s][A
Calculating viewed counts for every point:  17%|█▋        | 28/166 [00:00<00:01, 126.53it/s][A
Calculating viewed counts for every point:  25%|██▌       | 42/166 [00:00<00:00, 128.80it/s][A
Calculating viewed counts for every point:  33%|███▎      | 55/166 [00:00<00:00, 128.91it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 134.54it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/166 [00:00<00:00, 134.02it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 98/166 [00:00<00:00, 134.28it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 112/166 [00:00<00:00, 130.02it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 126/166 [00:00<00:00, 124.29it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 140/166 [00:01<00:00, 126.37it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 153/166 [00:01<00:00, 125.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [02:17<01:00,  1.20s/it]detected_ratio_thres_value tensor(0.1389, device='cuda:0')
final masked points tensor(20756, device='cuda:0')
before filtering torch.Size([4, 232453])
after filtering torch.Size([4, 232453])
num_ins_points_after_filtering tensor([8534, 3224, 2888, 3350], device='cuda:0')
Working on scene0574_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], [15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], [17, 18, 20, 26], [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 28/103 [00:00<00:00, 276.81it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 60/103 [00:00<00:00, 297.77it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 90/103 [00:00<00:00, 272.40it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [02:18<00:54,  1.11s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(11061, device='cuda:0')
before filtering torch.Size([4, 55521])
after filtering torch.Size([3, 55521])
num_ins_points_after_filtering tensor([4057, 3603, 2474], device='cuda:0')
Working on scene0575_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [35, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 179.69it/s][A
Calculating viewed counts for every point:  13%|█▎        | 39/294 [00:00<00:01, 193.29it/s][A
Calculating viewed counts for every point:  20%|██        | 59/294 [00:00<00:01, 192.76it/s][A
Calculating viewed counts for every point:  27%|██▋       | 80/294 [00:00<00:01, 199.36it/s][A
Calculating viewed counts for every point:  34%|███▍      | 100/294 [00:00<00:00, 194.68it/s][A
Calculating viewed counts for every point:  41%|████      | 120/294 [00:00<00:00, 193.10it/s][A
Calculating viewed counts for every point:  48%|████▊     | 142/294 [00:00<00:00, 198.98it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 165/294 [00:00<00:00, 207.38it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 186/294 [00:00<00:00, 195.32it/s][A
Calculating viewed counts for every point:  70%|███████   | 206/294 [00:01<00:00, 182.17it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 225/294 [00:01<00:00, 173.94it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 243/294 [00:01<00:00, 169.86it/s][A
Calculating viewed counts for every point:  90%|█████████ | 265/294 [00:01<00:00, 181.05it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 284/294 [00:01<00:00, 182.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [02:20<01:09,  1.44s/it]detected_ratio_thres_value tensor(0.1127, device='cuda:0')
final masked points tensor(12502, device='cuda:0')
before filtering torch.Size([4, 194207])
after filtering torch.Size([3, 194207])
num_ins_points_after_filtering tensor([4329, 5836, 2337], device='cuda:0')
Working on scene0578_00 class refrigerator
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24], [10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/149 [00:00<00:00, 258.00it/s][A
Calculating viewed counts for every point:  35%|███▍      | 52/149 [00:00<00:00, 241.08it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 77/149 [00:00<00:00, 244.46it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 102/149 [00:00<00:00, 230.95it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 126/149 [00:00<00:00, 230.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [02:22<01:03,  1.36s/it]detected_ratio_thres_value tensor(0.1282, device='cuda:0')
final masked points tensor(8304, device='cuda:0')
before filtering torch.Size([3, 147607])
after filtering torch.Size([1, 147607])
num_ins_points_after_filtering tensor([5020], device='cuda:0')
Working on scene0580_00 class refrigerator
masks_to_be_merged [[0, 64], [2, 3, 4, 5, 6, 7, 61, 63, 65, 66], [8, 9, 10], [12, 13, 14, 15, 16, 17, 18, 19, 20], [21, 22], [23, 24, 25, 26], [27, 28, 31, 32], [29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45], [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], [62, 69, 70, 71, 72], [67, 68]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 23/477 [00:00<00:01, 229.42it/s][A
Calculating viewed counts for every point:  10%|█         | 49/477 [00:00<00:01, 242.06it/s][A
Calculating viewed counts for every point:  16%|█▌        | 74/477 [00:00<00:01, 240.66it/s][A
Calculating viewed counts for every point:  21%|██        | 99/477 [00:00<00:01, 232.72it/s][A
Calculating viewed counts for every point:  26%|██▌       | 123/477 [00:00<00:01, 230.95it/s][A
Calculating viewed counts for every point:  31%|███       | 148/477 [00:00<00:01, 234.31it/s][A
Calculating viewed counts for every point:  36%|███▌      | 172/477 [00:00<00:01, 230.70it/s][A
Calculating viewed counts for every point:  41%|████      | 196/477 [00:00<00:01, 229.16it/s][A
Calculating viewed counts for every point:  46%|████▋     | 221/477 [00:00<00:01, 235.04it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 246/477 [00:01<00:00, 238.17it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 270/477 [00:01<00:00, 232.70it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 294/477 [00:01<00:00, 230.44it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 319/477 [00:01<00:00, 235.66it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 344/477 [00:01<00:00, 237.11it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 368/477 [00:01<00:00, 230.80it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 392/477 [00:01<00:00, 224.80it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 417/477 [00:01<00:00, 231.38it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 444/477 [00:01<00:00, 240.49it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 469/477 [00:02<00:00, 237.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [02:25<01:25,  1.86s/it]detected_ratio_thres_value tensor(0.0800, device='cuda:0')
final masked points tensor(23500, device='cuda:0')
before filtering torch.Size([11, 158047])
after filtering torch.Size([9, 158047])
num_ins_points_after_filtering tensor([1772, 3239, 3623,  325, 1092,  820, 4424, 4589, 1947], device='cuda:0')
Working on scene0583_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 31, 32], [6, 7, 28], [8, 9, 10], [12, 13, 14, 15, 16], [17, 20], [18, 19], [22, 23], [24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/198 [00:00<00:00, 224.63it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/198 [00:00<00:00, 220.00it/s][A
Calculating viewed counts for every point:  36%|███▋      | 72/198 [00:00<00:00, 237.50it/s][A
Calculating viewed counts for every point:  49%|████▉     | 97/198 [00:00<00:00, 238.78it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 123/198 [00:00<00:00, 243.41it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 148/198 [00:00<00:00, 234.35it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 172/198 [00:00<00:00, 234.42it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 197/198 [00:00<00:00, 236.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [02:26<01:16,  1.71s/it]detected_ratio_thres_value tensor(0.0789, device='cuda:0')
final masked points tensor(11154, device='cuda:0')
before filtering torch.Size([8, 146782])
after filtering torch.Size([6, 146782])
num_ins_points_after_filtering tensor([ 751,  218, 1150,  955, 3205, 2041], device='cuda:0')
Working on scene0591_00 class refrigerator
masks_to_be_merged [[0, 2, 26, 64], [4, 5], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 25, 66, 68, 69, 71, 73, 74, 75], [24, 65, 67, 70, 72], [27, 28, 30, 31], [32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 58, 59, 60, 61, 62, 63], [43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 16/173 [00:00<00:00, 159.94it/s][A
Calculating viewed counts for every point:  20%|█▉        | 34/173 [00:00<00:00, 166.57it/s][A
Calculating viewed counts for every point:  29%|██▉       | 51/173 [00:00<00:00, 164.86it/s][A
Calculating viewed counts for every point:  39%|███▉      | 68/173 [00:00<00:00, 155.07it/s][A
Calculating viewed counts for every point:  49%|████▊     | 84/173 [00:00<00:00, 154.72it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 102/173 [00:00<00:00, 161.29it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 119/173 [00:00<00:00, 157.64it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 135/173 [00:00<00:00, 158.28it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 152/173 [00:00<00:00, 159.40it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 170/173 [00:01<00:00, 163.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [02:28<01:22,  1.87s/it]detected_ratio_thres_value tensor(0.1600, device='cuda:0')
final masked points tensor(15361, device='cuda:0')
before filtering torch.Size([8, 175600])
after filtering torch.Size([4, 175600])
num_ins_points_after_filtering tensor([2209,  810, 6380, 4231], device='cuda:0')
Working on scene0593_00 class refrigerator
masks_to_be_merged [[0, 38, 104, 105], [1, 2, 3, 4, 6, 9], [5, 7, 8, 10, 11, 12, 13, 14, 15, 99, 100, 101, 102, 103], [16, 17, 18, 19, 90, 91, 92, 93, 96, 97], [20, 21, 22, 23, 24, 25, 29, 31, 65, 66, 68, 69, 72], [26, 27, 28, 30, 32], [34, 35, 36, 37, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80], [39, 44, 45, 46, 47], [40, 41], [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 81, 82, 83, 84, 85, 86, 87, 88, 89], [94, 95]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/230 [00:00<00:01, 176.30it/s][A
Calculating viewed counts for every point:  17%|█▋        | 39/230 [00:00<00:00, 191.15it/s][A
Calculating viewed counts for every point:  26%|██▌       | 60/230 [00:00<00:00, 198.08it/s][A
Calculating viewed counts for every point:  35%|███▍      | 80/230 [00:00<00:00, 174.93it/s][A
Calculating viewed counts for every point:  43%|████▎     | 98/230 [00:00<00:00, 173.13it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 120/230 [00:00<00:00, 186.28it/s][A
Calculating viewed counts for every point:  60%|██████    | 139/230 [00:00<00:00, 174.75it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 157/230 [00:00<00:00, 173.43it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 178/230 [00:00<00:00, 183.99it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 197/230 [00:01<00:00, 175.51it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 215/230 [00:01<00:00, 168.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [02:31<01:34,  2.19s/it]detected_ratio_thres_value tensor(0.2826, device='cuda:0')
final masked points tensor(25356, device='cuda:0')
before filtering torch.Size([11, 211902])
after filtering torch.Size([5, 211902])
num_ins_points_after_filtering tensor([ 1876,  2419,  4174,  2702, 13026], device='cuda:0')
Working on scene0595_00 class refrigerator
masks_to_be_merged [[0, 52, 53], [1, 2, 3, 4, 5, 6, 7, 8, 49, 50], [9, 10], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], [32, 33]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 23/76 [00:00<00:00, 225.25it/s][A
Calculating viewed counts for every point:  61%|██████    | 46/76 [00:00<00:00, 225.51it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 72/76 [00:00<00:00, 239.37it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [02:32<01:17,  1.86s/it]detected_ratio_thres_value tensor(0.4242, device='cuda:0')
final masked points tensor(13758, device='cuda:0')
before filtering torch.Size([5, 142330])
after filtering torch.Size([2, 142330])
num_ins_points_after_filtering tensor([ 2478, 10494], device='cuda:0')
Working on scene0598_00 class refrigerator
masks_to_be_merged [[1, 2, 3, 4], [6, 7], [10, 11]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/101 [00:00<00:00, 219.59it/s][A
Calculating viewed counts for every point:  45%|████▍     | 45/101 [00:00<00:00, 223.15it/s][A
Calculating viewed counts for every point:  70%|███████   | 71/101 [00:00<00:00, 238.85it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 95/101 [00:00<00:00, 227.69it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [02:33<01:01,  1.50s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(39426, device='cuda:0')
before filtering torch.Size([3, 145562])
after filtering torch.Size([3, 145562])
num_ins_points_after_filtering tensor([10860,   392,  4702], device='cuda:0')
Working on scene0599_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], [35, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 26/189 [00:00<00:00, 256.21it/s][A
Calculating viewed counts for every point:  28%|██▊       | 52/189 [00:00<00:00, 242.54it/s][A
Calculating viewed counts for every point:  42%|████▏     | 79/189 [00:00<00:00, 253.33it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 105/189 [00:00<00:00, 237.79it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 131/189 [00:00<00:00, 242.18it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 156/189 [00:00<00:00, 231.43it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 180/189 [00:00<00:00, 228.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [02:34<00:56,  1.41s/it]detected_ratio_thres_value tensor(0.2174, device='cuda:0')
final masked points tensor(1744, device='cuda:0')
before filtering torch.Size([2, 141933])
after filtering torch.Size([1, 141933])
num_ins_points_after_filtering tensor([1743], device='cuda:0')
Working on scene0606_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], [7, 8, 9, 10, 11, 12, 25, 26], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], [28, 29, 30, 34, 35, 36, 38, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [31, 32, 33, 37, 39, 42, 44, 48, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [61, 62], [79, 97, 98, 100]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 26/250 [00:00<00:00, 255.35it/s][A
Calculating viewed counts for every point:  21%|██        | 52/250 [00:00<00:00, 229.16it/s][A
Calculating viewed counts for every point:  31%|███       | 77/250 [00:00<00:00, 237.81it/s][A
Calculating viewed counts for every point:  40%|████      | 101/250 [00:00<00:00, 220.46it/s][A
Calculating viewed counts for every point:  50%|████▉     | 124/250 [00:00<00:00, 217.97it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 146/250 [00:00<00:00, 213.06it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 168/250 [00:00<00:00, 211.23it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 191/250 [00:00<00:00, 216.60it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 213/250 [00:00<00:00, 215.69it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 236/250 [00:01<00:00, 217.22it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [02:37<01:08,  1.74s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(10407, device='cuda:0')
before filtering torch.Size([7, 164401])
after filtering torch.Size([5, 164401])
num_ins_points_after_filtering tensor([ 485,  569, 1234, 5935, 2011], device='cuda:0')
Working on scene0607_00 class refrigerator
masks_to_be_merged [[0, 20], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31], [32, 33, 34, 35], [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48], [47, 49]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 23/100 [00:00<00:00, 229.01it/s][A
Calculating viewed counts for every point:  46%|████▌     | 46/100 [00:00<00:00, 221.97it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 74/100 [00:00<00:00, 246.81it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [02:38<00:57,  1.50s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(5458, device='cuda:0')
before filtering torch.Size([5, 113156])
after filtering torch.Size([2, 113156])
num_ins_points_after_filtering tensor([4718,  623], device='cuda:0')
Working on scene0608_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16], [17, 18, 19, 20, 21, 22, 23, 24], [25, 26, 27, 28, 29], [30, 31], [33, 34, 35, 36]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 22/339 [00:00<00:01, 216.85it/s][A
Calculating viewed counts for every point:  13%|█▎        | 44/339 [00:00<00:01, 196.07it/s][A
Calculating viewed counts for every point:  19%|█▉        | 66/339 [00:00<00:01, 205.65it/s][A
Calculating viewed counts for every point:  26%|██▌       | 87/339 [00:00<00:01, 193.78it/s][A
Calculating viewed counts for every point:  32%|███▏      | 107/339 [00:00<00:01, 195.13it/s][A
Calculating viewed counts for every point:  37%|███▋      | 127/339 [00:00<00:01, 194.47it/s][A
Calculating viewed counts for every point:  43%|████▎     | 147/339 [00:00<00:01, 186.92it/s][A
Calculating viewed counts for every point:  49%|████▉     | 167/339 [00:00<00:00, 190.33it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 187/339 [00:00<00:00, 188.79it/s][A
Calculating viewed counts for every point:  61%|██████    | 207/339 [00:01<00:00, 189.14it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 227/339 [00:01<00:00, 190.73it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 249/339 [00:01<00:00, 198.27it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 270/339 [00:01<00:00, 199.50it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 292/339 [00:01<00:00, 202.40it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 313/339 [00:01<00:00, 203.16it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 334/339 [00:01<00:00, 199.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [02:40<01:04,  1.76s/it]detected_ratio_thres_value tensor(0.0698, device='cuda:0')
final masked points tensor(10288, device='cuda:0')
before filtering torch.Size([6, 186579])
after filtering torch.Size([6, 186579])
num_ins_points_after_filtering tensor([5160,  822, 1809, 1154,  172, 1170], device='cuda:0')
Working on scene0609_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0616_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17], [7, 19, 20, 21], [18, 25, 26], [22, 49], [24, 47, 48], [27, 28], [29, 30, 32, 33, 34], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 108.05it/s][A
Calculating viewed counts for every point:   8%|▊         | 23/304 [00:00<00:02, 111.99it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/304 [00:00<00:02, 113.37it/s][A
Calculating viewed counts for every point:  15%|█▌        | 47/304 [00:00<00:02, 114.59it/s][A
Calculating viewed counts for every point:  19%|█▉        | 59/304 [00:00<00:02, 113.47it/s][A
Calculating viewed counts for every point:  23%|██▎       | 71/304 [00:00<00:02, 107.49it/s][A
Calculating viewed counts for every point:  27%|██▋       | 82/304 [00:00<00:02, 105.07it/s][A
Calculating viewed counts for every point:  31%|███▏      | 95/304 [00:00<00:01, 111.79it/s][A
Calculating viewed counts for every point:  35%|███▌      | 107/304 [00:00<00:01, 107.13it/s][A
Calculating viewed counts for every point:  39%|███▉      | 118/304 [00:01<00:01, 106.66it/s][A
Calculating viewed counts for every point:  43%|████▎     | 130/304 [00:01<00:01, 109.13it/s][A
Calculating viewed counts for every point:  47%|████▋     | 142/304 [00:01<00:01, 108.88it/s][A
Calculating viewed counts for every point:  51%|█████     | 154/304 [00:01<00:01, 111.17it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 167/304 [00:01<00:01, 115.69it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 179/304 [00:01<00:01, 110.95it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 191/304 [00:01<00:01, 112.74it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 203/304 [00:01<00:00, 112.29it/s][A
Calculating viewed counts for every point:  71%|███████   | 215/304 [00:01<00:00, 113.88it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 227/304 [00:02<00:00, 113.57it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 239/304 [00:02<00:00, 113.37it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 253/304 [00:02<00:00, 118.26it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 265/304 [00:02<00:00, 114.72it/s][A
Calculating viewed counts for every point:  91%|█████████ | 277/304 [00:02<00:00, 115.13it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 289/304 [00:02<00:00, 108.87it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 300/304 [00:02<00:00, 105.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [02:44<01:02,  1.78s/it]detected_ratio_thres_value tensor(0.0926, device='cuda:0')
final masked points tensor(30882, device='cuda:0')
before filtering torch.Size([8, 310248])
after filtering torch.Size([5, 310248])
num_ins_points_after_filtering tensor([ 8257,  1435,   746,   756, 16191], device='cuda:0')
Working on scene0618_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 14/90 [00:00<00:00, 133.86it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 127.49it/s][A
Calculating viewed counts for every point:  46%|████▌     | 41/90 [00:00<00:00, 121.33it/s][A
Calculating viewed counts for every point:  60%|██████    | 54/90 [00:00<00:00, 123.71it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 67/90 [00:00<00:00, 121.84it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 80/90 [00:00<00:00, 123.01it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [02:44<00:53,  1.57s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(6179, device='cuda:0')
before filtering torch.Size([2, 232740])
after filtering torch.Size([2, 232740])
num_ins_points_after_filtering tensor([4734, 1445], device='cuda:0')
Working on scene0621_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0629_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 62, 63, 64, 65, 66], [13, 14], [15, 16, 17, 18], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 68, 69, 70, 71, 72], [37, 42], [51, 52, 53, 54, 55, 56, 73, 74, 75], [59, 60, 77, 78, 79], [61, 80]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/275 [00:00<00:01, 167.58it/s][A
Calculating viewed counts for every point:  12%|█▏        | 34/275 [00:00<00:01, 161.26it/s][A
Calculating viewed counts for every point:  19%|█▊        | 51/275 [00:00<00:01, 161.58it/s][A
Calculating viewed counts for every point:  25%|██▍       | 68/275 [00:00<00:01, 164.04it/s][A
Calculating viewed counts for every point:  31%|███       | 85/275 [00:00<00:01, 162.74it/s][A
Calculating viewed counts for every point:  37%|███▋      | 102/275 [00:00<00:01, 159.43it/s][A
Calculating viewed counts for every point:  43%|████▎     | 118/275 [00:00<00:01, 145.48it/s][A
Calculating viewed counts for every point:  49%|████▊     | 134/275 [00:00<00:00, 148.16it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 149/275 [00:00<00:00, 142.38it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 164/275 [00:01<00:00, 141.77it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 179/275 [00:01<00:00, 143.86it/s][A
Calculating viewed counts for every point:  71%|███████   | 195/275 [00:01<00:00, 147.62it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 211/275 [00:01<00:00, 149.41it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 226/275 [00:01<00:00, 145.14it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 241/275 [00:01<00:00, 146.28it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 256/275 [00:01<00:00, 145.79it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 272/275 [00:01<00:00, 148.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [02:48<00:51,  1.60s/it]detected_ratio_thres_value tensor(0.2466, device='cuda:0')
final masked points tensor(10718, device='cuda:0')
before filtering torch.Size([8, 255083])
after filtering torch.Size([2, 255083])
num_ins_points_after_filtering tensor([3007, 3110], device='cuda:0')
Working on scene0633_00 class refrigerator
masks_to_be_merged [[0, 35, 36, 37, 38, 52, 53], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 60, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82], [15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 58, 59, 67, 68, 69, 72, 73, 74], [31, 32, 33, 34, 39, 40, 41, 42, 43, 54, 55], [44, 45, 46, 47, 48, 49, 51], [56, 70, 71]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 31/160 [00:00<00:00, 306.31it/s][A
Calculating viewed counts for every point:  39%|███▉      | 63/160 [00:00<00:00, 307.12it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 94/160 [00:00<00:00, 297.78it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 124/160 [00:00<00:00, 294.82it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 154/160 [00:00<00:00, 294.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [02:49<00:50,  1.63s/it]detected_ratio_thres_value tensor(0.2647, device='cuda:0')
final masked points tensor(22218, device='cuda:0')
before filtering torch.Size([6, 101007])
after filtering torch.Size([4, 101007])
num_ins_points_after_filtering tensor([4382, 5550, 6561, 2828], device='cuda:0')
Working on scene0643_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [13, 14], [15, 16], [18, 19, 20, 35, 36], [21, 37], [22, 23, 24], [25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 17/194 [00:00<00:01, 162.59it/s][A
Calculating viewed counts for every point:  18%|█▊        | 35/194 [00:00<00:00, 170.94it/s][A
Calculating viewed counts for every point:  29%|██▉       | 56/194 [00:00<00:00, 184.74it/s][A
Calculating viewed counts for every point:  39%|███▊      | 75/194 [00:00<00:00, 178.78it/s][A
Calculating viewed counts for every point:  48%|████▊     | 93/194 [00:00<00:00, 176.19it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 111/194 [00:00<00:00, 171.89it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 129/194 [00:00<00:00, 172.20it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 148/194 [00:00<00:00, 175.15it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 166/194 [00:00<00:00, 173.33it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 184/194 [00:01<00:00, 172.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [02:51<00:49,  1.63s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(11268, device='cuda:0')
before filtering torch.Size([7, 167360])
after filtering torch.Size([4, 167360])
num_ins_points_after_filtering tensor([3074,  554, 3855, 1015], device='cuda:0')
Working on scene0644_00 class refrigerator
masks_to_be_merged [[0, 2, 4, 6, 8, 19, 21, 22, 25, 27, 29, 31, 32, 33, 34], [1, 3, 5, 7, 9, 10, 17, 23, 26, 28, 30, 35], [11, 12, 39, 40, 41, 42, 43, 44, 45, 46, 47], [14, 15, 36, 37, 38], [18, 20, 24]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/201 [00:00<00:01, 102.56it/s][A
Calculating viewed counts for every point:  11%|█         | 22/201 [00:00<00:01, 101.72it/s][A
Calculating viewed counts for every point:  16%|█▋        | 33/201 [00:00<00:01, 105.28it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/201 [00:00<00:01, 103.14it/s][A
Calculating viewed counts for every point:  27%|██▋       | 55/201 [00:00<00:01, 98.07it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 66/201 [00:00<00:01, 100.40it/s][A
Calculating viewed counts for every point:  39%|███▉      | 78/201 [00:00<00:01, 104.51it/s][A
Calculating viewed counts for every point:  45%|████▍     | 90/201 [00:00<00:01, 106.41it/s][A
Calculating viewed counts for every point:  50%|█████     | 101/201 [00:00<00:00, 105.23it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 113/201 [00:01<00:00, 108.17it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 124/201 [00:01<00:00, 108.07it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 136/201 [00:01<00:00, 109.65it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 147/201 [00:01<00:00, 109.01it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 158/201 [00:01<00:00, 108.52it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 170/201 [00:01<00:00, 108.89it/s][A
Calculating viewed counts for every point:  91%|█████████ | 182/201 [00:01<00:00, 111.01it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 194/201 [00:01<00:00, 108.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [02:54<00:55,  1.92s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(12709, device='cuda:0')
before filtering torch.Size([5, 299472])
after filtering torch.Size([4, 299472])
num_ins_points_after_filtering tensor([2584, 1885, 4971, 2611], device='cuda:0')
Working on scene0645_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], [32, 33], [34, 35, 36, 37, 38, 39, 40, 41, 42]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/451 [00:00<00:04, 99.68it/s][A
Calculating viewed counts for every point:   5%|▍         | 21/451 [00:00<00:04, 103.32it/s][A
Calculating viewed counts for every point:   7%|▋         | 32/451 [00:00<00:04, 103.19it/s][A
Calculating viewed counts for every point:  10%|▉         | 43/451 [00:00<00:03, 104.95it/s][A
Calculating viewed counts for every point:  12%|█▏        | 54/451 [00:00<00:03, 105.30it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/451 [00:00<00:03, 107.11it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/451 [00:00<00:03, 106.57it/s][A
Calculating viewed counts for every point:  20%|█▉        | 88/451 [00:00<00:03, 103.14it/s][A
Calculating viewed counts for every point:  22%|██▏       | 99/451 [00:00<00:03, 102.08it/s][A
Calculating viewed counts for every point:  24%|██▍       | 110/451 [00:01<00:03, 103.79it/s][A
Calculating viewed counts for every point:  27%|██▋       | 121/451 [00:01<00:03, 100.44it/s][A
Calculating viewed counts for every point:  29%|██▉       | 132/451 [00:01<00:03, 98.71it/s] [A
Calculating viewed counts for every point:  31%|███▏      | 142/451 [00:01<00:03, 98.16it/s][A
Calculating viewed counts for every point:  34%|███▎      | 152/451 [00:01<00:03, 97.28it/s][A
Calculating viewed counts for every point:  36%|███▌      | 162/451 [00:01<00:02, 97.52it/s][A
Calculating viewed counts for every point:  38%|███▊      | 172/451 [00:01<00:02, 96.16it/s][A
Calculating viewed counts for every point:  40%|████      | 182/451 [00:01<00:02, 96.22it/s][A
Calculating viewed counts for every point:  43%|████▎     | 192/451 [00:01<00:02, 95.30it/s][A
Calculating viewed counts for every point:  45%|████▌     | 205/451 [00:02<00:02, 102.29it/s][A
Calculating viewed counts for every point:  48%|████▊     | 216/451 [00:02<00:02, 103.59it/s][A
Calculating viewed counts for every point:  50%|█████     | 227/451 [00:02<00:02, 104.98it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 238/451 [00:02<00:02, 106.34it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 249/451 [00:02<00:01, 104.61it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 260/451 [00:02<00:01, 100.95it/s][A
Calculating viewed counts for every point:  60%|██████    | 271/451 [00:02<00:01, 98.35it/s] [A
Calculating viewed counts for every point:  62%|██████▏   | 281/451 [00:02<00:01, 93.01it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 291/451 [00:02<00:01, 93.89it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 301/451 [00:03<00:01, 92.58it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 312/451 [00:03<00:01, 95.58it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 323/451 [00:03<00:01, 98.85it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 334/451 [00:03<00:01, 100.49it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 346/451 [00:03<00:00, 105.53it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 357/451 [00:03<00:00, 105.55it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 370/451 [00:03<00:00, 110.42it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 382/451 [00:03<00:00, 111.13it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 394/451 [00:03<00:00, 111.92it/s][A
Calculating viewed counts for every point:  90%|█████████ | 406/451 [00:03<00:00, 113.64it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 418/451 [00:04<00:00, 112.51it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 430/451 [00:04<00:00, 107.30it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 441/451 [00:04<00:00, 105.98it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [02:59<01:19,  2.83s/it]detected_ratio_thres_value tensor(0.1400, device='cuda:0')
final masked points tensor(13107, device='cuda:0')
before filtering torch.Size([4, 352477])
after filtering torch.Size([3, 352477])
num_ins_points_after_filtering tensor([4887, 4576, 3307], device='cuda:0')
Working on scene0647_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 181.30it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 166.33it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 59/110 [00:00<00:00, 182.10it/s][A
Calculating viewed counts for every point:  71%|███████   | 78/110 [00:00<00:00, 179.41it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 98/110 [00:00<00:00, 186.24it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [03:00<01:00,  2.25s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(4275, device='cuda:0')
before filtering torch.Size([1, 196185])
after filtering torch.Size([1, 196185])
num_ins_points_after_filtering tensor([4275], device='cuda:0')
Working on scene0648_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 81, 82, 83, 84, 85, 86], [11, 12, 13, 72], [15, 16, 17], [18, 19, 42], [22, 36, 37, 38, 39, 40, 41], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 22/419 [00:00<00:01, 214.89it/s][A
Calculating viewed counts for every point:  11%|█         | 44/419 [00:00<00:01, 206.53it/s][A
Calculating viewed counts for every point:  16%|█▌        | 68/419 [00:00<00:01, 216.50it/s][A
Calculating viewed counts for every point:  21%|██▏       | 90/419 [00:00<00:01, 212.79it/s][A
Calculating viewed counts for every point:  27%|██▋       | 112/419 [00:00<00:01, 205.64it/s][A
Calculating viewed counts for every point:  32%|███▏      | 134/419 [00:00<00:01, 209.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 156/419 [00:00<00:01, 205.75it/s][A
Calculating viewed counts for every point:  42%|████▏     | 178/419 [00:00<00:01, 209.73it/s][A
Calculating viewed counts for every point:  48%|████▊     | 200/419 [00:00<00:01, 209.58it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 221/419 [00:01<00:00, 200.44it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 245/419 [00:01<00:00, 209.83it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 268/419 [00:01<00:00, 214.79it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 291/419 [00:01<00:00, 217.54it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 313/419 [00:01<00:00, 214.82it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 335/419 [00:01<00:00, 205.47it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 359/419 [00:01<00:00, 212.79it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 385/419 [00:01<00:00, 223.86it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 408/419 [00:01<00:00, 221.02it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [03:03<01:05,  2.51s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(14236, device='cuda:0')
before filtering torch.Size([7, 167915])
after filtering torch.Size([3, 167915])
num_ins_points_after_filtering tensor([4164, 2343, 3381], device='cuda:0')
Working on scene0651_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [23, 24, 25], [26, 27]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 243.86it/s][A
Calculating viewed counts for every point:  48%|████▊     | 50/104 [00:00<00:00, 241.87it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 75/104 [00:00<00:00, 220.24it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 98/104 [00:00<00:00, 214.78it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [03:04<00:51,  2.05s/it]detected_ratio_thres_value tensor(0.2759, device='cuda:0')
final masked points tensor(4104, device='cuda:0')
before filtering torch.Size([3, 88450])
after filtering torch.Size([1, 88450])
num_ins_points_after_filtering tensor([4051], device='cuda:0')
Working on scene0652_00 class refrigerator
masks_to_be_merged [[0, 17, 19], [4, 6, 10], [13, 14], [15, 16], [24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 30/144 [00:00<00:00, 296.23it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/144 [00:00<00:00, 280.31it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 93/144 [00:00<00:00, 300.69it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 125/144 [00:00<00:00, 305.52it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [03:05<00:41,  1.71s/it]detected_ratio_thres_value tensor(0.0526, device='cuda:0')
final masked points tensor(8599, device='cuda:0')
before filtering torch.Size([5, 100286])
after filtering torch.Size([5, 100286])
num_ins_points_after_filtering tensor([2313,   83,  690,  379, 4313], device='cuda:0')
Working on scene0653_00 class refrigerator
masks_to_be_merged [[0, 51, 52, 53], [1, 3, 4, 5, 6, 7, 9, 10, 11], [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33], [28, 38, 39], [29, 30, 31], [34, 36, 37], [40, 41], [42, 43, 44], [45, 46], [47, 48, 49, 50]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 137.57it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/388 [00:00<00:02, 123.02it/s][A
Calculating viewed counts for every point:  11%|█         | 42/388 [00:00<00:02, 127.85it/s][A
Calculating viewed counts for every point:  14%|█▍        | 55/388 [00:00<00:02, 127.67it/s][A
Calculating viewed counts for every point:  18%|█▊        | 68/388 [00:00<00:02, 127.24it/s][A
Calculating viewed counts for every point:  21%|██        | 82/388 [00:00<00:02, 131.03it/s][A
Calculating viewed counts for every point:  25%|██▍       | 96/388 [00:00<00:02, 133.30it/s][A
Calculating viewed counts for every point:  28%|██▊       | 110/388 [00:00<00:02, 132.23it/s][A
Calculating viewed counts for every point:  32%|███▏      | 124/388 [00:00<00:02, 125.64it/s][A
Calculating viewed counts for every point:  36%|███▌      | 139/388 [00:01<00:01, 130.81it/s][A
Calculating viewed counts for every point:  40%|███▉      | 154/388 [00:01<00:01, 133.11it/s][A
Calculating viewed counts for every point:  43%|████▎     | 168/388 [00:01<00:01, 132.37it/s][A
Calculating viewed counts for every point:  47%|████▋     | 182/388 [00:01<00:01, 133.45it/s][A
Calculating viewed counts for every point:  51%|█████     | 198/388 [00:01<00:01, 139.40it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 213/388 [00:01<00:01, 141.86it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 228/388 [00:01<00:01, 142.09it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 243/388 [00:01<00:01, 139.65it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 258/388 [00:01<00:00, 142.40it/s][A
Calculating viewed counts for every point:  70%|███████   | 273/388 [00:02<00:00, 138.94it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 287/388 [00:02<00:00, 139.00it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 301/388 [00:02<00:00, 133.85it/s][A
Calculating viewed counts for every point:  81%|████████  | 315/388 [00:02<00:00, 133.11it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 330/388 [00:02<00:00, 137.55it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 345/388 [00:02<00:00, 141.02it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 360/388 [00:02<00:00, 138.92it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 374/388 [00:02<00:00, 135.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [03:09<00:52,  2.29s/it]detected_ratio_thres_value tensor(0.1698, device='cuda:0')
final masked points tensor(6915, device='cuda:0')
before filtering torch.Size([10, 284951])
after filtering torch.Size([3, 284951])
num_ins_points_after_filtering tensor([4123,  673,  832], device='cuda:0')
Working on scene0655_00 class refrigerator
masks_to_be_merged [[0, 1, 2]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 18/111 [00:00<00:00, 175.85it/s][A
Calculating viewed counts for every point:  32%|███▏      | 36/111 [00:00<00:00, 169.99it/s][A
Calculating viewed counts for every point:  50%|████▉     | 55/111 [00:00<00:00, 176.14it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 73/111 [00:00<00:00, 177.00it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 93/111 [00:00<00:00, 185.11it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [03:09<00:40,  1.82s/it]detected_ratio_thres_value tensor(0.1000, device='cuda:0')
final masked points tensor(19835, device='cuda:0')
before filtering torch.Size([1, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([19835], device='cuda:0')
Working on scene0658_00 class refrigerator
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 12], [10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], [23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  35%|███▍      | 19/55 [00:00<00:00, 183.01it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 40/55 [00:00<00:00, 195.37it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [03:10<00:32,  1.54s/it]detected_ratio_thres_value tensor(0.2941, device='cuda:0')
final masked points tensor(13276, device='cuda:0')
before filtering torch.Size([4, 129951])
after filtering torch.Size([3, 129951])
num_ins_points_after_filtering tensor([1442, 3204, 3565], device='cuda:0')
Working on scene0660_00 class refrigerator
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▊       | 30/105 [00:00<00:00, 274.04it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 58/105 [00:00<00:00, 273.72it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 86/105 [00:00<00:00, 257.60it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [03:11<00:24,  1.22s/it]detected_ratio_thres_value tensor(0.0303, device='cuda:0')
final masked points tensor(2009, device='cuda:0')
before filtering torch.Size([1, 110960])
after filtering torch.Size([1, 110960])
num_ins_points_after_filtering tensor([2009], device='cuda:0')
Working on scene0663_00 class refrigerator
masks_to_be_merged [[1, 2, 23, 24, 25, 26, 27], [5, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], [6, 46, 47], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16], [43, 45]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 20/295 [00:00<00:01, 196.52it/s][A
Calculating viewed counts for every point:  14%|█▎        | 40/295 [00:00<00:01, 195.50it/s][A
Calculating viewed counts for every point:  21%|██        | 62/295 [00:00<00:01, 203.02it/s][A
Calculating viewed counts for every point:  28%|██▊       | 83/295 [00:00<00:01, 199.12it/s][A
Calculating viewed counts for every point:  36%|███▌      | 105/295 [00:00<00:00, 205.66it/s][A
Calculating viewed counts for every point:  43%|████▎     | 126/295 [00:00<00:00, 194.87it/s][A
Calculating viewed counts for every point:  50%|█████     | 148/295 [00:00<00:00, 201.47it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 169/295 [00:00<00:00, 198.20it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 191/295 [00:00<00:00, 203.25it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 213/295 [00:01<00:00, 205.77it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 234/295 [00:01<00:00, 204.98it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 255/295 [00:01<00:00, 193.47it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 276/295 [00:01<00:00, 197.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [03:13<00:28,  1.49s/it]detected_ratio_thres_value tensor(0.1778, device='cuda:0')
final masked points tensor(15629, device='cuda:0')
before filtering torch.Size([5, 184428])
after filtering torch.Size([3, 184428])
num_ins_points_after_filtering tensor([1493, 5069, 8373], device='cuda:0')
Working on scene0664_00 class refrigerator
masks_to_be_merged [[0, 16], [1, 2], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [14, 15]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 41/144 [00:00<00:00, 405.53it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 82/144 [00:00<00:00, 390.56it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 122/144 [00:00<00:00, 347.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [03:14<00:23,  1.28s/it]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(5443, device='cuda:0')
before filtering torch.Size([4, 44585])
after filtering torch.Size([3, 44585])
num_ins_points_after_filtering tensor([ 899, 2529, 1958], device='cuda:0')
Working on scene0665_00 class refrigerator
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 13/104 [00:00<00:00, 123.17it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/104 [00:00<00:00, 122.38it/s][A
Calculating viewed counts for every point:  38%|███▊      | 39/104 [00:00<00:00, 125.59it/s][A
Calculating viewed counts for every point:  50%|█████     | 52/104 [00:00<00:00, 123.65it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 65/104 [00:00<00:00, 124.06it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 78/104 [00:00<00:00, 123.78it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 91/104 [00:00<00:00, 125.67it/s][A
Calculating viewed counts for every point: 100%|██████████| 104/104 [00:00<00:00, 119.34it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [03:14<00:19,  1.16s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(7288, device='cuda:0')
before filtering torch.Size([1, 252726])
after filtering torch.Size([1, 252726])
num_ins_points_after_filtering tensor([7288], device='cuda:0')
Working on scene0670_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 130, 131, 132, 133, 134, 135, 136, 137, 138, 164, 165, 167, 168, 169, 170, 171], [6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16], [20, 21], [25, 26, 27, 31], [29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162], [173, 174, 175], [178, 179]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 25/303 [00:00<00:01, 243.58it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/303 [00:00<00:01, 212.28it/s][A
Calculating viewed counts for every point:  24%|██▍       | 74/303 [00:00<00:01, 222.82it/s][A
Calculating viewed counts for every point:  32%|███▏      | 98/303 [00:00<00:00, 226.58it/s][A
Calculating viewed counts for every point:  40%|███▉      | 121/303 [00:00<00:00, 227.08it/s][A
Calculating viewed counts for every point:  48%|████▊     | 144/303 [00:00<00:00, 225.62it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 167/303 [00:00<00:00, 224.44it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 190/303 [00:00<00:00, 219.04it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 212/303 [00:00<00:00, 218.53it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 235/303 [00:01<00:00, 219.50it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 257/303 [00:01<00:00, 217.71it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 279/303 [00:01<00:00, 217.96it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 302/303 [00:01<00:00, 220.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [03:19<00:36,  2.27s/it]detected_ratio_thres_value tensor(0.3429, device='cuda:0')
final masked points tensor(12073, device='cuda:0')
before filtering torch.Size([9, 176038])
after filtering torch.Size([3, 176038])
num_ins_points_after_filtering tensor([ 649, 2111, 7732], device='cuda:0')
Working on scene0671_00 class refrigerator
No 3d masks detected in backprojection!
Working on scene0678_00 class refrigerator
masks_to_be_merged [[0, 16, 18, 20, 92], [3, 4], [6, 8, 12], [25, 26, 27, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 45, 46, 49, 97, 98, 100, 101, 103, 104, 105, 106, 107, 109, 111], [28, 30, 36, 37, 40, 43, 44, 47, 48, 50, 51, 52, 53, 54, 96, 99, 102, 108, 110, 113, 116], [56, 61, 64], [57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 126, 127, 128, 129, 130, 131, 132, 133], [69, 70, 72, 75, 76, 78, 134, 135, 137, 138, 139], [71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 136, 140, 141, 142, 143], [88, 89], [114, 115, 117, 118, 119, 120, 121, 122, 123]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 95.93it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 96.06it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 93.14it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 94.89it/s][A
Calculating viewed counts for every point:  21%|██        | 51/245 [00:00<00:01, 97.52it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 96.30it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/245 [00:00<00:01, 99.49it/s][A
Calculating viewed counts for every point:  34%|███▍      | 83/245 [00:00<00:01, 100.02it/s][A
Calculating viewed counts for every point:  38%|███▊      | 94/245 [00:00<00:01, 101.76it/s][A
Calculating viewed counts for every point:  43%|████▎     | 105/245 [00:01<00:01, 96.63it/s][A
Calculating viewed counts for every point:  47%|████▋     | 115/245 [00:01<00:01, 92.36it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 126/245 [00:01<00:01, 96.66it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 136/245 [00:01<00:01, 96.16it/s][A
Calculating viewed counts for every point:  60%|██████    | 147/245 [00:01<00:01, 97.97it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 158/245 [00:01<00:00, 101.36it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 170/245 [00:01<00:00, 104.09it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 181/245 [00:01<00:00, 101.11it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 192/245 [00:01<00:00, 96.30it/s] [A
Calculating viewed counts for every point:  82%|████████▏ | 202/245 [00:02<00:00, 96.62it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 212/245 [00:02<00:00, 97.54it/s][A
Calculating viewed counts for every point:  91%|█████████ | 222/245 [00:02<00:00, 97.20it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 232/245 [00:02<00:00, 96.77it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 243/245 [00:02<00:00, 99.61it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [03:24<00:33,  2.40s/it]detected_ratio_thres_value tensor(0.2632, device='cuda:0')
final masked points tensor(29535, device='cuda:0')
before filtering torch.Size([11, 364811])
after filtering torch.Size([5, 364811])
num_ins_points_after_filtering tensor([9604, 5767, 5516, 2532, 1986], device='cuda:0')
Working on scene0684_00 class refrigerator
masks_to_be_merged [[0, 1, 3, 5, 6, 7, 8, 9, 10, 35, 44, 46, 47, 48, 50, 51, 52, 53, 54], [2, 4, 36, 37, 38, 39, 40, 41, 42, 43, 45], [11, 49, 55, 56, 57], [12, 13, 14, 15, 58, 59, 60], [16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], [20, 23]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 35/87 [00:00<00:00, 343.04it/s][A
Calculating viewed counts for every point:  80%|████████  | 70/87 [00:00<00:00, 320.00it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [03:25<00:26,  2.03s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(4678, device='cuda:0')
before filtering torch.Size([6, 41364])
after filtering torch.Size([3, 41364])
num_ins_points_after_filtering tensor([1400,  883, 1153], device='cuda:0')
Working on scene0685_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 75, 76, 77, 78, 79], [12, 13, 14, 15], [16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [30, 31, 32, 33, 34, 35], [38, 39, 40, 42, 44], [41, 43], [46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62], [60, 61], [63, 64], [65, 67, 68, 69, 70, 71, 72, 74]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 31/196 [00:00<00:00, 305.42it/s][A
Calculating viewed counts for every point:  32%|███▏      | 62/196 [00:00<00:00, 265.31it/s][A
Calculating viewed counts for every point:  45%|████▌     | 89/196 [00:00<00:00, 254.40it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 115/196 [00:00<00:00, 240.73it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 142/196 [00:00<00:00, 248.67it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 169/196 [00:00<00:00, 254.57it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [03:27<00:24,  2.01s/it]detected_ratio_thres_value tensor(0.2128, device='cuda:0')
final masked points tensor(20405, device='cuda:0')
before filtering torch.Size([10, 132720])
after filtering torch.Size([6, 132720])
num_ins_points_after_filtering tensor([2717, 8287, 1671, 1231, 4693,  994], device='cuda:0')
Working on scene0686_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 21/153 [00:00<00:00, 201.17it/s][A
Calculating viewed counts for every point:  27%|██▋       | 42/153 [00:00<00:00, 205.01it/s][A
Calculating viewed counts for every point:  43%|████▎     | 66/153 [00:00<00:00, 220.70it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 89/153 [00:00<00:00, 221.31it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 112/153 [00:00<00:00, 222.54it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 135/153 [00:00<00:00, 224.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [03:29<00:20,  1.89s/it]detected_ratio_thres_value tensor(0.2250, device='cuda:0')
final masked points tensor(6226, device='cuda:0')
before filtering torch.Size([2, 89776])
after filtering torch.Size([2, 89776])
num_ins_points_after_filtering tensor([3600, 2513], device='cuda:0')
Working on scene0689_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0690_00 class refrigerator
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 30/90 [00:00<00:00, 298.04it/s][A
Calculating viewed counts for every point:  70%|███████   | 63/90 [00:00<00:00, 314.95it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [03:29<00:10,  1.20s/it]detected_ratio_thres_value tensor(0.2308, device='cuda:0')
final masked points tensor(24706, device='cuda:0')
before filtering torch.Size([1, 106050])
after filtering torch.Size([1, 106050])
num_ins_points_after_filtering tensor([24605], device='cuda:0')
Working on scene0693_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 16, 17, 18, 19, 20], [4, 5, 6], [8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▎       | 41/174 [00:00<00:00, 402.02it/s][A
Calculating viewed counts for every point:  47%|████▋     | 82/174 [00:00<00:00, 375.72it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 120/174 [00:00<00:00, 345.64it/s][A
Calculating viewed counts for every point:  91%|█████████ | 158/174 [00:00<00:00, 356.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [03:30<00:08,  1.12s/it]detected_ratio_thres_value tensor(0.0690, device='cuda:0')
final masked points tensor(1963, device='cuda:0')
before filtering torch.Size([3, 41327])
after filtering torch.Size([3, 41327])
num_ins_points_after_filtering tensor([935, 489, 446], device='cuda:0')
Working on scene0695_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 37], [7, 8, 9, 23, 24, 25, 26, 27], [17, 18, 19, 20, 21, 22], [30, 31, 32], [33, 34, 35]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 30/182 [00:00<00:00, 297.90it/s][A
Calculating viewed counts for every point:  33%|███▎      | 60/182 [00:00<00:00, 269.33it/s][A
Calculating viewed counts for every point:  48%|████▊     | 88/182 [00:00<00:00, 266.04it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 115/182 [00:00<00:00, 266.29it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 144/182 [00:00<00:00, 272.46it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 172/182 [00:00<00:00, 262.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [03:31<00:07,  1.11s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(11785, device='cuda:0')
before filtering torch.Size([5, 133418])
after filtering torch.Size([5, 133418])
num_ins_points_after_filtering tensor([ 656, 7920,  980, 1637,  385], device='cuda:0')
Working on scene0696_00 class refrigerator
masks_to_be_merged [[1, 10, 11], [6, 7, 8, 14, 15, 16, 17, 19, 21], [9, 18, 20, 22, 23, 24], [12, 13]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 13/130 [00:00<00:00, 125.14it/s][A
Calculating viewed counts for every point:  20%|██        | 26/130 [00:00<00:00, 124.04it/s][A
Calculating viewed counts for every point:  30%|███       | 39/130 [00:00<00:00, 124.49it/s][A
Calculating viewed counts for every point:  40%|████      | 52/130 [00:00<00:00, 117.98it/s][A
Calculating viewed counts for every point:  49%|████▉     | 64/130 [00:00<00:00, 115.87it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 76/130 [00:00<00:00, 116.59it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 89/130 [00:00<00:00, 120.35it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 102/130 [00:00<00:00, 122.89it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 115/130 [00:00<00:00, 123.48it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 129/130 [00:01<00:00, 126.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [03:33<00:07,  1.25s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(6639, device='cuda:0')
before filtering torch.Size([4, 231067])
after filtering torch.Size([1, 231067])
num_ins_points_after_filtering tensor([4068], device='cuda:0')
Working on scene0697_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 28, 29, 30, 31, 32, 33, 34, 35], [4, 36, 37, 38, 39, 40], [5, 6], [10, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 86, 88], [11, 12, 13, 14, 15, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95], [16, 17, 18, 19], [22, 23, 24, 25, 26, 27], [41, 42, 43, 44, 45, 46, 47], [97, 98, 99, 100], [104, 105]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 29/288 [00:00<00:00, 273.63it/s][A
Calculating viewed counts for every point:  21%|██        | 60/288 [00:00<00:00, 292.15it/s][A
Calculating viewed counts for every point:  31%|███▏      | 90/288 [00:00<00:00, 272.36it/s][A
Calculating viewed counts for every point:  41%|████      | 118/288 [00:00<00:00, 266.24it/s][A
Calculating viewed counts for every point:  50%|█████     | 145/288 [00:00<00:00, 266.83it/s][A
Calculating viewed counts for every point:  61%|██████    | 176/288 [00:00<00:00, 278.19it/s][A
Calculating viewed counts for every point:  71%|███████   | 205/288 [00:00<00:00, 280.29it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 234/288 [00:00<00:00, 279.58it/s][A
Calculating viewed counts for every point:  91%|█████████ | 262/288 [00:00<00:00, 273.94it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [03:36<00:07,  1.60s/it]detected_ratio_thres_value tensor(0.3030, device='cuda:0')
final masked points tensor(10887, device='cuda:0')
before filtering torch.Size([10, 139300])
after filtering torch.Size([6, 139300])
num_ins_points_after_filtering tensor([ 441,  686, 2105, 3358, 1602,  367], device='cuda:0')
Working on scene0699_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 105, 106, 107, 113, 114], [11, 12], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80], [81, 83, 84, 85, 86], [87, 88, 89, 90], [99, 101, 104], [108, 109, 112]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/220 [00:00<00:01, 168.48it/s][A
Calculating viewed counts for every point:  16%|█▋        | 36/220 [00:00<00:01, 175.99it/s][A
Calculating viewed counts for every point:  25%|██▌       | 55/220 [00:00<00:00, 179.56it/s][A
Calculating viewed counts for every point:  33%|███▎      | 73/220 [00:00<00:00, 175.81it/s][A
Calculating viewed counts for every point:  42%|████▏     | 93/220 [00:00<00:00, 183.40it/s][A
Calculating viewed counts for every point:  51%|█████     | 112/220 [00:00<00:00, 179.19it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 130/220 [00:00<00:00, 178.40it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 148/220 [00:00<00:00, 178.21it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 166/220 [00:00<00:00, 167.13it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 185/220 [00:01<00:00, 172.53it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 205/220 [00:01<00:00, 178.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [03:39<00:08,  2.04s/it]detected_ratio_thres_value tensor(0.2909, device='cuda:0')
final masked points tensor(7647, device='cuda:0')
before filtering torch.Size([8, 153041])
after filtering torch.Size([3, 153041])
num_ins_points_after_filtering tensor([1565, 1088, 2008], device='cuda:0')
Working on scene0700_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 170, 171], [10, 11, 12, 13, 16, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], [14, 15, 17, 18, 184, 185, 186, 187, 188, 194], [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], [160, 161, 162], [163, 164, 165, 166, 167, 168, 169]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 19/459 [00:00<00:02, 183.71it/s][A
Calculating viewed counts for every point:   8%|▊         | 38/459 [00:00<00:02, 182.62it/s][A
Calculating viewed counts for every point:  13%|█▎        | 58/459 [00:00<00:02, 188.19it/s][A
Calculating viewed counts for every point:  17%|█▋        | 77/459 [00:00<00:02, 187.94it/s][A
Calculating viewed counts for every point:  21%|██        | 97/459 [00:00<00:01, 191.61it/s][A
Calculating viewed counts for every point:  25%|██▌       | 117/459 [00:00<00:01, 191.90it/s][A
Calculating viewed counts for every point:  30%|███       | 138/459 [00:00<00:01, 194.92it/s][A
Calculating viewed counts for every point:  34%|███▍      | 158/459 [00:00<00:01, 194.91it/s][A
Calculating viewed counts for every point:  39%|███▉      | 178/459 [00:00<00:01, 193.29it/s][A
Calculating viewed counts for every point:  43%|████▎     | 198/459 [00:01<00:01, 188.84it/s][A
Calculating viewed counts for every point:  48%|████▊     | 220/459 [00:01<00:01, 196.95it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 240/459 [00:01<00:01, 191.79it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 260/459 [00:01<00:01, 184.93it/s][A
Calculating viewed counts for every point:  61%|██████    | 280/459 [00:01<00:00, 188.38it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 299/459 [00:01<00:00, 188.56it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 319/459 [00:01<00:00, 190.64it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 339/459 [00:01<00:00, 190.92it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 360/459 [00:01<00:00, 193.22it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 380/459 [00:02<00:00, 180.96it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 399/459 [00:02<00:00, 179.71it/s][A
Calculating viewed counts for every point:  91%|█████████ | 418/459 [00:02<00:00, 180.26it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 437/459 [00:02<00:00, 175.17it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 456/459 [00:02<00:00, 177.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [03:45<00:09,  3.18s/it]detected_ratio_thres_value tensor(0.3514, device='cuda:0')
final masked points tensor(30543, device='cuda:0')
before filtering torch.Size([6, 167755])
after filtering torch.Size([4, 167755])
num_ins_points_after_filtering tensor([24434,  1953,  2806,  1030], device='cuda:0')
Working on scene0701_00 class refrigerator
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0702_00 class refrigerator
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 9, 34, 35, 36, 37, 38], [10, 11, 12, 13], [15, 29], [16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31], [32, 33]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  35%|███▍      | 29/84 [00:00<00:00, 288.18it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 60/84 [00:00<00:00, 294.35it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [03:45<00:01,  1.91s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(8427, device='cuda:0')
before filtering torch.Size([5, 54769])
after filtering torch.Size([3, 54769])
num_ins_points_after_filtering tensor([5196,  326, 1915], device='cuda:0')
Working on scene0704_00 class refrigerator
masks_to_be_merged [[0, 1], [2, 3, 4], [17, 18, 19, 20, 21, 61, 62, 63, 92, 94, 95, 96], [29, 30], [32, 33], [36, 37], [41, 42, 43, 44, 45, 46], [49, 50, 51, 52, 53, 54, 55, 56], [58, 59], [67, 68, 70, 72, 78, 79, 80, 81, 82, 83, 84], [69, 71, 73, 74, 75, 76, 77, 85, 86, 87, 88], [103, 104, 105, 106], [109, 110]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 19/241 [00:00<00:01, 189.40it/s][A
Calculating viewed counts for every point:  16%|█▌        | 38/241 [00:00<00:01, 177.73it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/241 [00:00<00:00, 183.42it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/241 [00:00<00:00, 185.75it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 184.74it/s][A
Calculating viewed counts for every point:  48%|████▊     | 116/241 [00:00<00:00, 187.22it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 135/241 [00:00<00:00, 178.42it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 156/241 [00:00<00:00, 186.85it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 178/241 [00:00<00:00, 194.24it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 198/241 [00:01<00:00, 188.64it/s][A
Calculating viewed counts for every point:  90%|█████████ | 217/241 [00:01<00:00, 187.56it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 236/241 [00:01<00:00, 186.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:49<00:00,  2.23s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [03:49<00:00,  1.61s/it]
detected_ratio_thres_value tensor(0.2174, device='cuda:0')
final masked points tensor(20228, device='cuda:0')
before filtering torch.Size([13, 183029])
after filtering torch.Size([8, 183029])
num_ins_points_after_filtering tensor([ 446, 3113, 3176, 1649, 1830,  590, 2407,  450], device='cuda:0')
Processing class: refrigerator
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<03:02,  1.29s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:26,  1.62it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:00,  2.30it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:01<00:50,  2.71it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:38,  3.56it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:39,  3.48it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:02<00:41,  3.26it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:02<00:33,  3.96it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:31,  4.17it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:32,  4.07it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:03<00:28,  4.59it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:03<00:26,  4.88it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:03<00:27,  4.69it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:04<00:25,  5.06it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:04<00:23,  5.26it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:04<00:25,  4.90it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:04<00:25,  4.78it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:26,  4.64it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:05<00:24,  4.98it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:05<00:26,  4.62it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:05<00:22,  5.33it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:05<00:22,  5.30it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:24,  4.79it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:27,  4.24it/s]DEBUG best_match_after_iou_check [tensor(3), tensor(188), tensor(178), tensor(127), tensor(301), tensor(369), tensor(102), tensor(258)]
DEBUG uniques tensor([  3, 102, 127, 178, 188, 258, 301, 369]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 102
Matched 1 times with 127
Matched 1 times with 178
Matched 1 times with 188
Matched 1 times with 258
Matched 1 times with 301
Matched 1 times with 369
iou for matched labels tensor([0.6985, 0.2325, 0.2818, 0.3531, 0.3642, 0.2132, 0.2751, 0.5614])
Matched labels: ['refrigerator', 'oven', 'doorframe', 'oven', 'water_bottle', 'refrigerator', 'tv', 'doorframe']
Clip similarities: [1.0, 0.7568359375, 0.697265625, 0.7568359375, 0.7041015625, 1.0, 0.76611328125, 0.697265625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(188), tensor(135)]
DEBUG uniques tensor([135, 188]) tensor([1, 1])
Matched 1 times with 135
Matched 1 times with 188
iou for matched labels tensor([0.7275, 0.6364])
Matched labels: ['bathroom_stall', 'mini_fridge']
Clip similarities: [0.677734375, 0.79833984375]
DEBUG best_match_after_iou_check [tensor(193), tensor(64), tensor(96), tensor(129), tensor(153), tensor(82)]
DEBUG uniques tensor([ 64,  82,  96, 129, 153, 193]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 64
Matched 1 times with 82
Matched 1 times with 96
Matched 1 times with 129
Matched 1 times with 153
Matched 1 times with 193
iou for matched labels tensor([0.6858, 0.1528, 0.4525, 0.7905, 0.1166, 0.3394])
Matched labels: ['bin', 'whiteboard', 'file_cabinet', 'mini_fridge', 'whiteboard', 'monitor']
Clip similarities: [0.6923828125, 0.6318359375, 0.71337890625, 0.79833984375, 0.6318359375, 0.70751953125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(167), tensor(9), tensor(35), tensor(138)]
DEBUG uniques tensor([  9,  35, 138, 167]) tensor([1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 35
Matched 1 times with 138
Matched 1 times with 167
iou for matched labels tensor([0.7218, 0.7067, 0.4469, 0.2433])
Matched labels: ['closet_door', 'door', 'shower_wall', 'toilet']
Clip similarities: [0.72216796875, 0.76123046875, 0.65380859375, 0.7021484375]
DEBUG best_match_after_iou_check [tensor(142), tensor(159), tensor(141), tensor(163), tensor(130)]
DEBUG uniques tensor([130, 141, 142, 159, 163]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 130
Matched 1 times with 141
Matched 1 times with 142
Matched 1 times with 159
Matched 1 times with 163
iou for matched labels tensor([0.6234, 0.4766, 0.2736, 0.4418, 0.3687])
Matched labels: ['end_table', 'shelf', 'desk', 'refrigerator', 'printer']
Clip similarities: [0.6494140625, 0.71484375, 0.72021484375, 1.0, 0.71240234375]
DEBUG best_match_after_iou_check [tensor(57), tensor(23)]
DEBUG uniques tensor([23, 57]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 57
iou for matched labels tensor([0.5153, 0.6647])
Matched labels: ['toaster_oven', 'refrigerator']
Clip similarities: [0.744140625, 1.0]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(16), tensor(10), tensor(97)]
DEBUG uniques tensor([10, 16, 97]) tensor([1, 1, 1])
Matched 1 times with 10
Matched 1 times with 16
Matched 1 times with 97
iou for matched labels tensor([0.3965, 0.4747, 0.6420])
Matched labels: ['copier', 'copier', 'door']
Clip similarities: [0.74462890625, 0.74462890625, 0.76123046875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(96), tensor(135), tensor(3)]
DEBUG uniques tensor([  3,  96, 135]) tensor([1, 1, 1])
Matched 1 times with 3
Matched 1 times with 96
Matched 1 times with 135
iou for matched labels tensor([0.7137, 0.8126, 0.6861])
Matched labels: ['fire_extinguisher', 'shower_door', 'radiator']
Clip similarities: [0.6298828125, 0.69189453125, 0.6845703125]
DEBUG best_match_after_iou_check [tensor(66), tensor(13), tensor(140)]
DEBUG uniques tensor([ 13,  66, 140]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 66
Matched 1 times with 140
iou for matched labels tensor([0.4978, 0.4670, 0.4797])
Matched labels: ['paper_towel_dispenser', 'power_outlet', 'bathroom_stall_door']
Clip similarities: [0.63916015625, 0.6357421875, 0.6513671875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(176), tensor(55), tensor(176)]
DEBUG uniques tensor([ 55, 176]) tensor([1, 2])
Matched 1 times with 55
Matched 2 times with 176
Merge stage2 masks
iou for matched labels tensor([0.5609, 0.6420])
Matched labels: ['blackboard', 'file_cabinet']
Clip similarities: [0.60888671875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(90), tensor(67), tensor(21)]
DEBUG uniques tensor([21, 67, 90]) tensor([1, 1, 1])
Matched 1 times with 21
Matched 1 times with 67
Matched 1 times with 90
iou for matched labels tensor([0.5068, 0.4089, 0.8071])
Matched labels: ['shower_wall', 'towel', 'mat']
Clip similarities: [0.65380859375, 0.6455078125, 0.7109375]
DEBUG best_match_after_iou_check [tensor(193), tensor(99), tensor(116), tensor(43)]
DEBUG uniques tensor([ 43,  99, 116, 193]) tensor([1, 1, 1, 1])
Matched 1 times with 43
Matched 1 times with 99
Matched 1 times with 116
Matched 1 times with 193
iou for matched labels tensor([0.1883, 0.3936, 0.4952, 0.6455])
Matched labels: ['computer_tower', 'refrigerator', 'refrigerator', 'refrigerator']
Clip similarities: [0.68603515625, 1.0, 1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(90), tensor(58), tensor(34), tensor(151)]
DEBUG uniques tensor([ 34,  58,  90, 151]) tensor([1, 1, 1, 1])
Matched 1 times with 34
Matched 1 times with 58
Matched 1 times with 90
Matched 1 times with 151
iou for matched labels tensor([0.6570, 0.7082, 0.6695, 0.6906])
Matched labels: ['bathroom_stall_door', 'washing_machine', 'washing_machine', 'closet_door']
Clip similarities: [0.6513671875, 0.71826171875, 0.71826171875, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(13), tensor(6), tensor(476), tensor(109)]
DEBUG uniques tensor([  6,  13, 109, 476]) tensor([1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 13
Matched 1 times with 109
Matched 1 times with 476
iou for matched labels tensor([0.0537, 0.1628, 0.0834, 0.0285])
Matched labels: ['bag', 'bed', 'object', 'closet_door']
Clip similarities: [0.703125, 0.6611328125, 0.72265625, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(43), tensor(139)]
DEBUG uniques tensor([ 43, 139]) tensor([1, 1])
Matched 1 times with 43
Matched 1 times with 139
iou for matched labels tensor([0.6245, 0.8445])
Matched labels: ['door', 'bin']
Clip similarities: [0.76123046875, 0.6923828125]
DEBUG best_match_after_iou_check [tensor(3), tensor(95), tensor(35), tensor(8)]
DEBUG uniques tensor([ 3,  8, 35, 95]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 8
Matched 1 times with 35
Matched 1 times with 95
iou for matched labels tensor([0.7223, 0.6455, 0.3268, 0.4338])
Matched labels: ['refrigerator', 'dishwasher', 'oven', 'closet_door']
Clip similarities: [1.0, 0.70703125, 0.7568359375, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(66), tensor(152), tensor(208)]
DEBUG uniques tensor([ 66, 152, 208]) tensor([1, 1, 1])
Matched 1 times with 66
Matched 1 times with 152
Matched 1 times with 208
iou for matched labels tensor([0.2615, 0.1844, 0.0148])
Matched labels: ['bathtub', 'closet_door', 'light_switch']
Clip similarities: [0.71533203125, 0.72216796875, 0.63720703125]
DEBUG best_match_after_iou_check [tensor(126), tensor(0), tensor(114), tensor(18)]
DEBUG uniques tensor([  0,  18, 114, 126]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 18
Matched 1 times with 114
Matched 1 times with 126
iou for matched labels tensor([0.6763, 0.6433, 0.8633, 0.8470])
Matched labels: ['box', 'dishwasher', 'soap_dispenser', 'refrigerator']
Clip similarities: [0.75048828125, 0.70703125, 0.6328125, 1.0]
DEBUG best_match_after_iou_check [tensor(0)]
DEBUG uniques tensor([0]) tensor([1])
Matched 1 times with 0
iou for matched labels tensor([0.3768])
Matched labels: ['desk']
Clip similarities: [0.72021484375]
DEBUG best_match_after_iou_check [tensor(2)]
DEBUG uniques tensor([2]) tensor([1])
Matched 1 times with 2
iou for matched labels tensor([0.6228])
Matched labels: ['coffee_table']
Clip similarities: [0.634765625]
Select thresholds for refinement:  18%|█▊        | 26/142 [00:06<00:26,  4.30it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:06<00:22,  5.00it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:06<00:24,  4.62it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:07<00:28,  3.92it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:07<00:33,  3.33it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:07<00:31,  3.53it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:08<00:28,  3.80it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:08<00:30,  3.57it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:08<00:35,  3.04it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:09<00:36,  2.97it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:09<00:35,  2.96it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:09<00:33,  3.12it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:10<00:30,  3.42it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:10<00:27,  3.75it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:10<00:25,  4.03it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:10<00:22,  4.43it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:11<00:24,  4.07it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:11<00:26,  3.72it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:11<00:31,  3.12it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:11<00:25,  3.85it/s]DEBUG best_match_after_iou_check [tensor(87)]
DEBUG uniques tensor([87]) tensor([1])
Matched 1 times with 87
iou for matched labels tensor([0.7756])
Matched labels: ['door']
Clip similarities: [0.76123046875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(98), tensor(35)]
DEBUG uniques tensor([35, 98]) tensor([1, 1])
Matched 1 times with 35
Matched 1 times with 98
iou for matched labels tensor([0.5812, 0.2564])
Matched labels: ['box', 'shelf']
Clip similarities: [0.75048828125, 0.71484375]
DEBUG best_match_after_iou_check [tensor(103), tensor(256), tensor(80), tensor(126), tensor(351), tensor(140), tensor(146), tensor(69), tensor(69)]
DEBUG uniques tensor([ 69,  80, 103, 126, 140, 146, 256, 351]) tensor([2, 1, 1, 1, 1, 1, 1, 1])
Matched 2 times with 69
Merge stage2 masks
Matched 1 times with 80
Matched 1 times with 103
Matched 1 times with 126
Matched 1 times with 140
Matched 1 times with 146
Matched 1 times with 256
Matched 1 times with 351
iou for matched labels tensor([0.2112, 0.1429, 0.7254, 0.5072, 0.3515, 0.4991, 0.4902, 0.4934])
Matched labels: ['closet_door', 'bin', 'refrigerator', 'door', 'doorframe', 'shower_wall', 'refrigerator', 'kitchen_cabinet']
Clip similarities: [0.72216796875, 0.6923828125, 1.0, 0.76123046875, 0.697265625, 0.65380859375, 1.0, 0.73876953125]
DEBUG best_match_after_iou_check [tensor(123), tensor(211), tensor(42)]
DEBUG uniques tensor([ 42, 123, 211]) tensor([1, 1, 1])
Matched 1 times with 42
Matched 1 times with 123
Matched 1 times with 211
iou for matched labels tensor([0.3980, 0.5756, 0.2630])
Matched labels: ['bookshelf', 'shelf', 'shelf']
Clip similarities: [0.7216796875, 0.71484375, 0.71484375]
DEBUG best_match_after_iou_check [tensor(21), tensor(92), tensor(55), tensor(10)]
DEBUG uniques tensor([10, 21, 55, 92]) tensor([1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 21
Matched 1 times with 55
Matched 1 times with 92
iou for matched labels tensor([0.6057, 0.6019, 0.7153, 0.8108])
Matched labels: ['desk', 'bin', 'door', 'closet_door']
Clip similarities: [0.72021484375, 0.6923828125, 0.76123046875, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(95), tensor(0), tensor(78)]
DEBUG uniques tensor([ 0, 78, 95]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 78
Matched 1 times with 95
iou for matched labels tensor([0.7429, 0.8268, 0.3120])
Matched labels: ['refrigerator', 'radiator', 'closet_door']
Clip similarities: [1.0, 0.6845703125, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(184), tensor(46), tensor(139), tensor(232)]
DEBUG uniques tensor([ 46, 139, 184, 232]) tensor([1, 1, 1, 1])
Matched 1 times with 46
Matched 1 times with 139
Matched 1 times with 184
Matched 1 times with 232
iou for matched labels tensor([0.7494, 0.7618, 0.4255, 0.2285])
Matched labels: ['refrigerator', 'refrigerator', 'closet_door', 'closet_door']
Clip similarities: [1.0, 1.0, 0.72216796875, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(277), tensor(538), tensor(3), tensor(423)]
DEBUG uniques tensor([  3, 277, 423, 538]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 277
Matched 1 times with 423
Matched 1 times with 538
iou for matched labels tensor([0.2610, 0.2934, 0.7919, 0.6675])
Matched labels: ['pillar', 'column', 'refrigerator', 'refrigerator']
Clip similarities: [0.68603515625, 0.60986328125, 1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(14), tensor(232), tensor(210), tensor(236), tensor(143), tensor(287), tensor(36), tensor(148), tensor(276)]
DEBUG uniques tensor([ 14,  36, 143, 148, 210, 232, 236, 276, 287]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 14
Matched 1 times with 36
Matched 1 times with 143
Matched 1 times with 148
Matched 1 times with 210
Matched 1 times with 232
Matched 1 times with 236
Matched 1 times with 276
Matched 1 times with 287
iou for matched labels tensor([0.4428, 0.4236, 0.3272, 0.5577, 0.1334, 0.2059, 0.3067, 0.3694, 0.3358])
Matched labels: ['lamp', 'shower_door', 'furniture', 'sink', 'shower_wall', 'doorframe', 'file_cabinet', 'refrigerator', 'furniture']
Clip similarities: [0.673828125, 0.69189453125, 0.69775390625, 0.6767578125, 0.65380859375, 0.697265625, 0.71337890625, 1.0, 0.69775390625]
DEBUG best_match_after_iou_check [tensor(0), tensor(133), tensor(133), tensor(132), tensor(72)]
DEBUG uniques tensor([  0,  72, 132, 133]) tensor([1, 1, 1, 2])
Matched 1 times with 0
Matched 1 times with 72
Matched 1 times with 132
Matched 2 times with 133
Merge stage2 masks
iou for matched labels tensor([0.6752, 0.7279, 0.6471, 0.2933])
Matched labels: ['desk', 'chair', 'recycling_bin', 'monitor']
Clip similarities: [0.72021484375, 0.63671875, 0.67431640625, 0.70751953125]
DEBUG best_match_after_iou_check [tensor(162), tensor(86), tensor(43), tensor(162)]
DEBUG uniques tensor([ 43,  86, 162]) tensor([1, 1, 2])
Matched 1 times with 43
Matched 1 times with 86
Matched 2 times with 162
Merge stage2 masks
iou for matched labels tensor([0.4788, 0.5055, 0.8051])
Matched labels: ['bin', 'door', 'file_cabinet']
Clip similarities: [0.6923828125, 0.76123046875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(136), tensor(105), tensor(170)]
DEBUG uniques tensor([105, 136, 170]) tensor([1, 1, 1])
Matched 1 times with 105
Matched 1 times with 136
Matched 1 times with 170
iou for matched labels tensor([0.6282, 0.3218, 0.1648])
Matched labels: ['storage_bin', 'shelf', 'lamp']
Clip similarities: [0.677734375, 0.71484375, 0.673828125]
DEBUG best_match_after_iou_check [tensor(103), tensor(9)]
DEBUG uniques tensor([  9, 103]) tensor([1, 1])
Matched 1 times with 9
Matched 1 times with 103
iou for matched labels tensor([0.5385, 0.0900])
Matched labels: ['chair', 'blackboard']
Clip similarities: [0.63671875, 0.60888671875]
DEBUG best_match_after_iou_check [tensor(74), tensor(74), tensor(92), tensor(37)]
DEBUG uniques tensor([37, 74, 92]) tensor([1, 2, 1])
Matched 1 times with 37
Matched 2 times with 74
Merge stage2 masks
Matched 1 times with 92
iou for matched labels tensor([0.4516, 0.4917, 0.5386])
Matched labels: ['door', 'shelf', 'desk']
Clip similarities: [0.76123046875, 0.71484375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(4), tensor(3)]
DEBUG uniques tensor([3, 4]) tensor([1, 1])
Matched 1 times with 3
Matched 1 times with 4
iou for matched labels tensor([0.8470, 0.7936])
Matched labels: ['copier', 'file_cabinet']
Clip similarities: [0.74462890625, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(43), tensor(13), tensor(104)]
DEBUG uniques tensor([ 13,  43, 104]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 43
Matched 1 times with 104
iou for matched labels tensor([0.7103, 0.5550, 0.2319])
Matched labels: ['shelf', 'blinds', 'bookshelf']
Clip similarities: [0.71484375, 0.60546875, 0.7216796875]
DEBUG best_match_after_iou_check [tensor(7), tensor(46), tensor(90), tensor(14)]
DEBUG uniques tensor([ 7, 14, 46, 90]) tensor([1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 14
Matched 1 times with 46
Matched 1 times with 90
iou for matched labels tensor([0.6061, 0.6054, 0.4670, 0.6221])
Matched labels: ['mailbox', 'file_cabinet', 'bin', 'door']
Clip similarities: [0.68896484375, 0.71337890625, 0.6923828125, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(5), tensor(236), tensor(133), tensor(229), tensor(202), tensor(435), tensor(385), tensor(304)]
DEBUG uniques tensor([  5, 133, 202, 229, 236, 304, 385, 435]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 133
Matched 1 times with 202
Matched 1 times with 229
Matched 1 times with 236
Matched 1 times with 304
Matched 1 times with 385
Matched 1 times with 435
iou for matched labels tensor([0.5385, 0.5661, 0.3607, 0.8330, 0.6967, 0.6697, 0.5986, 0.5234])
Matched labels: ['washing_machine', 'doorframe', 'shower_door', 'doorframe', 'doorframe', 'oven', 'pipe', 'shower_door']
Clip similarities: [0.71826171875, 0.697265625, 0.69189453125, 0.697265625, 0.697265625, 0.7568359375, 0.67431640625, 0.69189453125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(28), tensor(76), tensor(99), tensor(83)]
DEBUG uniques tensor([28, 76, 83, 99]) tensor([1, 1, 1, 1])
Matched 1 times with 28
Select thresholds for refinement:  32%|███▏      | 46/142 [00:12<00:24,  3.99it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:12<00:23,  4.02it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:12<00:29,  3.23it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:13<00:25,  3.67it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:13<00:23,  3.89it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:13<00:20,  4.37it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:13<00:22,  4.08it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:13<00:21,  4.11it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:14<00:22,  3.91it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:14<00:20,  4.26it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:14<00:19,  4.30it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:14<00:19,  4.43it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:15<00:18,  4.50it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:15<00:17,  4.64it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:15<00:18,  4.41it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:15<00:19,  4.24it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:16<00:20,  3.82it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:16<00:18,  4.28it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:16<00:18,  4.17it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:16<00:19,  3.89it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:17<00:18,  4.06it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:17<00:17,  4.21it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:17<00:16,  4.40it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:17<00:18,  4.02it/s]Matched 1 times with 76
Matched 1 times with 83
Matched 1 times with 99
iou for matched labels tensor([0.4917, 0.5635, 0.3670, 0.2429])
Matched labels: ['water_cooler', 'sink', 'sofa_chair', 'folded_chair']
Clip similarities: [0.720703125, 0.6767578125, 0.62548828125, 0.5068359375]
DEBUG best_match_after_iou_check [tensor(10), tensor(1), tensor(10), tensor(86)]
DEBUG uniques tensor([ 1, 10, 86]) tensor([1, 2, 1])
Matched 1 times with 1
Matched 2 times with 10
Merge stage2 masks
Matched 1 times with 86
iou for matched labels tensor([0.4582, 0.6427, 0.5380])
Matched labels: ['oven', 'refrigerator', 'refrigerator']
Clip similarities: [0.7568359375, 1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(0), tensor(126), tensor(239), tensor(194), tensor(228), tensor(377), tensor(377)]
DEBUG uniques tensor([  0, 126, 194, 228, 239, 377]) tensor([1, 1, 1, 1, 1, 2])
Matched 1 times with 0
Matched 1 times with 126
Matched 1 times with 194
Matched 1 times with 228
Matched 1 times with 239
Matched 2 times with 377
Merge stage2 masks
iou for matched labels tensor([0.3209, 0.3484, 0.3339, 0.3327, 0.4170, 0.5321])
Matched labels: ['whiteboard', 'whiteboard', 'door', 'stair_rail', 'poster', 'bin']
Clip similarities: [0.6318359375, 0.6318359375, 0.76123046875, 0.5224609375, 0.64794921875, 0.6923828125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(42), tensor(65), tensor(28), tensor(39)]
DEBUG uniques tensor([28, 39, 42, 65]) tensor([1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 39
Matched 1 times with 42
Matched 1 times with 65
iou for matched labels tensor([0.7462, 0.8956, 0.7832, 0.3948])
Matched labels: ['file_cabinet', 'file_cabinet', 'copier', 'copier']
Clip similarities: [0.71337890625, 0.71337890625, 0.74462890625, 0.74462890625]
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.5796])
Matched labels: ['monitor']
Clip similarities: [0.70751953125]
DEBUG best_match_after_iou_check [tensor(28), tensor(82), tensor(223), tensor(158)]
DEBUG uniques tensor([ 28,  82, 158, 223]) tensor([1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 82
Matched 1 times with 158
Matched 1 times with 223
iou for matched labels tensor([0.6894, 0.3437, 0.5019, 0.3851])
Matched labels: ['shelf', 'box', 'furniture', 'kitchen_counter']
Clip similarities: [0.71484375, 0.75048828125, 0.69775390625, 0.69580078125]
DEBUG best_match_after_iou_check [tensor(11), tensor(191)]
DEBUG uniques tensor([ 11, 191]) tensor([1, 1])
Matched 1 times with 11
Matched 1 times with 191
iou for matched labels tensor([0.8483, 0.6110])
Matched labels: ['whiteboard', 'closet_wall']
Clip similarities: [0.6318359375, 0.68896484375]
DEBUG best_match_after_iou_check [tensor(119), tensor(223), tensor(152), tensor(250)]
DEBUG uniques tensor([119, 152, 223, 250]) tensor([1, 1, 1, 1])
Matched 1 times with 119
Matched 1 times with 152
Matched 1 times with 223
Matched 1 times with 250
iou for matched labels tensor([0.5320, 0.5243, 0.4057, 0.5938])
Matched labels: ['whiteboard', 'mini_fridge', 'towel', 'cup']
Clip similarities: [0.6318359375, 0.79833984375, 0.6455078125, 0.70458984375]
DEBUG best_match_after_iou_check [tensor(62)]
DEBUG uniques tensor([62]) tensor([1])
Matched 1 times with 62
iou for matched labels tensor([0.0761])
Matched labels: ['chair']
Clip similarities: [0.63671875]
DEBUG best_match_after_iou_check [tensor(71)]
DEBUG uniques tensor([71]) tensor([1])
Matched 1 times with 71
iou for matched labels tensor([0.3036])
Matched labels: ['monitor']
Clip similarities: [0.70751953125]
DEBUG best_match_after_iou_check [tensor(72), tensor(173)]
DEBUG uniques tensor([ 72, 173]) tensor([1, 1])
Matched 1 times with 72
Matched 1 times with 173
iou for matched labels tensor([0.9308, 0.4750])
Matched labels: ['dresser', 'door']
Clip similarities: [0.70458984375, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(76), tensor(26), tensor(27)]
DEBUG uniques tensor([26, 27, 76]) tensor([1, 1, 1])
Matched 1 times with 26
Matched 1 times with 27
Matched 1 times with 76
iou for matched labels tensor([0.7907, 0.3135, 0.7395])
Matched labels: ['closet_door', 'shelf', 'doorframe']
Clip similarities: [0.72216796875, 0.71484375, 0.697265625]
DEBUG best_match_after_iou_check [tensor(112), tensor(8), tensor(57), tensor(65), tensor(63)]
DEBUG uniques tensor([  8,  57,  63,  65, 112]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 57
Matched 1 times with 63
Matched 1 times with 65
Matched 1 times with 112
iou for matched labels tensor([0.5420, 0.8014, 0.6161, 0.4706, 0.1097])
Matched labels: ['doorframe', 'shelf', 'shelf', 'door', 'pipe']
Clip similarities: [0.697265625, 0.71484375, 0.71484375, 0.76123046875, 0.67431640625]
DEBUG best_match_after_iou_check [tensor(61), tensor(26)]
DEBUG uniques tensor([26, 61]) tensor([1, 1])
Matched 1 times with 26
Matched 1 times with 61
iou for matched labels tensor([0.5531, 0.7516])
Matched labels: ['blackboard', 'file_cabinet']
Clip similarities: [0.60888671875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(3), tensor(1), tensor(78)]
DEBUG uniques tensor([ 1,  3, 78]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 3
Matched 1 times with 78
iou for matched labels tensor([0.7041, 0.8121, 0.8111])
Matched labels: ['desk', 'radiator', 'door']
Clip similarities: [0.72021484375, 0.6845703125, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(0), tensor(29), tensor(86)]
DEBUG uniques tensor([ 0, 29, 86]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 29
Matched 1 times with 86
iou for matched labels tensor([0.7706, 0.5918, 0.7632])
Matched labels: ['radiator', 'door', 'refrigerator']
Clip similarities: [0.6845703125, 0.76123046875, 1.0]
DEBUG best_match_after_iou_check [tensor(127), tensor(39), tensor(25)]
DEBUG uniques tensor([ 25,  39, 127]) tensor([1, 1, 1])
Matched 1 times with 25
Matched 1 times with 39
Matched 1 times with 127
iou for matched labels tensor([0.4496, 0.2289, 0.8449])
Matched labels: ['shower_wall', 'shower_curtain_rod', 'closet_door']
Clip similarities: [0.65380859375, 0.544921875, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(27), tensor(52), tensor(50), tensor(225)]
DEBUG uniques tensor([ 27,  50,  52, 225]) tensor([1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 50
Matched 1 times with 52
Matched 1 times with 225
iou for matched labels tensor([0.6594, 0.3434, 0.6379, 0.6240])
Matched labels: ['ladder', 'doorframe', 'refrigerator', 'door']
Clip similarities: [0.65478515625, 0.697265625, 1.0, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(64), tensor(40)]
DEBUG uniques tensor([40, 64]) tensor([1, 1])
Matched 1 times with 40
Matched 1 times with 64
iou for matched labels tensor([0.3051, 0.1185])
Matched labels: ['desk', 'chair']
Clip similarities: [0.72021484375, 0.63671875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(22), tensor(211)]
DEBUG uniques tensor([ 22, 211]) tensor([1, 1])
Matched 1 times with 22
Matched 1 times with 211
iou for matched labels tensor([0.7233, 0.4726])
Matched labels: ['storage_bin', 'lamp']
Clip similarities: [0.677734375, 0.673828125]
DEBUG best_match_after_iou_check [tensor(39), tensor(6), tensor(224)]
DEBUG uniques tensor([  6,  39, 224]) tensor([1, 1, 1])
Matched 1 times with 6
Matched 1 times with 39
Matched 1 times with 224
iou for matched labels tensor([0.7540, 0.7470, 0.5366])
Matched labels: ['table', 'door', 'blackboard']
Clip similarities: [0.66162109375, 0.76123046875, 0.60888671875]
DEBUG best_match_after_iou_check [tensor(140), tensor(202), tensor(299), tensor(52)]
DEBUG uniques tensor([ 52, 140, 202, 299]) tensor([1, 1, 1, 1])
Matched 1 times with 52
Matched 1 times with 140
Matched 1 times with 202
Matched 1 times with 299
iou for matched labels tensor([0.1015, 0.6061, 0.3174, 0.4589])
Matched labels: ['projector_screen', 'projector_screen', 'projector_screen', 'monitor']
Clip similarities: [0.6044921875, 0.6044921875, 0.6044921875, 0.70751953125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(224), tensor(42), tensor(167), tensor(90), tensor(59)]
DEBUG uniques Select thresholds for refinement:  50%|█████     | 71/142 [00:18<00:16,  4.37it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:18<00:14,  4.69it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:18<00:13,  5.06it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:18<00:13,  4.97it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:18<00:15,  4.38it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:19<00:15,  4.24it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:19<00:16,  3.87it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:19<00:15,  4.11it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:19<00:14,  4.38it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:20<00:12,  5.03it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:20<00:15,  3.92it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:20<00:16,  3.66it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:20<00:14,  4.16it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:21<00:12,  4.52it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:21<00:13,  4.31it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:21<00:14,  3.91it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:21<00:13,  4.22it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:22<00:11,  4.51it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:22<00:11,  4.79it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:22<00:11,  4.43it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:22<00:11,  4.55it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:23<00:12,  4.12it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:23<00:10,  4.63it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:23<00:11,  4.05it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:23<00:11,  4.05it/s]tensor([ 42,  59,  90, 167, 224]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 42
Matched 1 times with 59
Matched 1 times with 90
Matched 1 times with 167
Matched 1 times with 224
iou for matched labels tensor([0.6641, 0.7097, 0.4940, 0.1854, 0.5988])
Matched labels: ['mini_fridge', 'dresser', 'suitcase', 'doorframe', 'door']
Clip similarities: [0.79833984375, 0.70458984375, 0.720703125, 0.697265625, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(15), tensor(36), tensor(79)]
DEBUG uniques tensor([15, 36, 79]) tensor([1, 1, 1])
Matched 1 times with 15
Matched 1 times with 36
Matched 1 times with 79
iou for matched labels tensor([0.8166, 0.7908, 0.6773])
Matched labels: ['bathroom_stall_door', 'bin', 'closet_door']
Clip similarities: [0.6513671875, 0.6923828125, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(91), tensor(210)]
DEBUG uniques tensor([ 91, 210]) tensor([1, 1])
Matched 1 times with 91
Matched 1 times with 210
iou for matched labels tensor([0.2694, 0.7720])
Matched labels: ['shower_door', 'shower_wall']
Clip similarities: [0.69189453125, 0.65380859375]
DEBUG best_match_after_iou_check [tensor(23)]
DEBUG uniques tensor([23]) tensor([1])
Matched 1 times with 23
iou for matched labels tensor([0.6244])
Matched labels: ['coffee_table']
Clip similarities: [0.634765625]
DEBUG best_match_after_iou_check [tensor(36), tensor(20), tensor(92)]
DEBUG uniques tensor([20, 36, 92]) tensor([1, 1, 1])
Matched 1 times with 20
Matched 1 times with 36
Matched 1 times with 92
iou for matched labels tensor([0.3409, 0.7789, 0.5972])
Matched labels: ['copier', 'laundry_hamper', 'file_cabinet']
Clip similarities: [0.74462890625, 0.6513671875, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(10), tensor(190)]
DEBUG uniques tensor([ 10, 190]) tensor([1, 1])
Matched 1 times with 10
Matched 1 times with 190
iou for matched labels tensor([0.3331, 0.3059])
Matched labels: ['whiteboard', 'computer_tower']
Clip similarities: [0.6318359375, 0.68603515625]
DEBUG best_match_after_iou_check [tensor(45), tensor(12)]
DEBUG uniques tensor([12, 45]) tensor([1, 1])
Matched 1 times with 12
Matched 1 times with 45
iou for matched labels tensor([0.6653, 0.9116])
Matched labels: ['refrigerator', 'refrigerator']
Clip similarities: [1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(99)]
DEBUG uniques tensor([99]) tensor([1])
Matched 1 times with 99
iou for matched labels tensor([0.5045])
Matched labels: ['projector_screen']
Clip similarities: [0.6044921875]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.3093])
Matched labels: ['desk']
Clip similarities: [0.72021484375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(22)]
DEBUG uniques tensor([22]) tensor([1])
Matched 1 times with 22
iou for matched labels tensor([0.7156])
Matched labels: ['whiteboard']
Clip similarities: [0.6318359375]
DEBUG best_match_after_iou_check [tensor(189), tensor(61), tensor(166), tensor(6), tensor(189), tensor(224), tensor(33)]
DEBUG uniques tensor([  6,  33,  61, 166, 189, 224]) tensor([1, 1, 1, 1, 2, 1])
Matched 1 times with 6
Matched 1 times with 33
Matched 1 times with 61
Matched 1 times with 166
Matched 2 times with 189
Merge stage2 masks
Matched 1 times with 224
iou for matched labels tensor([0.6150, 0.2735, 0.5316, 0.4603, 0.1033, 0.2844])
Matched labels: ['file_cabinet', 'furniture', 'desk', 'crate', 'chair', 'microwave']
Clip similarities: [0.71337890625, 0.69775390625, 0.72021484375, 0.67724609375, 0.63671875, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(64), tensor(75)]
DEBUG uniques tensor([64, 75]) tensor([1, 1])
Matched 1 times with 64
Matched 1 times with 75
iou for matched labels tensor([0.3914, 0.4526])
Matched labels: ['closet_door', 'closet_door']
Clip similarities: [0.72216796875, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(104), tensor(44), tensor(147), tensor(27), tensor(27)]
DEBUG uniques tensor([ 27,  44, 104, 147]) tensor([2, 1, 1, 1])
Matched 2 times with 27
Merge stage2 masks
Matched 1 times with 44
Matched 1 times with 104
Matched 1 times with 147
iou for matched labels tensor([0.4517, 0.3094, 0.4946, 0.5189])
Matched labels: ['tv_stand', 'box', 'closet_wall', 'desk']
Clip similarities: [0.705078125, 0.75048828125, 0.68896484375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(128)]
DEBUG uniques tensor([128]) tensor([1])
Matched 1 times with 128
iou for matched labels tensor([0.6266])
Matched labels: ['cart']
Clip similarities: [0.69091796875]
DEBUG best_match_after_iou_check [tensor(6), tensor(30), tensor(78), tensor(98), tensor(61), tensor(39)]
DEBUG uniques tensor([ 6, 30, 39, 61, 78, 98]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 30
Matched 1 times with 39
Matched 1 times with 61
Matched 1 times with 78
Matched 1 times with 98
iou for matched labels tensor([0.7261, 0.9185, 0.5221, 0.5706, 0.8011, 0.3618])
Matched labels: ['bathroom_stall_door', 'door', 'shower_wall', 'shower_wall', 'paper_towel_dispenser', 'shower_wall']
Clip similarities: [0.6513671875, 0.76123046875, 0.65380859375, 0.65380859375, 0.63916015625, 0.65380859375]
DEBUG best_match_after_iou_check [tensor(1), tensor(111), tensor(42)]
DEBUG uniques tensor([  1,  42, 111]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 42
Matched 1 times with 111
iou for matched labels tensor([0.5549, 0.7775, 0.6394])
Matched labels: ['copier', 'bin', 'refrigerator']
Clip similarities: [0.74462890625, 0.6923828125, 1.0]
DEBUG best_match_after_iou_check [tensor(96), tensor(74), tensor(124)]
DEBUG uniques tensor([ 74,  96, 124]) tensor([1, 1, 1])
Matched 1 times with 74
Matched 1 times with 96
Matched 1 times with 124
iou for matched labels tensor([0.3105, 0.7807, 0.8496])
Matched labels: ['bathroom_stall_door', 'paper_towel_dispenser', 'trash_can']
Clip similarities: [0.6513671875, 0.63916015625, 0.666015625]
DEBUG best_match_after_iou_check [tensor(48), tensor(48), tensor(48)]
DEBUG uniques tensor([48]) tensor([3])
Matched 3 times with 48
Merge stage2 masks
iou for matched labels tensor([0.4683])
Matched labels: ['bookshelf']
Clip similarities: [0.7216796875]
DEBUG best_match_after_iou_check [tensor(80), tensor(0), tensor(49)]
DEBUG uniques tensor([ 0, 49, 80]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 49
Matched 1 times with 80
iou for matched labels tensor([0.7926, 0.8621, 0.5100])
Matched labels: ['refrigerator', 'whiteboard', 'whiteboard']
Clip similarities: [1.0, 0.6318359375, 0.6318359375]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.4912])
Matched labels: ['printer']
Clip similarities: [0.71240234375]
DEBUG best_match_after_iou_check [tensor(52), tensor(140), tensor(108), tensor(92)]
DEBUG uniques tensor([ 52,  92, 108, 140]) tensor([1, 1, 1, 1])
Matched 1 times with 52
Matched 1 times with 92
Matched 1 times with 108
Matched 1 times with 140
iou for matched labels tensor([0.4834, 0.5211, 0.5373, 0.4326])
Matched labels: ['shelf', 'shelf', 'storage_bin', 'coffee_table']
Clip similarities: [0.71484375, 0.71484375, 0.677734375, 0.634765625]
DEBUG best_match_after_iou_check [tensor(88), tensor(101), tensor(186)]
DEBUG uniques tensor([ 88, 101, 186]) tensor([1, 1, 1])
Matched 1 times with 88
Matched 1 times with 101
Matched 1 times with 186
iou for matched labels tensor([0.4604, 0.3990, 0.3014])
Matched labels: ['door', 'door', 'bathroom_counter']
Clip similarities: [0.76123046875, 0.76123046875, 0.64892578125]
DEBUG best_match_after_iou_check [tensor(239), tensor(127), tensor(22)]
DEBUG uniques tensor([ 22, 127, 239]) tensor([1, 1, 1])
Matched 1 times with 22
Matched 1 times with 127
Matched 1 times with 239
iou for matched labels tensor([0.3113, 0.6152, 0.3454])
Matched labels: ['office_chair', 'light_switch', 'door']
Clip similarities: [0.62353515625, 0.63720703125, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(100)]
DEBUG uniques tensor([100]) tensor([1])
Matched 1 times with 100
iou for matched labels tensor([0.7862])
Matched labels: ['whiteboard']
Clip similarities: [0.6318359375]
Select thresholds for refinement:  68%|██████▊   | 96/142 [00:24<00:12,  3.67it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:24<00:12,  3.73it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:24<00:12,  3.58it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:24<00:12,  3.37it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:25<00:12,  3.47it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:25<00:11,  3.62it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:25<00:10,  3.84it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:25<00:10,  3.81it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:26<00:09,  4.15it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:26<00:10,  3.69it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:27<00:10,  3.42it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:27<00:09,  3.49it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:27<00:08,  4.06it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:27<00:08,  3.68it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:28<00:08,  3.87it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:28<00:07,  3.96it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:28<00:08,  3.61it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:29<00:08,  3.27it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:29<00:07,  3.42it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:29<00:07,  3.60it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:29<00:06,  3.98it/s]DEBUG best_match_after_iou_check [tensor(95), tensor(95), tensor(85), tensor(85), tensor(82), tensor(82), tensor(45), tensor(28), tensor(4)]
DEBUG uniques tensor([ 4, 28, 45, 82, 85, 95]) tensor([1, 1, 1, 2, 2, 2])
Matched 1 times with 4
Matched 1 times with 28
Matched 1 times with 45
Matched 2 times with 82
Merge stage2 masks
Matched 2 times with 85
Merge stage2 masks
Matched 2 times with 95
Merge stage2 masks
iou for matched labels tensor([0.6521, 0.3977, 0.7104, 0.2814, 0.4670, 0.3470])
Matched labels: ['dresser', 'curtain', 'fan', 'shelf', 'shelf', 'closet_door']
Clip similarities: [0.70458984375, 0.6435546875, 0.72998046875, 0.71484375, 0.71484375, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(96), tensor(95), tensor(92), tensor(174), tensor(51), tensor(51)]
DEBUG uniques tensor([ 51,  92,  95,  96, 174]) tensor([2, 1, 1, 1, 1])
Matched 2 times with 51
Merge stage2 masks
Matched 1 times with 92
Matched 1 times with 95
Matched 1 times with 96
Matched 1 times with 174
iou for matched labels tensor([0.1938, 0.1900, 0.7087, 0.1940, 0.4216])
Matched labels: ['sink', 'door', 'shelf', 'doorframe', 'shower_curtain']
Clip similarities: [0.6767578125, 0.76123046875, 0.71484375, 0.697265625, 0.611328125]
DEBUG best_match_after_iou_check [tensor(128), tensor(23), tensor(126), tensor(178)]
DEBUG uniques tensor([ 23, 126, 128, 178]) tensor([1, 1, 1, 1])
Matched 1 times with 23
Matched 1 times with 126
Matched 1 times with 128
Matched 1 times with 178
iou for matched labels tensor([0.3714, 0.5319, 0.7151, 0.4992])
Matched labels: ['file_cabinet', 'file_cabinet', 'file_cabinet', 'refrigerator']
Clip similarities: [0.71337890625, 0.71337890625, 0.71337890625, 1.0]
DEBUG best_match_after_iou_check [tensor(29), tensor(59), tensor(90), tensor(153), tensor(49)]
DEBUG uniques tensor([ 29,  49,  59,  90, 153]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 29
Matched 1 times with 49
Matched 1 times with 59
Matched 1 times with 90
Matched 1 times with 153
iou for matched labels tensor([0.4501, 0.5526, 0.5270, 0.7711, 0.2983])
Matched labels: ['copier', 'bin', 'fan', 'mini_fridge', 'file_cabinet']
Clip similarities: [0.74462890625, 0.6923828125, 0.72998046875, 0.79833984375, 0.71337890625]
DEBUG best_match_after_iou_check [tensor(41), tensor(27)]
DEBUG uniques tensor([27, 41]) tensor([1, 1])
Matched 1 times with 27
Matched 1 times with 41
iou for matched labels tensor([0.3061, 0.5179])
Matched labels: ['laundry_hamper', 'washing_machine']
Clip similarities: [0.6513671875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(76), tensor(5), tensor(67)]
DEBUG uniques tensor([ 5, 67, 76]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 67
Matched 1 times with 76
iou for matched labels tensor([0.4373, 0.3826, 0.6967])
Matched labels: ['shelf', 'monitor', 'blinds']
Clip similarities: [0.71484375, 0.70751953125, 0.60546875]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.8147])
Matched labels: ['bin']
Clip similarities: [0.6923828125]
DEBUG best_match_after_iou_check [tensor(149), tensor(93), tensor(21), tensor(68), tensor(24)]
DEBUG uniques tensor([ 21,  24,  68,  93, 149]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 21
Matched 1 times with 24
Matched 1 times with 68
Matched 1 times with 93
Matched 1 times with 149
iou for matched labels tensor([0.6228, 0.3925, 0.7971, 0.6631, 0.5255])
Matched labels: ['dustpan', 'toaster_oven', 'microwave', 'refrigerator', 'refrigerator']
Clip similarities: [0.58740234375, 0.744140625, 0.77197265625, 1.0, 1.0]
DEBUG best_match_after_iou_check [tensor(5), tensor(86)]
DEBUG uniques tensor([ 5, 86]) tensor([1, 1])
Matched 1 times with 5
Matched 1 times with 86
iou for matched labels tensor([0.8161, 0.4217])
Matched labels: ['refrigerator', 'microwave']
Clip similarities: [1.0, 0.77197265625]
DEBUG best_match_after_iou_check [tensor(45), tensor(162), tensor(73), tensor(98), tensor(182), tensor(66)]
DEBUG uniques tensor([ 45,  66,  73,  98, 162, 182]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 45
Matched 1 times with 66
Matched 1 times with 73
Matched 1 times with 98
Matched 1 times with 162
Matched 1 times with 182
iou for matched labels tensor([0.8308, 0.2618, 0.6749, 0.7561, 0.1275, 0.1809])
Matched labels: ['tv', 'monitor', 'box', 'refrigerator', 'monitor', 'coffee_table']
Clip similarities: [0.76611328125, 0.70751953125, 0.75048828125, 1.0, 0.70751953125, 0.634765625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(16), tensor(110), tensor(11), tensor(40), tensor(220)]
DEBUG uniques tensor([ 11,  16,  40, 110, 220]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 16
Matched 1 times with 40
Matched 1 times with 110
Matched 1 times with 220
iou for matched labels tensor([0.6428, 0.1347, 0.5925, 0.4017, 0.4703])
Matched labels: ['door', 'bulletin_board', 'radiator', 'vacuum_cleaner', 'poster']
Clip similarities: [0.76123046875, 0.66845703125, 0.6845703125, 0.64404296875, 0.64794921875]
DEBUG best_match_after_iou_check [tensor(190), tensor(0)]
DEBUG uniques tensor([  0, 190]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 190
iou for matched labels tensor([0.5673, 0.4118])
Matched labels: ['tv_stand', 'radiator']
Clip similarities: [0.705078125, 0.6845703125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(306), tensor(50)]
DEBUG uniques tensor([ 50, 306]) tensor([1, 1])
Matched 1 times with 50
Matched 1 times with 306
iou for matched labels tensor([0.4927, 0.2755])
Matched labels: ['box', 'chair']
Clip similarities: [0.75048828125, 0.63671875]
DEBUG best_match_after_iou_check [tensor(103), tensor(24), tensor(88), tensor(74)]
DEBUG uniques tensor([ 24,  74,  88, 103]) tensor([1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 74
Matched 1 times with 88
Matched 1 times with 103
iou for matched labels tensor([0.6289, 0.8549, 0.4718, 0.4895])
Matched labels: ['furniture', 'closet_door', 'crate', 'shelf']
Clip similarities: [0.69775390625, 0.72216796875, 0.67724609375, 0.71484375]
DEBUG best_match_after_iou_check [tensor(230), tensor(1), tensor(25), tensor(76)]
DEBUG uniques tensor([  1,  25,  76, 230]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 25
Matched 1 times with 76
Matched 1 times with 230
iou for matched labels tensor([0.7252, 0.4255, 0.4777, 0.7514])
Matched labels: ['trash_can', 'monitor', 'shelf', 'refrigerator']
Clip similarities: [0.666015625, 0.70751953125, 0.71484375, 1.0]
DEBUG best_match_after_iou_check [tensor(98), tensor(246), tensor(184), tensor(48)]
DEBUG uniques tensor([ 48,  98, 184, 246]) tensor([1, 1, 1, 1])
Matched 1 times with 48
Matched 1 times with 98
Matched 1 times with 184
Matched 1 times with 246
iou for matched labels tensor([0.7210, 0.5008, 0.3910, 0.0126])
Matched labels: ['mini_fridge', 'mini_fridge', 'case_of_water_bottles', 'door']
Clip similarities: [0.79833984375, 0.79833984375, 0.6650390625, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(65), tensor(124), tensor(162)]
DEBUG uniques tensor([ 65, 124, 162]) tensor([1, 1, 1])
Matched 1 times with 65
Matched 1 times with 124
Matched 1 times with 162
iou for matched labels tensor([0.6604, 0.4444, 0.5296])
Matched labels: ['dresser', 'shower_door', 'door']
Clip similarities: [0.70458984375, 0.69189453125, 0.76123046875]
DEBUG best_match_after_iou_check [tensor(174)]
DEBUG uniques tensor([174]) tensor([1])
Matched 1 times with 174
iou for matched labels tensor([0.4303])
Matched labels: ['tv']
Clip similarities: [0.76611328125]
DEBUG best_match_after_iou_check [tensor(30), tensor(290), tensor(17)]
DEBUG uniques tensor([ 17,  30, 290]) tensor([1, 1, 1])
Matched 1 times with 17
Matched 1 times with 30
Matched 1 times with 290
iou for matched labels tensor([0.6399, 0.2051, 0.6403])
Matched labels: ['storage_bin', 'closet_wall', 'shelf']
Clip similarities: [0.677734375, 0.68896484375, 0.71484375]
DEBUG best_match_after_iou_check [tensor(1)]
DEBUG uniques tensor([1]) tensor([1])
Matched 1 times with 1
iou for matched labels tensor([0.8862])
Matched labels: ['refrigerator']
Clip similarities: [1.0]
DEBUG best_match_after_iou_check Select thresholds for refinement:  83%|████████▎ | 118/142 [00:29<00:05,  4.13it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:30<00:06,  3.74it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:30<00:05,  3.99it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:30<00:05,  3.97it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:30<00:04,  4.32it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:31<00:04,  4.09it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:31<00:03,  4.58it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:31<00:03,  4.37it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:31<00:03,  4.26it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:32<00:03,  3.94it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:32<00:02,  4.58it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:32<00:02,  4.24it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:33<00:02,  4.48it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:33<00:02,  4.95it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:33<00:01,  4.90it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:33<00:01,  5.49it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:33<00:01,  5.21it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:33<00:01,  4.64it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:34<00:01,  4.44it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:34<00:00,  4.28it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:34<00:00,  3.95it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:34<00:00,  4.51it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:35<00:00,  4.78it/s][tensor(65), tensor(165), tensor(219), tensor(59), tensor(203)]
DEBUG uniques tensor([ 59,  65, 165, 203, 219]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 59
Matched 1 times with 65
Matched 1 times with 165
Matched 1 times with 203
Matched 1 times with 219
iou for matched labels tensor([0.4791, 0.0343, 0.2680, 0.2005, 0.5794])
Matched labels: ['dresser', 'pillar', 'refrigerator', 'suitcase', 'closet_door']
Clip similarities: [0.70458984375, 0.68603515625, 1.0, 0.720703125, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(180), tensor(110), tensor(54)]
DEBUG uniques tensor([ 54, 110, 180]) tensor([1, 1, 1])
Matched 1 times with 54
Matched 1 times with 110
Matched 1 times with 180
iou for matched labels tensor([0.6175, 0.2750, 0.4446])
Matched labels: ['whiteboard', 'whiteboard', 'desk']
Clip similarities: [0.6318359375, 0.6318359375, 0.72021484375]
DEBUG best_match_after_iou_check [tensor(13)]
DEBUG uniques tensor([13]) tensor([1])
Matched 1 times with 13
iou for matched labels tensor([0.4622])
Matched labels: ['whiteboard']
Clip similarities: [0.6318359375]
DEBUG best_match_after_iou_check [tensor(44), tensor(116), tensor(44)]
DEBUG uniques tensor([ 44, 116]) tensor([2, 1])
Matched 2 times with 44
Merge stage2 masks
Matched 1 times with 116
iou for matched labels tensor([0.5719, 0.5093])
Matched labels: ['tv_stand', 'tv_stand']
Clip similarities: [0.705078125, 0.705078125]
DEBUG best_match_after_iou_check [tensor(20)]
DEBUG uniques tensor([20]) tensor([1])
Matched 1 times with 20
iou for matched labels tensor([0.2170])
Matched labels: ['table']
Clip similarities: [0.66162109375]
DEBUG best_match_after_iou_check [tensor(5), tensor(38), tensor(105)]
DEBUG uniques tensor([  5,  38, 105]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 38
Matched 1 times with 105
iou for matched labels tensor([0.6173, 0.2898, 0.3716])
Matched labels: ['whiteboard', 'shelf', 'shelf']
Clip similarities: [0.6318359375, 0.71484375, 0.71484375]
DEBUG best_match_after_iou_check [tensor(150), tensor(136), tensor(117)]
DEBUG uniques tensor([117, 136, 150]) tensor([1, 1, 1])
Matched 1 times with 117
Matched 1 times with 136
Matched 1 times with 150
iou for matched labels tensor([0.2417, 0.2035, 0.6110])
Matched labels: ['shower_wall', 'handicap_bar', 'closet_door']
Clip similarities: [0.65380859375, 0.58447265625, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(77)]
DEBUG uniques tensor([77]) tensor([1])
Matched 1 times with 77
iou for matched labels tensor([0.7701])
Matched labels: ['doorframe']
Clip similarities: [0.697265625]
DEBUG best_match_after_iou_check [tensor(29), tensor(49), tensor(5)]
DEBUG uniques tensor([ 5, 29, 49]) tensor([1, 1, 1])
Matched 1 times with 5
Matched 1 times with 29
Matched 1 times with 49
iou for matched labels tensor([0.1116, 0.6818, 0.8014])
Matched labels: ['oven', 'refrigerator', 'refrigerator']
Clip similarities: [0.7568359375, 1.0, 1.0]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(156), tensor(68), tensor(6), tensor(48), tensor(60)]
DEBUG uniques tensor([  6,  48,  60,  68, 156]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 48
Matched 1 times with 60
Matched 1 times with 68
Matched 1 times with 156
iou for matched labels tensor([0.7795, 0.6799, 0.2884, 0.1271, 0.2040])
Matched labels: ['mini_fridge', 'mini_fridge', 'washing_machine', 'washing_machine', 'washing_machine']
Clip similarities: [0.79833984375, 0.79833984375, 0.71826171875, 0.71826171875, 0.71826171875]
DEBUG best_match_after_iou_check [tensor(76), tensor(8), tensor(113)]
DEBUG uniques tensor([  8,  76, 113]) tensor([1, 1, 1])
Matched 1 times with 8
Matched 1 times with 76
Matched 1 times with 113
iou for matched labels tensor([0.7558, 0.6910, 0.4648])
Matched labels: ['storage_bin', 'box', 'paper']
Clip similarities: [0.677734375, 0.75048828125, 0.70361328125]
DEBUG best_match_after_iou_check [tensor(55), tensor(34), tensor(175), tensor(165), tensor(52), tensor(173)]
DEBUG uniques tensor([ 34,  52,  55, 165, 173, 175]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 34
Matched 1 times with 52
Matched 1 times with 55
Matched 1 times with 165
Matched 1 times with 173
Matched 1 times with 175
iou for matched labels tensor([0.5800, 0.4508, 0.4509, 0.2033, 0.6604, 0.1442])
Matched labels: ['bin', 'printer', 'file_cabinet', 'power_strip', 'file_cabinet', 'closet_door']
Clip similarities: [0.6923828125, 0.71240234375, 0.71337890625, 0.60986328125, 0.71337890625, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(68), tensor(71)]
DEBUG uniques tensor([68, 71]) tensor([1, 1])
Matched 1 times with 68
Matched 1 times with 71
iou for matched labels tensor([0.7907, 0.7030])
Matched labels: ['bathroom_stall_door', 'paper_towel_dispenser']
Clip similarities: [0.6513671875, 0.63916015625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(51)]
DEBUG uniques tensor([51]) tensor([1])
Matched 1 times with 51
iou for matched labels tensor([0.4726])
Matched labels: ['cabinet']
Clip similarities: [0.78271484375]
DEBUG best_match_after_iou_check [tensor(68), tensor(102), tensor(81)]
DEBUG uniques tensor([ 68,  81, 102]) tensor([1, 1, 1])
Matched 1 times with 68
Matched 1 times with 81
Matched 1 times with 102
iou for matched labels tensor([0.3000, 0.3918, 0.6693])
Matched labels: ['bathroom_cabinet', 'shower_curtain_rod', 'bin']
Clip similarities: [0.67138671875, 0.544921875, 0.6923828125]
DEBUG best_match_after_iou_check [tensor(0), tensor(100), tensor(98), tensor(73), tensor(106)]
DEBUG uniques tensor([  0,  73,  98, 100, 106]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 73
Matched 1 times with 98
Matched 1 times with 100
Matched 1 times with 106
iou for matched labels tensor([0.8506, 0.4929, 0.5154, 0.3286, 0.1553])
Matched labels: ['lamp', 'closet_wall', 'doorframe', 'rail', 'trash_can']
Clip similarities: [0.673828125, 0.68896484375, 0.697265625, 0.58837890625, 0.666015625]
DEBUG best_match_after_iou_check [tensor(217)]
DEBUG uniques tensor([217]) tensor([1])
Matched 1 times with 217
iou for matched labels tensor([0.2752])
Matched labels: ['bar']
Clip similarities: [0.7373046875]
DEBUG best_match_after_iou_check [tensor(47), tensor(102), tensor(40), tensor(69), tensor(51), tensor(112)]
DEBUG uniques tensor([ 40,  47,  51,  69, 102, 112]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 40
Matched 1 times with 47
Matched 1 times with 51
Matched 1 times with 69
Matched 1 times with 102
Matched 1 times with 112
iou for matched labels tensor([0.6780, 0.3661, 0.7928, 0.5795, 0.4056, 0.3206])
Matched labels: ['storage_bin', 'refrigerator', 'radiator', 'dresser', 'dresser', 'tv']
Clip similarities: [0.677734375, 1.0, 0.6845703125, 0.70458984375, 0.70458984375, 0.76611328125]
DEBUG best_match_after_iou_check [tensor(13), tensor(51), tensor(159)]
DEBUG uniques tensor([ 13,  51, 159]) tensor([1, 1, 1])
Matched 1 times with 13
Matched 1 times with 51
Matched 1 times with 159
iou for matched labels tensor([0.8549, 0.8273, 0.6183])
Matched labels: ['laundry_hamper', 'radiator', 'closet_door']
Clip similarities: [0.6513671875, 0.6845703125, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(144), tensor(107), tensor(52), tensor(168)]
DEBUG uniques tensor([ 52, 107, 144, 168]) tensor([1, 1, 1, 1])
Matched 1 times with 52
Matched 1 times with 107
Matched 1 times with 144
Matched 1 times with 168
iou for matched labels tensor([0.2784, 0.6673, 0.6591, 0.6257])
Matched labels: ['shelf', 'file_cabinet', 'closet_door', 'monitor']
Clip similarities: [0.71484375, 0.71337890625, 0.72216796875, 0.70751953125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(64), tensor(50), tensor(90)]
DEBUG uniques tensor([50, 64, 90]) tensor([1, 1, 1])
Matched 1 times with 50
Matched 1 times with 64
Matched 1 times with 90
iou for matched labels tensor([0.4014, 0.2263, 0.6292])
Matched labels: ['shower_wall', 'shower_curtain_rod', 'bathroom_stall_door']
Clip similarities: [0.65380859375, 0.544921875, 0.6513671875]
DEBUG best_match_after_iou_check [tensor(323), tensor(157), tensor(163), tensor(31), tensor(31), tensor(113), tensor(199), tensor(122)]
DEBUG uniques tensor([ 31, 113, 122, 157, 163, 199, 323]) Select thresholds for refinement: 100%|██████████| 142/142 [00:35<00:00,  4.02it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:35<00:00,  4.00it/s]
tensor([2, 1, 1, 1, 1, 1, 1])
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 113
Matched 1 times with 122
Matched 1 times with 157
Matched 1 times with 163
Matched 1 times with 199
Matched 1 times with 323
iou for matched labels tensor([0.0889, 0.2842, 0.2796, 0.2546, 0.1103, 0.0513, 0.2596])
Matched labels: ['counter', 'paper_cutter', 'printer', 'bin', 'case_of_water_bottles', 'box', 'copier']
Clip similarities: [0.7021484375, 0.58740234375, 0.71240234375, 0.6923828125, 0.6650390625, 0.75048828125, 0.74462890625]
Unique similarities: [0.5068359375, 0.5224609375, 0.544921875, 0.58447265625, 0.58740234375, 0.58837890625, 0.6044921875, 0.60546875, 0.60888671875, 0.60986328125, 0.611328125, 0.62353515625, 0.62548828125, 0.6298828125, 0.6318359375, 0.6328125, 0.634765625, 0.6357421875, 0.63671875, 0.63720703125, 0.63916015625, 0.6435546875, 0.64404296875, 0.6455078125, 0.64794921875, 0.64892578125, 0.6494140625, 0.6513671875, 0.65380859375, 0.65478515625, 0.6611328125, 0.66162109375, 0.6650390625, 0.666015625, 0.66845703125, 0.67138671875, 0.673828125, 0.67431640625, 0.6767578125, 0.67724609375, 0.677734375, 0.6845703125, 0.68603515625, 0.68896484375, 0.69091796875, 0.69189453125, 0.6923828125, 0.69580078125, 0.697265625, 0.69775390625, 0.7021484375, 0.703125, 0.70361328125, 0.7041015625, 0.70458984375, 0.705078125, 0.70703125, 0.70751953125, 0.7109375, 0.71240234375, 0.71337890625, 0.71484375, 0.71533203125, 0.71826171875, 0.72021484375, 0.720703125, 0.7216796875, 0.72216796875, 0.72265625, 0.72998046875, 0.7373046875, 0.73876953125, 0.744140625, 0.74462890625, 0.75048828125, 0.7568359375, 0.76123046875, 0.76611328125, 0.77197265625, 0.78271484375, 0.79833984375, 1.0]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 43it [00:00, 423.06it/s]DEBUG all ious tensor([0.6985, 0.2325, 0.2818, 0.3531, 0.3642, 0.2132, 0.2751, 0.5614])
USE STAGE 1 MASK tensor(0.6985)
USE STAGE 2 MASK tensor(0.2325)
USE STAGE 2 MASK tensor(0.2818)
USE STAGE 2 MASK tensor(0.3531)
USE STAGE 2 MASK tensor(0.3642)
USE STAGE 2 MASK tensor(0.2132)
USE STAGE 2 MASK tensor(0.2751)
USE STAGE 1 MASK tensor(0.5614)
DEBUG all ious []
DEBUG all ious tensor([0.7275, 0.6364])
USE STAGE 1 MASK tensor(0.7275)
USE STAGE 1 MASK tensor(0.6364)
DEBUG all ious tensor([0.6858, 0.1528, 0.4525, 0.7905, 0.1166, 0.3394])
USE STAGE 1 MASK tensor(0.6858)
USE STAGE 2 MASK tensor(0.1528)
USE STAGE 1 MASK tensor(0.4525)
USE STAGE 1 MASK tensor(0.7905)
USE STAGE 2 MASK tensor(0.1166)
USE STAGE 2 MASK tensor(0.3394)
DEBUG all ious []
DEBUG all ious tensor([0.7218, 0.7067, 0.4469, 0.2433])
USE STAGE 1 MASK tensor(0.7218)
USE STAGE 1 MASK tensor(0.7067)
USE STAGE 2 MASK tensor(0.4469)
USE STAGE 2 MASK tensor(0.2433)
DEBUG all ious tensor([0.6234, 0.4766, 0.2736, 0.4418, 0.3687])
USE STAGE 1 MASK tensor(0.6234)
USE STAGE 1 MASK tensor(0.4766)
USE STAGE 2 MASK tensor(0.2736)
USE STAGE 2 MASK tensor(0.4418)
USE STAGE 2 MASK tensor(0.3687)
DEBUG all ious tensor([0.5153, 0.6647])
USE STAGE 1 MASK tensor(0.5153)
USE STAGE 1 MASK tensor(0.6647)
DEBUG all ious []
DEBUG all ious tensor([0.3965, 0.4747, 0.6420])
USE STAGE 2 MASK tensor(0.3965)
USE STAGE 1 MASK tensor(0.4747)
USE STAGE 1 MASK tensor(0.6420)
DEBUG all ious []
DEBUG all ious tensor([0.7137, 0.8126, 0.6861])
USE STAGE 1 MASK tensor(0.7137)
USE STAGE 1 MASK tensor(0.8126)
USE STAGE 1 MASK tensor(0.6861)
DEBUG all ious tensor([0.4978, 0.4670, 0.4797])
USE STAGE 1 MASK tensor(0.4978)
USE STAGE 1 MASK tensor(0.4670)
USE STAGE 1 MASK tensor(0.4797)
DEBUG all ious []
DEBUG all ious tensor([0.5609, 0.6420])
USE STAGE 1 MASK tensor(0.5609)
USE STAGE 1 MASK tensor(0.6420)
DEBUG all ious tensor([0.5068, 0.4089, 0.8071])
USE STAGE 1 MASK tensor(0.5068)
USE STAGE 2 MASK tensor(0.4089)
USE STAGE 1 MASK tensor(0.8071)
DEBUG all ious tensor([0.1883, 0.3936, 0.4952, 0.6455])
USE STAGE 2 MASK tensor(0.1883)
USE STAGE 2 MASK tensor(0.3936)
USE STAGE 1 MASK tensor(0.4952)
USE STAGE 1 MASK tensor(0.6455)
DEBUG all ious tensor([0.6570, 0.7082, 0.6695, 0.6906])
USE STAGE 1 MASK tensor(0.6570)
USE STAGE 1 MASK tensor(0.7082)
USE STAGE 1 MASK tensor(0.6695)
USE STAGE 1 MASK tensor(0.6906)
DEBUG all ious tensor([0.0537, 0.1628, 0.0834, 0.0285])
USE STAGE 2 MASK tensor(0.0537)
USE STAGE 2 MASK tensor(0.1628)
USE STAGE 2 MASK tensor(0.0834)
USE STAGE 2 MASK tensor(0.0285)
DEBUG all ious tensor([0.6245, 0.8445])
USE STAGE 1 MASK tensor(0.6245)
USE STAGE 1 MASK tensor(0.8445)
DEBUG all ious tensor([0.7223, 0.6455, 0.3268, 0.4338])
USE STAGE 1 MASK tensor(0.7223)
USE STAGE 1 MASK tensor(0.6455)
USE STAGE 2 MASK tensor(0.3268)
USE STAGE 2 MASK tensor(0.4338)
DEBUG all ious tensor([0.2615, 0.1844, 0.0148])
USE STAGE 2 MASK tensor(0.2615)
USE STAGE 2 MASK tensor(0.1844)
USE STAGE 2 MASK tensor(0.0148)
DEBUG all ious tensor([0.6763, 0.6433, 0.8633, 0.8470])
USE STAGE 1 MASK tensor(0.6763)
USE STAGE 1 MASK tensor(0.6433)
USE STAGE 1 MASK tensor(0.8633)
USE STAGE 1 MASK tensor(0.8470)
DEBUG all ious tensor([0.3768])
USE STAGE 2 MASK tensor(0.3768)
DEBUG all ious tensor([0.6228])
USE STAGE 1 MASK tensor(0.6228)
DEBUG all ious tensor([0.7756])
USE STAGE 1 MASK tensor(0.7756)
DEBUG all ious []
DEBUG all ious tensor([0.5812, 0.2564])
USE STAGE 1 MASK tensor(0.5812)
USE STAGE 2 MASK tensor(0.2564)
DEBUG all ious tensor([0.2112, 0.1429, 0.7254, 0.5072, 0.3515, 0.4991, 0.4902, 0.4934])
USE STAGE 2 MASK tensor(0.2112)
USE STAGE 2 MASK tensor(0.1429)
USE STAGE 1 MASK tensor(0.7254)
USE STAGE 1 MASK tensor(0.5072)
USE STAGE 2 MASK tensor(0.3515)
USE STAGE 1 MASK tensor(0.4991)
USE STAGE 1 MASK tensor(0.4902)
USE STAGE 1 MASK tensor(0.4934)
DEBUG all ious tensor([0.3980, 0.5756, 0.2630])
USE STAGE 2 MASK tensor(0.3980)
USE STAGE 1 MASK tensor(0.5756)
USE STAGE 2 MASK tensor(0.2630)
DEBUG all ious tensor([0.6057, 0.6019, 0.7153, 0.8108])
USE STAGE 1 MASK tensor(0.6057)
USE STAGE 1 MASK tensor(0.6019)
USE STAGE 1 MASK tensor(0.7153)
USE STAGE 1 MASK tensor(0.8108)
DEBUG all ious tensor([0.7429, 0.8268, 0.3120])
USE STAGE 1 MASK tensor(0.7429)
USE STAGE 1 MASK tensor(0.8268)
USE STAGE 2 MASK tensor(0.3120)
DEBUG all ious tensor([0.7494, 0.7618, 0.4255, 0.2285])
USE STAGE 1 MASK tensor(0.7494)
USE STAGE 1 MASK tensor(0.7618)
USE STAGE 2 MASK tensor(0.4255)
USE STAGE 2 MASK tensor(0.2285)
DEBUG all ious tensor([0.2610, 0.2934, 0.7919, 0.6675])
USE STAGE 2 MASK tensor(0.2610)
USE STAGE 2 MASK tensor(0.2934)
USE STAGE 1 MASK tensor(0.7919)
USE STAGE 1 MASK tensor(0.6675)
DEBUG all ious tensor([0.4428, 0.4236, 0.3272, 0.5577, 0.1334, 0.2059, 0.3067, 0.3694, 0.3358])
USE STAGE 2 MASK tensor(0.4428)
USE STAGE 2 MASK tensor(0.4236)
USE STAGE 2 MASK tensor(0.3272)
USE STAGE 1 MASK tensor(0.5577)
USE STAGE 2 MASK tensor(0.1334)
USE STAGE 2 MASK tensor(0.2059)
USE STAGE 2 MASK tensor(0.3067)
USE STAGE 2 MASK tensor(0.3694)
USE STAGE 2 MASK tensor(0.3358)
DEBUG all ious tensor([0.6752, 0.7279, 0.6471, 0.2933])
USE STAGE 1 MASK tensor(0.6752)
USE STAGE 1 MASK tensor(0.7279)
USE STAGE 1 MASK tensor(0.6471)
USE STAGE 2 MASK tensor(0.2933)
DEBUG all ious tensor([0.4788, 0.5055, 0.8051])
USE STAGE 1 MASK tensor(0.4788)
USE STAGE 1 MASK tensor(0.5055)
USE STAGE 1 MASK tensor(0.8051)
DEBUG all ious tensor([0.6282, 0.3218, 0.1648])
USE STAGE 1 MASK tensor(0.6282)
USE STAGE 2 MASK tensor(0.3218)
USE STAGE 2 MASK tensor(0.1648)
DEBUG all ious tensor([0.5385, 0.0900])
USE STAGE 1 MASK tensor(0.5385)
USE STAGE 2 MASK tensor(0.0900)
DEBUG all ious tensor([0.4516, 0.4917, 0.5386])
USE STAGE 1 MASK tensor(0.4516)
USE STAGE 1 MASK tensor(0.4917)
USE STAGE 1 MASK tensor(0.5386)
DEBUG all ious tensor([0.8470, 0.7936])
USE STAGE 1 MASK tensor(0.8470)
USE STAGE 1 MASK tensor(0.7936)
DEBUG all ious tensor([0.7103, 0.5550, 0.2319])
USE STAGE 1 MASK tensor(0.7103)
USE STAGE 1 MASK tensor(0.5550)
USE STAGE 2 MASK tensor(0.2319)
DEBUG all ious tensor([0.6061, 0.6054, 0.4670, 0.6221])
USE STAGE 1 MASK tensor(0.6061)
USE STAGE 1 MASK tensor(0.6054)
USE STAGE 1 MASK tensor(0.4670)
USE STAGE 1 MASK tensor(0.6221)
DEBUG all ious tensor([0.5385, 0.5661, 0.3607, 0.8330, 0.6967, 0.6697, 0.5986, 0.5234])
USE STAGE 1 MASK tensor(0.5385)
USE STAGE 1 MASK tensor(0.5661)
USE STAGE 2 MASK tensor(0.3607)
USE STAGE 1 MASK tensor(0.8330)
USE STAGE 1 MASK tensor(0.6967)
USE STAGE 1 MASK tensor(0.6697)
USE STAGE 1 MASK tensor(0.5986)
USE STAGE 1 MASK tensor(0.5234)
DEBUG all ious []
DEBUG all ious tensor([0.4917, 0.5635, 0.3670, 0.2429])
USE STAGE 1 MASK tensor(0.4917)
USE STAGE 1 MASK tensor(0.5635)
USE STAGE 2 MASK tensor(0.3670)
USE STAGE 2 MASK tensor(0.2429)
DEBUG all ious tensor([0.4582, 0.6427, 0.5380])
USE STAGE 1 MASK tensor(0.4582)
USE STAGE 1 MASK tensor(0.6427)
USE STAGE 1 MASK tensor(0.5380)
DEBUG all ious tensor([0.3209, 0.3484, 0.3339, 0.3327, 0.4170, 0.5321])
USE STAGE 2 MASK tensor(0.3209)
USE STAGE 2 MASK tensor(0.3484)
USE STAGE 2 MASK tensor(0.3339)
USE STAGE 2 MASK tensor(0.3327)
USE STAGE 2 MASK tensor(0.4170)
USE STAGE 1 MASK tensor(0.5321)
DEBUG all ious []
DEBUG all ious tensor([0.7462, 0.8956, 0.7832, 0.3948])
USE STAGE 1 MASK tensor(0.7462)
USE STAGE 1 MASK tensor(0.8956)
USE STAGE 1 MASK tensor(0.7832)
USE STAGE 2 MASK tensor(0.3948)
DEBUG all ious tensor([0.5796])
USE STAGE 1 MASK tensor(0.5796)
DEBUG all ious tensor([0.6894, 0.3437, 0.5019, 0.3851])
USE STAGE 1 MASK tensor(0.6894)
USE STAGE 2 MASK tensor(0.3437)
USE STAGE 1 MASK tensor(0.5019)
USE STAGE 2 MASK tensor(0.3851)
DEBUG all ious tensor([0.8483, 0.6110])
USE STAGE 1 MASK tensor(0.8483)
USE STAGE 1 MASK tensor(0.6110)
DEBUG all ious tensor([0.5320, 0.5243, 0.4057, 0.5938])
USE STAGE 1 MASK tensor(0.5320)
USE STAGE 1 MASK tensor(0.5243)
USE STAGE 2 MASK tensor(0.4057)
USE STAGE 1 MASK tensor(0.5938)
DEBUG all ious tensor([0.0761])
USE STAGE 2 MASK tensor(0.0761)
DEBUG all ious tensor([0.3036])
USE STAGE 2 MASK tensor(0.3036)
DEBUG all ious tensor([0.9308, 0.4750])
USE STAGE 1 MASK tensor(0.9308)
USE STAGE 1 MASK tensor(0.4750)
DEBUG all ious tensor([0.7907, 0.3135, 0.7395])
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 89it [00:00, 443.76it/s]tensor(0.7907)
USE STAGE 2 MASK tensor(0.3135)
USE STAGE 1 MASK tensor(0.7395)
DEBUG all ious tensor([0.5420, 0.8014, 0.6161, 0.4706, 0.1097])
USE STAGE 1 MASK tensor(0.5420)
USE STAGE 1 MASK tensor(0.8014)
USE STAGE 1 MASK tensor(0.6161)
USE STAGE 1 MASK tensor(0.4706)
USE STAGE 2 MASK tensor(0.1097)
DEBUG all ious tensor([0.5531, 0.7516])
USE STAGE 1 MASK tensor(0.5531)
USE STAGE 1 MASK tensor(0.7516)
DEBUG all ious tensor([0.7041, 0.8121, 0.8111])
USE STAGE 1 MASK tensor(0.7041)
USE STAGE 1 MASK tensor(0.8121)
USE STAGE 1 MASK tensor(0.8111)
DEBUG all ious tensor([0.7706, 0.5918, 0.7632])
USE STAGE 1 MASK tensor(0.7706)
USE STAGE 1 MASK tensor(0.5918)
USE STAGE 1 MASK tensor(0.7632)
DEBUG all ious tensor([0.4496, 0.2289, 0.8449])
USE STAGE 2 MASK tensor(0.4496)
USE STAGE 2 MASK tensor(0.2289)
USE STAGE 1 MASK tensor(0.8449)
DEBUG all ious tensor([0.6594, 0.3434, 0.6379, 0.6240])
USE STAGE 1 MASK tensor(0.6594)
USE STAGE 2 MASK tensor(0.3434)
USE STAGE 1 MASK tensor(0.6379)
USE STAGE 1 MASK tensor(0.6240)
DEBUG all ious tensor([0.3051, 0.1185])
USE STAGE 2 MASK tensor(0.3051)
USE STAGE 2 MASK tensor(0.1185)
DEBUG all ious []
DEBUG all ious tensor([0.7233, 0.4726])
USE STAGE 1 MASK tensor(0.7233)
USE STAGE 1 MASK tensor(0.4726)
DEBUG all ious tensor([0.7540, 0.7470, 0.5366])
USE STAGE 1 MASK tensor(0.7540)
USE STAGE 1 MASK tensor(0.7470)
USE STAGE 1 MASK tensor(0.5366)
DEBUG all ious tensor([0.1015, 0.6061, 0.3174, 0.4589])
USE STAGE 2 MASK tensor(0.1015)
USE STAGE 1 MASK tensor(0.6061)
USE STAGE 2 MASK tensor(0.3174)
USE STAGE 1 MASK tensor(0.4589)
DEBUG all ious []
DEBUG all ious tensor([0.6641, 0.7097, 0.4940, 0.1854, 0.5988])
USE STAGE 1 MASK tensor(0.6641)
USE STAGE 1 MASK tensor(0.7097)
USE STAGE 1 MASK tensor(0.4940)
USE STAGE 2 MASK tensor(0.1854)
USE STAGE 1 MASK tensor(0.5988)
DEBUG all ious tensor([0.8166, 0.7908, 0.6773])
USE STAGE 1 MASK tensor(0.8166)
USE STAGE 1 MASK tensor(0.7908)
USE STAGE 1 MASK tensor(0.6773)
DEBUG all ious tensor([0.2694, 0.7720])
USE STAGE 2 MASK tensor(0.2694)
USE STAGE 1 MASK tensor(0.7720)
DEBUG all ious tensor([0.6244])
USE STAGE 1 MASK tensor(0.6244)
DEBUG all ious tensor([0.3409, 0.7789, 0.5972])
USE STAGE 2 MASK tensor(0.3409)
USE STAGE 1 MASK tensor(0.7789)
USE STAGE 1 MASK tensor(0.5972)
DEBUG all ious tensor([0.3331, 0.3059])
USE STAGE 2 MASK tensor(0.3331)
USE STAGE 2 MASK tensor(0.3059)
DEBUG all ious tensor([0.6653, 0.9116])
USE STAGE 1 MASK tensor(0.6653)
USE STAGE 1 MASK tensor(0.9116)
DEBUG all ious tensor([0.5045])
USE STAGE 1 MASK tensor(0.5045)
DEBUG all ious tensor([0.3093])
USE STAGE 2 MASK tensor(0.3093)
DEBUG all ious []
DEBUG all ious tensor([0.7156])
USE STAGE 1 MASK tensor(0.7156)
DEBUG all ious tensor([0.6150, 0.2735, 0.5316, 0.4603, 0.1033, 0.2844])
USE STAGE 1 MASK tensor(0.6150)
USE STAGE 2 MASK tensor(0.2735)
USE STAGE 1 MASK tensor(0.5316)
USE STAGE 1 MASK tensor(0.4603)
USE STAGE 2 MASK tensor(0.1033)
USE STAGE 2 MASK tensor(0.2844)
DEBUG all ious tensor([0.3914, 0.4526])
USE STAGE 2 MASK tensor(0.3914)
USE STAGE 1 MASK tensor(0.4526)
DEBUG all ious tensor([0.4517, 0.3094, 0.4946, 0.5189])
USE STAGE 1 MASK tensor(0.4517)
USE STAGE 2 MASK tensor(0.3094)
USE STAGE 1 MASK tensor(0.4946)
USE STAGE 1 MASK tensor(0.5189)
DEBUG all ious tensor([0.6266])
USE STAGE 1 MASK tensor(0.6266)
DEBUG all ious tensor([0.7261, 0.9185, 0.5221, 0.5706, 0.8011, 0.3618])
USE STAGE 1 MASK tensor(0.7261)
USE STAGE 1 MASK tensor(0.9185)
USE STAGE 1 MASK tensor(0.5221)
USE STAGE 1 MASK tensor(0.5706)
USE STAGE 1 MASK tensor(0.8011)
USE STAGE 2 MASK tensor(0.3618)
DEBUG all ious tensor([0.5549, 0.7775, 0.6394])
USE STAGE 1 MASK tensor(0.5549)
USE STAGE 1 MASK tensor(0.7775)
USE STAGE 1 MASK tensor(0.6394)
DEBUG all ious tensor([0.3105, 0.7807, 0.8496])
USE STAGE 2 MASK tensor(0.3105)
USE STAGE 1 MASK tensor(0.7807)
USE STAGE 1 MASK tensor(0.8496)
DEBUG all ious tensor([0.4683])
USE STAGE 1 MASK tensor(0.4683)
DEBUG all ious tensor([0.7926, 0.8621, 0.5100])
USE STAGE 1 MASK tensor(0.7926)
USE STAGE 1 MASK tensor(0.8621)
USE STAGE 1 MASK tensor(0.5100)
DEBUG all ious tensor([0.4912])
USE STAGE 1 MASK tensor(0.4912)
DEBUG all ious tensor([0.4834, 0.5211, 0.5373, 0.4326])
USE STAGE 1 MASK tensor(0.4834)
USE STAGE 1 MASK tensor(0.5211)
USE STAGE 1 MASK tensor(0.5373)
USE STAGE 2 MASK tensor(0.4326)
DEBUG all ious tensor([0.4604, 0.3990, 0.3014])
USE STAGE 1 MASK tensor(0.4604)
USE STAGE 2 MASK tensor(0.3990)
USE STAGE 2 MASK tensor(0.3014)
DEBUG all ious tensor([0.3113, 0.6152, 0.3454])
USE STAGE 2 MASK tensor(0.3113)
USE STAGE 1 MASK tensor(0.6152)
USE STAGE 2 MASK tensor(0.3454)
DEBUG all ious tensor([0.7862])
USE STAGE 1 MASK tensor(0.7862)
DEBUG all ious tensor([0.6521, 0.3977, 0.7104, 0.2814, 0.4670, 0.3470])
USE STAGE 1 MASK tensor(0.6521)
USE STAGE 2 MASK tensor(0.3977)
USE STAGE 1 MASK tensor(0.7104)
USE STAGE 2 MASK tensor(0.2814)
USE STAGE 1 MASK tensor(0.4670)
USE STAGE 2 MASK tensor(0.3470)
DEBUG all ious tensor([0.1938, 0.1900, 0.7087, 0.1940, 0.4216])
USE STAGE 2 MASK tensor(0.1938)
USE STAGE 2 MASK tensor(0.1900)
USE STAGE 1 MASK tensor(0.7087)
USE STAGE 2 MASK tensor(0.1940)
USE STAGE 2 MASK tensor(0.4216)
DEBUG all ious tensor([0.3714, 0.5319, 0.7151, 0.4992])
USE STAGE 2 MASK tensor(0.3714)
USE STAGE 1 MASK tensor(0.5319)
USE STAGE 1 MASK tensor(0.7151)
USE STAGE 1 MASK tensor(0.4992)
DEBUG all ious tensor([0.4501, 0.5526, 0.5270, 0.7711, 0.2983])
USE STAGE 1 MASK tensor(0.4501)
USE STAGE 1 MASK tensor(0.5526)
USE STAGE 1 MASK tensor(0.5270)
USE STAGE 1 MASK tensor(0.7711)
USE STAGE 2 MASK tensor(0.2983)
DEBUG all ious tensor([0.3061, 0.5179])
USE STAGE 2 MASK tensor(0.3061)
USE STAGE 1 MASK tensor(0.5179)
DEBUG all ious tensor([0.4373, 0.3826, 0.6967])
USE STAGE 2 MASK tensor(0.4373)
USE STAGE 2 MASK tensor(0.3826)
USE STAGE 1 MASK tensor(0.6967)
DEBUG all ious tensor([0.8147])
USE STAGE 1 MASK tensor(0.8147)
DEBUG all ious tensor([0.6228, 0.3925, 0.7971, 0.6631, 0.5255])
USE STAGE 1 MASK tensor(0.6228)
USE STAGE 2 MASK tensor(0.3925)
USE STAGE 1 MASK tensor(0.7971)
USE STAGE 1 MASK tensor(0.6631)
USE STAGE 1 MASK tensor(0.5255)
DEBUG all ious tensor([0.8161, 0.4217])
USE STAGE 1 MASK tensor(0.8161)
USE STAGE 2 MASK tensor(0.4217)
DEBUG all ious tensor([0.8308, 0.2618, 0.6749, 0.7561, 0.1275, 0.1809])
USE STAGE 1 MASK tensor(0.8308)
USE STAGE 2 MASK tensor(0.2618)
USE STAGE 1 MASK tensor(0.6749)
USE STAGE 1 MASK tensor(0.7561)
USE STAGE 2 MASK tensor(0.1275)
USE STAGE 2 MASK tensor(0.1809)
DEBUG all ious []
DEBUG all ious tensor([0.6428, 0.1347, 0.5925, 0.4017, 0.4703])
USE STAGE 1 MASK tensor(0.6428)
USE STAGE 2 MASK tensor(0.1347)
USE STAGE 1 MASK tensor(0.5925)
USE STAGE 2 MASK tensor(0.4017)
USE STAGE 1 MASK tensor(0.4703)
DEBUG all ious tensor([0.5673, 0.4118])
USE STAGE 1 MASK tensor(0.5673)
USE STAGE 2 MASK tensor(0.4118)
DEBUG all ious []
DEBUG all ious tensor([0.4927, 0.2755])
USE STAGE 1 MASK tensor(0.4927)
USE STAGE 2 MASK tensor(0.2755)
DEBUG all ious tensor([0.6289, 0.8549, 0.4718, 0.4895])
USE STAGE 1 MASK tensor(0.6289)
USE STAGE 1 MASK tensor(0.8549)
USE STAGE 1 MASK tensor(0.4718)
USE STAGE 1 MASK tensor(0.4895)
DEBUG all ious tensor([0.7252, 0.4255, 0.4777, 0.7514])
USE STAGE 1 MASK tensor(0.7252)
USE STAGE 2 MASK tensor(0.4255)
USE STAGE 1 MASK tensor(0.4777)
USE STAGE 1 MASK tensor(0.7514)
DEBUG all ious tensor([0.7210, 0.5008, 0.3910, 0.0126])
USE STAGE 1 MASK tensor(0.7210)
USE STAGE 1 MASK tensor(0.5008)
USE STAGE 2 MASK tensor(0.3910)
USE STAGE 2 MASK tensor(0.0126)
DEBUG all ious tensor([0.6604, 0.4444, 0.5296])
USE STAGE 1 MASK tensor(0.6604)
USE STAGE 2 MASK tensor(0.4444)
USE STAGE 1 MASK tensor(0.5296)
DEBUG all ious tensor([0.4303])
USE STAGE 2 MASK tensor(0.4303)
DEBUG all ious tensor([0.6399, 0.2051, 0.6403])
USE STAGE 1 MASK tensor(0.6399)
USE STAGE 2 MASK tensor(0.2051)
USE STAGE 1 MASK tensor(0.6403)
DEBUG all ious tensor([0.8862])
USE STAGE 1 MASK tensor(0.8862)
DEBUG all ious tensor([0.4791, 0.0343, 0.2680, 0.2005, 0.5794])
USE STAGE 1 MASK tensor(0.4791)
USE STAGE 2 MASK tensor(0.0343)
USE STAGE 2 MASK tensor(0.2680)
USE STAGE 2 MASK tensor(0.2005)
USE STAGE 1 MASK tensor(0.5794)
DEBUG all ious tensor([0.6175, 0.2750, 0.4446])
Refining stage1 output with stage2 outcomes: 134it [00:00, 375.86it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 388.65it/s]
USE STAGE 1 MASK tensor(0.6175)
USE STAGE 2 MASK tensor(0.2750)
USE STAGE 2 MASK tensor(0.4446)
DEBUG all ious tensor([0.4622])
USE STAGE 1 MASK tensor(0.4622)
DEBUG all ious tensor([0.5719, 0.5093])
USE STAGE 1 MASK tensor(0.5719)
USE STAGE 1 MASK tensor(0.5093)
DEBUG all ious tensor([0.2170])
USE STAGE 2 MASK tensor(0.2170)
DEBUG all ious tensor([0.6173, 0.2898, 0.3716])
USE STAGE 1 MASK tensor(0.6173)
USE STAGE 2 MASK tensor(0.2898)
USE STAGE 2 MASK tensor(0.3716)
DEBUG all ious tensor([0.2417, 0.2035, 0.6110])
USE STAGE 2 MASK tensor(0.2417)
USE STAGE 2 MASK tensor(0.2035)
USE STAGE 1 MASK tensor(0.6110)
DEBUG all ious tensor([0.7701])
USE STAGE 1 MASK tensor(0.7701)
DEBUG all ious tensor([0.1116, 0.6818, 0.8014])
USE STAGE 2 MASK tensor(0.1116)
USE STAGE 1 MASK tensor(0.6818)
USE STAGE 1 MASK tensor(0.8014)
DEBUG all ious []
DEBUG all ious tensor([0.7795, 0.6799, 0.2884, 0.1271, 0.2040])
USE STAGE 1 MASK tensor(0.7795)
USE STAGE 1 MASK tensor(0.6799)
USE STAGE 2 MASK tensor(0.2884)
USE STAGE 2 MASK tensor(0.1271)
USE STAGE 2 MASK tensor(0.2040)
DEBUG all ious tensor([0.7558, 0.6910, 0.4648])
USE STAGE 1 MASK tensor(0.7558)
USE STAGE 1 MASK tensor(0.6910)
USE STAGE 1 MASK tensor(0.4648)
DEBUG all ious tensor([0.5800, 0.4508, 0.4509, 0.2033, 0.6604, 0.1442])
USE STAGE 1 MASK tensor(0.5800)
USE STAGE 1 MASK tensor(0.4508)
USE STAGE 1 MASK tensor(0.4509)
USE STAGE 2 MASK tensor(0.2033)
USE STAGE 1 MASK tensor(0.6604)
USE STAGE 2 MASK tensor(0.1442)
DEBUG all ious tensor([0.7907, 0.7030])
USE STAGE 1 MASK tensor(0.7907)
USE STAGE 1 MASK tensor(0.7030)
DEBUG all ious []
DEBUG all ious tensor([0.4726])
USE STAGE 1 MASK tensor(0.4726)
DEBUG all ious tensor([0.3000, 0.3918, 0.6693])
USE STAGE 2 MASK tensor(0.3000)
USE STAGE 2 MASK tensor(0.3918)
USE STAGE 1 MASK tensor(0.6693)
DEBUG all ious tensor([0.8506, 0.4929, 0.5154, 0.3286, 0.1553])
USE STAGE 1 MASK tensor(0.8506)
USE STAGE 1 MASK tensor(0.4929)
USE STAGE 1 MASK tensor(0.5154)
USE STAGE 2 MASK tensor(0.3286)
USE STAGE 2 MASK tensor(0.1553)
DEBUG all ious tensor([0.2752])
USE STAGE 2 MASK tensor(0.2752)
DEBUG all ious tensor([0.6780, 0.3661, 0.7928, 0.5795, 0.4056, 0.3206])
USE STAGE 1 MASK tensor(0.6780)
USE STAGE 2 MASK tensor(0.3661)
USE STAGE 1 MASK tensor(0.7928)
USE STAGE 1 MASK tensor(0.5795)
USE STAGE 2 MASK tensor(0.4056)
USE STAGE 2 MASK tensor(0.3206)
DEBUG all ious tensor([0.8549, 0.8273, 0.6183])
USE STAGE 1 MASK tensor(0.8549)
USE STAGE 1 MASK tensor(0.8273)
USE STAGE 1 MASK tensor(0.6183)
DEBUG all ious tensor([0.2784, 0.6673, 0.6591, 0.6257])
USE STAGE 2 MASK tensor(0.2784)
USE STAGE 1 MASK tensor(0.6673)
USE STAGE 1 MASK tensor(0.6591)
USE STAGE 1 MASK tensor(0.6257)
DEBUG all ious []
DEBUG all ious tensor([0.4014, 0.2263, 0.6292])
USE STAGE 2 MASK tensor(0.4014)
USE STAGE 2 MASK tensor(0.2263)
USE STAGE 1 MASK tensor(0.6292)
DEBUG all ious tensor([0.0889, 0.2842, 0.2796, 0.2546, 0.1103, 0.0513, 0.2596])
USE STAGE 2 MASK tensor(0.0889)
USE STAGE 2 MASK tensor(0.2842)
USE STAGE 2 MASK tensor(0.2796)
USE STAGE 2 MASK tensor(0.2546)
USE STAGE 2 MASK tensor(0.1103)
USE STAGE 2 MASK tensor(0.0513)
USE STAGE 2 MASK tensor(0.2596)
Evaluating class refrigerator...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class refrigerator...:   1%|▏         | 2/142 [00:00<00:10, 13.23it/s]Evaluating class refrigerator...:   3%|▎         | 4/142 [00:00<00:08, 16.48it/s]Evaluating class refrigerator...:   4%|▍         | 6/142 [00:00<00:09, 14.09it/s]Evaluating class refrigerator...:   6%|▋         | 9/142 [00:00<00:08, 15.86it/s]Evaluating class refrigerator...:   9%|▉         | 13/142 [00:00<00:06, 19.10it/s]Evaluating class refrigerator...:  11%|█▏        | 16/142 [00:00<00:06, 20.44it/s]Evaluating class refrigerator...:  13%|█▎        | 19/142 [00:01<00:05, 21.41it/s]Evaluating class refrigerator...:  16%|█▌        | 23/142 [00:01<00:05, 23.68it/s]Evaluating class refrigerator...:  18%|█▊        | 26/142 [00:01<00:05, 23.01it/s]Evaluating class refrigerator...:  20%|██        | 29/142 [00:01<00:05, 18.94it/s]Evaluating class refrigerator...:  23%|██▎       | 32/142 [00:01<00:07, 15.71it/s]Evaluating class refrigerator...:  24%|██▍       | 34/142 [00:02<00:08, 12.87it/s]Evaluating class refrigerator...:  25%|██▌       | 36/142 [00:02<00:08, 12.74it/s]Evaluating class refrigerator...:  27%|██▋       | 39/142 [00:02<00:06, 14.82it/s]Evaluating class refrigerator...:  30%|███       | 43/142 [00:02<00:05, 16.96it/s]Evaluating class refrigerator...:  32%|███▏      | 45/142 [00:02<00:06, 15.25it/s]Evaluating class refrigerator...:  34%|███▍      | 48/142 [00:02<00:05, 16.06it/s]Evaluating class refrigerator...:  35%|███▌      | 50/142 [00:02<00:05, 16.19it/s]Evaluating class refrigerator...:  37%|███▋      | 53/142 [00:03<00:04, 17.95it/s]Evaluating class refrigerator...:  39%|███▊      | 55/142 [00:03<00:04, 18.00it/s]Evaluating class refrigerator...:  41%|████      | 58/142 [00:03<00:04, 19.74it/s]Evaluating class refrigerator...:  43%|████▎     | 61/142 [00:03<00:03, 21.17it/s]Evaluating class refrigerator...:  45%|████▌     | 64/142 [00:03<00:03, 20.82it/s]Evaluating class refrigerator...:  47%|████▋     | 67/142 [00:03<00:03, 21.39it/s]Evaluating class refrigerator...:  50%|█████     | 71/142 [00:03<00:03, 22.06it/s]Evaluating class refrigerator...:  53%|█████▎    | 75/142 [00:04<00:03, 21.34it/s]Evaluating class refrigerator...:  55%|█████▍    | 78/142 [00:04<00:03, 21.10it/s]Evaluating class refrigerator...:  57%|█████▋    | 81/142 [00:04<00:03, 20.19it/s]Evaluating class refrigerator...:  60%|█████▉    | 85/142 [00:04<00:02, 22.37it/s]Evaluating class refrigerator...:  62%|██████▏   | 88/142 [00:04<00:02, 21.67it/s]Evaluating class refrigerator...:  64%|██████▍   | 91/142 [00:04<00:02, 23.03it/s]Evaluating class refrigerator...:  66%|██████▌   | 94/142 [00:04<00:02, 22.00it/s]Evaluating class refrigerator...:  68%|██████▊   | 97/142 [00:05<00:02, 21.61it/s]Evaluating class refrigerator...:  70%|███████   | 100/142 [00:05<00:02, 17.99it/s]Evaluating class refrigerator...:  73%|███████▎  | 103/142 [00:05<00:02, 18.02it/s]Evaluating class refrigerator...:  75%|███████▍  | 106/142 [00:05<00:01, 19.46it/s]Evaluating class refrigerator...:  77%|███████▋  | 109/142 [00:05<00:02, 16.32it/s]Evaluating class refrigerator...:  78%|███████▊  | 111/142 [00:06<00:02, 15.02it/s]Evaluating class refrigerator...:  80%|███████▉  | 113/142 [00:06<00:01, 14.99it/s]Evaluating class refrigerator...:  81%|████████  | 115/142 [00:06<00:01, 13.95it/s]Evaluating class refrigerator...:  83%|████████▎ | 118/142 [00:06<00:01, 16.37it/s]Evaluating class refrigerator...:  85%|████████▍ | 120/142 [00:06<00:01, 15.81it/s]Evaluating class refrigerator...:  87%|████████▋ | 123/142 [00:06<00:01, 17.26it/s]Evaluating class refrigerator...:  89%|████████▊ | 126/142 [00:06<00:00, 17.95it/s]Evaluating class refrigerator...:  90%|█████████ | 128/142 [00:07<00:00, 14.81it/s]Evaluating class refrigerator...:  92%|█████████▏| 131/142 [00:07<00:00, 17.48it/s]Evaluating class refrigerator...:  95%|█████████▌| 135/142 [00:07<00:00, 20.75it/s]Evaluating class refrigerator...:  97%|█████████▋| 138/142 [00:07<00:00, 19.02it/s]Evaluating class refrigerator...: 100%|██████████| 142/142 [00:07<00:00, 20.43it/s]Evaluating class refrigerator...: 100%|██████████| 142/142 [00:07<00:00, 18.30it/s]
  0%|          | 0/142 [00:00<?, ?it/s] 10%|▉         | 14/142 [00:00<00:01, 118.85it/s] 22%|██▏       | 31/142 [00:00<00:00, 146.87it/s] 34%|███▍      | 48/142 [00:00<00:00, 151.01it/s] 53%|█████▎    | 75/142 [00:00<00:00, 195.08it/s] 70%|██████▉   | 99/142 [00:00<00:00, 207.96it/s] 85%|████████▍ | 120/142 [00:00<00:00, 195.14it/s]100%|██████████| 142/142 [00:00<00:00, 192.73it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.007   0.008   0.008
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.009   0.010   0.010
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.003   0.003   0.003
################################################

DEBUG avg value {'ap': 0.4563809803005349, 'ap50%': 0.5105680317040951, 'ap25%': 0.5117474302496329, 'rc': 0.8958333333333334, 'rc50%': 1.0, 'rc25%': 1.0}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  80%|████████  | 8/10 [47:12<11:24, 342.30s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class window
masks_to_be_merged [[4, 5], [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 56, 58, 60, 62, 63, 65, 66, 68, 71, 72, 73, 75, 76, 83], [8, 162, 164], [54, 77, 78, 80, 82], [57, 70], [59, 69], [64, 67], [79, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 123, 124, 125, 126, 127, 128, 129, 167], [106, 108, 110, 111, 114, 116, 118, 119], [131, 132, 134], [133, 135], [141, 142], [147, 150], [148, 149, 151, 152, 154, 156, 157, 160], [155, 159], [171, 172, 173, 174, 175, 176, 177], [186, 187, 188, 189, 190], [193, 194], [195, 196, 197]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 130.83it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/238 [00:00<00:01, 146.64it/s][A
Calculating viewed counts for every point:  19%|█▉        | 45/238 [00:00<00:01, 141.65it/s][A
Calculating viewed counts for every point:  25%|██▌       | 60/238 [00:00<00:01, 141.40it/s][A
Calculating viewed counts for every point:  32%|███▏      | 75/238 [00:00<00:01, 142.60it/s][A
Calculating viewed counts for every point:  38%|███▊      | 90/238 [00:00<00:01, 139.29it/s][A
Calculating viewed counts for every point:  44%|████▎     | 104/238 [00:00<00:00, 137.94it/s][A
Calculating viewed counts for every point:  50%|████▉     | 118/238 [00:00<00:00, 132.77it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 132/238 [00:00<00:00, 133.89it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 147/238 [00:01<00:00, 136.97it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 162/238 [00:01<00:00, 138.41it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 176/238 [00:01<00:00, 135.07it/s][A
Calculating viewed counts for every point:  80%|████████  | 191/238 [00:01<00:00, 137.21it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 205/238 [00:01<00:00, 129.42it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 220/238 [00:01<00:00, 132.48it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 234/238 [00:01<00:00, 132.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:07<18:24,  7.84s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(20597, device='cuda:0')
before filtering torch.Size([19, 237360])
after filtering torch.Size([8, 237360])
num_ins_points_after_filtering tensor([4431, 3703, 6091,  253,  476,  191, 1836, 2532], device='cuda:0')
Working on scene0015_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 66, 112, 114, 119, 121, 122, 124, 128], [7, 8, 12, 15, 17, 19, 56, 58, 59, 61, 64, 67, 73, 75, 78, 82, 84, 88, 92, 125, 126, 129, 130], [10, 71, 74, 76], [11, 14, 18, 20, 22, 68, 72, 80, 83, 86, 90, 93, 94, 101, 103, 104], [13, 69, 77, 81, 85, 89], [21, 65], [23, 27], [24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 105, 106, 107, 109, 133, 134, 135, 136, 137], [36, 118], [37, 38, 138], [39, 40, 41, 43], [42, 44, 45, 46], [91, 96], [115, 116], [127, 131]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/198 [00:00<00:01, 177.95it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/198 [00:00<00:00, 180.81it/s][A
Calculating viewed counts for every point:  30%|███       | 60/198 [00:00<00:00, 199.65it/s][A
Calculating viewed counts for every point:  41%|████      | 81/198 [00:00<00:00, 199.38it/s][A
Calculating viewed counts for every point:  51%|█████     | 101/198 [00:00<00:00, 184.12it/s][A
Calculating viewed counts for every point:  61%|██████    | 120/198 [00:00<00:00, 178.52it/s][A
Calculating viewed counts for every point:  71%|███████   | 140/198 [00:00<00:00, 183.56it/s][A
Calculating viewed counts for every point:  80%|████████  | 159/198 [00:00<00:00, 175.39it/s][Atools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)

Calculating viewed counts for every point:  90%|█████████ | 179/198 [00:00<00:00, 180.05it/s][A
Calculating viewed counts for every point: 100%|██████████| 198/198 [00:01<00:00, 180.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:11<12:02,  5.16s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(6109, device='cuda:0')
before filtering torch.Size([15, 217086])
after filtering torch.Size([4, 217086])
num_ins_points_after_filtering tensor([2142, 2187,  109,  288], device='cuda:0')
Working on scene0019_00 class window
masks_to_be_merged [[0, 1, 4]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  47%|████▋     | 27/58 [00:00<00:00, 263.50it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 55/58 [00:00<00:00, 268.59it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:11<06:50,  2.95s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1495, device='cuda:0')
before filtering torch.Size([1, 136769])
after filtering torch.Size([1, 136769])
num_ins_points_after_filtering tensor([1495], device='cuda:0')
Working on scene0025_00 class window
masks_to_be_merged [[0, 4], [5, 7, 30], [6, 25, 26], [20, 21, 46, 47, 48, 49], [29, 36, 37, 38, 39, 40, 41, 42, 43, 44], [50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66], [57, 58, 60, 61]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 13/195 [00:00<00:01, 128.27it/s][A
Calculating viewed counts for every point:  16%|█▋        | 32/195 [00:00<00:00, 164.37it/s][A
Calculating viewed counts for every point:  25%|██▌       | 49/195 [00:00<00:00, 165.80it/s][A
Calculating viewed counts for every point:  34%|███▍      | 66/195 [00:00<00:00, 163.23it/s][A
Calculating viewed counts for every point:  43%|████▎     | 83/195 [00:00<00:00, 162.63it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 100/195 [00:00<00:00, 152.92it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 116/195 [00:00<00:00, 152.76it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 132/195 [00:00<00:00, 146.21it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 148/195 [00:00<00:00, 149.35it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 164/195 [00:01<00:00, 150.74it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 182/195 [00:01<00:00, 157.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:14<06:32,  2.84s/it]detected_ratio_thres_value tensor(0.1613, device='cuda:0')
final masked points tensor(1965, device='cuda:0')
before filtering torch.Size([7, 173392])
after filtering torch.Size([3, 173392])
num_ins_points_after_filtering tensor([966, 557, 220], device='cuda:0')
Working on scene0030_00 class window
masks_to_be_merged [[0, 1, 2, 3, 74, 75], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 35, 36, 38, 39, 40, 42, 46, 49, 53, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122], [25, 34, 37, 45, 57], [31, 54], [41, 100], [43, 52, 56, 58], [47, 55], [48, 50], [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 126, 127, 128, 129]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 12/250 [00:00<00:01, 119.53it/s][A
Calculating viewed counts for every point:  10%|▉         | 24/250 [00:00<00:01, 118.93it/s][A
Calculating viewed counts for every point:  14%|█▍        | 36/250 [00:00<00:01, 118.42it/s][A
Calculating viewed counts for every point:  19%|█▉        | 48/250 [00:00<00:01, 113.46it/s][A
Calculating viewed counts for every point:  24%|██▍       | 60/250 [00:00<00:01, 112.36it/s][A
Calculating viewed counts for every point:  29%|██▉       | 72/250 [00:00<00:01, 114.80it/s][A
Calculating viewed counts for every point:  34%|███▍      | 85/250 [00:00<00:01, 116.86it/s][A
Calculating viewed counts for every point:  39%|███▉      | 97/250 [00:00<00:01, 115.28it/s][A
Calculating viewed counts for every point:  44%|████▎     | 109/250 [00:00<00:01, 114.94it/s][A
Calculating viewed counts for every point:  48%|████▊     | 121/250 [00:01<00:01, 115.57it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 133/250 [00:01<00:01, 116.06it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 146/250 [00:01<00:00, 119.04it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 158/250 [00:01<00:00, 118.55it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 170/250 [00:01<00:00, 112.50it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 182/250 [00:01<00:00, 113.15it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 194/250 [00:01<00:00, 111.73it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 206/250 [00:01<00:00, 105.78it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 218/250 [00:01<00:00, 107.14it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 230/250 [00:02<00:00, 108.32it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 241/250 [00:02<00:00, 106.61it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:19<08:26,  3.70s/it]detected_ratio_thres_value tensor(0.6190, device='cuda:0')
final masked points tensor(8899, device='cuda:0')
before filtering torch.Size([9, 293811])
after filtering torch.Size([2, 293811])
num_ins_points_after_filtering tensor([5200, 3698], device='cuda:0')
Working on scene0046_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 89, 90], [8, 9, 10, 11, 12, 13, 14, 15, 17, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47], [29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], [67, 68, 87], [72, 73, 74, 75, 76], [77, 78, 86], [81, 84, 85]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 15/249 [00:00<00:01, 147.52it/s][A
Calculating viewed counts for every point:  13%|█▎        | 33/249 [00:00<00:01, 163.86it/s][A
Calculating viewed counts for every point:  20%|██        | 50/249 [00:00<00:01, 165.90it/s][A
Calculating viewed counts for every point:  27%|██▋       | 68/249 [00:00<00:01, 171.38it/s][A
Calculating viewed counts for every point:  35%|███▍      | 86/249 [00:00<00:01, 159.38it/s][A
Calculating viewed counts for every point:  41%|████▏     | 103/249 [00:00<00:00, 159.33it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/249 [00:00<00:00, 156.74it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 136/249 [00:00<00:00, 153.25it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 153/249 [00:00<00:00, 157.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 169/249 [00:01<00:00, 157.49it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 185/249 [00:01<00:00, 154.54it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 203/249 [00:01<00:00, 160.05it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 220/249 [00:01<00:00, 159.01it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 238/249 [00:01<00:00, 162.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:22<08:10,  3.61s/it]detected_ratio_thres_value tensor(0.2903, device='cuda:0')
final masked points tensor(12022, device='cuda:0')
before filtering torch.Size([7, 186857])
after filtering torch.Size([2, 186857])
num_ins_points_after_filtering tensor([ 541, 4419], device='cuda:0')
Working on scene0050_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], [17, 18, 19, 20, 21, 23, 53, 73, 74, 75], [22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 169], [98, 100], [118, 119, 121, 123, 126, 127], [142, 143, 144], [148, 167], [149, 150, 162, 163, 164, 166], [152, 153, 154, 155, 156, 157, 158, 159]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 199.21it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 181.77it/s][A
Calculating viewed counts for every point:  14%|█▎        | 63/466 [00:00<00:02, 199.60it/s][A
Calculating viewed counts for every point:  18%|█▊        | 85/466 [00:00<00:01, 204.61it/s][A
Calculating viewed counts for every point:  23%|██▎       | 106/466 [00:00<00:01, 200.22it/s][A
Calculating viewed counts for every point:  27%|██▋       | 127/466 [00:00<00:01, 202.92it/s][A
Calculating viewed counts for every point:  32%|███▏      | 148/466 [00:00<00:01, 194.94it/s][A
Calculating viewed counts for every point:  36%|███▌      | 168/466 [00:00<00:01, 193.96it/s][A
Calculating viewed counts for every point:  40%|████      | 188/466 [00:00<00:01, 186.11it/s][A
Calculating viewed counts for every point:  44%|████▍     | 207/466 [00:01<00:01, 183.51it/s][A
Calculating viewed counts for every point:  49%|████▊     | 227/466 [00:01<00:01, 186.10it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 248/466 [00:01<00:01, 190.92it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 269/466 [00:01<00:01, 195.71it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 289/466 [00:01<00:00, 188.01it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 308/466 [00:01<00:00, 183.31it/s][A
Calculating viewed counts for every point:  71%|███████   | 329/466 [00:01<00:00, 190.74it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 349/466 [00:01<00:00, 184.48it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 368/466 [00:01<00:00, 178.67it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 388/466 [00:02<00:00, 183.78it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 407/466 [00:02<00:00, 180.95it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 426/466 [00:02<00:00, 181.33it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 447/466 [00:02<00:00, 188.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:28<09:42,  4.31s/it]detected_ratio_thres_value tensor(0.3030, device='cuda:0')
final masked points tensor(32712, device='cuda:0')
before filtering torch.Size([9, 211406])
after filtering torch.Size([3, 211406])
num_ins_points_after_filtering tensor([22845,  5204,  3635], device='cuda:0')
Working on scene0063_00 class window
masks_to_be_merged [[3, 4], [29, 30, 31, 32], [36, 37]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  43%|████▎     | 36/84 [00:00<00:00, 359.18it/s][A
Calculating viewed counts for every point:  90%|█████████ | 76/84 [00:00<00:00, 380.90it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:29<07:14,  3.24s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(895, device='cuda:0')
before filtering torch.Size([3, 76966])
after filtering torch.Size([3, 76966])
num_ins_points_after_filtering tensor([223, 249,  42], device='cuda:0')
Working on scene0064_00 class window
masks_to_be_merged [[0, 1, 2], [10, 13], [17, 19]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 17/121 [00:00<00:00, 162.32it/s][A
Calculating viewed counts for every point:  29%|██▉       | 35/121 [00:00<00:00, 168.55it/s][A
Calculating viewed counts for every point:  43%|████▎     | 52/121 [00:00<00:00, 167.09it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 69/121 [00:00<00:00, 157.53it/s][A
Calculating viewed counts for every point:  70%|███████   | 85/121 [00:00<00:00, 156.93it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 104/121 [00:00<00:00, 163.77it/s][A
Calculating viewed counts for every point: 100%|██████████| 121/121 [00:00<00:00, 157.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [00:30<05:43,  2.58s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2363, device='cuda:0')
before filtering torch.Size([3, 230672])
after filtering torch.Size([2, 230672])
num_ins_points_after_filtering tensor([1985,   89], device='cuda:0')
Working on scene0077_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 49, 52, 53, 55, 56], [16, 17], [18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 34, 35], [25, 27, 29, 33], [36, 37], [38, 39, 41, 43, 44, 45, 46], [48, 51, 54]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 35/61 [00:00<00:00, 347.62it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:31<04:31,  2.06s/it]detected_ratio_thres_value tensor(0.3684, device='cuda:0')
final masked points tensor(4441, device='cuda:0')
before filtering torch.Size([7, 92807])
after filtering torch.Size([4, 92807])
num_ins_points_after_filtering tensor([3448,  271,   12,  508], device='cuda:0')
Working on scene0081_00 class window
masks_to_be_merged [[2, 3, 4]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 28/30 [00:00<00:00, 273.53it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [00:31<03:17,  1.51s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(1067, device='cuda:0')
before filtering torch.Size([1, 51381])
after filtering torch.Size([1, 51381])
num_ins_points_after_filtering tensor([1008], device='cuda:0')
Working on scene0084_00 class window
masks_to_be_merged [[0, 1, 2], [4, 5, 6, 7, 8, 9, 59, 60, 61, 62, 63, 64, 65], [10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47], [30, 31, 32, 37, 38, 39, 55, 56, 57, 58], [33, 34, 35, 36]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 22/198 [00:00<00:00, 217.67it/s][A
Calculating viewed counts for every point:  22%|██▏       | 44/198 [00:00<00:00, 214.87it/s][A
Calculating viewed counts for every point:  33%|███▎      | 66/198 [00:00<00:00, 216.28it/s][A
Calculating viewed counts for every point:  44%|████▍     | 88/198 [00:00<00:00, 195.63it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 108/198 [00:00<00:00, 189.99it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 129/198 [00:00<00:00, 195.21it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 151/198 [00:00<00:00, 199.11it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 173/198 [00:00<00:00, 203.04it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 194/198 [00:00<00:00, 192.09it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:33<03:38,  1.68s/it]detected_ratio_thres_value tensor(0.1316, device='cuda:0')
final masked points tensor(7182, device='cuda:0')
before filtering torch.Size([6, 116845])
after filtering torch.Size([6, 116845])
num_ins_points_after_filtering tensor([ 137,  591, 2891, 2710,  486,  305], device='cuda:0')
Working on scene0086_00 class window
masks_to_be_merged [[3, 4], [5, 6, 7], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21], [29, 38], [30, 31, 32, 33], [36, 37, 46, 47, 48, 49, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/143 [00:00<00:00, 208.37it/s][A
Calculating viewed counts for every point:  30%|███       | 43/143 [00:00<00:00, 209.85it/s][A
Calculating viewed counts for every point:  45%|████▍     | 64/143 [00:00<00:00, 196.64it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 84/143 [00:00<00:00, 183.92it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 104/143 [00:00<00:00, 187.40it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 123/143 [00:00<00:00, 186.56it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 142/143 [00:00<00:00, 185.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:35<03:41,  1.71s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(3788, device='cuda:0')
before filtering torch.Size([7, 124572])
after filtering torch.Size([5, 124572])
num_ins_points_after_filtering tensor([ 503, 1118,  173,  305,  947], device='cuda:0')
Working on scene0088_00 class window
masks_to_be_merged [[0, 1], [3, 4], [5, 7], [6, 8, 9], [13, 37], [14, 19], [15, 16, 17, 18], [20, 24, 25], [21, 22]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 22/110 [00:00<00:00, 218.73it/s][A
Calculating viewed counts for every point:  40%|████      | 44/110 [00:00<00:00, 205.98it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 68/110 [00:00<00:00, 219.11it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 90/110 [00:00<00:00, 192.57it/s][A
Calculating viewed counts for every point: 100%|██████████| 110/110 [00:00<00:00, 182.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [00:37<03:32,  1.66s/it]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(5669, device='cuda:0')
before filtering torch.Size([9, 166872])
after filtering torch.Size([5, 166872])
num_ins_points_after_filtering tensor([2158,  511,  112,  948, 1702], device='cuda:0')
Working on scene0095_00 class window
masks_to_be_merged [[0, 2, 4, 5, 6], [3, 73, 75, 77, 79, 81], [11, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 74], [33, 34, 35], [41, 42, 43, 99], [46, 50], [47, 48, 51, 54, 55, 90, 91, 92, 93, 94, 95, 97, 106, 107], [49, 53], [58, 60, 70, 71], [61, 62, 63, 64, 65, 66, 67, 68, 69], [76, 78], [80, 83], [82, 84, 86], [111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:01, 146.31it/s][A
Calculating viewed counts for every point:  19%|█▊        | 31/166 [00:00<00:00, 152.16it/s][A
Calculating viewed counts for every point:  31%|███▏      | 52/166 [00:00<00:00, 176.53it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:00, 166.45it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 89/166 [00:00<00:00, 173.91it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 107/166 [00:00<00:00, 164.03it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 124/166 [00:00<00:00, 157.18it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 143/166 [00:00<00:00, 165.88it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 161/166 [00:00<00:00, 169.09it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:40<04:28,  2.11s/it]detected_ratio_thres_value tensor(0.1923, device='cuda:0')
final masked points tensor(13949, device='cuda:0')
before filtering torch.Size([14, 214895])
after filtering torch.Size([10, 214895])
num_ins_points_after_filtering tensor([ 446, 1382, 2069,  881, 1139,  934, 5013,  218,  342,  508],
       device='cuda:0')
Working on scene0100_00 class window
masks_to_be_merged [[0, 1, 2, 10, 11, 29, 30], [4, 5, 6, 7, 8, 25], [12, 13, 14, 15, 16], [17, 18, 23], [26, 27]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 33/102 [00:00<00:00, 317.04it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 66/102 [00:00<00:00, 322.48it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 99/102 [00:00<00:00, 321.22it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:40<03:30,  1.67s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2850, device='cuda:0')
before filtering torch.Size([5, 52304])
after filtering torch.Size([5, 52304])
num_ins_points_after_filtering tensor([404, 404, 602, 622, 490], device='cuda:0')
Working on scene0131_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0139_00 class window
masks_to_be_merged [[2, 6, 7, 10, 11], [3, 4, 5], [8, 9, 12], [14, 16, 17, 18, 19, 20, 21, 22], [15, 24], [23, 25], [26, 27, 28, 29, 31], [32, 33, 34, 35, 36, 37, 38], [39, 40, 41]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▊       | 39/136 [00:00<00:00, 386.18it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 79/136 [00:00<00:00, 391.64it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 128/136 [00:00<00:00, 435.90it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:43<02:51,  1.38s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(2977, device='cuda:0')
before filtering torch.Size([9, 72007])
after filtering torch.Size([5, 72007])
num_ins_points_after_filtering tensor([ 20, 244, 901, 377, 167], device='cuda:0')
Working on scene0144_00 class window
masks_to_be_merged [[4, 24], [5, 6], [17, 18, 19], [27, 36]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/144 [00:00<00:00, 227.58it/s][A
Calculating viewed counts for every point:  35%|███▌      | 51/144 [00:00<00:00, 258.16it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 77/144 [00:00<00:00, 253.84it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 103/144 [00:00<00:00, 255.14it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 129/144 [00:00<00:00, 250.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:44<02:42,  1.32s/it]detected_ratio_thres_value tensor(0.1176, device='cuda:0')
final masked points tensor(11600, device='cuda:0')
before filtering torch.Size([4, 126879])
after filtering torch.Size([4, 126879])
num_ins_points_after_filtering tensor([ 413,  984, 4727,  939], device='cuda:0')
Working on scene0146_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 79, 80, 81, 83, 85, 86], [13, 14, 15], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43], [44, 45], [47, 48], [49, 50, 51, 52], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 84]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 28/141 [00:00<00:00, 273.04it/s][A
Calculating viewed counts for every point:  43%|████▎     | 60/141 [00:00<00:00, 292.71it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 92/141 [00:00<00:00, 302.36it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 124/141 [00:00<00:00, 307.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:45<02:44,  1.35s/it]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(2879, device='cuda:0')
before filtering torch.Size([7, 60438])
after filtering torch.Size([4, 60438])
num_ins_points_after_filtering tensor([1392,  157,  452,  739], device='cuda:0')
Working on scene0149_00 class window
masks_to_be_merged [[4, 5], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], [26, 27], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 23/141 [00:00<00:00, 224.00it/s][A
Calculating viewed counts for every point:  33%|███▎      | 46/141 [00:00<00:00, 201.55it/s][A
Calculating viewed counts for every point:  49%|████▉     | 69/141 [00:00<00:00, 210.31it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 94/141 [00:00<00:00, 222.39it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 119/141 [00:00<00:00, 229.31it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:46<02:44,  1.36s/it]detected_ratio_thres_value tensor(0.3793, device='cuda:0')
final masked points tensor(4315, device='cuda:0')
before filtering torch.Size([4, 162396])
after filtering torch.Size([2, 162396])
num_ins_points_after_filtering tensor([4154,  111], device='cuda:0')
Working on scene0153_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5], [8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  44%|████▍     | 26/59 [00:00<00:00, 257.00it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:47<02:07,  1.06s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(10095, device='cuda:0')
before filtering torch.Size([2, 47709])
after filtering torch.Size([2, 47709])
num_ins_points_after_filtering tensor([6495,   79], device='cuda:0')
Working on scene0164_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [9, 10, 11, 13, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 32/189 [00:00<00:00, 315.11it/s][A
Calculating viewed counts for every point:  34%|███▍      | 64/189 [00:00<00:00, 305.07it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 98/189 [00:00<00:00, 318.78it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 130/189 [00:00<00:00, 300.01it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 161/189 [00:00<00:00, 300.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:48<02:04,  1.05s/it]Projecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [00:48<01:12,  1.61it/s]detected_ratio_thres_value tensor(0.2174, device='cuda:0')
final masked points tensor(905, device='cuda:0')
before filtering torch.Size([2, 94315])
after filtering torch.Size([2, 94315])
num_ins_points_after_filtering tensor([352, 545], device='cuda:0')
Working on scene0169_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0187_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0193_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 18/72 [00:00<00:00, 173.16it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 38/72 [00:00<00:00, 188.18it/s][A
Calculating viewed counts for every point:  81%|████████  | 58/72 [00:00<00:00, 193.22it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [00:49<01:15,  1.53it/s]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(9330, device='cuda:0')
before filtering torch.Size([1, 101783])
after filtering torch.Size([1, 101783])
num_ins_points_after_filtering tensor([9330], device='cuda:0')
Working on scene0196_00 class window
masks_to_be_merged [[0, 77], [6, 11, 15, 52, 86, 87, 88, 97, 100, 107, 108, 111, 113, 114, 116, 117, 118], [8, 9], [22, 38], [75, 76]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 12/192 [00:00<00:01, 113.99it/s][A
Calculating viewed counts for every point:  16%|█▌        | 31/192 [00:00<00:01, 149.69it/s][A
Calculating viewed counts for every point:  28%|██▊       | 54/192 [00:00<00:00, 181.85it/s][A
Calculating viewed counts for every point:  40%|████      | 77/192 [00:00<00:00, 199.68it/s][A
Calculating viewed counts for every point:  51%|█████     | 98/192 [00:00<00:00, 137.47it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 115/192 [00:00<00:00, 119.54it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 133/192 [00:00<00:00, 131.76it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 148/192 [00:01<00:00, 135.49it/s][A
Calculating viewed counts for every point:  90%|█████████ | 173/192 [00:01<00:00, 164.03it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 191/192 [00:01<00:00, 147.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [00:52<02:39,  1.38s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(4270, device='cuda:0')
before filtering torch.Size([5, 146032])
after filtering torch.Size([2, 146032])
num_ins_points_after_filtering tensor([4217,   28], device='cuda:0')
Working on scene0203_00 class window
masks_to_be_merged [[0, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 47, 48, 50, 51, 53, 54, 55, 61, 63, 65, 66, 68, 70, 72, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 96], [5, 49, 52], [33, 75, 76, 80], [34, 77, 78, 106, 107], [35, 36, 37, 79], [38, 39, 98, 99, 101, 103, 105], [42, 43, 44], [73, 74], [97, 100, 104]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 18/146 [00:00<00:00, 178.63it/s][A
Calculating viewed counts for every point:  27%|██▋       | 40/146 [00:00<00:00, 199.45it/s][A
Calculating viewed counts for every point:  41%|████      | 60/146 [00:00<00:00, 196.73it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 82/146 [00:00<00:00, 201.14it/s][A
Calculating viewed counts for every point:  71%|███████   | 103/146 [00:00<00:00, 191.66it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 125/146 [00:00<00:00, 198.16it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 145/146 [00:00<00:00, 193.85it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [00:55<03:13,  1.70s/it]detected_ratio_thres_value tensor(0.5600, device='cuda:0')
final masked points tensor(6933, device='cuda:0')
before filtering torch.Size([9, 205756])
after filtering torch.Size([4, 205756])
num_ins_points_after_filtering tensor([4691,  193, 1777,   56], device='cuda:0')
Working on scene0207_00 class window
masks_to_be_merged [[0, 1, 2, 3, 5, 8, 10, 52, 54, 56, 57, 58, 60, 62, 64, 65, 66, 68, 70, 76, 78], [4, 6, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 40, 41, 42, 43, 46, 47, 48, 49, 51, 53, 55], [17, 18], [25, 26, 27], [35, 36], [38, 39, 44, 45], [59, 61, 63], [72, 73, 74, 77]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 117.21it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 113.79it/s][A
Calculating viewed counts for every point:  19%|█▊        | 37/199 [00:00<00:01, 118.90it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:01, 112.58it/s][A
Calculating viewed counts for every point:  31%|███       | 61/199 [00:00<00:01, 109.01it/s][A
Calculating viewed counts for every point:  37%|███▋      | 73/199 [00:00<00:01, 110.87it/s][A
Calculating viewed counts for every point:  43%|████▎     | 85/199 [00:00<00:01, 109.15it/s][A
Calculating viewed counts for every point:  49%|████▊     | 97/199 [00:00<00:00, 108.75it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 109/199 [00:00<00:00, 111.46it/s][A
Calculating viewed counts for every point:  61%|██████    | 121/199 [00:01<00:00, 108.68it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 133/199 [00:01<00:00, 111.26it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 145/199 [00:01<00:00, 112.62it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 157/199 [00:01<00:00, 112.64it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 169/199 [00:01<00:00, 112.61it/s][A
Calculating viewed counts for every point:  91%|█████████ | 181/199 [00:01<00:00, 111.16it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 193/199 [00:01<00:00, 112.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [00:58<03:54,  2.07s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(13198, device='cuda:0')
before filtering torch.Size([8, 304396])
after filtering torch.Size([3, 304396])
num_ins_points_after_filtering tensor([5106, 4202,  707], device='cuda:0')
Working on scene0208_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7, 8], [9, 12, 13, 14, 15, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [16, 17, 18, 46, 47, 48], [21, 22], [25, 27, 28, 29, 61, 62, 63, 64, 72, 73], [57, 58], [65, 66, 67], [70, 71]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 12/239 [00:00<00:02, 111.95it/s][A
Calculating viewed counts for every point:  10%|█         | 24/239 [00:00<00:02, 103.24it/s][A
Calculating viewed counts for every point:  15%|█▌        | 37/239 [00:00<00:01, 111.15it/s][A
Calculating viewed counts for every point:  21%|██        | 49/239 [00:00<00:01, 109.16it/s][A
Calculating viewed counts for every point:  25%|██▌       | 60/239 [00:00<00:01, 105.20it/s][A
Calculating viewed counts for every point:  30%|██▉       | 71/239 [00:00<00:01, 106.10it/s][A
Calculating viewed counts for every point:  34%|███▍      | 82/239 [00:00<00:01, 106.93it/s][A
Calculating viewed counts for every point:  39%|███▉      | 93/239 [00:00<00:01, 106.99it/s][A
Calculating viewed counts for every point:  44%|████▎     | 104/239 [00:00<00:01, 107.64it/s][A
Calculating viewed counts for every point:  49%|████▊     | 116/239 [00:01<00:01, 109.91it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 127/239 [00:01<00:01, 109.93it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 138/239 [00:01<00:00, 107.60it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 149/239 [00:01<00:00, 104.93it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 161/239 [00:01<00:00, 108.67it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 172/239 [00:01<00:00, 103.30it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 183/239 [00:01<00:00, 104.59it/s][A
Calculating viewed counts for every point:  81%|████████  | 194/239 [00:01<00:00, 105.28it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 205/239 [00:01<00:00, 105.51it/s][A
Calculating viewed counts for every point:  90%|█████████ | 216/239 [00:02<00:00, 100.85it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 228/239 [00:02<00:00, 103.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [01:02<05:05,  2.73s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(58131, device='cuda:0')
before filtering torch.Size([9, 407386])
after filtering torch.Size([4, 407386])
num_ins_points_after_filtering tensor([24375, 17513,  3516,   114], device='cuda:0')
Working on scene0217_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [21, 25, 26, 27, 29, 31, 32, 33, 34, 35, 75, 78, 79, 80, 81], [28, 30], [36, 37, 38, 39], [40, 41, 42, 43, 44, 45, 46, 47, 48], [73, 74, 76]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 19/125 [00:00<00:00, 189.55it/s][A
Calculating viewed counts for every point:  30%|███       | 38/125 [00:00<00:00, 189.42it/s][A
Calculating viewed counts for every point:  46%|████▋     | 58/125 [00:00<00:00, 191.79it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 78/125 [00:00<00:00, 194.68it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 99/125 [00:00<00:00, 196.92it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 119/125 [00:00<00:00, 192.47it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [01:04<04:34,  2.47s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(9263, device='cuda:0')
before filtering torch.Size([7, 126385])
after filtering torch.Size([6, 126385])
num_ins_points_after_filtering tensor([2921,  759,  827,  165,  157, 4428], device='cuda:0')
Working on scene0221_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 25], [6, 8, 9], [7, 10, 11, 12, 13, 14], [17, 18, 19, 20, 21, 22], [26, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 22/98 [00:00<00:00, 212.11it/s][A
Calculating viewed counts for every point:  45%|████▍     | 44/98 [00:00<00:00, 199.35it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 66/98 [00:00<00:00, 204.86it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 87/98 [00:00<00:00, 197.19it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [01:05<03:39,  2.00s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(9497, device='cuda:0')
before filtering torch.Size([5, 185828])
after filtering torch.Size([5, 185828])
num_ins_points_after_filtering tensor([3545, 2000, 1433,  255, 1316], device='cuda:0')
Working on scene0222_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 157, 158, 159, 160], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [141, 142, 143, 144, 146, 151, 152], [145, 147, 148, 149], [153, 155]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/543 [00:00<00:03, 157.41it/s][A
Calculating viewed counts for every point:   7%|▋         | 36/543 [00:00<00:02, 181.74it/s][A
Calculating viewed counts for every point:  10%|█         | 57/543 [00:00<00:02, 193.08it/s][A
Calculating viewed counts for every point:  14%|█▍        | 77/543 [00:00<00:02, 188.39it/s][A
Calculating viewed counts for every point:  18%|█▊        | 96/543 [00:00<00:02, 183.01it/s][A
Calculating viewed counts for every point:  21%|██        | 115/543 [00:00<00:02, 179.10it/s][A
Calculating viewed counts for every point:  24%|██▍       | 133/543 [00:00<00:02, 177.04it/s][A
Calculating viewed counts for every point:  28%|██▊       | 152/543 [00:00<00:02, 179.92it/s][A
Calculating viewed counts for every point:  31%|███▏      | 171/543 [00:00<00:02, 181.71it/s][A
Calculating viewed counts for every point:  35%|███▌      | 192/543 [00:01<00:01, 189.08it/s][A
Calculating viewed counts for every point:  39%|███▉      | 212/543 [00:01<00:01, 190.32it/s][A
Calculating viewed counts for every point:  43%|████▎     | 232/543 [00:01<00:01, 190.91it/s][A
Calculating viewed counts for every point:  46%|████▋     | 252/543 [00:01<00:01, 179.51it/s][A
Calculating viewed counts for every point:  50%|████▉     | 271/543 [00:01<00:01, 177.71it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 290/543 [00:01<00:01, 181.11it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 309/543 [00:01<00:01, 182.86it/s][A
Calculating viewed counts for every point:  60%|██████    | 328/543 [00:01<00:01, 179.96it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 347/543 [00:01<00:01, 168.97it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 366/543 [00:02<00:01, 172.29it/s][A
Calculating viewed counts for every point:  71%|███████   | 384/543 [00:02<00:00, 171.91it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 404/543 [00:02<00:00, 178.79it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 422/543 [00:02<00:00, 175.38it/s][A
Calculating viewed counts for every point:  81%|████████  | 441/543 [00:02<00:00, 179.44it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 460/543 [00:02<00:00, 176.03it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 478/543 [00:02<00:00, 173.78it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 496/543 [00:02<00:00, 165.78it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 513/543 [00:02<00:00, 159.85it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 530/543 [00:03<00:00, 155.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [01:11<06:03,  3.34s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(8432, device='cuda:0')
before filtering torch.Size([5, 234831])
after filtering torch.Size([3, 234831])
num_ins_points_after_filtering tensor([5836, 2444,  107], device='cuda:0')
Working on scene0231_00 class window
masks_to_be_merged [[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 221, 222, 223, 224, 225, 304, 305, 306, 307, 308, 309, 310, 311], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 48, 96, 97, 98, 100, 113, 114, 115, 116, 117, 118, 227, 228, 298, 312, 313, 314], [38, 46], [39, 40, 41], [58, 126], [72, 75, 77, 80], [74, 76], [82, 84], [119, 120], [121, 122, 123], [140, 143, 144, 146, 147, 273, 275], [141, 145], [150, 151, 154], [152, 165, 167, 279, 281, 285], [156, 158], [160, 162], [163, 166, 168, 169, 171, 178, 254, 267, 268], [177, 185], [180, 182], [181, 260], [183, 184], [186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 204], [216, 217], [240, 288, 290], [242, 243, 244, 245, 246, 247], [249, 250], [255, 256, 264], [272, 274, 277], [280, 282, 284, 286, 287]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 98.38it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/444 [00:00<00:03, 108.74it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 107.23it/s][A
Calculating viewed counts for every point:  10%|▉         | 44/444 [00:00<00:03, 102.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 55/444 [00:00<00:03, 100.77it/s][A
Calculating viewed counts for every point:  15%|█▍        | 66/444 [00:00<00:03, 102.67it/s][A
Calculating viewed counts for every point:  18%|█▊        | 78/444 [00:00<00:03, 107.11it/s][A
Calculating viewed counts for every point:  20%|██        | 91/444 [00:00<00:03, 111.40it/s][A
Calculating viewed counts for every point:  23%|██▎       | 103/444 [00:00<00:03, 105.02it/s][A
Calculating viewed counts for every point:  26%|██▌       | 115/444 [00:01<00:03, 108.36it/s][A
Calculating viewed counts for every point:  28%|██▊       | 126/444 [00:01<00:03, 103.71it/s][A
Calculating viewed counts for every point:  31%|███       | 137/444 [00:01<00:03, 99.74it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 148/444 [00:01<00:02, 100.03it/s][A
Calculating viewed counts for every point:  36%|███▌      | 160/444 [00:01<00:02, 104.36it/s][A
Calculating viewed counts for every point:  39%|███▊      | 171/444 [00:01<00:02, 102.13it/s][A
Calculating viewed counts for every point:  41%|████      | 183/444 [00:01<00:02, 104.57it/s][A
Calculating viewed counts for every point:  44%|████▎     | 194/444 [00:01<00:02, 104.39it/s][A
Calculating viewed counts for every point:  46%|████▋     | 206/444 [00:01<00:02, 106.28it/s][A
Calculating viewed counts for every point:  49%|████▉     | 217/444 [00:02<00:02, 102.65it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 228/444 [00:02<00:02, 101.09it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 239/444 [00:02<00:02, 97.96it/s] [A
Calculating viewed counts for every point:  56%|█████▋    | 250/444 [00:02<00:01, 100.04it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 261/444 [00:02<00:01, 97.72it/s] [A
Calculating viewed counts for every point:  61%|██████▏   | 272/444 [00:02<00:01, 99.25it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 282/444 [00:02<00:01, 96.95it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 292/444 [00:02<00:01, 94.11it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 303/444 [00:02<00:01, 96.22it/s][A
Calculating viewed counts for every point:  70%|███████   | 313/444 [00:03<00:01, 91.98it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 323/444 [00:03<00:01, 91.87it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 333/444 [00:03<00:01, 93.02it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 343/444 [00:03<00:01, 91.27it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 354/444 [00:03<00:00, 94.38it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 366/444 [00:03<00:00, 98.92it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 376/444 [00:03<00:00, 96.82it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 386/444 [00:03<00:00, 94.30it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 397/444 [00:03<00:00, 96.62it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 408/444 [00:04<00:00, 98.89it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 418/444 [00:04<00:00, 96.08it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 429/444 [00:04<00:00, 94.79it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 440/444 [00:04<00:00, 97.88it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [01:25<11:20,  6.30s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(11972, device='cuda:0')
before filtering torch.Size([29, 419537])
after filtering torch.Size([8, 419537])
num_ins_points_after_filtering tensor([4393, 2597,  368,  177,  357,  112,  707, 2412], device='cuda:0')
Working on scene0246_00 class window
masks_to_be_merged [[0, 1, 5], [2, 4], [12, 13], [15, 16, 17, 19, 20, 21], [22, 23, 24, 25], [26, 28], [30, 31, 32, 34, 55, 56, 58, 59, 64, 65, 66, 67], [38, 39, 40, 41, 42, 43], [45, 46], [51, 52, 53, 54, 63], [60, 61, 62], [71, 72], [73, 74, 75, 76], [80, 81, 82, 83, 84, 86]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/296 [00:00<00:01, 161.53it/s][A
Calculating viewed counts for every point:  12%|█▎        | 37/296 [00:00<00:01, 179.24it/s][A
Calculating viewed counts for every point:  19%|█▉        | 57/296 [00:00<00:01, 185.75it/s][A
Calculating viewed counts for every point:  26%|██▌       | 76/296 [00:00<00:01, 185.15it/s][A
Calculating viewed counts for every point:  32%|███▏      | 96/296 [00:00<00:01, 188.27it/s][A
Calculating viewed counts for every point:  39%|███▉      | 115/296 [00:00<00:00, 186.10it/s][A
Calculating viewed counts for every point:  46%|████▌     | 135/296 [00:00<00:00, 188.02it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 156/296 [00:00<00:00, 193.66it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 176/296 [00:00<00:00, 186.03it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 195/296 [00:01<00:00, 184.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 217/296 [00:01<00:00, 194.04it/s][A
Calculating viewed counts for every point:  80%|████████  | 237/296 [00:01<00:00, 190.00it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 259/296 [00:01<00:00, 197.24it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 279/296 [00:01<00:00, 196.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [01:28<09:27,  5.30s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(17559, device='cuda:0')
before filtering torch.Size([14, 201062])
after filtering torch.Size([11, 201062])
num_ins_points_after_filtering tensor([ 121, 7034,  226,  148, 2787,  129,   65, 2855,  593, 1009,  968],
       device='cuda:0')
Working on scene0249_00 class window
masks_to_be_merged [[4, 5, 6, 7, 118, 120, 121, 123, 126, 128, 129, 130, 131, 134, 135], [51, 65, 68, 71], [56, 59, 63, 67, 70], [58, 60], [73, 76, 78, 81, 84, 85, 86, 88, 90, 92, 93, 97, 98, 99, 100, 101, 103, 104, 105, 107, 268, 270, 272, 273, 274, 275, 276, 277, 279, 312, 313, 314, 315, 316, 317], [87, 95, 96], [142, 143], [162, 163], [229, 233], [230, 232], [235, 238, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 269, 271], [237, 248], [262, 264], [287, 290]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/274 [00:00<00:01, 143.25it/s][A
Calculating viewed counts for every point:  11%|█         | 30/274 [00:00<00:01, 138.90it/s][A
Calculating viewed counts for every point:  16%|█▌        | 44/274 [00:00<00:01, 116.20it/s][A
Calculating viewed counts for every point:  21%|██        | 57/274 [00:00<00:01, 117.98it/s][A
Calculating viewed counts for every point:  26%|██▌       | 71/274 [00:00<00:01, 122.49it/s][A
Calculating viewed counts for every point:  31%|███       | 84/274 [00:00<00:01, 121.95it/s][A
Calculating viewed counts for every point:  35%|███▌      | 97/274 [00:00<00:01, 121.22it/s][A
Calculating viewed counts for every point:  40%|████      | 110/274 [00:00<00:01, 122.01it/s][A
Calculating viewed counts for every point:  45%|████▌     | 124/274 [00:01<00:01, 125.57it/s][A
Calculating viewed counts for every point:  50%|█████     | 137/274 [00:01<00:01, 122.65it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 150/274 [00:01<00:01, 121.68it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 163/274 [00:01<00:00, 117.45it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 175/274 [00:01<00:00, 117.53it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 187/274 [00:01<00:00, 116.25it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 199/274 [00:01<00:00, 114.98it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 211/274 [00:01<00:00, 110.75it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 223/274 [00:01<00:00, 112.55it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 238/274 [00:01<00:00, 121.06it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 252/274 [00:02<00:00, 124.62it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 265/274 [00:02<00:00, 124.39it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [01:41<13:24,  7.59s/it]detected_ratio_thres_value tensor(0.2264, device='cuda:0')
final masked points tensor(6812, device='cuda:0')
before filtering torch.Size([14, 331031])
after filtering torch.Size([4, 331031])
num_ins_points_after_filtering tensor([2056, 1896,   25, 2722], device='cuda:0')
Working on scene0251_00 class window
masks_to_be_merged [[6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 66, 67, 68, 70, 71, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95], [10, 12, 17, 19, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 72, 78, 80], [33, 34], [43, 44], [45, 46, 47, 48], [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [62, 64], [96, 97]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/155 [00:00<00:01, 121.64it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 125.16it/s][A
Calculating viewed counts for every point:  26%|██▋       | 41/155 [00:00<00:00, 132.86it/s][A
Calculating viewed counts for every point:  35%|███▌      | 55/155 [00:00<00:00, 135.53it/s][A
Calculating viewed counts for every point:  45%|████▌     | 70/155 [00:00<00:00, 139.78it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 84/155 [00:00<00:00, 137.60it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 98/155 [00:00<00:00, 135.78it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 114/155 [00:00<00:00, 141.36it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 129/155 [00:00<00:00, 131.78it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 143/155 [00:01<00:00, 132.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [01:43<10:42,  6.12s/it]detected_ratio_thres_value tensor(0.3548, device='cuda:0')
final masked points tensor(6446, device='cuda:0')
before filtering torch.Size([8, 226765])
after filtering torch.Size([5, 226765])
num_ins_points_after_filtering tensor([2563, 1968,   62,  527, 1096], device='cuda:0')
Working on scene0256_00 class window
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27], [19, 20, 29], [30, 31, 32]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:00, 253.37it/s][A
Calculating viewed counts for every point:  33%|███▎      | 52/156 [00:00<00:00, 256.32it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 83/156 [00:00<00:00, 277.95it/s][A
Calculating viewed counts for every point:  71%|███████   | 111/156 [00:00<00:00, 267.87it/s][A
Calculating viewed counts for every point:  90%|█████████ | 141/156 [00:00<00:00, 278.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [01:44<07:54,  4.56s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(1505, device='cuda:0')
before filtering torch.Size([4, 108517])
after filtering torch.Size([1, 108517])
num_ins_points_after_filtering tensor([1496], device='cuda:0')
Working on scene0257_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], [51, 56, 57, 58, 71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 18/165 [00:00<00:00, 176.02it/s][A
Calculating viewed counts for every point:  23%|██▎       | 38/165 [00:00<00:00, 184.25it/s][A
Calculating viewed counts for every point:  36%|███▋      | 60/165 [00:00<00:00, 197.04it/s][A
Calculating viewed counts for every point:  48%|████▊     | 80/165 [00:00<00:00, 193.33it/s][A
Calculating viewed counts for every point:  61%|██████    | 101/165 [00:00<00:00, 196.66it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 122/165 [00:00<00:00, 198.11it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 143/165 [00:00<00:00, 201.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [01:46<06:29,  3.78s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(5677, device='cuda:0')
before filtering torch.Size([2, 180928])
after filtering torch.Size([1, 180928])
num_ins_points_after_filtering tensor([5669], device='cuda:0')
Working on scene0277_00 class window
masks_to_be_merged [[0, 1, 6, 8, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86], [2, 3, 4, 5, 7, 10, 11, 45, 50, 52, 54, 56, 57, 58, 59, 83, 85, 87, 88], [12, 13, 14], [21, 22, 23, 24, 25, 66, 67, 68], [26, 27, 28, 29], [61, 62, 63, 64], [69, 70, 71]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 27/115 [00:00<00:00, 262.89it/s][A
Calculating viewed counts for every point:  47%|████▋     | 54/115 [00:00<00:00, 231.24it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 78/115 [00:00<00:00, 234.16it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 102/115 [00:00<00:00, 229.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [01:48<05:12,  3.06s/it]detected_ratio_thres_value tensor(0.3429, device='cuda:0')
final masked points tensor(4146, device='cuda:0')
before filtering torch.Size([7, 79184])
after filtering torch.Size([6, 79184])
num_ins_points_after_filtering tensor([1606,  355,  216,   25, 1504,  139], device='cuda:0')
Working on scene0278_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 33, 34, 35, 36], [5, 6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▎     | 34/80 [00:00<00:00, 334.25it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 68/80 [00:00<00:00, 332.94it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [01:48<03:54,  2.33s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(2502, device='cuda:0')
before filtering torch.Size([2, 77020])
after filtering torch.Size([2, 77020])
num_ins_points_after_filtering tensor([ 283, 2078], device='cuda:0')
Working on scene0300_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 45, 49, 51, 70, 73, 75, 77, 79, 81, 83, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 121, 122, 123, 124, 125, 126, 128, 130, 132, 134, 136, 139, 140, 143, 145], [7, 10], [12, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 37, 41, 42, 46, 48, 52, 54, 56, 58, 60, 62, 63, 64, 67, 68, 72, 146, 148, 151, 153, 154, 157, 160, 162, 164, 165, 166, 167], [27, 29], [39, 40, 43, 44, 47, 50, 53, 55, 57, 59, 61, 65, 66, 69, 71, 74, 76, 78, 80, 82, 84, 89, 91, 93, 127, 129, 131, 133, 135, 137, 138, 141, 142, 144, 147, 150, 152, 155, 158], [108, 109, 111, 114, 115, 116, 118, 119], [110, 112, 117, 120]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 19/175 [00:00<00:00, 186.44it/s][A
Calculating viewed counts for every point:  25%|██▍       | 43/175 [00:00<00:00, 216.30it/s][A
Calculating viewed counts for every point:  39%|███▉      | 68/175 [00:00<00:00, 229.10it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 91/175 [00:00<00:00, 226.88it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 116/175 [00:00<00:00, 231.95it/s][A
Calculating viewed counts for every point:  80%|████████  | 140/175 [00:00<00:00, 228.26it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 163/175 [00:00<00:00, 211.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [01:52<04:40,  2.81s/it]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(11377, device='cuda:0')
before filtering torch.Size([7, 140216])
after filtering torch.Size([4, 140216])
num_ins_points_after_filtering tensor([4854, 3659,   40, 2528], device='cuda:0')
Working on scene0304_00 class window
masks_to_be_merged [[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 22, 28, 31, 40, 42, 122, 171, 174, 177, 179, 181, 184, 185, 188, 191, 194, 196, 198, 200, 202, 204, 205, 207, 209, 245, 249, 252, 256, 258], [2, 5, 15, 24, 36, 82, 84, 85, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 116, 119, 120, 121, 203, 206, 208, 210, 211, 212, 216], [17, 20, 33, 35, 45, 48, 51, 54, 134], [38, 43], [46, 49, 52, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 71, 72, 73, 123, 129, 131, 135, 140, 144, 145, 147, 150, 154, 158, 167, 170, 173, 176, 189, 192, 195, 224, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 246, 248, 251, 253, 259], [83, 213], [132, 161, 163, 165, 169, 172, 175, 178, 180, 182, 183, 186, 187, 190, 193, 197, 199, 201], [217, 218]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 19/178 [00:00<00:00, 189.14it/s][A
Calculating viewed counts for every point:  21%|██▏       | 38/178 [00:00<00:00, 149.84it/s][A
Calculating viewed counts for every point:  30%|███       | 54/178 [00:00<00:00, 152.00it/s][A
Calculating viewed counts for every point:  40%|███▉      | 71/178 [00:00<00:00, 157.12it/s][A
Calculating viewed counts for every point:  49%|████▉     | 87/178 [00:00<00:00, 153.75it/s][A
Calculating viewed counts for every point:  60%|██████    | 107/178 [00:00<00:00, 167.03it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 129/178 [00:00<00:00, 183.32it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 148/178 [00:00<00:00, 169.55it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 166/178 [00:01<00:00, 163.54it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [01:58<06:18,  3.82s/it]detected_ratio_thres_value tensor(0.3421, device='cuda:0')
final masked points tensor(39394, device='cuda:0')
before filtering torch.Size([8, 164016])
after filtering torch.Size([4, 164016])
num_ins_points_after_filtering tensor([14375,  9032, 10305,  5606], device='cuda:0')
Working on scene0307_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 15, 18, 22, 24, 26, 27, 28, 29, 30, 91, 93, 95, 97, 99, 101, 103, 107, 108, 109, 110, 111], [5, 6, 7, 8, 112, 113, 114], [9, 10, 11, 12, 13, 32, 33, 34, 35], [14, 16, 17, 19, 20, 21, 23, 25, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 98, 100, 102, 104, 106], [36, 37, 41, 42], [39, 40], [43, 44, 45, 48], [46, 47], [50, 52, 67, 68, 69], [51, 53, 54, 55, 56, 75, 76, 77, 78, 79, 80, 81, 82, 83], [58, 60], [59, 61, 62, 63]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 4/205 [00:00<00:05, 34.47it/s][A
Calculating viewed counts for every point:   4%|▍         | 8/205 [00:00<00:05, 36.90it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/205 [00:00<00:03, 62.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 25/205 [00:00<00:03, 54.62it/s][A
Calculating viewed counts for every point:  16%|█▌        | 32/205 [00:00<00:02, 59.19it/s][A
Calculating viewed counts for every point:  19%|█▉        | 39/205 [00:00<00:02, 58.03it/s][A
Calculating viewed counts for every point:  22%|██▏       | 45/205 [00:00<00:02, 57.70it/s][A
Calculating viewed counts for every point:  25%|██▌       | 52/205 [00:00<00:02, 59.88it/s][A
Calculating viewed counts for every point:  30%|███       | 62/205 [00:01<00:02, 67.57it/s][A
Calculating viewed counts for every point:  34%|███▎      | 69/205 [00:01<00:02, 67.94it/s][A
Calculating viewed counts for every point:  37%|███▋      | 76/205 [00:01<00:01, 65.37it/s][A
Calculating viewed counts for every point:  40%|████      | 83/205 [00:01<00:02, 60.99it/s][A
Calculating viewed counts for every point:  44%|████▍     | 90/205 [00:01<00:01, 61.79it/s][A
Calculating viewed counts for every point:  47%|████▋     | 97/205 [00:01<00:01, 59.02it/s][A
Calculating viewed counts for every point:  51%|█████     | 105/205 [00:01<00:01, 64.10it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 112/205 [00:01<00:01, 64.87it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 119/205 [00:01<00:01, 61.83it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 126/205 [00:02<00:01, 59.09it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 133/205 [00:02<00:01, 60.98it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 140/205 [00:02<00:01, 61.86it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 148/205 [00:02<00:00, 64.42it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 157/205 [00:02<00:00, 70.13it/s][A
Calculating viewed counts for every point:  80%|████████  | 165/205 [00:02<00:00, 71.78it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 175/205 [00:02<00:00, 75.80it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 184/205 [00:02<00:00, 78.42it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 193/205 [00:02<00:00, 81.33it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 202/205 [00:03<00:00, 80.52it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [02:05<07:29,  4.58s/it]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(21463, device='cuda:0')
before filtering torch.Size([12, 371616])
after filtering torch.Size([10, 371616])
num_ins_points_after_filtering tensor([3284, 3386, 3278,  899,  413,  456,  710, 3065, 2143, 3701],
       device='cuda:0')
Working on scene0314_00 class window
masks_to_be_merged [[6, 7], [14, 15], [16, 19, 20, 21, 30], [33, 34]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 20/93 [00:00<00:00, 179.81it/s][A
Calculating viewed counts for every point:  41%|████      | 38/93 [00:00<00:00, 166.34it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 57/93 [00:00<00:00, 175.20it/s][A
Calculating viewed counts for every point:  81%|████████  | 75/93 [00:00<00:00, 152.32it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 45/142 [02:06<05:45,  3.57s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(722, device='cuda:0')
before filtering torch.Size([4, 87446])
after filtering torch.Size([2, 87446])
num_ins_points_after_filtering tensor([625,  32], device='cuda:0')
Working on scene0316_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 7]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 7/77 [00:00<00:01, 67.96it/s][A
Calculating viewed counts for every point:  23%|██▎       | 18/77 [00:00<00:00, 87.94it/s][A
Calculating viewed counts for every point:  35%|███▌      | 27/77 [00:00<00:00, 78.11it/s][A
Calculating viewed counts for every point:  45%|████▌     | 35/77 [00:00<00:00, 75.02it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 43/77 [00:00<00:00, 67.47it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 51/77 [00:00<00:00, 70.30it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 59/77 [00:00<00:00, 70.22it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 67/77 [00:00<00:00, 71.65it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 75/77 [00:01<00:00, 70.99it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [02:07<04:39,  2.91s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(1835, device='cuda:0')
before filtering torch.Size([2, 78769])
after filtering torch.Size([2, 78769])
num_ins_points_after_filtering tensor([ 100, 1448], device='cuda:0')
Working on scene0328_00 class window
masks_to_be_merged [[0, 1, 2, 3, 6, 8, 10, 12, 13, 16, 19, 97, 101, 103, 106, 109], [4, 9, 14, 100, 104, 107], [11, 17, 20, 80, 88], [15, 18, 21, 22], [25, 26], [27, 28, 29, 30, 31, 66, 67, 68], [37, 41], [38, 39, 42, 44], [40, 43, 46, 48], [45, 47, 50, 52, 54, 56, 57, 59, 62, 75, 77, 79, 82, 84, 86, 89, 91, 93], [49, 51, 53, 55, 58, 60, 61, 72, 73, 74, 76, 78, 81, 83, 85, 87, 90, 92, 94, 95, 102], [63, 69, 70, 71], [96, 98, 99], [105, 108]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 12/142 [00:00<00:01, 117.68it/s][A
Calculating viewed counts for every point:  20%|█▉        | 28/142 [00:00<00:00, 141.07it/s][A
Calculating viewed counts for every point:  34%|███▍      | 48/142 [00:00<00:00, 166.39it/s][A
Calculating viewed counts for every point:  46%|████▌     | 65/142 [00:00<00:00, 165.69it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 89/142 [00:00<00:00, 188.94it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 111/142 [00:00<00:00, 197.21it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 134/142 [00:00<00:00, 205.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [02:10<04:37,  2.92s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(7058, device='cuda:0')
before filtering torch.Size([14, 111467])
after filtering torch.Size([5, 111467])
num_ins_points_after_filtering tensor([ 613,  140,  526, 1996, 2551], device='cuda:0')
Working on scene0329_00 class window
masks_to_be_merged [[9, 10], [19, 26, 27, 79, 80], [20, 21, 74], [33, 36, 37], [41, 42, 43], [49, 52], [50, 53], [61, 63, 66, 70], [75, 76, 77, 78]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 4/156 [00:00<00:03, 39.39it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/156 [00:00<00:02, 66.91it/s][A
Calculating viewed counts for every point:  15%|█▍        | 23/156 [00:00<00:01, 81.58it/s][A
Calculating viewed counts for every point:  23%|██▎       | 36/156 [00:00<00:01, 97.89it/s][A
Calculating viewed counts for every point:  30%|███       | 47/156 [00:00<00:01, 100.26it/s][A
Calculating viewed counts for every point:  37%|███▋      | 58/156 [00:00<00:00, 98.94it/s] [A
Calculating viewed counts for every point:  44%|████▍     | 69/156 [00:00<00:00, 100.30it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 80/156 [00:00<00:00, 98.94it/s] [A
Calculating viewed counts for every point:  60%|█████▉    | 93/156 [00:00<00:00, 107.57it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 105/156 [00:01<00:00, 111.02it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 118/156 [00:01<00:00, 114.29it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 130/156 [00:01<00:00, 113.72it/s][A
Calculating viewed counts for every point:  91%|█████████ | 142/156 [00:01<00:00, 113.42it/s][A
Calculating viewed counts for every point: 100%|██████████| 156/156 [00:01<00:00, 119.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [02:13<04:40,  2.99s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(14514, device='cuda:0')
before filtering torch.Size([9, 355413])
after filtering torch.Size([8, 355413])
num_ins_points_after_filtering tensor([1920, 2796,  503, 3530,  908,  205,  574,  256], device='cuda:0')
Working on scene0334_00 class window
masks_to_be_merged [[8, 9, 10, 11, 12, 13]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 15/119 [00:00<00:00, 147.51it/s][A
Calculating viewed counts for every point:  25%|██▌       | 30/119 [00:00<00:00, 143.42it/s][A
Calculating viewed counts for every point:  39%|███▊      | 46/119 [00:00<00:00, 149.65it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 61/119 [00:00<00:00, 142.10it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 76/119 [00:00<00:00, 140.31it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 91/119 [00:00<00:00, 139.84it/s][A
Calculating viewed counts for every point:  91%|█████████ | 108/119 [00:00<00:00, 148.09it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [02:15<03:45,  2.43s/it]detected_ratio_thres_value tensor(0.1290, device='cuda:0')
final masked points tensor(23068, device='cuda:0')
before filtering torch.Size([1, 197174])
after filtering torch.Size([1, 197174])
num_ins_points_after_filtering tensor([22963], device='cuda:0')
Working on scene0338_00 class window
masks_to_be_merged [[0, 34, 35, 36, 37, 38], [2, 3, 6, 7, 8, 9, 10, 45, 46], [4, 44], [11, 12, 13, 17, 19], [14, 16, 18, 21], [15, 20], [22, 23], [24, 25, 26, 27, 28, 29, 30], [31, 32, 33], [39, 40, 41, 43]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  38%|███▊      | 31/81 [00:00<00:00, 309.08it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 62/81 [00:00<00:00, 299.02it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [02:15<02:57,  1.93s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(15571, device='cuda:0')
before filtering torch.Size([10, 106339])
after filtering torch.Size([8, 106339])
num_ins_points_after_filtering tensor([  374,  2114,   174,   145,    77,   163, 11768,    29],
       device='cuda:0')
Working on scene0342_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 73, 74, 75, 76], [7, 8, 9], [82, 83]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 34/93 [00:00<00:00, 334.06it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 68/93 [00:00<00:00, 306.21it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  36%|███▌      | 51/142 [02:17<02:58,  1.96s/it]detected_ratio_thres_value tensor(0.3636, device='cuda:0')
final masked points tensor(6615, device='cuda:0')
before filtering torch.Size([3, 89958])
after filtering torch.Size([2, 89958])
num_ins_points_after_filtering tensor([5227, 1366], device='cuda:0')
Working on scene0343_00 class window
masks_to_be_merged [[1, 14, 15], [4, 5, 6], [9, 10], [17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 22/124 [00:00<00:00, 214.72it/s][A
Calculating viewed counts for every point:  35%|███▌      | 44/124 [00:00<00:00, 196.04it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 68/124 [00:00<00:00, 210.39it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 90/124 [00:00<00:00, 203.88it/s][A
Calculating viewed counts for every point:  90%|█████████ | 112/124 [00:00<00:00, 207.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [02:18<02:26,  1.63s/it]detected_ratio_thres_value tensor(0.0769, device='cuda:0')
final masked points tensor(5974, device='cuda:0')
before filtering torch.Size([4, 165618])
after filtering torch.Size([4, 165618])
num_ins_points_after_filtering tensor([2723, 1516,  408,  196], device='cuda:0')
Working on scene0351_00 class window
masks_to_be_merged [[0, 1, 2, 3, 5, 7, 8, 10, 11, 13, 16, 19, 20, 61, 63, 101, 102, 103, 104, 105, 107], [4, 6], [28, 29], [35, 36], [37, 39], [43, 48], [49, 50], [53, 86], [55, 85, 88, 89], [62, 64], [73, 75], [93, 95, 96, 97], [111, 113, 118, 120, 122], [115, 117, 119], [121, 123], [126, 127], [131, 133], [140, 141], [142, 143], [144, 145]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 17/147 [00:00<00:00, 162.45it/s][A
Calculating viewed counts for every point:  23%|██▎       | 34/147 [00:00<00:00, 160.06it/s][A
Calculating viewed counts for every point:  36%|███▌      | 53/147 [00:00<00:00, 167.55it/s][A
Calculating viewed counts for every point:  48%|████▊     | 70/147 [00:00<00:00, 159.22it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 86/147 [00:00<00:00, 154.16it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 102/147 [00:00<00:00, 155.36it/s][A
Calculating viewed counts for every point:  80%|████████  | 118/147 [00:00<00:00, 154.00it/s][A
Calculating viewed counts for every point:  91%|█████████ | 134/147 [00:00<00:00, 153.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [02:21<03:07,  2.10s/it]detected_ratio_thres_value tensor(0.2414, device='cuda:0')
final masked points tensor(16503, device='cuda:0')
before filtering torch.Size([20, 172134])
after filtering torch.Size([15, 172134])
num_ins_points_after_filtering tensor([1084,   69,    8,   61,  250, 1144,  370, 3426,  439,  335,  726,  311,
         666,  507,   54], device='cuda:0')
Working on scene0353_00 class window
masks_to_be_merged [[2, 3, 19], [5, 7, 8, 9, 21, 22, 23, 24, 26], [6, 10, 11, 12, 20, 28], [15, 16]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/299 [00:00<00:01, 173.35it/s][A
Calculating viewed counts for every point:  13%|█▎        | 40/299 [00:00<00:01, 197.22it/s][A
Calculating viewed counts for every point:  20%|██        | 61/299 [00:00<00:01, 199.00it/s][A
Calculating viewed counts for every point:  27%|██▋       | 81/299 [00:00<00:01, 177.78it/s][A
Calculating viewed counts for every point:  34%|███▍      | 101/299 [00:00<00:01, 183.93it/s][A
Calculating viewed counts for every point:  40%|████      | 120/299 [00:00<00:00, 180.37it/s][A
Calculating viewed counts for every point:  46%|████▋     | 139/299 [00:00<00:00, 177.32it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 157/299 [00:00<00:00, 177.49it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 176/299 [00:00<00:00, 180.39it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 195/299 [00:01<00:00, 175.19it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 215/299 [00:01<00:00, 181.23it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 234/299 [00:01<00:00, 178.80it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 252/299 [00:01<00:00, 178.74it/s][A
Calculating viewed counts for every point:  91%|█████████ | 272/299 [00:01<00:00, 182.62it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 291/299 [00:01<00:00, 178.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [02:24<03:09,  2.15s/it]detected_ratio_thres_value tensor(0.0800, device='cuda:0')
final masked points tensor(2471, device='cuda:0')
before filtering torch.Size([4, 208782])
after filtering torch.Size([2, 208782])
num_ins_points_after_filtering tensor([1262,   66], device='cuda:0')
Working on scene0354_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [31, 32, 33], [36, 37, 38, 39]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 28/113 [00:00<00:00, 276.71it/s][A
Calculating viewed counts for every point:  50%|████▉     | 56/113 [00:00<00:00, 247.52it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 81/113 [00:00<00:00, 237.76it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 110/113 [00:00<00:00, 254.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [02:25<02:38,  1.82s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(5685, device='cuda:0')
before filtering torch.Size([3, 110569])
after filtering torch.Size([3, 110569])
num_ins_points_after_filtering tensor([3761,  468,  375], device='cuda:0')
Working on scene0355_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8], [18, 19], [20, 21]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 24/115 [00:00<00:00, 231.61it/s][A
Calculating viewed counts for every point:  42%|████▏     | 48/115 [00:00<00:00, 228.86it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 74/115 [00:00<00:00, 240.50it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 99/115 [00:00<00:00, 224.07it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [02:26<02:17,  1.60s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(2769, device='cuda:0')
before filtering torch.Size([3, 136135])
after filtering torch.Size([2, 136135])
num_ins_points_after_filtering tensor([2066,    8], device='cuda:0')
Working on scene0356_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 90, 91, 92, 93], [26, 27, 75, 76], [31, 32, 33, 34, 35, 36, 37, 77, 79], [40, 41, 85, 87, 88]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:00, 235.61it/s][A
Calculating viewed counts for every point:  35%|███▌      | 48/136 [00:00<00:00, 224.70it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 74/136 [00:00<00:00, 237.74it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 98/136 [00:00<00:00, 238.57it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 122/136 [00:00<00:00, 228.41it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [02:28<02:27,  1.74s/it]detected_ratio_thres_value tensor(0.4571, device='cuda:0')
final masked points tensor(2658, device='cuda:0')
before filtering torch.Size([4, 81172])
after filtering torch.Size([2, 81172])
num_ins_points_after_filtering tensor([2448,  145], device='cuda:0')
Working on scene0357_00 class window
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 40, 41, 42, 43], [18, 21, 23, 24, 26, 31, 37, 39], [27, 28, 30]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 16/91 [00:00<00:00, 156.06it/s][A
Calculating viewed counts for every point:  36%|███▋      | 33/91 [00:00<00:00, 160.55it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 51/91 [00:00<00:00, 168.69it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 71/91 [00:00<00:00, 177.92it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 90/91 [00:00<00:00, 181.79it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [02:29<02:07,  1.52s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(2943, device='cuda:0')
before filtering torch.Size([3, 136945])
after filtering torch.Size([2, 136945])
num_ins_points_after_filtering tensor([2698,  170], device='cuda:0')
Working on scene0377_00 class window
masks_to_be_merged [[0, 2, 19, 20, 21], [3, 4, 5, 6, 7, 14, 15, 16, 18], [10, 11, 12, 13], [17, 22]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 16/91 [00:00<00:00, 159.54it/s][A
Calculating viewed counts for every point:  36%|███▋      | 33/91 [00:00<00:00, 160.16it/s][A
Calculating viewed counts for every point:  60%|██████    | 55/91 [00:00<00:00, 186.75it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 74/91 [00:00<00:00, 173.85it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [02:30<01:49,  1.32s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(6472, device='cuda:0')
before filtering torch.Size([4, 111811])
after filtering torch.Size([3, 111811])
num_ins_points_after_filtering tensor([3514, 1614, 1154], device='cuda:0')
Working on scene0378_00 class window
masks_to_be_merged [[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], [2, 5], [17, 35], [22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [48, 49, 50, 51], [53, 55]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/190 [00:00<00:00, 173.48it/s][A
Calculating viewed counts for every point:  19%|█▉        | 37/190 [00:00<00:00, 179.81it/s][A
Calculating viewed counts for every point:  29%|██▉       | 56/190 [00:00<00:00, 180.57it/s][A
Calculating viewed counts for every point:  39%|███▉      | 75/190 [00:00<00:00, 180.46it/s][A
Calculating viewed counts for every point:  49%|████▉     | 94/190 [00:00<00:00, 182.79it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 113/190 [00:00<00:00, 176.58it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 132/190 [00:00<00:00, 179.27it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 150/190 [00:00<00:00, 174.37it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 168/190 [00:00<00:00, 174.21it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 186/190 [00:01<00:00, 166.09it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [02:32<02:07,  1.55s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(13415, device='cuda:0')
before filtering torch.Size([6, 156298])
after filtering torch.Size([3, 156298])
num_ins_points_after_filtering tensor([1070, 9632, 2687], device='cuda:0')
Working on scene0382_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [29, 31], [30, 32, 33]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 20/113 [00:00<00:00, 195.62it/s][A
Calculating viewed counts for every point:  35%|███▌      | 40/113 [00:00<00:00, 195.25it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 63/113 [00:00<00:00, 207.96it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 89/113 [00:00<00:00, 224.28it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 112/113 [00:00<00:00, 216.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [02:33<01:53,  1.40s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(4528, device='cuda:0')
before filtering torch.Size([3, 100285])
after filtering torch.Size([1, 100285])
num_ins_points_after_filtering tensor([4424], device='cuda:0')
Working on scene0389_00 class window
masks_to_be_merged [[0, 1], [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/142 [00:00<00:00, 186.61it/s][A
Calculating viewed counts for every point:  27%|██▋       | 38/142 [00:00<00:00, 182.90it/s][A
Calculating viewed counts for every point:  42%|████▏     | 59/142 [00:00<00:00, 192.64it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 79/142 [00:00<00:00, 189.49it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 99/142 [00:00<00:00, 191.05it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 119/142 [00:00<00:00, 193.55it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 139/142 [00:00<00:00, 194.54it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [02:34<01:53,  1.42s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(15012, device='cuda:0')
before filtering torch.Size([4, 201003])
after filtering torch.Size([4, 201003])
num_ins_points_after_filtering tensor([  803, 10980,   218,  1661], device='cuda:0')
Working on scene0406_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8], [10, 11, 25], [12, 13, 14], [16, 17, 18, 19, 20, 21, 22, 23]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 35/142 [00:00<00:00, 344.33it/s][A
Calculating viewed counts for every point:  49%|████▉     | 70/142 [00:00<00:00, 334.51it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 104/142 [00:00<00:00, 336.39it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 138/142 [00:00<00:00, 333.39it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [02:36<01:56,  1.48s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(4681, device='cuda:0')
before filtering torch.Size([4, 48864])
after filtering torch.Size([3, 48864])
num_ins_points_after_filtering tensor([ 596,  101, 2504], device='cuda:0')
Working on scene0412_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 14, 15, 16, 17], [8, 34], [9, 22, 23, 25, 26, 27, 28, 29, 30, 31], [11, 32, 33, 35], [12, 65], [18, 19], [36, 37, 38, 39, 40, 41, 42], [43, 44, 45, 47, 48, 49, 51], [46, 50], [53, 54], [56, 57, 58], [59, 60, 61, 62, 63]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 25/237 [00:00<00:00, 241.31it/s][A
Calculating viewed counts for every point:  21%|██        | 50/237 [00:00<00:00, 209.40it/s][A
Calculating viewed counts for every point:  30%|███       | 72/237 [00:00<00:00, 201.46it/s][A
Calculating viewed counts for every point:  40%|████      | 95/237 [00:00<00:00, 208.64it/s][A
Calculating viewed counts for every point:  49%|████▉     | 116/237 [00:00<00:00, 203.55it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 140/237 [00:00<00:00, 213.55it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 162/237 [00:00<00:00, 213.41it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 184/237 [00:00<00:00, 202.44it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 205/237 [00:01<00:00, 195.31it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 227/237 [00:01<00:00, 200.05it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [02:38<02:11,  1.69s/it]detected_ratio_thres_value tensor(0.1026, device='cuda:0')
final masked points tensor(23802, device='cuda:0')
before filtering torch.Size([12, 175557])
after filtering torch.Size([9, 175557])
num_ins_points_after_filtering tensor([6012, 2104,  633,   37, 2731, 1869,   29,   68,  212], device='cuda:0')
Working on scene0414_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▎        | 16/117 [00:00<00:00, 153.46it/s][A
Calculating viewed counts for every point:  30%|██▉       | 35/117 [00:00<00:00, 170.47it/s][A
Calculating viewed counts for every point:  48%|████▊     | 56/117 [00:00<00:00, 184.03it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 75/117 [00:00<00:00, 159.55it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 92/117 [00:00<00:00, 149.34it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 108/117 [00:00<00:00, 149.78it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [02:39<01:53,  1.48s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(1297, device='cuda:0')
before filtering torch.Size([1, 192685])
after filtering torch.Size([1, 192685])
num_ins_points_after_filtering tensor([1297], device='cuda:0')
Working on scene0423_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0426_00 class window
masks_to_be_merged [[3, 28], [4, 5], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█▏        | 26/231 [00:00<00:00, 259.24it/s][A
Calculating viewed counts for every point:  23%|██▎       | 52/231 [00:00<00:00, 249.22it/s][A
Calculating viewed counts for every point:  34%|███▍      | 79/231 [00:00<00:00, 258.43it/s][A
Calculating viewed counts for every point:  45%|████▌     | 105/231 [00:00<00:00, 258.27it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 131/231 [00:00<00:00, 253.40it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 158/231 [00:00<00:00, 255.84it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 184/231 [00:00<00:00, 245.68it/s][A
Calculating viewed counts for every point:  91%|█████████ | 210/231 [00:00<00:00, 249.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [02:40<01:22,  1.10s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(5727, device='cuda:0')
before filtering torch.Size([3, 135867])
after filtering torch.Size([2, 135867])
num_ins_points_after_filtering tensor([ 307, 3189], device='cuda:0')
Working on scene0427_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 26, 27, 28, 29], [7, 24, 25], [8, 23], [10, 11, 12, 13, 14, 15, 16], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 38/132 [00:00<00:00, 371.96it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 76/132 [00:00<00:00, 374.29it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 117/132 [00:00<00:00, 389.24it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [02:42<01:26,  1.18s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(3758, device='cuda:0')
before filtering torch.Size([5, 74074])
after filtering torch.Size([1, 74074])
num_ins_points_after_filtering tensor([3059], device='cuda:0')
Working on scene0430_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 67, 68, 90, 91, 92, 93, 94], [22, 24, 25, 27, 28, 29, 31, 32, 35, 37, 40, 41, 42, 46, 47, 50, 51, 52, 54], [43, 44, 58, 59, 61, 62, 63, 81, 87]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/231 [00:00<00:01, 154.38it/s][A
Calculating viewed counts for every point:  16%|█▌        | 37/231 [00:00<00:01, 183.03it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/231 [00:00<00:01, 173.83it/s][A
Calculating viewed counts for every point:  32%|███▏      | 74/231 [00:00<00:00, 167.57it/s][A
Calculating viewed counts for every point:  40%|███▉      | 92/231 [00:00<00:00, 170.26it/s][A
Calculating viewed counts for every point:  48%|████▊     | 110/231 [00:00<00:00, 161.42it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 129/231 [00:00<00:00, 168.45it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 146/231 [00:00<00:00, 163.68it/s][A
Calculating viewed counts for every point:  71%|███████   | 164/231 [00:00<00:00, 165.44it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 181/231 [00:01<00:00, 161.80it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 198/231 [00:01<00:00, 159.39it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 220/231 [00:01<00:00, 175.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [02:45<01:57,  1.61s/it]detected_ratio_thres_value tensor(0.3448, device='cuda:0')
final masked points tensor(4839, device='cuda:0')
before filtering torch.Size([3, 210249])
after filtering torch.Size([3, 210249])
num_ins_points_after_filtering tensor([2955, 1847,   25], device='cuda:0')
Working on scene0432_00 class window
masks_to_be_merged [[0, 1, 2, 3], [6, 7, 8, 10, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 38/52 [00:00<00:00, 376.89it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [02:45<01:37,  1.35s/it]detected_ratio_thres_value tensor(0.2000, device='cuda:0')
final masked points tensor(2131, device='cuda:0')
before filtering torch.Size([2, 39529])
after filtering torch.Size([2, 39529])
num_ins_points_after_filtering tensor([ 336, 1403], device='cuda:0')
Working on scene0435_00 class window
masks_to_be_merged [[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 53, 54, 55, 56], [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], [49, 51], [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 89, 90, 91, 92, 93, 94, 95, 96], [75, 76, 77], [81, 82, 83], [84, 85, 86, 87]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 17/328 [00:00<00:01, 160.50it/s][A
Calculating viewed counts for every point:  10%|█         | 34/328 [00:00<00:01, 159.80it/s][A
Calculating viewed counts for every point:  16%|█▌        | 51/328 [00:00<00:01, 161.66it/s][A
Calculating viewed counts for every point:  21%|██        | 68/328 [00:00<00:01, 154.17it/s][A
Calculating viewed counts for every point:  26%|██▌       | 85/328 [00:00<00:01, 153.16it/s][A
Calculating viewed counts for every point:  31%|███       | 101/328 [00:00<00:01, 154.99it/s][A
Calculating viewed counts for every point:  36%|███▌      | 117/328 [00:00<00:01, 149.49it/s][A
Calculating viewed counts for every point:  41%|████      | 134/328 [00:00<00:01, 153.03it/s][A
Calculating viewed counts for every point:  46%|████▌     | 150/328 [00:00<00:01, 150.04it/s][A
Calculating viewed counts for every point:  51%|█████     | 166/328 [00:01<00:01, 147.98it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 182/328 [00:01<00:00, 149.86it/s][A
Calculating viewed counts for every point:  60%|██████    | 198/328 [00:01<00:00, 149.55it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 213/328 [00:01<00:00, 143.08it/s][A
Calculating viewed counts for every point:  70%|███████   | 230/328 [00:01<00:00, 150.57it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 247/328 [00:01<00:00, 154.12it/s][A
Calculating viewed counts for every point:  80%|████████  | 264/328 [00:01<00:00, 158.55it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 282/328 [00:01<00:00, 163.43it/s][A
Calculating viewed counts for every point:  91%|█████████ | 299/328 [00:01<00:00, 162.84it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 316/328 [00:02<00:00, 161.99it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [02:49<02:29,  2.10s/it]detected_ratio_thres_value tensor(0.2791, device='cuda:0')
final masked points tensor(13581, device='cuda:0')
before filtering torch.Size([7, 254998])
after filtering torch.Size([5, 254998])
num_ins_points_after_filtering tensor([1421, 6789, 3997,  900,   77], device='cuda:0')
Working on scene0441_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 43, 45, 47, 48], [34, 37], [38, 39, 40]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 20/77 [00:00<00:00, 196.90it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 40/77 [00:00<00:00, 189.97it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 63/77 [00:00<00:00, 204.03it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [02:50<02:04,  1.77s/it]detected_ratio_thres_value tensor(0.4062, device='cuda:0')
final masked points tensor(2007, device='cuda:0')
before filtering torch.Size([4, 86191])
after filtering torch.Size([3, 86191])
num_ins_points_after_filtering tensor([ 284, 1646,   13], device='cuda:0')
Working on scene0458_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 92, 93, 94, 95, 96, 152, 153, 154], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 59, 61, 62, 63, 64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], [28, 29, 30, 31], [32, 33, 34, 35, 36, 37, 38, 39, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], [41, 42, 144, 145, 146, 147, 148, 149, 150, 151], [58, 60], [67, 68], [69, 70, 72], [89, 90, 91]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 26/199 [00:00<00:00, 256.61it/s][A
Calculating viewed counts for every point:  29%|██▊       | 57/199 [00:00<00:00, 281.01it/s][A
Calculating viewed counts for every point:  43%|████▎     | 86/199 [00:00<00:00, 277.93it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 114/199 [00:00<00:00, 273.11it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 144/199 [00:00<00:00, 281.95it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 173/199 [00:00<00:00, 276.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [02:54<02:32,  2.21s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(21220, device='cuda:0')
before filtering torch.Size([9, 65264])
after filtering torch.Size([4, 65264])
num_ins_points_after_filtering tensor([ 3678, 12400,  3109,  1928], device='cuda:0')
Working on scene0461_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [6, 9], [7, 8]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 19/52 [00:00<00:00, 189.08it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 41/52 [00:00<00:00, 206.88it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [02:55<02:14,  1.98s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(9164, device='cuda:0')
before filtering torch.Size([3, 59134])
after filtering torch.Size([1, 59134])
num_ins_points_after_filtering tensor([8632], device='cuda:0')
Working on scene0462_00 class window
masks_to_be_merged [[0, 2], [4, 5, 6, 7, 8, 9, 10], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [24, 25, 28, 29]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 25/114 [00:00<00:00, 249.39it/s][A
Calculating viewed counts for every point:  46%|████▌     | 52/114 [00:00<00:00, 261.35it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 79/114 [00:00<00:00, 253.15it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 105/114 [00:00<00:00, 238.04it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [02:56<01:53,  1.69s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(22202, device='cuda:0')
before filtering torch.Size([4, 156714])
after filtering torch.Size([3, 156714])
num_ins_points_after_filtering tensor([  118, 18073,    36], device='cuda:0')
Working on scene0474_00 class window
masks_to_be_merged [[1, 2], [3, 4, 5, 6, 18], [7, 8, 9, 10, 11, 12, 20, 21, 22], [14, 15, 17]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/164 [00:00<00:00, 164.62it/s][A
Calculating viewed counts for every point:  21%|██▏       | 35/164 [00:00<00:00, 170.44it/s][A
Calculating viewed counts for every point:  32%|███▏      | 53/164 [00:00<00:00, 164.31it/s][A
Calculating viewed counts for every point:  43%|████▎     | 70/164 [00:00<00:00, 153.47it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 87/164 [00:00<00:00, 158.37it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 105/164 [00:00<00:00, 161.15it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 122/164 [00:00<00:00, 157.75it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 138/164 [00:00<00:00, 150.67it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 154/164 [00:00<00:00, 153.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [02:57<01:44,  1.59s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(8516, device='cuda:0')
before filtering torch.Size([4, 182281])
after filtering torch.Size([3, 182281])
num_ins_points_after_filtering tensor([ 124, 2788, 5423], device='cuda:0')
Working on scene0488_00 class window
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 18/60 [00:00<00:00, 173.28it/s][A
Calculating viewed counts for every point:  60%|██████    | 36/60 [00:00<00:00, 167.50it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 55/60 [00:00<00:00, 176.60it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [02:58<01:22,  1.28s/it]detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(1307, device='cuda:0')
before filtering torch.Size([2, 108319])
after filtering torch.Size([1, 108319])
num_ins_points_after_filtering tensor([321], device='cuda:0')
Working on scene0490_00 class window
masks_to_be_merged [[3, 5], [8, 9, 10], [17, 19], [18, 66], [47, 86, 87, 89, 91, 96], [54, 55, 56, 57], [60, 99, 100, 104, 105, 107, 108, 109, 110, 113, 114], [63, 97, 98, 102, 103], [78, 79, 80, 81, 82, 83], [92, 94]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██        | 27/129 [00:00<00:00, 265.94it/s][A
Calculating viewed counts for every point:  45%|████▍     | 58/129 [00:00<00:00, 288.62it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 87/129 [00:00<00:00, 284.93it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 116/129 [00:00<00:00, 272.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [03:00<01:40,  1.57s/it]detected_ratio_thres_value tensor(0.1905, device='cuda:0')
final masked points tensor(10387, device='cuda:0')
before filtering torch.Size([10, 131283])
after filtering torch.Size([6, 131283])
num_ins_points_after_filtering tensor([ 253,  973, 1463, 3270,  817, 2597], device='cuda:0')
Working on scene0494_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [14, 15, 22, 23, 24], [16, 17, 18, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▊      | 29/75 [00:00<00:00, 284.31it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 58/75 [00:00<00:00, 270.26it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [03:01<01:23,  1.33s/it]detected_ratio_thres_value tensor(0.3043, device='cuda:0')
final masked points tensor(5041, device='cuda:0')
before filtering torch.Size([3, 62048])
after filtering torch.Size([2, 62048])
num_ins_points_after_filtering tensor([3420,  222], device='cuda:0')
Working on scene0496_00 class window
masks_to_be_merged [[108, 110, 199, 201, 204, 206], [119, 122, 126], [133, 134, 136, 138], [137, 139], [140, 142, 145], [141, 143, 144, 146], [147, 148], [153, 154], [155, 157, 158], [163, 164], [174, 175], [179, 181, 182], [183, 184, 185], [193, 194, 195], [197, 198], [207, 208]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 18/134 [00:00<00:00, 173.16it/s][A
Calculating viewed counts for every point:  27%|██▋       | 36/134 [00:00<00:00, 162.78it/s][A
Calculating viewed counts for every point:  40%|███▉      | 53/134 [00:00<00:00, 156.49it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 69/134 [00:00<00:00, 150.40it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 87/134 [00:00<00:00, 159.08it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 104/134 [00:00<00:00, 162.07it/s][A
Calculating viewed counts for every point:  90%|█████████ | 121/134 [00:00<00:00, 158.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [03:06<02:32,  2.46s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(7168, device='cuda:0')
before filtering torch.Size([16, 192962])
after filtering torch.Size([12, 192962])
num_ins_points_after_filtering tensor([2394,  852,   23,  489,   86,  169,  110,  632,   58,   14,   60,  523],
       device='cuda:0')
Working on scene0500_00 class window
masks_to_be_merged [[9, 13, 14], [23, 24, 25, 26], [27, 28, 29, 30, 31, 32, 33, 34, 35], [36, 37, 38, 40, 42, 44, 46, 49, 51, 53, 55], [39, 41, 43, 45, 47, 48, 50, 52, 54, 56, 57, 58, 59], [62, 65], [66, 67, 69], [85, 86], [99, 100], [108, 123], [110, 114, 117], [111, 113], [115, 122], [126, 129], [127, 130, 131, 132, 133], [134, 135, 136, 137, 138, 139, 140, 142, 144, 147], [141, 143, 145], [149, 151], [150, 152], [153, 154, 156, 157, 159, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186], [155, 158, 171], [194, 197]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 9/219 [00:00<00:02, 88.18it/s][A
Calculating viewed counts for every point:   9%|▉         | 20/219 [00:00<00:02, 96.75it/s][A
Calculating viewed counts for every point:  14%|█▎        | 30/219 [00:00<00:01, 96.04it/s][A
Calculating viewed counts for every point:  19%|█▊        | 41/219 [00:00<00:01, 100.34it/s][A
Calculating viewed counts for every point:  24%|██▍       | 53/219 [00:00<00:01, 104.27it/s][A
Calculating viewed counts for every point:  29%|██▉       | 64/219 [00:00<00:01, 91.53it/s] [A
Calculating viewed counts for every point:  34%|███▍      | 74/219 [00:00<00:01, 88.48it/s][A
Calculating viewed counts for every point:  38%|███▊      | 84/219 [00:00<00:01, 87.97it/s][A
Calculating viewed counts for every point:  42%|████▏     | 93/219 [00:01<00:01, 87.91it/s][A
Calculating viewed counts for every point:  47%|████▋     | 102/219 [00:01<00:01, 84.42it/s][A
Calculating viewed counts for every point:  51%|█████     | 111/219 [00:01<00:01, 84.44it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 122/219 [00:01<00:01, 87.55it/s][A
Calculating viewed counts for every point:  60%|██████    | 132/219 [00:01<00:00, 89.32it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 141/219 [00:01<00:00, 85.67it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 151/219 [00:01<00:00, 86.18it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 161/219 [00:01<00:00, 89.46it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 171/219 [00:01<00:00, 91.30it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 181/219 [00:02<00:00, 90.96it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 191/219 [00:02<00:00, 85.98it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 200/219 [00:02<00:00, 83.55it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 209/219 [00:02<00:00, 81.08it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 218/219 [00:02<00:00, 80.25it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [03:14<04:05,  4.02s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(22789, device='cuda:0')
before filtering torch.Size([22, 396942])
after filtering torch.Size([12, 396942])
num_ins_points_after_filtering tensor([1901, 2041, 1166, 1006,  375,  430, 1724, 2668, 6746,  778,  577, 2053],
       device='cuda:0')
Working on scene0518_00 class window
masks_to_be_merged [[0, 2, 4, 6, 10, 12, 14, 16, 18, 20, 22, 24, 26, 29, 31, 33, 35, 36, 39, 41, 42, 44, 46, 47, 48, 49], [1, 3], [13, 15, 17, 19, 21, 23, 25, 28, 30, 32, 34, 37, 38, 40, 43, 45, 79, 80, 81], [27, 51, 55, 58], [52, 54, 60], [53, 56, 57, 59, 61, 62, 63, 64, 65], [66, 67, 68], [72, 73, 74, 76, 77], [82, 83]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/147 [00:00<00:00, 227.19it/s][A
Calculating viewed counts for every point:  33%|███▎      | 48/147 [00:00<00:00, 236.09it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 76/147 [00:00<00:00, 254.53it/s][A
Calculating viewed counts for every point:  71%|███████   | 104/147 [00:00<00:00, 261.80it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 131/147 [00:00<00:00, 255.19it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [03:15<03:19,  3.32s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(6406, device='cuda:0')
before filtering torch.Size([9, 130180])
after filtering torch.Size([7, 130180])
num_ins_points_after_filtering tensor([ 936,  931,  254, 1048, 1583, 1077,  534], device='cuda:0')
Working on scene0527_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 36, 37], [9, 10, 11, 35], [12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 22, 23], [24, 25, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 39/68 [00:00<00:00, 381.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [03:16<02:26,  2.48s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(8624, device='cuda:0')
before filtering torch.Size([5, 65893])
after filtering torch.Size([2, 65893])
num_ins_points_after_filtering tensor([1895, 3178], device='cuda:0')
Working on scene0535_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 44, 45], [6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 20, 23, 24, 25, 30], [19, 21, 22, 26, 27, 29, 31, 32, 35, 40, 41]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 22/69 [00:00<00:00, 214.71it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 45/69 [00:00<00:00, 220.57it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 68/69 [00:00<00:00, 224.19it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [03:17<01:57,  2.03s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(4727, device='cuda:0')
before filtering torch.Size([3, 90268])
after filtering torch.Size([3, 90268])
num_ins_points_after_filtering tensor([  85, 2853, 1531], device='cuda:0')
Working on scene0549_00 class window
masks_to_be_merged [[0, 1], [2, 3], [7, 8], [11, 14], [12, 13], [17, 18]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 23/83 [00:00<00:00, 227.25it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 46/83 [00:00<00:00, 218.29it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 70/83 [00:00<00:00, 227.73it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [03:18<01:42,  1.81s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(9812, device='cuda:0')
before filtering torch.Size([6, 161973])
after filtering torch.Size([6, 161973])
num_ins_points_after_filtering tensor([   8,   45,  769,  278,  254, 4219], device='cuda:0')
Working on scene0550_00 class window
masks_to_be_merged [[0, 98, 99, 100, 103, 105, 108, 109, 111, 116, 117, 118, 119, 120], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 113, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 169], [43, 189, 190, 191, 192, 193, 195, 197, 198, 199], [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], [71, 74], [90, 91], [92, 93, 94], [96, 97], [101, 102, 104], [110, 112], [163, 164, 165, 166, 172], [170, 171], [173, 174], [175, 176, 177, 178, 179, 180, 183, 184], [194, 196, 200], [201, 202, 212, 213, 214], [206, 209], [208, 210, 211], [215, 216, 217], [218, 219, 220, 221, 222, 223], [224, 226], [225, 227]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 26/392 [00:00<00:01, 259.71it/s][A
Calculating viewed counts for every point:  14%|█▍        | 54/392 [00:00<00:01, 268.48it/s][A
Calculating viewed counts for every point:  22%|██▏       | 86/392 [00:00<00:01, 291.18it/s][A
Calculating viewed counts for every point:  30%|██▉       | 116/392 [00:00<00:00, 276.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 144/392 [00:00<00:00, 270.82it/s][A
Calculating viewed counts for every point:  44%|████▍     | 173/392 [00:00<00:00, 274.68it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 201/392 [00:00<00:00, 262.07it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 228/392 [00:00<00:00, 255.97it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 255/392 [00:00<00:00, 258.81it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 281/392 [00:01<00:00, 257.24it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 309/392 [00:01<00:00, 262.02it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 337/392 [00:01<00:00, 264.69it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 364/392 [00:01<00:00, 263.61it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 391/392 [00:01<00:00, 259.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [03:24<02:45,  2.95s/it]detected_ratio_thres_value tensor(0.1935, device='cuda:0')
final masked points tensor(18415, device='cuda:0')
before filtering torch.Size([22, 127677])
after filtering torch.Size([8, 127677])
num_ins_points_after_filtering tensor([6269, 2973,   12,  138, 2782,   97,  948,  131], device='cuda:0')
Working on scene0552_00 class window
masks_to_be_merged [[1, 2, 3, 5, 27, 28], [4, 6, 7, 8, 9, 31, 32, 33, 34, 35], [10, 11, 12, 13, 14, 15, 16, 17, 36, 37, 38, 39, 40, 41], [19, 20], [22, 23, 25]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 25/89 [00:00<00:00, 249.38it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 51/89 [00:00<00:00, 254.20it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 79/89 [00:00<00:00, 265.18it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [03:25<02:07,  2.31s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(2370, device='cuda:0')
before filtering torch.Size([5, 123103])
after filtering torch.Size([2, 123103])
num_ins_points_after_filtering tensor([  81, 2084], device='cuda:0')
Working on scene0553_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 90, 91, 92, 93, 94, 100, 101], [11, 13], [27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 44], [37, 40, 41, 45, 46], [54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 35/151 [00:00<00:00, 347.14it/s][A
Calculating viewed counts for every point:  46%|████▋     | 70/151 [00:00<00:00, 325.81it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 103/151 [00:00<00:00, 317.39it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 135/151 [00:00<00:00, 302.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [03:27<02:01,  2.25s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(3480, device='cuda:0')
before filtering torch.Size([5, 62854])
after filtering torch.Size([3, 62854])
num_ins_points_after_filtering tensor([1731,  999,  612], device='cuda:0')
Working on scene0558_00 class window
masks_to_be_merged [[0, 1, 21], [3, 5], [4, 22], [7, 8, 9, 11], [13, 14, 15], [16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  46%|████▋     | 33/71 [00:00<00:00, 324.44it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 66/71 [00:00<00:00, 314.19it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [03:27<01:31,  1.72s/it]detected_ratio_thres_value tensor(0.1765, device='cuda:0')
final masked points tensor(9262, device='cuda:0')
before filtering torch.Size([6, 92953])
after filtering torch.Size([6, 92953])
num_ins_points_after_filtering tensor([ 902,   95,  425, 1010, 3638, 1279], device='cuda:0')
Working on scene0559_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4], [15, 16, 17], [18, 20, 21, 23]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 30/58 [00:00<00:00, 299.58it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [03:28<01:10,  1.35s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(10504, device='cuda:0')
before filtering torch.Size([3, 89796])
after filtering torch.Size([2, 89796])
num_ins_points_after_filtering tensor([8432, 1392], device='cuda:0')
Working on scene0565_00 class window
masks_to_be_merged [[0, 2, 4, 6], [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [22, 23], [24, 25]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 19/107 [00:00<00:00, 183.32it/s][A
Calculating viewed counts for every point:  36%|███▌      | 38/107 [00:00<00:00, 184.61it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 61/107 [00:00<00:00, 204.03it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 82/107 [00:00<00:00, 198.48it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 102/107 [00:00<00:00, 192.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [03:29<01:01,  1.20s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(4390, device='cuda:0')
before filtering torch.Size([4, 167558])
after filtering torch.Size([2, 167558])
num_ins_points_after_filtering tensor([2908, 1419], device='cuda:0')
Working on scene0568_00 class window
masks_to_be_merged [[4, 5]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/166 [00:00<00:01, 127.31it/s][A
Calculating viewed counts for every point:  16%|█▌        | 26/166 [00:00<00:01, 125.19it/s][A
Calculating viewed counts for every point:  23%|██▎       | 39/166 [00:00<00:01, 126.23it/s][A
Calculating viewed counts for every point:  31%|███▏      | 52/166 [00:00<00:00, 123.44it/s][A
Calculating viewed counts for every point:  39%|███▉      | 65/166 [00:00<00:00, 124.54it/s][A
Calculating viewed counts for every point:  48%|████▊     | 79/166 [00:00<00:00, 129.16it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 92/166 [00:00<00:00, 128.56it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 105/166 [00:00<00:00, 124.76it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 119/166 [00:00<00:00, 128.56it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 132/166 [00:01<00:00, 123.23it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 145/166 [00:01<00:00, 125.02it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 159/166 [00:01<00:00, 127.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [03:30<01:03,  1.27s/it]detected_ratio_thres_value tensor(0.0556, device='cuda:0')
final masked points tensor(10917, device='cuda:0')
before filtering torch.Size([1, 232453])
after filtering torch.Size([1, 232453])
num_ins_points_after_filtering tensor([10545], device='cuda:0')
Working on scene0574_00 class window
masks_to_be_merged [[0, 6, 7], [1, 2, 3, 4, 5], [9, 10, 11, 12, 14, 18], [15, 16, 17], [21, 22, 23, 24, 25, 26, 27], [31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 28/103 [00:00<00:00, 279.50it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 61/103 [00:00<00:00, 303.46it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 92/103 [00:00<00:00, 280.24it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [03:31<00:55,  1.14s/it]detected_ratio_thres_value tensor(0.2381, device='cuda:0')
final masked points tensor(5826, device='cuda:0')
before filtering torch.Size([6, 55521])
after filtering torch.Size([4, 55521])
num_ins_points_after_filtering tensor([2262,  363, 1035,  662], device='cuda:0')
Working on scene0575_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 244, 245, 246, 247, 248, 249, 250, 251, 252], [11, 12], [13, 14], [15, 16, 17, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 148, 150, 181, 223, 225, 228, 230, 232], [18, 19], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89], [92, 93, 94], [152, 153, 154, 155, 156, 157, 158, 159, 237, 238, 239, 240], [161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 179, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 195, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 215, 217, 226, 227, 229, 231, 233, 235], [178, 180, 216], [184, 198], [221, 222], [242, 243]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 18/294 [00:00<00:01, 177.40it/s][A
Calculating viewed counts for every point:  14%|█▎        | 40/294 [00:00<00:01, 198.38it/s][A
Calculating viewed counts for every point:  21%|██        | 61/294 [00:00<00:01, 203.32it/s][A
Calculating viewed counts for every point:  28%|██▊       | 82/294 [00:00<00:01, 205.59it/s][A
Calculating viewed counts for every point:  36%|███▌      | 106/294 [00:00<00:00, 214.08it/s][A
Calculating viewed counts for every point:  44%|████▎     | 128/294 [00:00<00:00, 201.02it/s][A
Calculating viewed counts for every point:  51%|█████     | 150/294 [00:00<00:00, 206.48it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 172/294 [00:00<00:00, 208.87it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 193/294 [00:00<00:00, 194.40it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 213/294 [00:01<00:00, 178.95it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 232/294 [00:01<00:00, 169.13it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 253/294 [00:01<00:00, 177.91it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 273/294 [00:01<00:00, 183.45it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 292/294 [00:01<00:00, 179.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [03:37<02:14,  2.81s/it]detected_ratio_thres_value tensor(0.2292, device='cuda:0')
final masked points tensor(31909, device='cuda:0')
before filtering torch.Size([13, 194207])
after filtering torch.Size([5, 194207])
num_ins_points_after_filtering tensor([15976,  4764,    35,  2790,  6269], device='cuda:0')
Working on scene0578_00 class window
masks_to_be_merged [[0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68], [1, 5, 28, 29, 31, 36, 38, 42, 45, 47, 51, 53, 93, 94, 95, 97], [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 63, 64, 69, 70, 71, 72, 73], [25, 43], [26, 27, 30, 32, 33, 34, 35, 37, 88, 89, 90, 91, 92], [80, 81, 82, 83, 84], [86, 87], [96, 98]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 25/149 [00:00<00:00, 247.49it/s][A
Calculating viewed counts for every point:  34%|███▎      | 50/149 [00:00<00:00, 237.91it/s][A
Calculating viewed counts for every point:  51%|█████     | 76/149 [00:00<00:00, 243.74it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 101/149 [00:00<00:00, 237.58it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 125/149 [00:00<00:00, 234.68it/s][A
Calculating viewed counts for every point: 100%|██████████| 149/149 [00:00<00:00, 229.95it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [03:39<01:59,  2.55s/it]detected_ratio_thres_value tensor(0.2093, device='cuda:0')
final masked points tensor(12156, device='cuda:0')
before filtering torch.Size([8, 147607])
after filtering torch.Size([5, 147607])
num_ins_points_after_filtering tensor([3267, 1791, 3941, 1552,  228], device='cuda:0')
Working on scene0580_00 class window
masks_to_be_merged [[0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 117, 118, 119, 120, 121, 122, 123], [1, 2, 3, 8, 36, 53, 88, 89, 90, 91, 92], [4, 5, 6, 7, 43, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 69], [23, 24, 25, 26, 27], [28, 29, 30, 31, 33, 40], [38, 39], [42, 50], [47, 48, 49], [67, 68], [93, 95, 98, 101, 107, 109, 111, 114], [94, 97, 99, 100, 102, 103, 104, 105, 106, 108, 110], [96, 112, 113, 115, 116], [124, 125, 126, 127]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 23/477 [00:00<00:02, 223.07it/s][A
Calculating viewed counts for every point:  10%|▉         | 46/477 [00:00<00:02, 213.40it/s][A
Calculating viewed counts for every point:  15%|█▌        | 73/477 [00:00<00:01, 235.24it/s][A
Calculating viewed counts for every point:  20%|██        | 97/477 [00:00<00:01, 232.56it/s][A
Calculating viewed counts for every point:  25%|██▌       | 121/477 [00:00<00:01, 233.78it/s][A
Calculating viewed counts for every point:  30%|███       | 145/477 [00:00<00:01, 230.55it/s][A
Calculating viewed counts for every point:  35%|███▌      | 169/477 [00:00<00:01, 233.28it/s][A
Calculating viewed counts for every point:  40%|████      | 193/477 [00:00<00:01, 231.75it/s][A
Calculating viewed counts for every point:  45%|████▌     | 217/477 [00:00<00:01, 224.91it/s][A
Calculating viewed counts for every point:  51%|█████     | 242/477 [00:01<00:01, 231.60it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 266/477 [00:01<00:00, 223.35it/s][A
Calculating viewed counts for every point:  61%|██████    | 289/477 [00:01<00:00, 220.80it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 315/477 [00:01<00:00, 229.43it/s][A
Calculating viewed counts for every point:  71%|███████   | 339/477 [00:01<00:00, 220.98it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 362/477 [00:01<00:00, 219.52it/s][A
Calculating viewed counts for every point:  81%|████████  | 387/477 [00:01<00:00, 227.18it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 410/477 [00:01<00:00, 216.95it/s][A
Calculating viewed counts for every point:  91%|█████████ | 432/477 [00:01<00:00, 210.44it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 459/477 [00:02<00:00, 226.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [03:44<02:20,  3.06s/it]detected_ratio_thres_value tensor(0.1087, device='cuda:0')
final masked points tensor(21920, device='cuda:0')
before filtering torch.Size([14, 158047])
after filtering torch.Size([9, 158047])
num_ins_points_after_filtering tensor([9042, 5008, 2107,  554,   27, 2090,  111, 1705,   32], device='cuda:0')
Working on scene0583_00 class window
masks_to_be_merged [[0, 1, 39, 40, 163, 164, 165, 166], [2, 4, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 23, 25, 26, 27, 29, 31, 33, 34, 35, 38, 68, 70, 72, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 167, 168, 171], [3, 6, 8, 10, 12, 14, 16, 18, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 143, 169, 170], [22, 24, 28, 30, 32, 43, 49, 50], [36, 37], [97, 98, 99], [100, 101], [125, 126], [134, 135], [138, 139, 140], [151, 152], [153, 154, 155]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/198 [00:00<00:00, 238.25it/s][A
Calculating viewed counts for every point:  26%|██▌       | 51/198 [00:00<00:00, 255.76it/s][A
Calculating viewed counts for every point:  39%|███▉      | 78/198 [00:00<00:00, 259.45it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 105/198 [00:00<00:00, 263.04it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 132/198 [00:00<00:00, 251.48it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 158/198 [00:00<00:00, 246.81it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 183/198 [00:00<00:00, 240.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [03:48<02:29,  3.33s/it]detected_ratio_thres_value tensor(0.2703, device='cuda:0')
final masked points tensor(9324, device='cuda:0')
before filtering torch.Size([12, 146782])
after filtering torch.Size([2, 146782])
num_ins_points_after_filtering tensor([5075, 3532], device='cuda:0')
Working on scene0591_00 class window
masks_to_be_merged [[1, 27], [7, 20, 21, 23, 25, 26, 80, 83, 84], [28, 29], [30, 32, 34, 36, 38, 40], [41, 50], [43, 44, 53], [51, 52], [54, 55, 85], [61, 62, 74, 76], [63, 65, 66], [69, 70]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 16/173 [00:00<00:00, 157.05it/s][A
Calculating viewed counts for every point:  18%|█▊        | 32/173 [00:00<00:00, 149.36it/s][A
Calculating viewed counts for every point:  28%|██▊       | 49/173 [00:00<00:00, 158.29it/s][A
Calculating viewed counts for every point:  38%|███▊      | 65/173 [00:00<00:00, 148.16it/s][A
Calculating viewed counts for every point:  46%|████▌     | 80/173 [00:00<00:00, 144.51it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 97/173 [00:00<00:00, 152.54it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 113/173 [00:00<00:00, 148.81it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 129/173 [00:00<00:00, 151.23it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 147/173 [00:00<00:00, 156.76it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 163/173 [00:01<00:00, 154.07it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [03:50<02:11,  2.98s/it]detected_ratio_thres_value tensor(0.0952, device='cuda:0')
final masked points tensor(5299, device='cuda:0')
before filtering torch.Size([11, 175600])
after filtering torch.Size([7, 175600])
num_ins_points_after_filtering tensor([1848,   86,  584, 1235,  435,   26,   38], device='cuda:0')
Working on scene0593_00 class window
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 129, 130, 131, 132], [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 26, 27, 30, 91, 94, 98, 100, 101, 121, 123, 125, 126, 127, 128], [21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 92, 93, 97, 99, 102, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124], [40, 76, 77, 78], [60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 80, 84, 86], [82, 83, 85], [103, 105]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/230 [00:00<00:01, 155.60it/s][A
Calculating viewed counts for every point:  16%|█▌        | 37/230 [00:00<00:01, 185.81it/s][A
Calculating viewed counts for every point:  24%|██▍       | 56/230 [00:00<00:00, 184.31it/s][A
Calculating viewed counts for every point:  33%|███▎      | 75/230 [00:00<00:00, 167.68it/s][A
Calculating viewed counts for every point:  40%|████      | 92/230 [00:00<00:00, 161.19it/s][A
Calculating viewed counts for every point:  49%|████▉     | 113/230 [00:00<00:00, 175.09it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 131/230 [00:00<00:00, 173.61it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 149/230 [00:00<00:00, 169.69it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 168/230 [00:00<00:00, 174.25it/s][A
Calculating viewed counts for every point:  81%|████████  | 186/230 [00:01<00:00, 170.71it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 204/230 [00:01<00:00, 169.14it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 221/230 [00:01<00:00, 164.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [03:53<02:13,  3.10s/it]detected_ratio_thres_value tensor(0.3103, device='cuda:0')
final masked points tensor(39889, device='cuda:0')
before filtering torch.Size([7, 211902])
after filtering torch.Size([5, 211902])
num_ins_points_after_filtering tensor([28769,  4208,  5848,   442,   573], device='cuda:0')
Working on scene0595_00 class window
masks_to_be_merged [[0, 31], [3, 5, 7, 10, 12, 13, 15, 23, 24], [4, 8, 11, 16, 20, 22], [6, 9, 14], [17, 21]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  30%|███       | 23/76 [00:00<00:00, 228.53it/s][A
Calculating viewed counts for every point:  61%|██████    | 46/76 [00:00<00:00, 219.19it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 72/76 [00:00<00:00, 237.13it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [03:54<01:38,  2.35s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(2264, device='cuda:0')
before filtering torch.Size([5, 142330])
after filtering torch.Size([4, 142330])
num_ins_points_after_filtering tensor([ 70,  50,  33, 635], device='cuda:0')
Working on scene0598_00 class window
masks_to_be_merged [[7, 8, 9, 10, 11, 12, 13, 14], [16, 19, 20], [17, 18], [23, 24, 29, 36, 37, 38, 41, 43, 44, 46], [25, 26, 27, 28, 30, 31, 32, 33, 34, 35], [39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 23/101 [00:00<00:00, 223.42it/s][A
Calculating viewed counts for every point:  46%|████▌     | 46/101 [00:00<00:00, 223.76it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 72/101 [00:00<00:00, 237.54it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 96/101 [00:00<00:00, 230.82it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [03:55<01:21,  1.99s/it]detected_ratio_thres_value tensor(0.1724, device='cuda:0')
final masked points tensor(71352, device='cuda:0')
before filtering torch.Size([6, 145562])
after filtering torch.Size([5, 145562])
num_ins_points_after_filtering tensor([18966,  1532,  5433, 26793, 17914], device='cuda:0')
Working on scene0599_00 class window
masks_to_be_merged [[0, 3, 5, 7, 22, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 196, 197, 198, 199, 200, 203, 204, 206, 208], [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 150, 151, 152, 153, 154, 155, 156, 157, 158], [39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], [62, 64], [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 99, 101, 103, 105, 108, 112, 113, 121], [80, 82, 84, 98, 100, 102, 104, 106, 107, 109], [119, 120, 122, 123, 124, 125, 128, 130, 132], [180, 181]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 27/189 [00:00<00:00, 261.78it/s][A
Calculating viewed counts for every point:  29%|██▊       | 54/189 [00:00<00:00, 249.18it/s][A
Calculating viewed counts for every point:  44%|████▍     | 84/189 [00:00<00:00, 267.30it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 111/189 [00:00<00:00, 260.53it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 139/189 [00:00<00:00, 266.46it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 166/189 [00:00<00:00, 252.52it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [04:00<02:01,  3.04s/it]detected_ratio_thres_value tensor(0.3226, device='cuda:0')
final masked points tensor(20500, device='cuda:0')
before filtering torch.Size([8, 141933])
after filtering torch.Size([6, 141933])
num_ins_points_after_filtering tensor([2931, 2092, 5462, 3677, 1323, 1879], device='cuda:0')
Working on scene0606_00 class window
masks_to_be_merged [[0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], [5, 6], [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], [58, 59, 60, 61, 74], [64, 65], [67, 68], [70, 71, 103], [77, 78, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], [80, 82], [81, 83, 84, 85], [86, 87, 88], [111, 112], [113, 114, 115], [141, 142], [143, 144]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 23/250 [00:00<00:01, 226.51it/s][A
Calculating viewed counts for every point:  20%|█▉        | 49/250 [00:00<00:00, 243.59it/s][A
Calculating viewed counts for every point:  30%|██▉       | 74/250 [00:00<00:00, 244.61it/s][A
Calculating viewed counts for every point:  40%|███▉      | 99/250 [00:00<00:00, 224.52it/s][A
Calculating viewed counts for every point:  49%|████▉     | 122/250 [00:00<00:00, 222.18it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 145/250 [00:00<00:00, 215.06it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 167/250 [00:00<00:00, 209.81it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 190/250 [00:00<00:00, 213.59it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 212/250 [00:00<00:00, 211.49it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 236/250 [00:01<00:00, 216.73it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [04:05<02:11,  3.37s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(12200, device='cuda:0')
before filtering torch.Size([15, 164401])
after filtering torch.Size([4, 164401])
num_ins_points_after_filtering tensor([2633, 1039, 8183,  154], device='cuda:0')
Working on scene0607_00 class window
masks_to_be_merged [[12, 15], [18, 19], [20, 23, 24, 25, 28, 34, 36, 38, 40, 42, 44], [21, 22, 27, 37, 39, 41, 43, 45, 46], [50, 51], [52, 53]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 26/100 [00:00<00:00, 254.24it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 52/100 [00:00<00:00, 240.43it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 83/100 [00:00<00:00, 269.57it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [04:06<01:42,  2.70s/it]detected_ratio_thres_value tensor(0.1724, device='cuda:0')
final masked points tensor(1209, device='cuda:0')
before filtering torch.Size([6, 113156])
after filtering torch.Size([5, 113156])
num_ins_points_after_filtering tensor([ 33, 446, 276,  24,  46], device='cuda:0')
Working on scene0608_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 109, 110], [50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66], [57, 58], [59, 73, 74, 75, 76, 77, 78], [68, 69, 70, 71], [80, 81, 82], [83, 84], [91, 93], [101, 103, 116, 117], [104, 105, 118], [113, 114, 115, 127, 128], [122, 123, 124, 125]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 23/339 [00:00<00:01, 229.92it/s][A
Calculating viewed counts for every point:  14%|█▎        | 46/339 [00:00<00:01, 210.94it/s][A
Calculating viewed counts for every point:  20%|██        | 68/339 [00:00<00:01, 204.69it/s][A
Calculating viewed counts for every point:  27%|██▋       | 91/339 [00:00<00:01, 213.44it/s][A
Calculating viewed counts for every point:  34%|███▎      | 114/339 [00:00<00:01, 218.88it/s][A
Calculating viewed counts for every point:  40%|████      | 136/339 [00:00<00:00, 208.10it/s][A
Calculating viewed counts for every point:  46%|████▋     | 157/339 [00:00<00:00, 200.03it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 179/339 [00:00<00:00, 205.82it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 200/339 [00:00<00:00, 195.46it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 220/339 [00:01<00:00, 190.78it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 242/339 [00:01<00:00, 198.83it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 264/339 [00:01<00:00, 204.93it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 286/339 [00:01<00:00, 208.17it/s][A
Calculating viewed counts for every point:  91%|█████████ | 307/339 [00:01<00:00, 201.03it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 329/339 [00:01<00:00, 205.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [04:10<01:53,  3.07s/it]detected_ratio_thres_value tensor(0.1463, device='cuda:0')
final masked points tensor(7089, device='cuda:0')
before filtering torch.Size([12, 186579])
after filtering torch.Size([6, 186579])
num_ins_points_after_filtering tensor([3342, 1573, 1379,   19,  255,   65], device='cuda:0')
Working on scene0609_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0616_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], [7, 8, 10, 11], [9, 12, 14, 15, 16, 17, 18, 33, 90], [20, 21, 22, 24, 25], [27, 28, 29, 30, 31, 32], [36, 37, 38, 39], [50, 51], [56, 57, 58, 59, 60, 62], [64, 65]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 11/304 [00:00<00:02, 101.06it/s][A
Calculating viewed counts for every point:   8%|▊         | 23/304 [00:00<00:02, 111.31it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/304 [00:00<00:02, 110.67it/s][A
Calculating viewed counts for every point:  15%|█▌        | 47/304 [00:00<00:02, 111.15it/s][A
Calculating viewed counts for every point:  19%|█▉        | 59/304 [00:00<00:02, 112.64it/s][A
Calculating viewed counts for every point:  23%|██▎       | 71/304 [00:00<00:02, 106.76it/s][A
Calculating viewed counts for every point:  27%|██▋       | 82/304 [00:00<00:02, 105.49it/s][A
Calculating viewed counts for every point:  31%|███▏      | 95/304 [00:00<00:01, 112.68it/s][A
Calculating viewed counts for every point:  35%|███▌      | 107/304 [00:00<00:01, 110.69it/s][A
Calculating viewed counts for every point:  39%|███▉      | 119/304 [00:01<00:01, 104.55it/s][A
Calculating viewed counts for every point:  43%|████▎     | 132/304 [00:01<00:01, 110.72it/s][A
Calculating viewed counts for every point:  47%|████▋     | 144/304 [00:01<00:01, 110.41it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 156/304 [00:01<00:01, 110.91it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 169/304 [00:01<00:01, 114.44it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 181/304 [00:01<00:01, 113.58it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 193/304 [00:01<00:00, 113.76it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 205/304 [00:01<00:00, 113.76it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 217/304 [00:01<00:00, 109.92it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 229/304 [00:02<00:00, 111.45it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 243/304 [00:02<00:00, 115.91it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 255/304 [00:02<00:00, 115.85it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 267/304 [00:02<00:00, 113.06it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 279/304 [00:02<00:00, 112.76it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 291/304 [00:02<00:00, 111.71it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 303/304 [00:02<00:00, 106.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [04:15<01:37,  2.78s/it]detected_ratio_thres_value tensor(0.2333, device='cuda:0')
final masked points tensor(12096, device='cuda:0')
before filtering torch.Size([9, 310248])
after filtering torch.Size([4, 310248])
num_ins_points_after_filtering tensor([7822,  382,  349, 1902], device='cuda:0')
Working on scene0618_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28], [14, 20, 21], [15, 16, 17, 18, 19, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 14/90 [00:00<00:00, 131.80it/s][A
Calculating viewed counts for every point:  31%|███       | 28/90 [00:00<00:00, 121.74it/s][A
Calculating viewed counts for every point:  46%|████▌     | 41/90 [00:00<00:00, 118.79it/s][A
Calculating viewed counts for every point:  60%|██████    | 54/90 [00:00<00:00, 119.53it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 66/90 [00:00<00:00, 117.21it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 79/90 [00:00<00:00, 118.38it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [04:16<01:22,  2.42s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(2363, device='cuda:0')
before filtering torch.Size([3, 232740])
after filtering torch.Size([2, 232740])
num_ins_points_after_filtering tensor([ 693, 1650], device='cuda:0')
Working on scene0621_00 class window
masks_to_be_merged [[0, 1, 2, 3, 5, 7, 8, 10, 75, 76, 78, 79, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102], [4, 99], [6, 9, 11, 80, 83, 84], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 105, 106, 107], [26, 27, 28, 30], [29, 66, 67], [33, 54], [108, 109]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 17/268 [00:00<00:01, 168.02it/s][A
Calculating viewed counts for every point:  13%|█▎        | 34/268 [00:00<00:01, 161.60it/s][A
Calculating viewed counts for every point:  19%|█▉        | 51/268 [00:00<00:01, 162.61it/s][A
Calculating viewed counts for every point:  26%|██▌       | 69/268 [00:00<00:01, 166.25it/s][A
Calculating viewed counts for every point:  32%|███▏      | 86/268 [00:00<00:01, 158.40it/s][A
Calculating viewed counts for every point:  38%|███▊      | 103/268 [00:00<00:01, 161.43it/s][A
Calculating viewed counts for every point:  46%|████▌     | 122/268 [00:00<00:00, 167.91it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 141/268 [00:00<00:00, 174.19it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 159/268 [00:00<00:00, 171.60it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 177/268 [00:01<00:00, 166.73it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 195/268 [00:01<00:00, 168.04it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 212/268 [00:01<00:00, 163.28it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 229/268 [00:01<00:00, 161.62it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 246/268 [00:01<00:00, 156.54it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 263/268 [00:01<00:00, 158.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [04:21<01:40,  3.05s/it]detected_ratio_thres_value tensor(0.3143, device='cuda:0')
final masked points tensor(7942, device='cuda:0')
before filtering torch.Size([8, 250821])
after filtering torch.Size([3, 250821])
num_ins_points_after_filtering tensor([1129, 3787, 2680], device='cuda:0')
Working on scene0629_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 120, 125], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 70, 71, 72, 73], [15, 18, 19, 20, 74, 75, 82, 83, 84, 85, 86, 87], [24, 25], [27, 30, 32, 33, 35, 38, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105], [29, 100], [31, 101, 103, 106, 107], [37, 39, 40, 41, 42, 43, 44, 45, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124], [47, 117, 118, 119], [76, 77, 78, 79, 80, 81]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 17/275 [00:00<00:01, 167.70it/s][A
Calculating viewed counts for every point:  12%|█▏        | 34/275 [00:00<00:01, 158.98it/s][A
Calculating viewed counts for every point:  19%|█▉        | 52/275 [00:00<00:01, 164.61it/s][A
Calculating viewed counts for every point:  25%|██▌       | 70/275 [00:00<00:01, 167.97it/s][A
Calculating viewed counts for every point:  32%|███▏      | 87/275 [00:00<00:01, 167.44it/s][A
Calculating viewed counts for every point:  38%|███▊      | 104/275 [00:00<00:01, 155.56it/s][A
Calculating viewed counts for every point:  44%|████▎     | 120/275 [00:00<00:00, 156.67it/s][A
Calculating viewed counts for every point:  49%|████▉     | 136/275 [00:00<00:00, 148.77it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 151/275 [00:00<00:00, 147.07it/s][A
Calculating viewed counts for every point:  61%|██████    | 167/275 [00:01<00:00, 148.28it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 183/275 [00:01<00:00, 149.45it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 198/275 [00:01<00:00, 148.51it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 213/275 [00:01<00:00, 148.07it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 229/275 [00:01<00:00, 150.60it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 245/275 [00:01<00:00, 152.34it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 261/275 [00:01<00:00, 153.89it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [04:25<01:49,  3.43s/it]detected_ratio_thres_value tensor(0.2093, device='cuda:0')
final masked points tensor(14238, device='cuda:0')
before filtering torch.Size([10, 255083])
after filtering torch.Size([5, 255083])
num_ins_points_after_filtering tensor([ 534,  290, 1594, 8031,  972], device='cuda:0')
Working on scene0633_00 class window
masks_to_be_merged [[1, 2], [5, 10, 13], [6, 7, 9, 11, 12, 14, 15], [16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 31/160 [00:00<00:00, 309.45it/s][A
Calculating viewed counts for every point:  39%|███▉      | 62/160 [00:00<00:00, 305.19it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 93/160 [00:00<00:00, 299.42it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 126/160 [00:00<00:00, 308.32it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 157/160 [00:00<00:00, 302.46it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [04:26<01:24,  2.72s/it]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(5696, device='cuda:0')
before filtering torch.Size([4, 101007])
after filtering torch.Size([4, 101007])
num_ins_points_after_filtering tensor([ 355,  839,  397, 3397], device='cuda:0')
Working on scene0643_00 class window
masks_to_be_merged [[2, 3], [5, 6], [9, 10, 11, 17, 18], [12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/194 [00:00<00:00, 183.25it/s][A
Calculating viewed counts for every point:  20%|██        | 39/194 [00:00<00:00, 188.55it/s][A
Calculating viewed counts for every point:  31%|███▏      | 61/194 [00:00<00:00, 199.97it/s][A
Calculating viewed counts for every point:  42%|████▏     | 82/194 [00:00<00:00, 184.12it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 101/194 [00:00<00:00, 180.86it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 120/194 [00:00<00:00, 175.94it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 141/194 [00:00<00:00, 184.13it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 160/194 [00:00<00:00, 176.75it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 178/194 [00:00<00:00, 173.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [04:28<01:12,  2.41s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2438, device='cuda:0')
before filtering torch.Size([4, 167360])
after filtering torch.Size([4, 167360])
num_ins_points_after_filtering tensor([365, 354, 266, 989], device='cuda:0')
Working on scene0644_00 class window
masks_to_be_merged [[14, 15, 16], [19, 20], [25, 26, 27, 28, 29], [30, 31, 32, 33, 34, 35, 36, 37, 38], [50, 51]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/201 [00:00<00:01, 115.52it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/201 [00:00<00:01, 113.81it/s][A
Calculating viewed counts for every point:  18%|█▊        | 36/201 [00:00<00:01, 109.91it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/201 [00:00<00:01, 108.76it/s][A
Calculating viewed counts for every point:  30%|██▉       | 60/201 [00:00<00:01, 109.64it/s][A
Calculating viewed counts for every point:  35%|███▌      | 71/201 [00:00<00:01, 109.58it/s][A
Calculating viewed counts for every point:  41%|████▏     | 83/201 [00:00<00:01, 111.23it/s][A
Calculating viewed counts for every point:  47%|████▋     | 95/201 [00:00<00:00, 109.31it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 106/201 [00:00<00:00, 108.83it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 118/201 [00:01<00:00, 111.20it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 130/201 [00:01<00:00, 111.58it/s][A
Calculating viewed counts for every point:  71%|███████   | 142/201 [00:01<00:00, 109.23it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 154/201 [00:01<00:00, 110.22it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 166/201 [00:01<00:00, 111.45it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 178/201 [00:01<00:00, 112.19it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 190/201 [00:01<00:00, 109.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [04:31<01:21,  2.80s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(3596, device='cuda:0')
before filtering torch.Size([5, 299472])
after filtering torch.Size([3, 299472])
num_ins_points_after_filtering tensor([ 413,  151, 2116], device='cuda:0')
Working on scene0645_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 159, 160, 161, 162, 163], [7, 8, 22], [9, 17, 18, 20, 21, 24], [10, 11, 14, 15, 16, 19], [25, 26, 27, 30, 32, 33, 36, 42, 44, 49, 51, 54, 58, 63, 64], [28, 29, 31, 34, 35, 37, 40, 41, 43, 45, 46, 47, 48, 57, 59, 61, 65, 66, 67, 68, 71, 72, 73, 74], [50, 52, 53, 55, 56], [69, 70, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89], [81, 82], [83, 84, 85, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [142, 143], [152, 153, 154], [156, 157]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 105.01it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 104.97it/s][A
Calculating viewed counts for every point:   8%|▊         | 34/451 [00:00<00:03, 108.55it/s][A
Calculating viewed counts for every point:  10%|█         | 46/451 [00:00<00:03, 110.04it/s][A
Calculating viewed counts for every point:  13%|█▎        | 58/451 [00:00<00:03, 105.34it/s][A
Calculating viewed counts for every point:  16%|█▌        | 70/451 [00:00<00:03, 107.39it/s][A
Calculating viewed counts for every point:  18%|█▊        | 81/451 [00:00<00:03, 106.10it/s][A
Calculating viewed counts for every point:  20%|██        | 92/451 [00:00<00:03, 101.27it/s][A
Calculating viewed counts for every point:  23%|██▎       | 103/451 [00:00<00:03, 102.86it/s][A
Calculating viewed counts for every point:  25%|██▌       | 114/451 [00:01<00:03, 102.57it/s][A
Calculating viewed counts for every point:  28%|██▊       | 125/451 [00:01<00:03, 100.86it/s][A
Calculating viewed counts for every point:  30%|███       | 136/451 [00:01<00:03, 101.73it/s][A
Calculating viewed counts for every point:  33%|███▎      | 147/451 [00:01<00:03, 99.71it/s] [A
Calculating viewed counts for every point:  35%|███▍      | 157/451 [00:01<00:02, 99.45it/s][A
Calculating viewed counts for every point:  37%|███▋      | 167/451 [00:01<00:02, 97.03it/s][A
Calculating viewed counts for every point:  39%|███▉      | 177/451 [00:01<00:02, 95.91it/s][A
Calculating viewed counts for every point:  41%|████▏     | 187/451 [00:01<00:02, 95.24it/s][A
Calculating viewed counts for every point:  44%|████▍     | 198/451 [00:01<00:02, 96.58it/s][A
Calculating viewed counts for every point:  47%|████▋     | 210/451 [00:02<00:02, 102.24it/s][A
Calculating viewed counts for every point:  49%|████▉     | 221/451 [00:02<00:02, 102.16it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 233/451 [00:02<00:02, 104.40it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 245/451 [00:02<00:01, 106.80it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 257/451 [00:02<00:01, 108.63it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 268/451 [00:02<00:01, 103.48it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 279/451 [00:02<00:01, 96.89it/s] [A
Calculating viewed counts for every point:  64%|██████▍   | 289/451 [00:02<00:01, 97.17it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 299/451 [00:02<00:01, 96.41it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 310/451 [00:03<00:01, 99.04it/s][A
Calculating viewed counts for every point:  71%|███████   | 320/451 [00:03<00:01, 98.48it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 332/451 [00:03<00:01, 103.09it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 345/451 [00:03<00:00, 109.16it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 357/451 [00:03<00:00, 111.41it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 369/451 [00:03<00:00, 110.70it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 381/451 [00:03<00:00, 110.88it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 393/451 [00:03<00:00, 106.69it/s][A
Calculating viewed counts for every point:  90%|█████████ | 406/451 [00:03<00:00, 111.68it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 418/451 [00:04<00:00, 107.09it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 429/451 [00:04<00:00, 105.70it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 440/451 [00:04<00:00, 104.75it/s][A
Calculating viewed counts for every point: 100%|██████████| 451/451 [00:04<00:00, 101.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [04:40<02:02,  4.38s/it]detected_ratio_thres_value tensor(0.1795, device='cuda:0')
final masked points tensor(31187, device='cuda:0')
before filtering torch.Size([13, 352477])
after filtering torch.Size([11, 352477])
num_ins_points_after_filtering tensor([7708, 5722, 2631, 3602, 4939,  395, 1490, 2348,  306,  172,   23],
       device='cuda:0')
Working on scene0647_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5], [11, 12, 13, 14]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▋        | 18/110 [00:00<00:00, 178.58it/s][A
Calculating viewed counts for every point:  33%|███▎      | 36/110 [00:00<00:00, 169.82it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 57/110 [00:00<00:00, 179.08it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 75/110 [00:00<00:00, 172.23it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 95/110 [00:00<00:00, 179.11it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [04:41<01:31,  3.38s/it]detected_ratio_thres_value tensor(0.0976, device='cuda:0')
final masked points tensor(15568, device='cuda:0')
before filtering torch.Size([2, 196185])
after filtering torch.Size([2, 196185])
num_ins_points_after_filtering tensor([14360,  1109], device='cuda:0')
Working on scene0648_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [17, 18, 115, 139, 140, 141, 142, 143, 147], [19, 114], [45, 46, 48, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 89, 92], [47, 88, 90, 91], [49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], [50, 51], [52, 53], [54, 55], [111, 112, 113, 144, 145, 146]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 23/419 [00:00<00:01, 228.34it/s][A
Calculating viewed counts for every point:  11%|█         | 46/419 [00:00<00:01, 224.36it/s][A
Calculating viewed counts for every point:  17%|█▋        | 71/419 [00:00<00:01, 233.02it/s][A
Calculating viewed counts for every point:  23%|██▎       | 95/419 [00:00<00:01, 228.82it/s][A
Calculating viewed counts for every point:  28%|██▊       | 118/419 [00:00<00:01, 220.76it/s][A
Calculating viewed counts for every point:  34%|███▎      | 141/419 [00:00<00:01, 220.95it/s][A
Calculating viewed counts for every point:  39%|███▉      | 164/419 [00:00<00:01, 215.63it/s][A
Calculating viewed counts for every point:  44%|████▍     | 186/419 [00:00<00:01, 207.14it/s][A
Calculating viewed counts for every point:  50%|████▉     | 209/419 [00:00<00:00, 212.32it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 231/419 [00:01<00:00, 209.32it/s][A
Calculating viewed counts for every point:  60%|██████    | 253/419 [00:01<00:00, 211.82it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 276/419 [00:01<00:00, 214.78it/s][A
Calculating viewed counts for every point:  71%|███████   | 298/419 [00:01<00:00, 211.05it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 320/419 [00:01<00:00, 213.01it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 342/419 [00:01<00:00, 205.66it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 363/419 [00:01<00:00, 198.60it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 388/419 [00:01<00:00, 210.73it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 410/419 [00:01<00:00, 209.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [04:45<01:35,  3.68s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(10866, device='cuda:0')
before filtering torch.Size([10, 167915])
after filtering torch.Size([1, 167915])
num_ins_points_after_filtering tensor([9519], device='cuda:0')
Working on scene0651_00 class window
masks_to_be_merged [[0, 1], [3, 4]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 25/104 [00:00<00:00, 247.28it/s][A
Calculating viewed counts for every point:  48%|████▊     | 50/104 [00:00<00:00, 231.83it/s][A
Calculating viewed counts for every point:  71%|███████   | 74/104 [00:00<00:00, 228.34it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 97/104 [00:00<00:00, 214.46it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [04:46<01:08,  2.74s/it]detected_ratio_thres_value tensor(0.0588, device='cuda:0')
final masked points tensor(4448, device='cuda:0')
before filtering torch.Size([2, 88450])
after filtering torch.Size([2, 88450])
num_ins_points_after_filtering tensor([1121, 3321], device='cuda:0')
Working on scene0652_00 class window
masks_to_be_merged [[0, 1, 4, 6, 7, 8, 31, 33, 41, 48, 52, 57, 64, 68, 72, 74, 76, 78, 79, 80, 82, 109, 112], [2, 3, 5, 9, 32, 58, 60, 71, 81, 83, 84, 85], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 114, 115, 116, 117]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  22%|██▏       | 31/144 [00:00<00:00, 305.78it/s][A
Calculating viewed counts for every point:  43%|████▎     | 62/144 [00:00<00:00, 291.57it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 96/144 [00:00<00:00, 310.62it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 128/144 [00:00<00:00, 284.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [04:47<00:59,  2.48s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(7418, device='cuda:0')
before filtering torch.Size([3, 100286])
after filtering torch.Size([2, 100286])
num_ins_points_after_filtering tensor([ 511, 6831], device='cuda:0')
Working on scene0653_00 class window
masks_to_be_merged [[5, 11, 12, 26, 27, 28], [6, 7, 8], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33], [34, 35, 43, 44, 45, 46, 47, 48, 49, 50, 71, 73, 74, 75, 76, 77, 78, 79, 80], [37, 38, 39], [40, 41, 42], [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [81, 83, 95, 96, 97, 98, 99, 100, 102, 103, 104, 112, 114, 116, 118, 120], [107, 109, 123, 125, 126], [117, 119, 121, 122, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 151, 153, 155, 157, 159, 162, 163, 165, 168, 169, 171, 173, 174, 176, 178, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], [150, 152, 156], [164, 166, 167, 186], [172, 175, 177, 179, 180], [204, 206, 208]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 134.22it/s][A
Calculating viewed counts for every point:   7%|▋         | 28/388 [00:00<00:02, 133.29it/s][A
Calculating viewed counts for every point:  11%|█         | 43/388 [00:00<00:02, 139.59it/s][A
Calculating viewed counts for every point:  15%|█▍        | 58/388 [00:00<00:02, 142.79it/s][A
Calculating viewed counts for every point:  19%|█▉        | 73/388 [00:00<00:02, 141.63it/s][A
Calculating viewed counts for every point:  23%|██▎       | 88/388 [00:00<00:02, 136.08it/s][A
Calculating viewed counts for every point:  27%|██▋       | 103/388 [00:00<00:02, 139.38it/s][A
Calculating viewed counts for every point:  30%|███       | 117/388 [00:00<00:01, 136.53it/s][A
Calculating viewed counts for every point:  34%|███▍      | 131/388 [00:00<00:01, 134.26it/s][A
Calculating viewed counts for every point:  37%|███▋      | 145/388 [00:01<00:01, 135.76it/s][A
Calculating viewed counts for every point:  41%|████      | 159/388 [00:01<00:01, 135.14it/s][A
Calculating viewed counts for every point:  45%|████▍     | 173/388 [00:01<00:01, 133.39it/s][A
Calculating viewed counts for every point:  48%|████▊     | 188/388 [00:01<00:01, 133.16it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 203/388 [00:01<00:01, 137.35it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 217/388 [00:01<00:01, 136.97it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 232/388 [00:01<00:01, 138.89it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 246/388 [00:01<00:01, 136.78it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 260/388 [00:01<00:00, 132.44it/s][A
Calculating viewed counts for every point:  71%|███████   | 274/388 [00:02<00:00, 129.49it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 287/388 [00:02<00:00, 129.46it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 300/388 [00:02<00:00, 126.00it/s][A
Calculating viewed counts for every point:  81%|████████  | 314/388 [00:02<00:00, 128.30it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 329/388 [00:02<00:00, 133.68it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 343/388 [00:02<00:00, 133.98it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 358/388 [00:02<00:00, 135.53it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 373/388 [00:02<00:00, 136.98it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 387/388 [00:02<00:00, 131.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [04:56<01:36,  4.21s/it]Projecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [04:56<01:08,  3.10s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(28322, device='cuda:0')
before filtering torch.Size([14, 284951])
after filtering torch.Size([5, 284951])
num_ins_points_after_filtering tensor([   44,   701, 11464, 12947,  1150], device='cuda:0')
Working on scene0655_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0658_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15], [18, 19, 20], [21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 17/55 [00:00<00:00, 169.79it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 35/55 [00:00<00:00, 174.05it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 53/55 [00:00<00:00, 173.27it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [04:57<00:49,  2.37s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(18095, device='cuda:0')
before filtering torch.Size([4, 129951])
after filtering torch.Size([4, 129951])
num_ins_points_after_filtering tensor([ 1761,  3327,  1811, 11186], device='cuda:0')
Working on scene0660_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 11], [9, 10]]

Calculating viewed counts for every point:   0%|          | 0/105 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 26/105 [00:00<00:00, 251.65it/s][A
Calculating viewed counts for every point:  50%|████▉     | 52/105 [00:00<00:00, 242.23it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 80/105 [00:00<00:00, 257.68it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  86%|████████▌ | 122/142 [04:57<00:36,  1.84s/it]detected_ratio_thres_value tensor(0.1364, device='cuda:0')
final masked points tensor(4992, device='cuda:0')
before filtering torch.Size([2, 110960])
after filtering torch.Size([1, 110960])
num_ins_points_after_filtering tensor([4885], device='cuda:0')
Working on scene0663_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 129, 130, 131, 132, 133], [33, 107], [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], [57, 58, 59, 60], [61, 67, 72, 74], [108, 109, 110, 111], [122, 123, 124], [126, 127]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 20/295 [00:00<00:01, 198.95it/s][A
Calculating viewed counts for every point:  15%|█▍        | 43/295 [00:00<00:01, 215.62it/s][A
Calculating viewed counts for every point:  22%|██▏       | 65/295 [00:00<00:01, 208.47it/s][A
Calculating viewed counts for every point:  29%|██▉       | 87/295 [00:00<00:00, 211.12it/s][A
Calculating viewed counts for every point:  37%|███▋      | 109/295 [00:00<00:00, 198.81it/s][A
Calculating viewed counts for every point:  44%|████▍     | 130/295 [00:00<00:00, 202.00it/s][A
Calculating viewed counts for every point:  51%|█████     | 151/295 [00:00<00:00, 199.02it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 172/295 [00:00<00:00, 201.77it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 193/295 [00:00<00:00, 202.93it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 217/295 [00:01<00:00, 213.66it/s][A
Calculating viewed counts for every point:  81%|████████  | 239/295 [00:01<00:00, 207.70it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 260/295 [00:01<00:00, 195.93it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 282/295 [00:01<00:00, 201.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [05:01<00:47,  2.48s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(12304, device='cuda:0')
before filtering torch.Size([8, 184428])
after filtering torch.Size([2, 184428])
num_ins_points_after_filtering tensor([5963, 2429], device='cuda:0')
Working on scene0664_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5, 19, 20, 21, 22], [7, 8, 11, 12], [9, 10], [13, 14, 15], [16, 17, 18]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 39/144 [00:00<00:00, 382.39it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 78/144 [00:00<00:00, 371.76it/s][A
Calculating viewed counts for every point:  81%|████████  | 116/144 [00:00<00:00, 357.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [05:02<00:34,  1.94s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(1452, device='cuda:0')
before filtering torch.Size([5, 44585])
after filtering torch.Size([4, 44585])
num_ins_points_after_filtering tensor([592, 397, 258, 164], device='cuda:0')
Working on scene0665_00 class window
masks_to_be_merged [[3, 4, 6]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 12/104 [00:00<00:00, 117.01it/s][A
Calculating viewed counts for every point:  23%|██▎       | 24/104 [00:00<00:00, 118.66it/s][A
Calculating viewed counts for every point:  37%|███▋      | 38/104 [00:00<00:00, 124.79it/s][A
Calculating viewed counts for every point:  50%|█████     | 52/104 [00:00<00:00, 128.93it/s][A
Calculating viewed counts for every point:  62%|██████▎   | 65/104 [00:00<00:00, 127.20it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 78/104 [00:00<00:00, 121.91it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 91/104 [00:00<00:00, 120.02it/s][A
Calculating viewed counts for every point: 100%|██████████| 104/104 [00:00<00:00, 121.15it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [05:03<00:28,  1.66s/it]detected_ratio_thres_value tensor(0.2500, device='cuda:0')
final masked points tensor(355, device='cuda:0')
before filtering torch.Size([1, 252726])
after filtering torch.Size([1, 252726])
num_ins_points_after_filtering tensor([228], device='cuda:0')
Working on scene0670_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 77, 80, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161], [9, 10, 11, 12, 162, 163, 164], [14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 193], [28, 49, 50], [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200], [67, 68, 69, 70, 89, 90, 91, 92, 93], [140, 141, 142]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 25/303 [00:00<00:01, 241.95it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/303 [00:00<00:01, 217.80it/s][A
Calculating viewed counts for every point:  24%|██▍       | 73/303 [00:00<00:01, 219.23it/s][A
Calculating viewed counts for every point:  32%|███▏      | 98/303 [00:00<00:00, 228.59it/s][A
Calculating viewed counts for every point:  40%|███▉      | 121/303 [00:00<00:00, 224.80it/s][A
Calculating viewed counts for every point:  48%|████▊     | 144/303 [00:00<00:00, 214.97it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 166/303 [00:00<00:00, 209.36it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 188/303 [00:00<00:00, 203.88it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 210/303 [00:00<00:00, 204.82it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 232/303 [00:01<00:00, 208.04it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 253/303 [00:01<00:00, 198.59it/s][A
Calculating viewed counts for every point:  91%|█████████ | 276/303 [00:01<00:00, 203.74it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 297/303 [00:01<00:00, 204.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [05:09<00:44,  2.79s/it]detected_ratio_thres_value tensor(0.2727, device='cuda:0')
final masked points tensor(3225, device='cuda:0')
before filtering torch.Size([7, 176038])
after filtering torch.Size([3, 176038])
num_ins_points_after_filtering tensor([2052,  288,  398], device='cuda:0')
Working on scene0671_00 class window
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0678_00 class window
masks_to_be_merged [[1, 2, 303], [3, 4, 50, 300, 301, 302, 304, 305, 306, 307], [7, 11], [15, 25, 37], [31, 33], [36, 40, 47], [42, 48], [52, 54], [55, 56, 57, 58, 308], [61, 62], [63, 66, 70, 73, 76, 85, 90, 99, 104, 107, 115], [64, 68, 72, 75, 83, 89, 97, 105, 108, 119, 127], [65, 69, 81, 95], [67, 71, 74, 84, 91, 98, 103, 110, 116, 118, 122, 123, 125, 126], [77, 87, 100, 113], [78, 93, 109], [80, 88, 96, 114, 121], [94, 101, 112, 117, 120], [102, 106, 111], [128, 133, 138, 143, 152, 167, 173, 177, 183, 190], [129, 136], [130, 134], [131, 135, 139, 149, 151, 157], [137, 144, 153, 158, 161, 162, 169, 179], [140, 145], [141, 147, 154], [142, 146, 156], [148, 165, 168, 171, 178, 182, 189, 197, 203], [155, 163, 166, 172, 175, 181, 188, 198], [170, 185], [176, 184, 191, 202, 204, 211, 216], [180, 186, 196, 212], [200, 205, 214, 223], [207, 210], [208, 215], [221, 222], [230, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 255, 258, 260, 261, 288, 398, 400, 401, 402, 403, 406, 408, 409, 411, 414, 418, 419, 422, 424, 427], [238, 246, 254, 397, 399, 407, 413, 416, 421, 423, 426], [251, 253, 256, 257, 259, 263, 264, 266, 267, 268, 277, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 412, 415, 417, 420], [262, 265], [272, 273, 274, 275, 278, 280, 281, 296, 297, 298], [312, 321], [317, 324, 327, 328, 329, 375, 388], [332, 369, 373, 374, 384, 387], [335, 339, 346, 351], [338, 345], [340, 347, 353, 367, 371], [342, 349, 352], [360, 362, 364, 368], [370, 372], [376, 379], [382, 395], [392, 393]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 10/245 [00:00<00:02, 97.58it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/245 [00:00<00:02, 92.09it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/245 [00:00<00:02, 90.57it/s][A
Calculating viewed counts for every point:  16%|█▋        | 40/245 [00:00<00:02, 93.10it/s][A
Calculating viewed counts for every point:  21%|██        | 51/245 [00:00<00:02, 94.77it/s][A
Calculating viewed counts for every point:  25%|██▍       | 61/245 [00:00<00:01, 95.99it/s][A
Calculating viewed counts for every point:  30%|██▉       | 73/245 [00:00<00:01, 101.03it/s][A
Calculating viewed counts for every point:  34%|███▍      | 84/245 [00:00<00:01, 101.11it/s][A
Calculating viewed counts for every point:  39%|███▉      | 95/245 [00:00<00:01, 97.58it/s] [A
Calculating viewed counts for every point:  43%|████▎     | 105/245 [00:01<00:01, 96.36it/s][A
Calculating viewed counts for every point:  47%|████▋     | 115/245 [00:01<00:01, 93.64it/s][A
Calculating viewed counts for every point:  51%|█████▏    | 126/245 [00:01<00:01, 97.80it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 137/245 [00:01<00:01, 98.70it/s][A
Calculating viewed counts for every point:  60%|██████    | 148/245 [00:01<00:00, 101.10it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 160/245 [00:01<00:00, 103.74it/s][A
Calculating viewed counts for every point:  70%|███████   | 172/245 [00:01<00:00, 106.41it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 183/245 [00:01<00:00, 103.97it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 194/245 [00:01<00:00, 104.79it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 205/245 [00:02<00:00, 100.77it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 216/245 [00:02<00:00, 98.85it/s] [A
Calculating viewed counts for every point:  92%|█████████▏| 226/245 [00:02<00:00, 98.15it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 237/245 [00:02<00:00, 99.95it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [05:24<01:12,  5.14s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(18912, device='cuda:0')
before filtering torch.Size([53, 364811])
after filtering torch.Size([27, 364811])
num_ins_points_after_filtering tensor([ 252,  390,   25,  107,  434,  285,  511,  106,  121,  142,  775,  146,
          91,  643,  560,  470,  197, 2100,  602, 2435, 2140,  400,  249,  549,
          73,  368,  519], device='cuda:0')
Working on scene0684_00 class window
masks_to_be_merged [[0, 1, 2, 22, 23, 25], [3, 24, 26], [4, 5, 6, 7, 27, 28, 29, 30, 31, 32], [11, 12, 13, 14, 15, 16, 17, 19, 20]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|████      | 35/87 [00:00<00:00, 345.63it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 71/87 [00:00<00:00, 350.76it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [05:25<00:52,  4.04s/it]detected_ratio_thres_value tensor(0.1579, device='cuda:0')
final masked points tensor(3739, device='cuda:0')
before filtering torch.Size([4, 41364])
after filtering torch.Size([2, 41364])
num_ins_points_after_filtering tensor([ 951, 2617], device='cuda:0')
Working on scene0685_00 class window
masks_to_be_merged [[0, 3, 4, 5, 6, 27], [1, 2, 28, 29, 30], [8, 9], [12, 13, 14, 15], [17, 18, 19, 20, 21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 27/196 [00:00<00:00, 262.47it/s][A
Calculating viewed counts for every point:  28%|██▊       | 55/196 [00:00<00:00, 271.93it/s][A
Calculating viewed counts for every point:  42%|████▏     | 83/196 [00:00<00:00, 256.00it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 109/196 [00:00<00:00, 244.60it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 140/196 [00:00<00:00, 260.25it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 167/196 [00:00<00:00, 261.23it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 194/196 [00:00<00:00, 262.06it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [05:26<00:40,  3.36s/it]detected_ratio_thres_value tensor(0.1471, device='cuda:0')
final masked points tensor(5600, device='cuda:0')
before filtering torch.Size([5, 132720])
after filtering torch.Size([3, 132720])
num_ins_points_after_filtering tensor([ 845, 1394, 3024], device='cuda:0')
Working on scene0686_00 class window
masks_to_be_merged [[0, 32, 36, 37, 38], [1, 2, 3, 4, 7], [9, 10, 11], [15, 16, 17, 18, 19, 20, 21, 22], [23, 24, 25, 26, 27, 28, 30, 31], [33, 34]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 22/153 [00:00<00:00, 211.47it/s][A
Calculating viewed counts for every point:  29%|██▉       | 44/153 [00:00<00:00, 211.28it/s][A
Calculating viewed counts for every point:  44%|████▍     | 68/153 [00:00<00:00, 222.55it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 91/153 [00:00<00:00, 212.51it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 113/153 [00:00<00:00, 212.63it/s][A
Calculating viewed counts for every point:  90%|█████████ | 138/153 [00:00<00:00, 223.32it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [05:28<00:30,  2.76s/it]detected_ratio_thres_value tensor(0.0741, device='cuda:0')
final masked points tensor(4793, device='cuda:0')
before filtering torch.Size([6, 89776])
after filtering torch.Size([6, 89776])
num_ins_points_after_filtering tensor([ 103,  298, 2234, 1581,  107,  181], device='cuda:0')
Working on scene0689_00 class window
masks_to_be_merged [[0, 1, 40], [21, 22]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 27/87 [00:00<00:00, 262.16it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 54/87 [00:00<00:00, 255.88it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 80/87 [00:00<00:00, 255.97it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [05:29<00:22,  2.26s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(3652, device='cuda:0')
before filtering torch.Size([2, 122129])
after filtering torch.Size([2, 122129])
num_ins_points_after_filtering tensor([1676,  765], device='cuda:0')
Working on scene0690_00 class window
masks_to_be_merged [[0, 47], [7, 12, 13, 17, 20, 22, 25, 29], [8, 11, 14, 18], [10, 15, 16, 19, 21, 24, 27, 31, 33, 35, 37, 39, 41, 42], [23, 26, 28, 32, 34, 36, 38, 40, 43, 45, 46]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 29/90 [00:00<00:00, 289.85it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 59/90 [00:00<00:00, 290.96it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [05:29<00:16,  1.79s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(18074, device='cuda:0')
before filtering torch.Size([5, 106050])
after filtering torch.Size([4, 106050])
num_ins_points_after_filtering tensor([4639, 3858, 5600, 3923], device='cuda:0')
Working on scene0693_00 class window
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 40, 41, 42, 43, 44, 147], [15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 130, 133, 134, 135, 143, 144, 145], [16, 141], [29, 30, 32, 33, 35, 36, 37, 38, 39], [31, 34], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100], [62, 63, 64, 65, 66], [93, 94, 101, 103, 104, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 127], [102, 105, 106, 107, 108, 109, 110, 113, 120, 122], [125, 129, 137], [128, 138], [131, 132], [136, 140]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  21%|██▏       | 37/174 [00:00<00:00, 368.94it/s][A
Calculating viewed counts for every point:  43%|████▎     | 74/174 [00:00<00:00, 360.03it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 111/174 [00:00<00:00, 350.14it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 147/174 [00:00<00:00, 345.10it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [05:32<00:15,  1.98s/it]detected_ratio_thres_value tensor(0.2571, device='cuda:0')
final masked points tensor(8301, device='cuda:0')
before filtering torch.Size([13, 41327])
after filtering torch.Size([6, 41327])
num_ins_points_after_filtering tensor([ 321,  523, 6082,  966,   59,   27], device='cuda:0')
Working on scene0695_00 class window
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 41, 42, 43, 44], [8, 14, 48], [9, 46, 58], [10, 47, 52], [11, 45, 55, 59], [27, 28, 29, 30, 31, 32, 33], [35, 36, 70, 71], [39, 40], [49, 54], [50, 53, 61], [51, 57, 62], [65, 66, 67, 68]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 32/182 [00:00<00:00, 313.65it/s][A
Calculating viewed counts for every point:  35%|███▌      | 64/182 [00:00<00:00, 280.14it/s][A
Calculating viewed counts for every point:  51%|█████     | 93/182 [00:00<00:00, 265.18it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 122/182 [00:00<00:00, 271.72it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 150/182 [00:00<00:00, 273.96it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 178/182 [00:00<00:00, 270.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [05:33<00:13,  1.87s/it]detected_ratio_thres_value tensor(0.1200, device='cuda:0')
final masked points tensor(17567, device='cuda:0')
before filtering torch.Size([13, 133418])
after filtering torch.Size([11, 133418])
num_ins_points_after_filtering tensor([3620, 1777,   12,    7,   13, 2750, 2273,    7,    8,   11, 3103],
       device='cuda:0')
Working on scene0696_00 class window
masks_to_be_merged [[0, 1, 2, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65], [34, 35], [36, 38], [37, 40], [46, 47, 48, 49, 50, 51, 52]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 13/130 [00:00<00:00, 124.16it/s][A
Calculating viewed counts for every point:  20%|██        | 26/130 [00:00<00:00, 123.62it/s][A
Calculating viewed counts for every point:  30%|███       | 39/130 [00:00<00:00, 123.89it/s][A
Calculating viewed counts for every point:  40%|████      | 52/130 [00:00<00:00, 116.22it/s][A
Calculating viewed counts for every point:  49%|████▉     | 64/130 [00:00<00:00, 111.21it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 76/130 [00:00<00:00, 112.66it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 89/130 [00:00<00:00, 116.16it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 101/130 [00:00<00:00, 115.54it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 113/130 [00:00<00:00, 115.74it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 127/130 [00:01<00:00, 120.66it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [05:35<00:11,  1.98s/it]detected_ratio_thres_value tensor(0.1875, device='cuda:0')
final masked points tensor(5872, device='cuda:0')
before filtering torch.Size([5, 231067])
after filtering torch.Size([2, 231067])
num_ins_points_after_filtering tensor([1452, 3919], device='cuda:0')
Working on scene0697_00 class window
masks_to_be_merged [[4, 5], [7, 9, 10, 11, 12, 13, 14, 27, 28, 29, 30, 32, 34, 48, 49], [19, 20], [22, 23], [31, 33, 35, 36, 45, 46, 47, 50, 51, 52, 53], [37, 38, 39, 40, 41, 42, 43, 44], [55, 57], [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [70, 71, 72, 73], [78, 79, 80, 81], [82, 83, 84, 85], [86, 87, 88]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 32/288 [00:00<00:00, 315.20it/s][A
Calculating viewed counts for every point:  22%|██▏       | 64/288 [00:00<00:00, 294.78it/s][A
Calculating viewed counts for every point:  33%|███▎      | 94/288 [00:00<00:00, 291.74it/s][A
Calculating viewed counts for every point:  43%|████▎     | 124/288 [00:00<00:00, 265.32it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 151/288 [00:00<00:00, 258.54it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 181/288 [00:00<00:00, 268.19it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 208/288 [00:00<00:00, 267.68it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 235/288 [00:00<00:00, 265.61it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 264/288 [00:00<00:00, 270.85it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [05:38<00:11,  2.25s/it]detected_ratio_thres_value tensor(0.1923, device='cuda:0')
final masked points tensor(6541, device='cuda:0')
before filtering torch.Size([12, 139300])
after filtering torch.Size([6, 139300])
num_ins_points_after_filtering tensor([  9, 720,  33, 713, 110, 400], device='cuda:0')
Working on scene0699_00 class window
masks_to_be_merged [[0, 1, 2], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 117, 118], [19, 22, 132, 133], [20, 21], [31, 32], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], [109, 115, 116], [119, 120, 121], [122, 123, 124, 125, 126, 129, 130]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/220 [00:00<00:01, 171.71it/s][A
Calculating viewed counts for every point:  17%|█▋        | 37/220 [00:00<00:01, 176.78it/s][A
Calculating viewed counts for every point:  25%|██▌       | 55/220 [00:00<00:00, 176.10it/s][A
Calculating viewed counts for every point:  34%|███▎      | 74/220 [00:00<00:00, 179.09it/s][A
Calculating viewed counts for every point:  42%|████▏     | 92/220 [00:00<00:00, 177.23it/s][A
Calculating viewed counts for every point:  50%|█████     | 110/220 [00:00<00:00, 172.46it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 129/220 [00:00<00:00, 177.95it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 147/220 [00:00<00:00, 168.65it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 164/220 [00:00<00:00, 168.39it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 183/220 [00:01<00:00, 173.69it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 205/220 [00:01<00:00, 185.32it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [05:42<00:10,  2.55s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(7059, device='cuda:0')
before filtering torch.Size([11, 153041])
after filtering torch.Size([5, 153041])
num_ins_points_after_filtering tensor([ 444, 2874,  977,   81, 2211], device='cuda:0')
Working on scene0700_00 class window
masks_to_be_merged [[0, 1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [4, 89], [5, 6, 7, 8, 73, 74, 77], [9, 122], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [61, 62, 63, 64, 65, 66, 67, 82, 83, 84, 87, 88], [68, 69], [71, 72], [75, 76, 78], [79, 80, 81], [85, 86], [93, 94], [99, 100, 101, 102, 103, 104, 105], [106, 107, 109, 110], [114, 115], [118, 119]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 19/459 [00:00<00:02, 182.09it/s][A
Calculating viewed counts for every point:   8%|▊         | 38/459 [00:00<00:02, 180.40it/s][A
Calculating viewed counts for every point:  13%|█▎        | 60/459 [00:00<00:02, 195.58it/s][A
Calculating viewed counts for every point:  18%|█▊        | 82/459 [00:00<00:01, 202.38it/s][A
Calculating viewed counts for every point:  23%|██▎       | 105/459 [00:00<00:01, 209.31it/s][A
Calculating viewed counts for every point:  27%|██▋       | 126/459 [00:00<00:01, 198.91it/s][A
Calculating viewed counts for every point:  32%|███▏      | 147/459 [00:00<00:01, 199.75it/s][A
Calculating viewed counts for every point:  37%|███▋      | 168/459 [00:00<00:01, 196.45it/s][A
Calculating viewed counts for every point:  41%|████      | 188/459 [00:00<00:01, 192.44it/s][A
Calculating viewed counts for every point:  45%|████▌     | 208/459 [00:01<00:01, 187.60it/s][A
Calculating viewed counts for every point:  50%|█████     | 231/459 [00:01<00:01, 197.37it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 251/459 [00:01<00:01, 191.67it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 271/459 [00:01<00:01, 184.89it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 291/459 [00:01<00:00, 187.92it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 312/459 [00:01<00:00, 192.26it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 332/459 [00:01<00:00, 192.02it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 352/459 [00:01<00:00, 183.85it/s][A
Calculating viewed counts for every point:  81%|████████  | 371/459 [00:01<00:00, 181.06it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 390/459 [00:02<00:00, 173.46it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 408/459 [00:02<00:00, 171.34it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 428/459 [00:02<00:00, 176.79it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 446/459 [00:02<00:00, 173.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [05:47<00:10,  3.33s/it]detected_ratio_thres_value tensor(0.2344, device='cuda:0')
final masked points tensor(25168, device='cuda:0')
before filtering torch.Size([16, 167755])
after filtering torch.Size([8, 167755])
num_ins_points_after_filtering tensor([4520, 5228, 4570, 2841,  617, 4060,  475,  226], device='cuda:0')
Working on scene0701_00 class window
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 34, 35, 37, 40, 41, 44, 46, 47, 48], [17, 19], [18, 20, 22], [23, 24, 25, 26, 27, 28, 29, 30], [31, 32]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 35/102 [00:00<00:00, 343.34it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 74/102 [00:00<00:00, 365.19it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  99%|█████████▊| 140/142 [05:47<00:05,  2.54s/it]detected_ratio_thres_value tensor(0.2273, device='cuda:0')
final masked points tensor(1911, device='cuda:0')
before filtering torch.Size([5, 73550])
after filtering torch.Size([5, 73550])
num_ins_points_after_filtering tensor([904,  15,  32, 731,  96], device='cuda:0')
Working on scene0702_00 class window
masks_to_be_merged [[0, 1, 2, 26], [3, 4, 27], [5, 6], [9, 10, 11, 12, 13, 14, 15, 16, 17], [19, 21], [23, 24]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 33/84 [00:00<00:00, 324.36it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 66/84 [00:00<00:00, 290.52it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [05:48<00:01,  1.96s/it]detected_ratio_thres_value tensor(0.1739, device='cuda:0')
final masked points tensor(11210, device='cuda:0')
before filtering torch.Size([6, 54769])
after filtering torch.Size([6, 54769])
num_ins_points_after_filtering tensor([2759,  477,  143, 1431, 2573, 2029], device='cuda:0')
Working on scene0704_00 class window
masks_to_be_merged [[40, 41, 42, 43, 44, 50, 51], [53, 54]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 20/241 [00:00<00:01, 191.17it/s][A
Calculating viewed counts for every point:  17%|█▋        | 40/241 [00:00<00:01, 176.33it/s][A
Calculating viewed counts for every point:  24%|██▍       | 58/241 [00:00<00:01, 169.96it/s][A
Calculating viewed counts for every point:  32%|███▏      | 78/241 [00:00<00:00, 178.00it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 176.48it/s][A
Calculating viewed counts for every point:  49%|████▉     | 118/241 [00:00<00:00, 189.12it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 137/241 [00:00<00:00, 169.41it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 157/241 [00:00<00:00, 177.34it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 178/241 [00:00<00:00, 186.73it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 197/241 [00:01<00:00, 183.60it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 216/241 [00:01<00:00, 184.49it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 237/241 [00:01<00:00, 190.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [05:50<00:00,  2.00s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [05:50<00:00,  2.47s/it]
detected_ratio_thres_value tensor(0.1333, device='cuda:0')
final masked points tensor(4540, device='cuda:0')
before filtering torch.Size([2, 183029])
after filtering torch.Size([2, 183029])
num_ins_points_after_filtering tensor([ 762, 1885], device='cuda:0')
Processing class: window
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<03:17,  1.40s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:45,  1.33it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:10,  1.98it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:02<00:56,  2.45it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:51,  2.64it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:46,  2.95it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:03<00:43,  3.08it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:03<00:36,  3.71it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:40,  3.30it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:39,  3.38it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:04<00:34,  3.79it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:04<00:33,  3.86it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:04<00:31,  4.07it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:32,  3.88it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:05<00:35,  3.63it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:05<00:31,  3.96it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:05<00:25,  4.83it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:05<00:24,  5.16it/s]Select thresholds for refinement:  13%|█▎        | 19/142 [00:05<00:25,  4.78it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:06<00:24,  5.01it/s]DEBUG best_match_after_iou_check [tensor(228), tensor(115), tensor(102), tensor(87), tensor(19), tensor(87), tensor(115), tensor(102)]
DEBUG uniques tensor([ 19,  87, 102, 115, 228]) tensor([1, 2, 2, 2, 1])
Matched 1 times with 19
Matched 2 times with 87
Merge stage2 masks
Matched 2 times with 102
Merge stage2 masks
Matched 2 times with 115
Merge stage2 masks
Matched 1 times with 228
iou for matched labels tensor([0.5204, 0.0970, 0.2800, 0.7900, 0.6633])
Matched labels: ['window', 'doorframe', 'door', 'tv', 'window']
Clip similarities: [1.0, 0.78076171875, 0.82958984375, 0.72509765625, 1.0]
DEBUG best_match_after_iou_check [tensor(28), tensor(180), tensor(449), tensor(449)]
DEBUG uniques tensor([ 28, 180, 449]) tensor([1, 1, 2])
Matched 1 times with 28
Matched 1 times with 180
Matched 2 times with 449
Merge stage2 masks
iou for matched labels tensor([0.6616, 0.6064, 0.2368])
Matched labels: ['windowsill', 'windowsill', 'doorframe']
Clip similarities: [0.8505859375, 0.8505859375, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(171)]
DEBUG uniques tensor([171]) tensor([1])
Matched 1 times with 171
iou for matched labels tensor([0.2965])
Matched labels: ['folded_chair']
Clip similarities: [0.57373046875]
DEBUG best_match_after_iou_check [tensor(182), tensor(228), tensor(182)]
DEBUG uniques tensor([182, 228]) tensor([2, 1])
Matched 2 times with 182
Merge stage2 masks
Matched 1 times with 228
iou for matched labels tensor([0.5487, 0.6046])
Matched labels: ['window', 'windowsill']
Clip similarities: [1.0, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(40), tensor(102)]
DEBUG uniques tensor([ 40, 102]) tensor([1, 1])
Matched 1 times with 40
Matched 1 times with 102
iou for matched labels tensor([0.8157, 0.6362])
Matched labels: ['blinds', 'blinds']
Clip similarities: [0.8056640625, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(160), tensor(79)]
DEBUG uniques tensor([ 79, 160]) tensor([1, 1])
Matched 1 times with 79
Matched 1 times with 160
iou for matched labels tensor([0.8360, 0.5732])
Matched labels: ['mat', 'door']
Clip similarities: [0.69580078125, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(190), tensor(44), tensor(93)]
DEBUG uniques tensor([ 44,  93, 190]) tensor([1, 1, 1])
Matched 1 times with 44
Matched 1 times with 93
Matched 1 times with 190
iou for matched labels tensor([0.7375, 0.5467, 0.4227])
Matched labels: ['doorframe', 'closet_door', 'doorframe']
Clip similarities: [0.78076171875, 0.740234375, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(142), tensor(84), tensor(84)]
DEBUG uniques tensor([ 84, 142]) tensor([2, 1])
Matched 2 times with 84
Merge stage2 masks
Matched 1 times with 142
iou for matched labels tensor([0.2361, 0.1039])
Matched labels: ['projector_screen', 'chair']
Clip similarities: [0.685546875, 0.71435546875]
DEBUG best_match_after_iou_check [tensor(165), tensor(165)]
DEBUG uniques tensor([165]) tensor([2])
Matched 2 times with 165
Merge stage2 masks
iou for matched labels tensor([0.4546])
Matched labels: ['door']
Clip similarities: [0.82958984375]
DEBUG best_match_after_iou_check [tensor(106), tensor(21), tensor(21), tensor(116)]
DEBUG uniques tensor([ 21, 106, 116]) tensor([2, 1, 1])
Matched 2 times with 21
Merge stage2 masks
Matched 1 times with 106
Matched 1 times with 116
iou for matched labels tensor([0.6223, 0.3391, 0.1547])
Matched labels: ['blinds', 'door', 'bin']
Clip similarities: [0.8056640625, 0.82958984375, 0.64599609375]
DEBUG best_match_after_iou_check [tensor(114)]
DEBUG uniques tensor([114]) tensor([1])
Matched 1 times with 114
iou for matched labels tensor([0.8278])
Matched labels: ['laptop']
Clip similarities: [0.7685546875]
DEBUG best_match_after_iou_check [tensor(88), tensor(192), tensor(217), tensor(70), tensor(150), tensor(0)]
DEBUG uniques tensor([  0,  70,  88, 150, 192, 217]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 70
Matched 1 times with 88
Matched 1 times with 150
Matched 1 times with 192
Matched 1 times with 217
iou for matched labels tensor([0.3239, 0.4093, 0.5654, 0.6557, 0.8327, 0.0000])
Matched labels: ['soap_dispenser', 'bathroom_stall', 'shower_wall', 'windowsill', 'bar', 'shower_curtain_rod']
Clip similarities: [0.61474609375, 0.6982421875, 0.68359375, 0.8505859375, 0.70654296875, 0.62353515625]
DEBUG best_match_after_iou_check [tensor(228), tensor(1), tensor(117), tensor(0), tensor(150)]
DEBUG uniques tensor([  0,   1, 117, 150, 228]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 1
Matched 1 times with 117
Matched 1 times with 150
Matched 1 times with 228
iou for matched labels tensor([0.2691, 0.7706, 0.0951, 0.0000, 0.4112])
Matched labels: ['shelf', 'vent', 'bathroom_stall_door', 'paper_towel_dispenser', 'shower_door']
Clip similarities: [0.76220703125, 0.73828125, 0.65625, 0.6064453125, 0.74072265625]
DEBUG best_match_after_iou_check [tensor(126), tensor(189), tensor(72), tensor(176), tensor(41)]
DEBUG uniques tensor([ 41,  72, 126, 176, 189]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 41
Matched 1 times with 72
Matched 1 times with 126
Matched 1 times with 176
Matched 1 times with 189
iou for matched labels tensor([0.4659, 0.5328, 0.0270, 0.5246, 0.6030])
Matched labels: ['chair', 'windowsill', 'chair', 'desk', 'door']
Clip similarities: [0.71435546875, 0.8505859375, 0.71435546875, 0.6953125, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(131), tensor(284), tensor(333), tensor(57), tensor(57), tensor(157), tensor(55), tensor(131), tensor(131), tensor(137)]
DEBUG uniques tensor([ 55,  57, 131, 137, 157, 284, 333]) tensor([1, 2, 3, 1, 1, 1, 1])
Matched 1 times with 55
Matched 2 times with 57
Merge stage2 masks
Matched 3 times with 131
Merge stage2 masks
Matched 1 times with 137
Matched 1 times with 157
Matched 1 times with 284
Matched 1 times with 333
iou for matched labels tensor([0.6062, 0.5464, 0.2502, 0.6703, 0.1407, 0.5942, 0.2746])
Matched labels: ['doorframe', 'blackboard', 'window', 'blackboard', 'doorframe', 'doorframe', 'window']
Clip similarities: [0.78076171875, 0.66259765625, 1.0, 0.66259765625, 0.78076171875, 0.78076171875, 1.0]
DEBUG best_match_after_iou_check [tensor(116), tensor(154), tensor(74), tensor(39), tensor(70)]
DEBUG uniques tensor([ 39,  70,  74, 116, 154]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 39
Matched 1 times with 70
Matched 1 times with 74
Matched 1 times with 116
Matched 1 times with 154
iou for matched labels tensor([0.7471, 0.2828, 0.0983, 0.1815, 0.0701])
Matched labels: ['light', 'bathroom_counter', 'shower_wall', 'towel', 'closet_wall']
Clip similarities: [0.79052734375, 0.61767578125, 0.68359375, 0.65283203125, 0.69873046875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(121), tensor(12), tensor(96), tensor(29), tensor(151)]
DEBUG uniques tensor([ 12,  29,  96, 121, 151]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 29
Matched 1 times with 96
Matched 1 times with 121
Matched 1 times with 151
iou for matched labels tensor([0.0043, 0.7091, 0.6801, 0.4318, 0.2007])
Matched labels: ['washing_machine', 'washing_machine', 'laundry_hamper', 'radiator', 'closet_door']
Clip similarities: [0.716796875, 0.716796875, 0.63720703125, 0.70947265625, 0.740234375]
DEBUG best_match_after_iou_check [tensor(73), tensor(315), tensor(77), tensor(146)]
DEBUG uniques tensor([ 73,  77, 146, 315]) tensor([1, 1, 1, 1])
Matched 1 times with 73
Matched 1 times with 77
Matched 1 times with 146
Matched 1 times with 315
iou for matched labels tensor([0.0909, 0.1205, 0.2456, 0.0657])
Matched labels: ['bed', 'windowsill', 'closet_door', 'window']
Clip similarities: [0.658203125, 0.8505859375, 0.740234375, 1.0]
DEBUG best_match_after_iou_check [tensor(81), tensor(103), tensor(101), tensor(139)]
DEBUG uniques tensor([ 81, 101, 103, 139]) tensor([1, 1, 1, 1])
Matched 1 times with 81
Matched 1 times with 101
Matched 1 times with 103
Matched 1 times with 139
iou for matched labels tensor([0.5591, 0.0286, 0.5228, 0.1756])
Matched labels: ['toilet_paper_dispenser', 'toilet_paper_holder', 'bathroom_stall_door', 'bin']
Clip similarities: [0.615234375, 0.626953125, 0.65625, 0.64599609375]
DEBUG best_match_after_iou_check Select thresholds for refinement:  15%|█▍        | 21/142 [00:06<00:26,  4.54it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:06<00:22,  5.25it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:06<00:22,  5.38it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:06<00:20,  5.72it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:06<00:21,  5.42it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:07<00:23,  4.90it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:07<00:23,  4.96it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:07<00:26,  4.23it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:08<00:30,  3.76it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:08<00:34,  3.28it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:08<00:32,  3.41it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:08<00:31,  3.54it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:09<00:31,  3.47it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:09<00:36,  2.92it/s]Select thresholds for refinement:  25%|██▍       | 35/142 [00:10<00:35,  3.00it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:10<00:36,  2.87it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:10<00:35,  3.00it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:10<00:30,  3.44it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:11<00:28,  3.65it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:11<00:26,  3.85it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:11<00:23,  4.29it/s][tensor(257), tensor(11)]
DEBUG uniques tensor([ 11, 257]) tensor([1, 1])
Matched 1 times with 11
Matched 1 times with 257
iou for matched labels tensor([0.7305, 0.0698])
Matched labels: ['window', 'oven']
Clip similarities: [1.0, 0.767578125]
DEBUG best_match_after_iou_check [tensor(52), tensor(166)]
DEBUG uniques tensor([ 52, 166]) tensor([1, 1])
Matched 1 times with 52
Matched 1 times with 166
iou for matched labels tensor([0.3527, 0.3677])
Matched labels: ['shower_curtain', 'light_switch']
Clip similarities: [0.68505859375, 0.7294921875]
DEBUG best_match_after_iou_check [tensor(81), tensor(142)]
DEBUG uniques tensor([ 81, 142]) tensor([1, 1])
Matched 1 times with 81
Matched 1 times with 142
iou for matched labels tensor([0.7972, 0.2169])
Matched labels: ['picture', 'kitchen_counter']
Clip similarities: [0.78564453125, 0.65380859375]
Empty stage 2 mask
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(15)]
DEBUG uniques tensor([15]) tensor([1])
Matched 1 times with 15
iou for matched labels tensor([0.8561])
Matched labels: ['curtain']
Clip similarities: [0.798828125]
DEBUG best_match_after_iou_check [tensor(261), tensor(197)]
DEBUG uniques tensor([197, 261]) tensor([1, 1])
Matched 1 times with 197
Matched 1 times with 261
iou for matched labels tensor([0.8119, 0.0462])
Matched labels: ['projector_screen', 'radiator']
Clip similarities: [0.685546875, 0.70947265625]
DEBUG best_match_after_iou_check [tensor(73), tensor(192), tensor(88), tensor(151)]
DEBUG uniques tensor([ 73,  88, 151, 192]) tensor([1, 1, 1, 1])
Matched 1 times with 73
Matched 1 times with 88
Matched 1 times with 151
Matched 1 times with 192
iou for matched labels tensor([0.7910, 0.3168, 0.6864, 0.0142])
Matched labels: ['doorframe', 'person', 'box', 'bookshelf']
Clip similarities: [0.78076171875, 0.765625, 0.7216796875, 0.74365234375]
DEBUG best_match_after_iou_check [tensor(133), tensor(84), tensor(76)]
DEBUG uniques tensor([ 76,  84, 133]) tensor([1, 1, 1])
Matched 1 times with 76
Matched 1 times with 84
Matched 1 times with 133
iou for matched labels tensor([0.6531, 0.6319, 0.2534])
Matched labels: ['windowsill', 'window', 'doorframe']
Clip similarities: [0.8505859375, 1.0, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(123), tensor(211), tensor(166), tensor(416)]
DEBUG uniques tensor([123, 166, 211, 416]) tensor([1, 1, 1, 1])
Matched 1 times with 123
Matched 1 times with 166
Matched 1 times with 211
Matched 1 times with 416
iou for matched labels tensor([0.6774, 0.3991, 0.3115, 0.2588])
Matched labels: ['bookshelf', 'shelf', 'bookshelf', 'counter']
Clip similarities: [0.74365234375, 0.76220703125, 0.74365234375, 0.7392578125]
DEBUG best_match_after_iou_check [tensor(7), tensor(43), tensor(76), tensor(76), tensor(48), tensor(10)]
DEBUG uniques tensor([ 7, 10, 43, 48, 76]) tensor([1, 1, 1, 1, 2])
Matched 1 times with 7
Matched 1 times with 10
Matched 1 times with 43
Matched 1 times with 48
Matched 2 times with 76
Merge stage2 masks
iou for matched labels tensor([0.7368, 0.7046, 0.0582, 0.7544, 0.6113])
Matched labels: ['shelf', 'windowsill', 'bed', 'closet_door', 'windowsill']
Clip similarities: [0.76220703125, 0.8505859375, 0.658203125, 0.740234375, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(31), tensor(116), tensor(156), tensor(33), tensor(174)]
DEBUG uniques tensor([ 31,  33, 116, 156, 174]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 31
Matched 1 times with 33
Matched 1 times with 116
Matched 1 times with 156
Matched 1 times with 174
iou for matched labels tensor([0.6917, 0.7302, 0.3353, 0.4223, 0.4977])
Matched labels: ['doorframe', 'doorframe', 'person', 'doorframe', 'doorframe']
Clip similarities: [0.78076171875, 0.78076171875, 0.765625, 0.78076171875, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(68), tensor(124), tensor(256)]
DEBUG uniques tensor([ 68, 124, 256]) tensor([1, 1, 1])
Matched 1 times with 68
Matched 1 times with 124
Matched 1 times with 256
iou for matched labels tensor([0.6438, 0.5109, 0.3737])
Matched labels: ['blinds', 'closet_door', 'shoe']
Clip similarities: [0.8056640625, 0.740234375, 0.734375]
DEBUG best_match_after_iou_check [tensor(122), tensor(66), tensor(74), tensor(336), tensor(489), tensor(103), tensor(22), tensor(336)]
DEBUG uniques tensor([ 22,  66,  74, 103, 122, 336, 489]) tensor([1, 1, 1, 1, 1, 2, 1])
Matched 1 times with 22
Matched 1 times with 66
Matched 1 times with 74
Matched 1 times with 103
Matched 1 times with 122
Matched 2 times with 336
Merge stage2 masks
Matched 1 times with 489
iou for matched labels tensor([0.6687, 0.7667, 0.4366, 0.2159, 0.4873, 0.6275, 0.5555])
Matched labels: ['blinds', 'poster', 'doorframe', 'windowsill', 'doorframe', 'microwave', 'windowsill']
Clip similarities: [0.8056640625, 0.69189453125, 0.78076171875, 0.8505859375, 0.78076171875, 0.77099609375, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(375), tensor(101), tensor(208), tensor(375), tensor(236), tensor(2), tensor(210), tensor(119), tensor(143), tensor(287), tensor(140)]
DEBUG uniques tensor([  2, 101, 119, 140, 143, 208, 210, 236, 287, 375]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 2])
Matched 1 times with 2
Matched 1 times with 101
Matched 1 times with 119
Matched 1 times with 140
Matched 1 times with 143
Matched 1 times with 208
Matched 1 times with 210
Matched 1 times with 236
Matched 1 times with 287
Matched 2 times with 375
Merge stage2 masks
iou for matched labels tensor([0.4047, 0.1189, 0.4556, 0.8028, 0.0091, 0.4619, 0.1309, 0.4374, 0.7941,
        0.3564])
Matched labels: ['curtain', 'furniture', 'sink', 'shelf', 'furniture', 'shower_curtain', 'shower_wall', 'doorframe', 'closet_wall', 'tube']
Clip similarities: [0.798828125, 0.73876953125, 0.72265625, 0.76220703125, 0.73876953125, 0.68505859375, 0.68359375, 0.78076171875, 0.69873046875, 0.7197265625]
DEBUG best_match_after_iou_check [tensor(114), tensor(469), tensor(40), tensor(280)]
DEBUG uniques tensor([ 40, 114, 280, 469]) tensor([1, 1, 1, 1])
Matched 1 times with 40
Matched 1 times with 114
Matched 1 times with 280
Matched 1 times with 469
iou for matched labels tensor([0.7572, 0.6426, 0.0122, 0.6956])
Matched labels: ['projector_screen', 'window', 'projector_screen', 'window']
Clip similarities: [0.685546875, 1.0, 0.685546875, 1.0]
DEBUG best_match_after_iou_check [tensor(187), tensor(291), tensor(21), tensor(147), tensor(210)]
DEBUG uniques tensor([ 21, 147, 187, 210, 291]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 21
Matched 1 times with 147
Matched 1 times with 187
Matched 1 times with 210
Matched 1 times with 291
iou for matched labels tensor([0.6942, 0.7688, 0.0200, 0.4698, 0.8641])
Matched labels: ['table', 'window', 'door', 'doorframe', 'tv']
Clip similarities: [0.7451171875, 1.0, 0.82958984375, 0.78076171875, 0.72509765625]
DEBUG best_match_after_iou_check [tensor(95)]
DEBUG uniques tensor([95]) tensor([1])
Matched 1 times with 95
iou for matched labels tensor([0.1662])
Matched labels: ['curtain']
Clip similarities: [0.798828125]
DEBUG best_match_after_iou_check [tensor(31)]
DEBUG uniques tensor([31]) tensor([1])
Matched 1 times with 31
iou for matched labels tensor([0.7291])
Matched labels: ['blackboard']
Clip similarities: [0.66259765625]
DEBUG best_match_after_iou_check [tensor(96), tensor(128), tensor(49), tensor(115), tensor(37), tensor(115)]
DEBUG uniques tensor([ 37,  49,  96, 115, 128]) tensor([1, 1, 1, 2, 1])
Matched 1 times with 37
Matched 1 times with 49
Matched 1 times with 96
Matched 2 times with 115
Merge stage2 masks
Matched 1 times with 128
iou for matched labels tensor([0.6866, 0.4289, 0.0416, 0.5576, 0.1614])
Matched labels: ['windowsill', 'window', 'closet_door', 'shelf', 'doorframe']
Clip similarities: [0.8505859375, 1.0, 0.740234375, 0.76220703125, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(75), tensor(135)]
DEBUG uniques tensor([ 75, 135]) tensor([1, 1])
Matched 1 times with 75
Matched 1 times with 135
iou for matched labels tensor([0.6691, 0.3187])
Matched labels: ['monitor', 'projector_screen']
Clip similarities: [0.736328125, 0.685546875]
DEBUG best_match_after_iou_check [tensor(14), tensor(149), tensor(69), tensor(78)]
DEBUG uniques tensor([ 14,  69,  78, 149]) Select thresholds for refinement:  30%|██▉       | 42/142 [00:11<00:24,  4.11it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:12<00:27,  3.62it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:12<00:33,  2.91it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:12<00:28,  3.38it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:13<00:26,  3.68it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:13<00:24,  3.85it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:13<00:28,  3.24it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:14<00:28,  3.26it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:14<00:27,  3.29it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:14<00:24,  3.76it/s]Select thresholds for refinement:  37%|███▋      | 52/142 [00:14<00:24,  3.65it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:15<00:24,  3.61it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:15<00:23,  3.72it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:15<00:22,  3.92it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:15<00:20,  4.12it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:15<00:19,  4.32it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:16<00:18,  4.54it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:16<00:17,  4.73it/s]tensor([1, 1, 1, 1])
Matched 1 times with 14
Matched 1 times with 69
Matched 1 times with 78
Matched 1 times with 149
iou for matched labels tensor([0.8551, 0.7897, 0.0150, 0.3614])
Matched labels: ['blinds', 'projector_screen', 'desk', 'blinds']
Clip similarities: [0.8056640625, 0.685546875, 0.6953125, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(2), tensor(7), tensor(6), tensor(57)]
DEBUG uniques tensor([ 2,  6,  7, 57]) tensor([1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 6
Matched 1 times with 7
Matched 1 times with 57
iou for matched labels tensor([0.7473, 0.5840, 0.7062, 0.6873])
Matched labels: ['mailbox', 'mailbox', 'mailbox', 'file_cabinet']
Clip similarities: [0.697265625, 0.697265625, 0.697265625, 0.69970703125]
DEBUG best_match_after_iou_check [tensor(274), tensor(111), tensor(32), tensor(101), tensor(28), tensor(88), tensor(88), tensor(204), tensor(88), tensor(33)]
DEBUG uniques tensor([ 28,  32,  33,  88, 101, 111, 204, 274]) tensor([1, 1, 1, 3, 1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 32
Matched 1 times with 33
Matched 3 times with 88
Merge stage2 masks
Matched 1 times with 101
Matched 1 times with 111
Matched 1 times with 204
Matched 1 times with 274
iou for matched labels tensor([0.7782, 0.2562, 0.4639, 0.1567, 0.3095, 0.3872, 0.7356, 0.7136])
Matched labels: ['curtain', 'door', 'shower_door', 'door', 'window', 'shower_door', 'windowsill', 'window']
Clip similarities: [0.798828125, 0.82958984375, 0.74072265625, 0.82958984375, 1.0, 0.74072265625, 0.8505859375, 1.0]
DEBUG best_match_after_iou_check [tensor(162), tensor(29)]
DEBUG uniques tensor([ 29, 162]) tensor([1, 1])
Matched 1 times with 29
Matched 1 times with 162
iou for matched labels tensor([0.5965, 0.0040])
Matched labels: ['chair', 'stair_rail']
Clip similarities: [0.71435546875, 0.6279296875]
DEBUG best_match_after_iou_check [tensor(90), tensor(83)]
DEBUG uniques tensor([83, 90]) tensor([1, 1])
Matched 1 times with 83
Matched 1 times with 90
iou for matched labels tensor([0.1127, 0.2584])
Matched labels: ['door', 'folded_chair']
Clip similarities: [0.82958984375, 0.57373046875]
DEBUG best_match_after_iou_check [tensor(47), tensor(23), tensor(178), tensor(47), tensor(86)]
DEBUG uniques tensor([ 23,  47,  86, 178]) tensor([1, 2, 1, 1])
Matched 1 times with 23
Matched 2 times with 47
Merge stage2 masks
Matched 1 times with 86
Matched 1 times with 178
iou for matched labels tensor([0.0281, 0.7765, 0.6144, 0.2605])
Matched labels: ['kitchen_cabinet', 'bathroom_stall_door', 'refrigerator', 'kitchen_cabinet']
Clip similarities: [0.71484375, 0.65625, 0.70068359375, 0.71484375]
DEBUG best_match_after_iou_check [tensor(1), tensor(64), tensor(56), tensor(28), tensor(261), tensor(318), tensor(73), tensor(64)]
DEBUG uniques tensor([  1,  28,  56,  64,  73, 261, 318]) tensor([1, 1, 1, 2, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 28
Matched 1 times with 56
Matched 2 times with 64
Merge stage2 masks
Matched 1 times with 73
Matched 1 times with 261
Matched 1 times with 318
iou for matched labels tensor([0.2043, 0.7902, 0.8156, 0.5101, 0.0305, 0.5454, 0.7895])
Matched labels: ['whiteboard', 'poster', 'door', 'shelf', 'trash_can', 'poster', 'door']
Clip similarities: [0.63232421875, 0.69189453125, 0.82958984375, 0.76220703125, 0.69775390625, 0.69189453125, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.4997])
Matched labels: ['bookshelf']
Clip similarities: [0.74365234375]
DEBUG best_match_after_iou_check [tensor(63), tensor(106), tensor(110), tensor(110), tensor(190), tensor(122), tensor(8), tensor(28)]
DEBUG uniques tensor([  8,  28,  63, 106, 110, 122, 190]) tensor([1, 1, 1, 1, 2, 1, 1])
Matched 1 times with 8
Matched 1 times with 28
Matched 1 times with 63
Matched 1 times with 106
Matched 2 times with 110
Merge stage2 masks
Matched 1 times with 122
Matched 1 times with 190
iou for matched labels tensor([0.1178, 0.8132, 0.0806, 0.0724, 0.8822, 0.0051, 0.3929])
Matched labels: ['file_cabinet', 'mat', 'file_cabinet', 'paper', 'file_cabinet', 'copier', 'bin']
Clip similarities: [0.69970703125, 0.69580078125, 0.69970703125, 0.74755859375, 0.69970703125, 0.71728515625, 0.64599609375]
DEBUG best_match_after_iou_check [tensor(97), tensor(4)]
DEBUG uniques tensor([ 4, 97]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 97
iou for matched labels tensor([0.8653, 0.6839])
Matched labels: ['projector_screen', 'monitor']
Clip similarities: [0.685546875, 0.736328125]
DEBUG best_match_after_iou_check [tensor(14), tensor(3), tensor(109), tensor(173)]
DEBUG uniques tensor([  3,  14, 109, 173]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 14
Matched 1 times with 109
Matched 1 times with 173
iou for matched labels tensor([0.7802, 0.8664, 0.6274, 0.0030])
Matched labels: ['shelf', 'shelf', 'file_cabinet', 'furniture']
Clip similarities: [0.76220703125, 0.76220703125, 0.69970703125, 0.73876953125]
DEBUG best_match_after_iou_check [tensor(181), tensor(0), tensor(133), tensor(171), tensor(171), tensor(153), tensor(70), tensor(70), tensor(153), tensor(280), tensor(70), tensor(70), tensor(177), tensor(40), tensor(146)]
DEBUG uniques tensor([  0,  40,  70, 133, 146, 153, 171, 177, 181, 280]) tensor([1, 1, 4, 1, 1, 2, 2, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 40
Matched 4 times with 70
Merge stage2 masks
Matched 1 times with 133
Matched 1 times with 146
Matched 2 times with 153
Merge stage2 masks
Matched 2 times with 171
Merge stage2 masks
Matched 1 times with 177
Matched 1 times with 181
Matched 1 times with 280
iou for matched labels tensor([0.3060, 0.0000, 0.0023, 0.0888, 0.1398, 0.1306, 0.0522, 0.3950, 0.2291,
        0.0989])
Matched labels: ['blinds', 'whiteboard', 'blinds', 'shower_curtain_rod', 'blinds', 'blinds', 'blinds', 'blinds', 'fan', 'blinds']
Clip similarities: [0.8056640625, 0.63232421875, 0.8056640625, 0.62353515625, 0.8056640625, 0.8056640625, 0.8056640625, 0.8056640625, 0.736328125, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(210), tensor(222)]
DEBUG uniques tensor([210, 222]) tensor([1, 1])
Matched 1 times with 210
Matched 1 times with 222
iou for matched labels tensor([0.4065, 0.0342])
Matched labels: ['radiator', 'doorframe']
Clip similarities: [0.70947265625, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(134), tensor(62), tensor(62)]
DEBUG uniques tensor([ 62, 134]) tensor([2, 1])
Matched 2 times with 62
Merge stage2 masks
Matched 1 times with 134
iou for matched labels tensor([0.4988, 0.1432])
Matched labels: ['projector_screen', 'chair']
Clip similarities: [0.685546875, 0.71435546875]
DEBUG best_match_after_iou_check [tensor(118), tensor(104)]
DEBUG uniques tensor([104, 118]) tensor([1, 1])
Matched 1 times with 104
Matched 1 times with 118
iou for matched labels tensor([0.1569, 0.0018])
Matched labels: ['monitor', 'folded_chair']
Clip similarities: [0.736328125, 0.57373046875]
DEBUG best_match_after_iou_check [tensor(92), tensor(24)]
DEBUG uniques tensor([24, 92]) tensor([1, 1])
Matched 1 times with 24
Matched 1 times with 92
iou for matched labels tensor([0.6265, 0.6918])
Matched labels: ['windowsill', 'bed']
Clip similarities: [0.8505859375, 0.658203125]
DEBUG best_match_after_iou_check [tensor(30), tensor(74)]
DEBUG uniques tensor([30, 74]) tensor([1, 1])
Matched 1 times with 30
Matched 1 times with 74
iou for matched labels tensor([0.6100, 0.1983])
Matched labels: ['curtain', 'doorframe']
Clip similarities: [0.798828125, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(8), tensor(65), tensor(74)]
DEBUG uniques tensor([ 8, 65, 74]) tensor([1, 1, 1])
Matched 1 times with 8
Matched 1 times with 65
Matched 1 times with 74
iou for matched labels tensor([0.6453, 0.7080, 0.6037])
Matched labels: ['shelf', 'door', 'window']
Clip similarities: [0.76220703125, 0.82958984375, 1.0]
DEBUG best_match_after_iou_check [tensor(34), tensor(34), tensor(61)]
DEBUG uniques tensor([34, 61]) tensor([2, 1])
Matched 2 times with 34
Merge stage2 masks
Matched 1 times with 61
iou for matched labels tensor([0.2584, 0.8098])
Matched labels: ['blackboard', 'blinds']
Select thresholds for refinement:  42%|████▏     | 60/142 [00:16<00:17,  4.69it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:16<00:17,  4.57it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:17<00:19,  4.07it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:17<00:17,  4.47it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:17<00:18,  4.24it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:17<00:18,  4.14it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:18<00:18,  4.21it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:18<00:17,  4.41it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:18<00:15,  4.70it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:18<00:16,  4.37it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:18<00:14,  5.13it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:19<00:16,  4.43it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:19<00:14,  4.99it/s]Select thresholds for refinement:  51%|█████▏    | 73/142 [00:19<00:13,  5.04it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:19<00:13,  5.22it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:19<00:14,  4.51it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:20<00:15,  4.17it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:20<00:16,  4.00it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:20<00:16,  3.83it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:20<00:15,  4.12it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:21<00:17,  3.45it/s]Clip similarities: [0.66259765625, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(45)]
DEBUG uniques tensor([45]) tensor([1])
Matched 1 times with 45
iou for matched labels tensor([0.6030])
Matched labels: ['window']
Clip similarities: [1.0]
DEBUG best_match_after_iou_check [tensor(53), tensor(65), tensor(104), tensor(158)]
DEBUG uniques tensor([ 53,  65, 104, 158]) tensor([1, 1, 1, 1])
Matched 1 times with 53
Matched 1 times with 65
Matched 1 times with 104
Matched 1 times with 158
iou for matched labels tensor([0.1740, 0.7851, 0.0279, 0.8207])
Matched labels: ['ceiling', 'curtain', 'dresser', 'monitor']
Clip similarities: [0.693359375, 0.798828125, 0.689453125, 0.736328125]
DEBUG best_match_after_iou_check [tensor(7), tensor(119), tensor(201)]
DEBUG uniques tensor([  7, 119, 201]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 119
Matched 1 times with 201
iou for matched labels tensor([0.8813, 0.4833, 0.5233])
Matched labels: ['plant', 'shower_curtain_rod', 'doorframe']
Clip similarities: [0.748046875, 0.62353515625, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(6), tensor(85), tensor(21), tensor(9), tensor(7), tensor(225), tensor(14), tensor(14), tensor(14)]
DEBUG uniques tensor([  6,   7,   9,  14,  21,  85, 225]) tensor([1, 1, 1, 3, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 7
Matched 1 times with 9
Matched 3 times with 14
Merge stage2 masks
Matched 1 times with 21
Matched 1 times with 85
Matched 1 times with 225
iou for matched labels tensor([0.6638, 0.2434, 0.1534, 0.0314, 0.7873, 0.6024, 0.0784])
Matched labels: ['ladder', 'bin', 'crate', 'door', 'door', 'door', 'door']
Clip similarities: [0.740234375, 0.64599609375, 0.70263671875, 0.82958984375, 0.82958984375, 0.82958984375, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(58)]
DEBUG uniques tensor([58]) tensor([1])
Matched 1 times with 58
iou for matched labels tensor([0.7959])
Matched labels: ['poster']
Clip similarities: [0.69189453125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(44), tensor(13)]
DEBUG uniques tensor([13, 44]) tensor([1, 1])
Matched 1 times with 13
Matched 1 times with 44
iou for matched labels tensor([0.1033, 0.8649])
Matched labels: ['tv', 'blinds']
Clip similarities: [0.72509765625, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(13)]
DEBUG uniques tensor([13]) tensor([1])
Matched 1 times with 13
iou for matched labels tensor([0.8456])
Matched labels: ['chair']
Clip similarities: [0.71435546875]
DEBUG best_match_after_iou_check [tensor(14), tensor(281), tensor(397)]
DEBUG uniques tensor([ 14, 281, 397]) tensor([1, 1, 1])
Matched 1 times with 14
Matched 1 times with 281
Matched 1 times with 397
iou for matched labels tensor([0.5088, 0.7129, 0.0061])
Matched labels: ['projector_screen', 'rail', 'monitor']
Clip similarities: [0.685546875, 0.6923828125, 0.736328125]
DEBUG best_match_after_iou_check [tensor(69), tensor(77)]
DEBUG uniques tensor([69, 77]) tensor([1, 1])
Matched 1 times with 69
Matched 1 times with 77
iou for matched labels tensor([0.6179, 0.2192])
Matched labels: ['bar', 'table']
Clip similarities: [0.70654296875, 0.7451171875]
DEBUG best_match_after_iou_check [tensor(214), tensor(274), tensor(64), tensor(150), tensor(249)]
DEBUG uniques tensor([ 64, 150, 214, 249, 274]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 64
Matched 1 times with 150
Matched 1 times with 214
Matched 1 times with 249
Matched 1 times with 274
iou for matched labels tensor([0.8140, 0.7447, 0.4088, 0.6327, 0.5041])
Matched labels: ['object', 'curtain', 'doorframe', 'shower_curtain', 'shower_curtain_rod']
Clip similarities: [0.79248046875, 0.798828125, 0.78076171875, 0.68505859375, 0.62353515625]
DEBUG best_match_after_iou_check [tensor(66), tensor(125), tensor(166)]
DEBUG uniques tensor([ 66, 125, 166]) tensor([1, 1, 1])
Matched 1 times with 66
Matched 1 times with 125
Matched 1 times with 166
iou for matched labels tensor([0.0277, 0.5204, 0.0256])
Matched labels: ['bathroom_stall', 'bathroom_stall', 'sink']
Clip similarities: [0.6982421875, 0.6982421875, 0.72265625]
DEBUG best_match_after_iou_check [tensor(91), tensor(20), tensor(200), tensor(177)]
DEBUG uniques tensor([ 20,  91, 177, 200]) tensor([1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 91
Matched 1 times with 177
Matched 1 times with 200
iou for matched labels tensor([0.3610, 0.8714, 0.6016, 0.3732])
Matched labels: ['shower_door', 'blinds', 'shower_wall', 'shower_wall']
Clip similarities: [0.74072265625, 0.8056640625, 0.68359375, 0.68359375]
DEBUG best_match_after_iou_check [tensor(47)]
DEBUG uniques tensor([47]) tensor([1])
Matched 1 times with 47
iou for matched labels tensor([0.6025])
Matched labels: ['window']
Clip similarities: [1.0]
DEBUG best_match_after_iou_check [tensor(20), tensor(85), tensor(64)]
DEBUG uniques tensor([20, 64, 85]) tensor([1, 1, 1])
Matched 1 times with 20
Matched 1 times with 64
Matched 1 times with 85
iou for matched labels tensor([0.0477, 0.5063, 0.0505])
Matched labels: ['laundry_hamper', 'file_cabinet', 'copier']
Clip similarities: [0.63720703125, 0.69970703125, 0.71728515625]
DEBUG best_match_after_iou_check [tensor(302), tensor(95), tensor(302)]
DEBUG uniques tensor([ 95, 302]) tensor([1, 2])
Matched 1 times with 95
Matched 2 times with 302
Merge stage2 masks
iou for matched labels tensor([0.7043, 0.4064])
Matched labels: ['doorframe', 'light']
Clip similarities: [0.78076171875, 0.79052734375]
DEBUG best_match_after_iou_check [tensor(36)]
DEBUG uniques tensor([36]) tensor([1])
Matched 1 times with 36
iou for matched labels tensor([0.1594])
Matched labels: ['oven']
Clip similarities: [0.767578125]
DEBUG best_match_after_iou_check [tensor(23), tensor(175), tensor(23), tensor(5), tensor(276), tensor(133)]
DEBUG uniques tensor([  5,  23, 133, 175, 276]) tensor([1, 2, 1, 1, 1])
Matched 1 times with 5
Matched 2 times with 23
Merge stage2 masks
Matched 1 times with 133
Matched 1 times with 175
Matched 1 times with 276
iou for matched labels tensor([0.3846, 0.4318, 0.4889, 0.3852, 0.6244])
Matched labels: ['folded_chair', 'projector_screen', 'door', 'projector_screen', 'projector_screen']
Clip similarities: [0.57373046875, 0.685546875, 0.82958984375, 0.685546875, 0.685546875]
DEBUG best_match_after_iou_check [tensor(122), tensor(0)]
DEBUG uniques tensor([  0, 122]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 122
iou for matched labels tensor([0.7542, 0.0724])
Matched labels: ['whiteboard', 'door']
Clip similarities: [0.63232421875, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(30), tensor(81), tensor(186), tensor(81), tensor(242), tensor(163), tensor(39), tensor(39), tensor(170), tensor(47), tensor(55), tensor(28)]
DEBUG uniques tensor([ 28,  30,  39,  47,  55,  81, 163, 170, 186, 242]) tensor([1, 1, 2, 1, 1, 2, 1, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 30
Matched 2 times with 39
Merge stage2 masks
Matched 1 times with 47
Matched 1 times with 55
Matched 2 times with 81
Merge stage2 masks
Matched 1 times with 163
Matched 1 times with 170
Matched 1 times with 186
Matched 1 times with 242
iou for matched labels tensor([0.1689, 0.0177, 0.0498, 0.4317, 0.0224, 0.0037, 0.1117, 0.6596, 0.4887,
        0.5700])
Matched labels: ['blackboard', 'windowsill', 'broom', 'doorframe', 'windowsill', 'chair', 'stair_rail', 'mat', 'windowsill', 'windowsill']
Clip similarities: [0.66259765625, 0.8505859375, 0.70654296875, 0.78076171875, 0.8505859375, 0.71435546875, 0.6279296875, 0.69580078125, 0.8505859375, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(166), tensor(166), tensor(81), tensor(152), tensor(192), tensor(445), tensor(316), tensor(149), tensor(0), tensor(250), tensor(452), tensor(45)]
DEBUG uniques tensor([  0,  45,  81, 149, 152, 166, 192, 250, 316, 445, 452]) tensor([1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 45
Matched 1 times with 81
Matched 1 times with 149
Matched 1 times with 152
Matched 2 times with 166
Merge stage2 masks
Matched 1 times with 192
Matched 1 times with 250
Matched 1 times with 316
Matched 1 times with 445
Matched 1 times with 452
iou for matched labels Select thresholds for refinement:  57%|█████▋    | 81/142 [00:21<00:21,  2.78it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:22<00:20,  2.90it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:22<00:17,  3.44it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:22<00:15,  3.83it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:22<00:15,  3.77it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:23<00:15,  3.57it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:23<00:13,  3.94it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:23<00:11,  4.58it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:23<00:11,  4.70it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:23<00:11,  4.42it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:24<00:11,  4.39it/s]Select thresholds for refinement:  65%|██████▍   | 92/142 [00:24<00:11,  4.27it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:24<00:10,  4.81it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:24<00:11,  4.21it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:25<00:12,  3.86it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:25<00:12,  3.77it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:25<00:11,  3.98it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:25<00:12,  3.64it/s]tensor([0.6266, 0.6257, 0.5745, 0.1166, 0.2672, 0.4375, 0.5207, 0.3304, 0.5509,
        0.8139, 0.8132])
Matched labels: ['windowsill', 'windowsill', 'doorframe', 'table', 'blinds', 'blinds', 'blackboard', 'table', 'table', 'blinds', 'blinds']
Clip similarities: [0.8505859375, 0.8505859375, 0.78076171875, 0.7451171875, 0.8056640625, 0.8056640625, 0.66259765625, 0.7451171875, 0.7451171875, 0.8056640625, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(88), tensor(264), tensor(210), tensor(47), tensor(10), tensor(210), tensor(118)]
DEBUG uniques tensor([ 10,  47,  88, 118, 210, 264]) tensor([1, 1, 1, 1, 2, 1])
Matched 1 times with 10
Matched 1 times with 47
Matched 1 times with 88
Matched 1 times with 118
Matched 2 times with 210
Merge stage2 masks
Matched 1 times with 264
iou for matched labels tensor([0.7646, 0.7324, 0.5458, 0.8051, 0.0933, 0.3000])
Matched labels: ['projector_screen', 'monitor', 'shelf', 'shelf', 'lamp', 'microwave']
Clip similarities: [0.685546875, 0.736328125, 0.76220703125, 0.76220703125, 0.6796875, 0.77099609375]
DEBUG best_match_after_iou_check [tensor(89), tensor(193)]
DEBUG uniques tensor([ 89, 193]) tensor([1, 1])
Matched 1 times with 89
Matched 1 times with 193
iou for matched labels tensor([0.7535, 0.4245])
Matched labels: ['mirror', 'chair']
Clip similarities: [0.72216796875, 0.71435546875]
DEBUG best_match_after_iou_check [tensor(124), tensor(34), tensor(65)]
DEBUG uniques tensor([ 34,  65, 124]) tensor([1, 1, 1])
Matched 1 times with 34
Matched 1 times with 65
Matched 1 times with 124
iou for matched labels tensor([0.0395, 0.5760, 0.6256])
Matched labels: ['tv_stand', 'windowsill', 'windowsill']
Clip similarities: [0.69287109375, 0.8505859375, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(171), tensor(100), tensor(171), tensor(185), tensor(185), tensor(128)]
DEBUG uniques tensor([100, 128, 171, 185]) tensor([1, 1, 2, 2])
Matched 1 times with 100
Matched 1 times with 128
Matched 2 times with 171
Merge stage2 masks
Matched 2 times with 185
Merge stage2 masks
iou for matched labels tensor([0.0642, 0.5850, 0.2800, 0.0866])
Matched labels: ['column', 'cart', 'person', 'windowsill']
Clip similarities: [0.68212890625, 0.70458984375, 0.765625, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(139), tensor(30), tensor(198), tensor(198), tensor(6), tensor(166), tensor(166), tensor(209)]
DEBUG uniques tensor([  6,  30, 139, 166, 198, 209]) tensor([1, 1, 1, 2, 2, 1])
Matched 1 times with 6
Matched 1 times with 30
Matched 1 times with 139
Matched 2 times with 166
Merge stage2 masks
Matched 2 times with 198
Merge stage2 masks
Matched 1 times with 209
iou for matched labels tensor([0.7947, 0.9163, 0.5220, 0.0317, 0.2749, 0.1537])
Matched labels: ['window', 'door', 'bathroom_stall_door', 'shower_curtain_rod', 'bathroom_vanity', 'sink']
Clip similarities: [1.0, 0.82958984375, 0.65625, 0.62353515625, 0.6337890625, 0.72265625]
DEBUG best_match_after_iou_check [tensor(23), tensor(56)]
DEBUG uniques tensor([23, 56]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 56
iou for matched labels tensor([0.0766, 0.6390])
Matched labels: ['folded_chair', 'tv']
Clip similarities: [0.57373046875, 0.72509765625]
DEBUG best_match_after_iou_check [tensor(38), tensor(74), tensor(101)]
DEBUG uniques tensor([ 38,  74, 101]) tensor([1, 1, 1])
Matched 1 times with 38
Matched 1 times with 74
Matched 1 times with 101
iou for matched labels tensor([0.7708, 0.7293, 0.6295])
Matched labels: ['toilet_paper_dispenser', 'paper_towel_dispenser', 'mirror']
Clip similarities: [0.615234375, 0.6064453125, 0.72216796875]
DEBUG best_match_after_iou_check [tensor(134), tensor(51), tensor(170), tensor(165), tensor(51), tensor(89)]
DEBUG uniques tensor([ 51,  89, 134, 165, 170]) tensor([2, 1, 1, 1, 1])
Matched 2 times with 51
Merge stage2 masks
Matched 1 times with 89
Matched 1 times with 134
Matched 1 times with 165
Matched 1 times with 170
iou for matched labels tensor([0.7932, 0.6653, 0.6359, 0.2618, 0.2963])
Matched labels: ['windowsill', 'person', 'windowsill', 'bookshelf', 'bookshelf']
Clip similarities: [0.8505859375, 0.765625, 0.8505859375, 0.74365234375, 0.74365234375]
DEBUG best_match_after_iou_check [tensor(19), tensor(148)]
DEBUG uniques tensor([ 19, 148]) tensor([1, 1])
Matched 1 times with 19
Matched 1 times with 148
iou for matched labels tensor([0.8518, 0.1312])
Matched labels: ['projector_screen', 'doorframe']
Clip similarities: [0.685546875, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(73), tensor(71)]
DEBUG uniques tensor([71, 73]) tensor([1, 1])
Matched 1 times with 71
Matched 1 times with 73
iou for matched labels tensor([0.9341, 0.8144])
Matched labels: ['projector_screen', 'door']
Clip similarities: [0.685546875, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(81)]
DEBUG uniques tensor([81]) tensor([1])
Matched 1 times with 81
iou for matched labels tensor([0.8471])
Matched labels: ['shower_curtain']
Clip similarities: [0.68505859375]
DEBUG best_match_after_iou_check [tensor(88), tensor(123), tensor(123), tensor(137)]
DEBUG uniques tensor([ 88, 123, 137]) tensor([1, 2, 1])
Matched 1 times with 88
Matched 2 times with 123
Merge stage2 masks
Matched 1 times with 137
iou for matched labels tensor([0.2570, 0.6248, 0.3429])
Matched labels: ['door', 'mirror', 'shower_door']
Clip similarities: [0.82958984375, 0.72216796875, 0.74072265625]
DEBUG best_match_after_iou_check [tensor(119), tensor(17), tensor(9), tensor(319), tensor(2)]
DEBUG uniques tensor([  2,   9,  17, 119, 319]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 9
Matched 1 times with 17
Matched 1 times with 119
Matched 1 times with 319
iou for matched labels tensor([0.4103, 0.7809, 0.0072, 0.3676, 0.8018])
Matched labels: ['chair', 'tv', 'light_switch', 'doorframe', 'tv']
Clip similarities: [0.71435546875, 0.72509765625, 0.7294921875, 0.78076171875, 0.72509765625]
DEBUG best_match_after_iou_check [tensor(130), tensor(115), tensor(9), tensor(69), tensor(25)]
DEBUG uniques tensor([  9,  25,  69, 115, 130]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 25
Matched 1 times with 69
Matched 1 times with 115
Matched 1 times with 130
iou for matched labels tensor([0.6929, 0.3762, 0.5459, 0.6148, 0.3027])
Matched labels: ['doorframe', 'doorframe', 'projector_screen', 'door', 'doorframe']
Clip similarities: [0.78076171875, 0.78076171875, 0.685546875, 0.82958984375, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(149), tensor(146), tensor(146), tensor(197), tensor(95), tensor(95), tensor(95), tensor(95), tensor(22)]
DEBUG uniques tensor([ 22,  95, 146, 149, 197]) tensor([1, 4, 2, 1, 1])
Matched 1 times with 22
Matched 4 times with 95
Merge stage2 masks
Matched 2 times with 146
Merge stage2 masks
Matched 1 times with 149
Matched 1 times with 197
iou for matched labels tensor([0.4718, 0.4763, 0.0032, 0.2621, 0.4298])
Matched labels: ['curtain', 'dresser', 'fan', 'ceiling_light', 'curtain']
Clip similarities: [0.798828125, 0.689453125, 0.736328125, 0.67236328125, 0.798828125]
DEBUG best_match_after_iou_check [tensor(74), tensor(170)]
DEBUG uniques tensor([ 74, 170]) tensor([1, 1])
Matched 1 times with 74
Matched 1 times with 170
iou for matched labels tensor([0.7678, 0.6060])
Matched labels: ['window', 'curtain']
Clip similarities: [1.0, 0.798828125]
DEBUG best_match_after_iou_check [tensor(197), tensor(217), tensor(280), tensor(197), tensor(366), tensor(126), tensor(178)]
DEBUG uniques tensor([126, 178, 197, 217, 280, 366]) tensor([1, 1, 2, 1, 1, 1])
Matched 1 times with 126
Matched 1 times with 178
Matched 2 times with 197
Merge stage2 masks
Matched 1 times with 217
Matched 1 times with 280
Matched 1 times with 366
iou for matched labels tensor([0.2033, 0.2245, 0.1385, 0.0030, 0.0072, 0.3266])
Matched labels: ['column', 'window', 'window', 'file_cabinet', 'refrigerator', 'windowsill']
Clip similarities: [0.68212890625, 1.0, 1.0, 0.69970703125, 0.70068359375, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(118), tensor(123), tensor(273), tensor(205), tensor(260)]
DEBUG uniques tensor([118, 123, 205, 260, 273]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 118
Matched 1 times with 123
Select thresholds for refinement:  70%|██████▉   | 99/142 [00:26<00:12,  3.47it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:26<00:11,  3.59it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:26<00:11,  3.53it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:27<00:11,  3.61it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:27<00:10,  3.57it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:27<00:09,  3.88it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:27<00:10,  3.69it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:27<00:07,  4.54it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:28<00:11,  3.18it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:28<00:10,  3.28it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:29<00:10,  3.20it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:29<00:10,  3.10it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:29<00:08,  3.46it/s]Select thresholds for refinement:  79%|███████▉  | 112/142 [00:29<00:08,  3.57it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:30<00:08,  3.40it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:30<00:09,  2.94it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:30<00:08,  3.18it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:31<00:07,  3.57it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:31<00:06,  3.87it/s]Matched 1 times with 205
Matched 1 times with 260
Matched 1 times with 273
iou for matched labels tensor([0.6366, 0.7985, 0.7044, 0.0707, 0.8147])
Matched labels: ['file_cabinet', 'desk', 'desk', 'couch', 'shelf']
Clip similarities: [0.69970703125, 0.6953125, 0.6953125, 0.7255859375, 0.76220703125]
DEBUG best_match_after_iou_check [tensor(41), tensor(2), tensor(2), tensor(34)]
DEBUG uniques tensor([ 2, 34, 41]) tensor([2, 1, 1])
Matched 2 times with 2
Merge stage2 masks
Matched 1 times with 34
Matched 1 times with 41
iou for matched labels tensor([0.0093, 0.1058, 0.0124])
Matched labels: ['laundry_hamper', 'washing_machine', 'washing_machine']
Clip similarities: [0.63720703125, 0.716796875, 0.716796875]
DEBUG best_match_after_iou_check [tensor(76), tensor(98), tensor(67), tensor(156), tensor(32)]
DEBUG uniques tensor([ 32,  67,  76,  98, 156]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 32
Matched 1 times with 67
Matched 1 times with 76
Matched 1 times with 98
Matched 1 times with 156
iou for matched labels tensor([0.7475, 0.3106, 0.7691, 0.7989, 0.8565])
Matched labels: ['shelf', 'door', 'blinds', 'shelf', 'blinds']
Clip similarities: [0.76220703125, 0.82958984375, 0.8056640625, 0.76220703125, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(102), tensor(41), tensor(221), tensor(2), tensor(85), tensor(76)]
DEBUG uniques tensor([  2,  41,  76,  85, 102, 221]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 41
Matched 1 times with 76
Matched 1 times with 85
Matched 1 times with 102
Matched 1 times with 221
iou for matched labels tensor([0.7285, 0.4151, 0.8303, 0.8954, 0.6876, 0.4132])
Matched labels: ['doorframe', 'projector_screen', 'light', 'projector_screen', 'door', 'doorframe']
Clip similarities: [0.78076171875, 0.685546875, 0.79052734375, 0.685546875, 0.82958984375, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(30), tensor(139), tensor(215), tensor(156)]
DEBUG uniques tensor([ 30, 139, 156, 215]) tensor([1, 1, 1, 1])
Matched 1 times with 30
Matched 1 times with 139
Matched 1 times with 156
Matched 1 times with 215
iou for matched labels tensor([0.7339, 0.6638, 0.5238, 0.2387])
Matched labels: ['windowsill', 'windowsill', 'doorframe', 'doorframe']
Clip similarities: [0.8505859375, 0.8505859375, 0.78076171875, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(94), tensor(148), tensor(148), tensor(153), tensor(153)]
DEBUG uniques tensor([ 94, 148, 153]) tensor([1, 2, 2])
Matched 1 times with 94
Matched 2 times with 148
Merge stage2 masks
Matched 2 times with 153
Merge stage2 masks
iou for matched labels tensor([0.0322, 0.6785, 0.0175])
Matched labels: ['microwave', 'counter', 'folded_chair']
Clip similarities: [0.77099609375, 0.7392578125, 0.57373046875]
DEBUG best_match_after_iou_check [tensor(195), tensor(6), tensor(127), tensor(0), tensor(102), tensor(141)]
DEBUG uniques tensor([  0,   6, 102, 127, 141, 195]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 6
Matched 1 times with 102
Matched 1 times with 127
Matched 1 times with 141
Matched 1 times with 195
iou for matched labels tensor([0.5502, 0.8747, 0.4106, 0.0000, 0.0210, 0.0729])
Matched labels: ['curtain', 'picture', 'closet_door', 'lamp', 'monitor', 'window']
Clip similarities: [0.798828125, 0.78564453125, 0.740234375, 0.6796875, 0.736328125, 1.0]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(39), tensor(92), tensor(13), tensor(1)]
DEBUG uniques tensor([ 1, 13, 39, 92]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 13
Matched 1 times with 39
Matched 1 times with 92
iou for matched labels tensor([0.7932, 0.2562, 0.2221, 0.3675])
Matched labels: ['window', 'poster', 'poster', 'door']
Clip similarities: [1.0, 0.69189453125, 0.69189453125, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(2), tensor(73)]
DEBUG uniques tensor([ 2, 73]) tensor([1, 1])
Matched 1 times with 2
Matched 1 times with 73
iou for matched labels tensor([0.1903, 0.6903])
Matched labels: ['shower_curtain_rod', 'windowsill']
Clip similarities: [0.62353515625, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(146), tensor(269), tensor(18)]
DEBUG uniques tensor([ 18, 146, 269]) tensor([1, 1, 1])
Matched 1 times with 18
Matched 1 times with 146
Matched 1 times with 269
iou for matched labels tensor([0.5301, 0.4478, 0.3810])
Matched labels: ['chair', 'chair', 'blackboard']
Clip similarities: [0.71435546875, 0.71435546875, 0.66259765625]
DEBUG best_match_after_iou_check [tensor(155), tensor(82), tensor(61), tensor(50), tensor(64)]
DEBUG uniques tensor([ 50,  61,  64,  82, 155]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 50
Matched 1 times with 61
Matched 1 times with 64
Matched 1 times with 82
Matched 1 times with 155
iou for matched labels tensor([0.7031, 0.6826, 0.4227, 0.6454, 0.0839])
Matched labels: ['monitor', 'ceiling_light', 'closet_door', 'chair', 'ceiling_light']
Clip similarities: [0.736328125, 0.67236328125, 0.740234375, 0.71435546875, 0.67236328125]
DEBUG best_match_after_iou_check [tensor(164), tensor(59), tensor(152), tensor(101)]
DEBUG uniques tensor([ 59, 101, 152, 164]) tensor([1, 1, 1, 1])
Matched 1 times with 59
Matched 1 times with 101
Matched 1 times with 152
Matched 1 times with 164
iou for matched labels tensor([0.7155, 0.8048, 0.7462, 0.2739])
Matched labels: ['doorframe', 'poster', 'poster', 'curtain']
Clip similarities: [0.78076171875, 0.69189453125, 0.69189453125, 0.798828125]
DEBUG best_match_after_iou_check [tensor(263), tensor(144), tensor(41), tensor(263)]
DEBUG uniques tensor([ 41, 144, 263]) tensor([1, 1, 2])
Matched 1 times with 41
Matched 1 times with 144
Matched 2 times with 263
Merge stage2 masks
iou for matched labels tensor([0.1955, 0.6892, 0.3269])
Matched labels: ['window', 'bulletin_board', 'windowsill']
Clip similarities: [1.0, 0.72607421875, 0.8505859375]
DEBUG best_match_after_iou_check [tensor(219), tensor(276), tensor(378)]
DEBUG uniques tensor([219, 276, 378]) tensor([1, 1, 1])
Matched 1 times with 219
Matched 1 times with 276
Matched 1 times with 378
iou for matched labels tensor([0.1207, 0.0555, 0.3180])
Matched labels: ['monitor', 'doorframe', 'door']
Clip similarities: [0.736328125, 0.78076171875, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(300), tensor(56), tensor(56), tensor(177), tensor(62), tensor(125), tensor(220), tensor(268), tensor(140), tensor(172), tensor(140)]
DEBUG uniques tensor([ 56,  62, 125, 140, 172, 177, 220, 268, 300]) tensor([2, 1, 1, 2, 1, 1, 1, 1, 1])
Matched 2 times with 56
Merge stage2 masks
Matched 1 times with 62
Matched 1 times with 125
Matched 2 times with 140
Merge stage2 masks
Matched 1 times with 172
Matched 1 times with 177
Matched 1 times with 220
Matched 1 times with 268
Matched 1 times with 300
iou for matched labels tensor([0.2011, 0.7110, 0.8452, 0.2676, 0.1744, 0.4767, 0.5544, 0.6048, 0.4973])
Matched labels: ['shower_door', 'lamp', 'curtain', 'lamp', 'decoration', 'mirror', 'bathroom_counter', 'curtain', 'shower_curtain_rod']
Clip similarities: [0.74072265625, 0.6796875, 0.798828125, 0.6796875, 0.755859375, 0.72216796875, 0.61767578125, 0.798828125, 0.62353515625]
DEBUG best_match_after_iou_check [tensor(0), tensor(117)]
DEBUG uniques tensor([  0, 117]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 117
iou for matched labels tensor([0.6983, 0.6143])
Matched labels: ['projector_screen', 'bulletin_board']
Clip similarities: [0.685546875, 0.72607421875]
DEBUG best_match_after_iou_check [tensor(93)]
DEBUG uniques tensor([93]) tensor([1])
Matched 1 times with 93
iou for matched labels tensor([0.8569])
Matched labels: ['windowsill']
Clip similarities: [0.8505859375]
DEBUG best_match_after_iou_check [tensor(154), tensor(62)]
DEBUG uniques tensor([ 62, 154]) tensor([1, 1])
Matched 1 times with 62
Matched 1 times with 154
iou for matched labels tensor([0.7700, 0.2265])
Matched labels: ['range_hood', 'furniture']
Clip similarities: [0.58154296875, 0.73876953125]
DEBUG best_match_after_iou_check [tensor(189), tensor(138)]
DEBUG uniques tensor([138, 189]) tensor([1, 1])
Matched 1 times with 138
Matched 1 times with 189
iou for matched labels tensor([0.4050, 0.8988])
Matched labels: Select thresholds for refinement:  83%|████████▎ | 118/142 [00:31<00:05,  4.21it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:31<00:06,  3.64it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:32<00:05,  4.35it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:32<00:04,  4.31it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:32<00:04,  4.64it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:32<00:04,  4.54it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:32<00:03,  5.00it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:33<00:03,  4.41it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:33<00:03,  4.22it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:34<00:04,  3.33it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:34<00:03,  3.84it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:34<00:03,  3.94it/s]Select thresholds for refinement:  92%|█████████▏| 131/142 [00:34<00:02,  4.12it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:34<00:02,  4.20it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:35<00:02,  4.17it/s]Select thresholds for refinement:  94%|█████████▍| 134/142 [00:35<00:01,  4.80it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:35<00:01,  4.43it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:35<00:01,  4.09it/s]['projector_screen', 'door']
Clip similarities: [0.685546875, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(89), tensor(141), tensor(137), tensor(224), tensor(137)]
DEBUG uniques tensor([ 89, 137, 141, 224]) tensor([1, 2, 1, 1])
Matched 1 times with 89
Matched 2 times with 137
Merge stage2 masks
Matched 1 times with 141
Matched 1 times with 224
iou for matched labels tensor([0.0600, 0.2707, 0.6095, 0.6541])
Matched labels: ['doorframe', 'whiteboard', 'blinds', 'windowsill']
Clip similarities: [0.78076171875, 0.63232421875, 0.8056640625, 0.8505859375]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(125), tensor(135), tensor(116), tensor(72)]
DEBUG uniques tensor([ 72, 116, 125, 135]) tensor([1, 1, 1, 1])
Matched 1 times with 72
Matched 1 times with 116
Matched 1 times with 125
Matched 1 times with 135
iou for matched labels tensor([0.4274, 0.5109, 0.3312, 0.5112])
Matched labels: ['blinds', 'blinds', 'tv_stand', 'shelf']
Clip similarities: [0.8056640625, 0.8056640625, 0.69287109375, 0.76220703125]
DEBUG best_match_after_iou_check [tensor(88)]
DEBUG uniques tensor([88]) tensor([1])
Matched 1 times with 88
iou for matched labels tensor([0.4440])
Matched labels: ['bar']
Clip similarities: [0.70654296875]
DEBUG best_match_after_iou_check [tensor(124), tensor(62)]
DEBUG uniques tensor([ 62, 124]) tensor([1, 1])
Matched 1 times with 62
Matched 1 times with 124
iou for matched labels tensor([0.5729, 0.4178])
Matched labels: ['windowsill', 'door']
Clip similarities: [0.8505859375, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(5), tensor(133), tensor(109), tensor(69)]
DEBUG uniques tensor([  5,  69, 109, 133]) tensor([1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 69
Matched 1 times with 109
Matched 1 times with 133
iou for matched labels tensor([0.8397, 0.2299, 0.2829, 0.3015])
Matched labels: ['plant', 'doorframe', 'doorframe', 'shower_curtain_rod']
Clip similarities: [0.748046875, 0.78076171875, 0.78076171875, 0.62353515625]
DEBUG best_match_after_iou_check [tensor(4)]
DEBUG uniques tensor([4]) tensor([1])
Matched 1 times with 4
iou for matched labels tensor([0.0355])
Matched labels: ['door']
Clip similarities: [0.82958984375]
DEBUG best_match_after_iou_check [tensor(200), tensor(231), tensor(276)]
DEBUG uniques tensor([200, 231, 276]) tensor([1, 1, 1])
Matched 1 times with 200
Matched 1 times with 231
Matched 1 times with 276
iou for matched labels tensor([0.4362, 0.7232, 0.3291])
Matched labels: ['kitchen_counter', 'bar', 'window']
Clip similarities: [0.65380859375, 0.70654296875, 1.0]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(148), tensor(215), tensor(49), tensor(49), tensor(43), tensor(49), tensor(49), tensor(49), tensor(49), tensor(151), tensor(122), tensor(49), tensor(195), tensor(236), tensor(135), tensor(7), tensor(135), tensor(173), tensor(62), tensor(150), tensor(178), tensor(54), tensor(135), tensor(54), tensor(110), tensor(54), tensor(54)]
DEBUG uniques tensor([  7,  43,  49,  54,  62, 110, 122, 135, 148, 150, 151, 173, 178, 195,
        215, 236]) tensor([1, 1, 7, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 43
Matched 7 times with 49
Merge stage2 masks
Matched 4 times with 54
Merge stage2 masks
Matched 1 times with 62
Matched 1 times with 110
Matched 1 times with 122
Matched 3 times with 135
Merge stage2 masks
Matched 1 times with 148
Matched 1 times with 150
Matched 1 times with 151
Matched 1 times with 173
Matched 1 times with 178
Matched 1 times with 195
Matched 1 times with 215
Matched 1 times with 236
iou for matched labels tensor([0.4595, 0.1859, 0.2759, 0.3574, 0.4407, 0.1302, 0.5646, 0.6262, 0.7221,
        0.5996, 0.8024, 0.7139, 0.0776, 0.0754, 0.0930, 0.0373])
Matched labels: ['fan', 'picture', 'washing_machine', 'washing_machine', 'laundry_hamper', 'washing_machine', 'washing_machine', 'washing_machine', 'monitor', 'fire_extinguisher', 'windowsill', 'doorframe', 'column', 'washing_machine', 'washing_machine', 'washing_machine']
Clip similarities: [0.736328125, 0.78564453125, 0.716796875, 0.716796875, 0.63720703125, 0.716796875, 0.716796875, 0.716796875, 0.736328125, 0.63037109375, 0.8505859375, 0.78076171875, 0.68212890625, 0.716796875, 0.716796875, 0.716796875]
DEBUG best_match_after_iou_check [tensor(90), tensor(86)]
DEBUG uniques tensor([86, 90]) tensor([1, 1])
Matched 1 times with 86
Matched 1 times with 90
iou for matched labels tensor([0.4531, 0.5972])
Matched labels: ['windowsill', 'door']
Clip similarities: [0.8505859375, 0.82958984375]
DEBUG best_match_after_iou_check [tensor(173), tensor(51), tensor(68)]
DEBUG uniques tensor([ 51,  68, 173]) tensor([1, 1, 1])
Matched 1 times with 51
Matched 1 times with 68
Matched 1 times with 173
iou for matched labels tensor([0.1232, 0.2786, 0.5429])
Matched labels: ['closet_door', 'shelf', 'closet_door']
Clip similarities: [0.740234375, 0.76220703125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(128), tensor(61), tensor(68), tensor(77), tensor(128), tensor(128)]
DEBUG uniques tensor([ 61,  68,  77, 128]) tensor([1, 1, 1, 3])
Matched 1 times with 61
Matched 1 times with 68
Matched 1 times with 77
Matched 3 times with 128
Merge stage2 masks
iou for matched labels tensor([0.2646, 0.4263, 0.6396, 0.5372])
Matched labels: ['paper_towel_roll', 'bathroom_stall_door', 'paper_towel_dispenser', 'bathroom_counter']
Clip similarities: [0.58154296875, 0.65625, 0.6064453125, 0.61767578125]
DEBUG best_match_after_iou_check [tensor(229), tensor(125)]
DEBUG uniques tensor([125, 229]) tensor([1, 1])
Matched 1 times with 125
Matched 1 times with 229
iou for matched labels tensor([0.3163, 0.1120])
Matched labels: ['table', 'shower_curtain_rod']
Clip similarities: [0.7451171875, 0.62353515625]
DEBUG best_match_after_iou_check [tensor(80), tensor(52), tensor(86), tensor(120)]
DEBUG uniques tensor([ 52,  80,  86, 120]) tensor([1, 1, 1, 1])
Matched 1 times with 52
Matched 1 times with 80
Matched 1 times with 86
Matched 1 times with 120
iou for matched labels tensor([0.7486, 0.5801, 0.6036, 0.7857])
Matched labels: ['cabinet', 'cabinet', 'cabinet', 'cabinet']
Clip similarities: [0.744140625, 0.744140625, 0.744140625, 0.744140625]
DEBUG best_match_after_iou_check [tensor(135), tensor(89), tensor(110), tensor(29), tensor(131), tensor(151)]
DEBUG uniques tensor([ 29,  89, 110, 131, 135, 151]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 29
Matched 1 times with 89
Matched 1 times with 110
Matched 1 times with 131
Matched 1 times with 135
Matched 1 times with 151
iou for matched labels tensor([0.4853, 0.7248, 0.5065, 0.5956, 0.4330, 0.1037])
Matched labels: ['bathroom_counter', 'radiator', 'bathtub', 'shower_door', 'bathroom_counter', 'bathroom_counter']
Clip similarities: [0.61767578125, 0.70947265625, 0.65576171875, 0.74072265625, 0.61767578125, 0.61767578125]
DEBUG best_match_after_iou_check [tensor(142), tensor(79), tensor(100), tensor(47), tensor(47), tensor(120), tensor(173), tensor(47), tensor(47), tensor(100), tensor(71)]
DEBUG uniques tensor([ 47,  71,  79, 100, 120, 142, 173]) tensor([4, 1, 1, 2, 1, 1, 1])
Matched 4 times with 47
Merge stage2 masks
Matched 1 times with 71
Matched 1 times with 79
Matched 2 times with 100
Merge stage2 masks
Matched 1 times with 120
Matched 1 times with 142
Matched 1 times with 173
iou for matched labels tensor([0.5742, 0.6250, 0.5131, 0.5966, 0.4919, 0.2308, 0.0018])
Matched labels: ['shower_curtain', 'doorframe', 'fire_alarm', 'trash_can', 'radiator', 'closet_wall', 'closet_wall']
Clip similarities: [0.68505859375, 0.78076171875, 0.6826171875, 0.69775390625, 0.70947265625, 0.69873046875, 0.69873046875]
DEBUG best_match_after_iou_check [tensor(10), tensor(23)]
DEBUG uniques tensor([10, 23]) tensor([1, 1])
Matched 1 times with 10
Matched 1 times with 23
iou for matched labels tensor([0.6032, 0.5214])
Matched labels: ['monitor', 'doorframe']
Clip similarities: [0.736328125, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(233), tensor(6), tensor(16), tensor(31), tensor(53), tensor(112)]
DEBUG uniques tensor([  6,  16,  31,  53, 112, 233]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 16
Matched 1 times with 31
Select thresholds for refinement:  96%|█████████▋| 137/142 [00:36<00:01,  3.95it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:36<00:01,  3.90it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:36<00:00,  3.81it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:36<00:00,  3.80it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:37<00:00,  4.15it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  4.00it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  3.79it/s]
Matched 1 times with 53
Matched 1 times with 112
Matched 1 times with 233
iou for matched labels tensor([0.0164, 0.7971, 0.0127, 0.6501, 0.0674, 0.3402])
Matched labels: ['shower_curtain_rod', 'picture', 'bed', 'radiator', 'radiator', 'tv']
Clip similarities: [0.62353515625, 0.78564453125, 0.658203125, 0.70947265625, 0.70947265625, 0.72509765625]
DEBUG best_match_after_iou_check [tensor(124), tensor(116), tensor(42), tensor(13), tensor(57)]
DEBUG uniques tensor([ 13,  42,  57, 116, 124]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 42
Matched 1 times with 57
Matched 1 times with 116
Matched 1 times with 124
iou for matched labels tensor([0.8360, 0.8396, 0.7037, 0.0501, 0.7610])
Matched labels: ['mat', 'radiator', 'windowsill', 'laundry_hamper', 'closet_door']
Clip similarities: [0.69580078125, 0.70947265625, 0.8505859375, 0.63720703125, 0.740234375]
DEBUG best_match_after_iou_check [tensor(187), tensor(60), tensor(155), tensor(1), tensor(60), tensor(60), tensor(60), tensor(145)]
DEBUG uniques tensor([  1,  60, 145, 155, 187]) tensor([1, 4, 1, 1, 1])
Matched 1 times with 1
Matched 4 times with 60
Merge stage2 masks
Matched 1 times with 145
Matched 1 times with 155
Matched 1 times with 187
iou for matched labels tensor([0.2048, 0.3312, 0.7194, 0.0330, 0.5386])
Matched labels: ['shelf', 'shelf', 'whiteboard', 'blinds', 'blinds']
Clip similarities: [0.76220703125, 0.76220703125, 0.63232421875, 0.8056640625, 0.8056640625]
DEBUG best_match_after_iou_check [tensor(178), tensor(7), tensor(80), tensor(80), tensor(189)]
DEBUG uniques tensor([  7,  80, 178, 189]) tensor([1, 2, 1, 1])
Matched 1 times with 7
Matched 2 times with 80
Merge stage2 masks
Matched 1 times with 178
Matched 1 times with 189
iou for matched labels tensor([0.3291, 0.0015, 0.0068, 0.2616])
Matched labels: ['person', 'couch', 'person', 'doorframe']
Clip similarities: [0.765625, 0.7255859375, 0.765625, 0.78076171875]
DEBUG best_match_after_iou_check [tensor(64), tensor(50), tensor(4), tensor(90), tensor(49), tensor(64)]
DEBUG uniques tensor([ 4, 49, 50, 64, 90]) tensor([1, 1, 1, 2, 1])
Matched 1 times with 4
Matched 1 times with 49
Matched 1 times with 50
Matched 2 times with 64
Merge stage2 masks
Matched 1 times with 90
iou for matched labels tensor([0.2804, 0.7606, 0.4776, 0.1943, 0.3942])
Matched labels: ['shower_curtain_rod', 'vent', 'bathroom_stall_door', 'shower_door', 'shower_wall']
Clip similarities: [0.62353515625, 0.73828125, 0.65625, 0.74072265625, 0.68359375]
DEBUG best_match_after_iou_check [tensor(184), tensor(199)]
DEBUG uniques tensor([184, 199]) tensor([1, 1])
Matched 1 times with 184
Matched 1 times with 199
iou for matched labels tensor([0.1314, 0.0597])
Matched labels: ['paper_towel_roll', 'case_of_water_bottles']
Clip similarities: [0.58154296875, 0.6513671875]
Unique similarities: [0.57373046875, 0.58154296875, 0.6064453125, 0.61474609375, 0.615234375, 0.61767578125, 0.62353515625, 0.626953125, 0.6279296875, 0.63037109375, 0.63232421875, 0.6337890625, 0.63720703125, 0.64599609375, 0.6513671875, 0.65283203125, 0.65380859375, 0.65576171875, 0.65625, 0.658203125, 0.66259765625, 0.67236328125, 0.6796875, 0.68212890625, 0.6826171875, 0.68359375, 0.68505859375, 0.685546875, 0.689453125, 0.69189453125, 0.6923828125, 0.69287109375, 0.693359375, 0.6953125, 0.69580078125, 0.697265625, 0.69775390625, 0.6982421875, 0.69873046875, 0.69970703125, 0.70068359375, 0.70263671875, 0.70458984375, 0.70654296875, 0.70947265625, 0.71435546875, 0.71484375, 0.716796875, 0.71728515625, 0.7197265625, 0.7216796875, 0.72216796875, 0.72265625, 0.72509765625, 0.7255859375, 0.72607421875, 0.7294921875, 0.734375, 0.736328125, 0.73828125, 0.73876953125, 0.7392578125, 0.740234375, 0.74072265625, 0.74365234375, 0.744140625, 0.7451171875, 0.74755859375, 0.748046875, 0.755859375, 0.76220703125, 0.765625, 0.767578125, 0.7685546875, 0.77099609375, 0.78076171875, 0.78564453125, 0.79052734375, 0.79248046875, 0.798828125, 0.8056640625, 0.82958984375, 0.8505859375, 1.0]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 37it [00:00, 366.51it/s]DEBUG all ious tensor([0.5204, 0.0970, 0.2800, 0.7900, 0.6633])
USE STAGE 1 MASK tensor(0.5204)
USE STAGE 2 MASK tensor(0.0970)
USE STAGE 2 MASK tensor(0.2800)
USE STAGE 1 MASK tensor(0.7900)
USE STAGE 1 MASK tensor(0.6633)
DEBUG all ious tensor([0.6616, 0.6064, 0.2368])
USE STAGE 1 MASK tensor(0.6616)
USE STAGE 1 MASK tensor(0.6064)
USE STAGE 2 MASK tensor(0.2368)
DEBUG all ious tensor([0.2965])
USE STAGE 2 MASK tensor(0.2965)
DEBUG all ious tensor([0.5487, 0.6046])
USE STAGE 1 MASK tensor(0.5487)
USE STAGE 1 MASK tensor(0.6046)
DEBUG all ious tensor([0.8157, 0.6362])
USE STAGE 1 MASK tensor(0.8157)
USE STAGE 1 MASK tensor(0.6362)
DEBUG all ious tensor([0.8360, 0.5732])
USE STAGE 1 MASK tensor(0.8360)
USE STAGE 1 MASK tensor(0.5732)
DEBUG all ious tensor([0.7375, 0.5467, 0.4227])
USE STAGE 1 MASK tensor(0.7375)
USE STAGE 1 MASK tensor(0.5467)
USE STAGE 2 MASK tensor(0.4227)
DEBUG all ious tensor([0.2361, 0.1039])
USE STAGE 2 MASK tensor(0.2361)
USE STAGE 2 MASK tensor(0.1039)
DEBUG all ious tensor([0.4546])
USE STAGE 1 MASK tensor(0.4546)
DEBUG all ious tensor([0.6223, 0.3391, 0.1547])
USE STAGE 1 MASK tensor(0.6223)
USE STAGE 2 MASK tensor(0.3391)
USE STAGE 2 MASK tensor(0.1547)
DEBUG all ious tensor([0.8278])
USE STAGE 1 MASK tensor(0.8278)
DEBUG all ious tensor([0.3239, 0.4093, 0.5654, 0.6557, 0.8327, 0.0000])
USE STAGE 2 MASK tensor(0.3239)
USE STAGE 2 MASK tensor(0.4093)
USE STAGE 1 MASK tensor(0.5654)
USE STAGE 1 MASK tensor(0.6557)
USE STAGE 1 MASK tensor(0.8327)
USE STAGE 2 MASK tensor(0.)
DEBUG all ious tensor([0.2691, 0.7706, 0.0951, 0.0000, 0.4112])
USE STAGE 2 MASK tensor(0.2691)
USE STAGE 1 MASK tensor(0.7706)
USE STAGE 2 MASK tensor(0.0951)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.4112)
DEBUG all ious tensor([0.4659, 0.5328, 0.0270, 0.5246, 0.6030])
USE STAGE 1 MASK tensor(0.4659)
USE STAGE 1 MASK tensor(0.5328)
USE STAGE 2 MASK tensor(0.0270)
USE STAGE 1 MASK tensor(0.5246)
USE STAGE 1 MASK tensor(0.6030)
DEBUG all ious tensor([0.6062, 0.5464, 0.2502, 0.6703, 0.1407, 0.5942, 0.2746])
USE STAGE 1 MASK tensor(0.6062)
USE STAGE 1 MASK tensor(0.5464)
USE STAGE 2 MASK tensor(0.2502)
USE STAGE 1 MASK tensor(0.6703)
USE STAGE 2 MASK tensor(0.1407)
USE STAGE 1 MASK tensor(0.5942)
USE STAGE 2 MASK tensor(0.2746)
DEBUG all ious tensor([0.7471, 0.2828, 0.0983, 0.1815, 0.0701])
USE STAGE 1 MASK tensor(0.7471)
USE STAGE 2 MASK tensor(0.2828)
USE STAGE 2 MASK tensor(0.0983)
USE STAGE 2 MASK tensor(0.1815)
USE STAGE 2 MASK tensor(0.0701)
DEBUG all ious []
DEBUG all ious tensor([0.0043, 0.7091, 0.6801, 0.4318, 0.2007])
USE STAGE 2 MASK tensor(0.0043)
USE STAGE 1 MASK tensor(0.7091)
USE STAGE 1 MASK tensor(0.6801)
USE STAGE 2 MASK tensor(0.4318)
USE STAGE 2 MASK tensor(0.2007)
DEBUG all ious tensor([0.0909, 0.1205, 0.2456, 0.0657])
USE STAGE 2 MASK tensor(0.0909)
USE STAGE 2 MASK tensor(0.1205)
USE STAGE 2 MASK tensor(0.2456)
USE STAGE 2 MASK tensor(0.0657)
DEBUG all ious tensor([0.5591, 0.0286, 0.5228, 0.1756])
USE STAGE 1 MASK tensor(0.5591)
USE STAGE 2 MASK tensor(0.0286)
USE STAGE 1 MASK tensor(0.5228)
USE STAGE 2 MASK tensor(0.1756)
DEBUG all ious tensor([0.7305, 0.0698])
USE STAGE 1 MASK tensor(0.7305)
USE STAGE 2 MASK tensor(0.0698)
DEBUG all ious tensor([0.3527, 0.3677])
USE STAGE 2 MASK tensor(0.3527)
USE STAGE 2 MASK tensor(0.3677)
DEBUG all ious tensor([0.7972, 0.2169])
USE STAGE 1 MASK tensor(0.7972)
USE STAGE 2 MASK tensor(0.2169)
DEBUG all ious []
DEBUG all ious []
DEBUG all ious tensor([0.8561])
USE STAGE 1 MASK tensor(0.8561)
DEBUG all ious tensor([0.8119, 0.0462])
USE STAGE 1 MASK tensor(0.8119)
USE STAGE 2 MASK tensor(0.0462)
DEBUG all ious tensor([0.7910, 0.3168, 0.6864, 0.0142])
USE STAGE 1 MASK tensor(0.7910)
USE STAGE 2 MASK tensor(0.3168)
USE STAGE 1 MASK tensor(0.6864)
USE STAGE 2 MASK tensor(0.0142)
DEBUG all ious tensor([0.6531, 0.6319, 0.2534])
USE STAGE 1 MASK tensor(0.6531)
USE STAGE 1 MASK tensor(0.6319)
USE STAGE 2 MASK tensor(0.2534)
DEBUG all ious tensor([0.6774, 0.3991, 0.3115, 0.2588])
USE STAGE 1 MASK tensor(0.6774)
USE STAGE 2 MASK tensor(0.3991)
USE STAGE 2 MASK tensor(0.3115)
USE STAGE 2 MASK tensor(0.2588)
DEBUG all ious tensor([0.7368, 0.7046, 0.0582, 0.7544, 0.6113])
USE STAGE 1 MASK tensor(0.7368)
USE STAGE 1 MASK tensor(0.7046)
USE STAGE 2 MASK tensor(0.0582)
USE STAGE 1 MASK tensor(0.7544)
USE STAGE 1 MASK tensor(0.6113)
DEBUG all ious tensor([0.6917, 0.7302, 0.3353, 0.4223, 0.4977])
USE STAGE 1 MASK tensor(0.6917)
USE STAGE 1 MASK tensor(0.7302)
USE STAGE 2 MASK tensor(0.3353)
USE STAGE 2 MASK tensor(0.4223)
USE STAGE 1 MASK tensor(0.4977)
DEBUG all ious tensor([0.6438, 0.5109, 0.3737])
USE STAGE 1 MASK tensor(0.6438)
USE STAGE 1 MASK tensor(0.5109)
USE STAGE 2 MASK tensor(0.3737)
DEBUG all ious tensor([0.6687, 0.7667, 0.4366, 0.2159, 0.4873, 0.6275, 0.5555])
USE STAGE 1 MASK tensor(0.6687)
USE STAGE 1 MASK tensor(0.7667)
USE STAGE 2 MASK tensor(0.4366)
USE STAGE 2 MASK tensor(0.2159)
USE STAGE 1 MASK tensor(0.4873)
USE STAGE 1 MASK tensor(0.6275)
USE STAGE 1 MASK tensor(0.5555)
DEBUG all ious tensor([0.4047, 0.1189, 0.4556, 0.8028, 0.0091, 0.4619, 0.1309, 0.4374, 0.7941,
        0.3564])
USE STAGE 2 MASK tensor(0.4047)
USE STAGE 2 MASK tensor(0.1189)
USE STAGE 1 MASK tensor(0.4556)
USE STAGE 1 MASK tensor(0.8028)
USE STAGE 2 MASK tensor(0.0091)
USE STAGE 1 MASK tensor(0.4619)
USE STAGE 2 MASK tensor(0.1309)
USE STAGE 2 MASK tensor(0.4374)
USE STAGE 1 MASK tensor(0.7941)
USE STAGE 2 MASK tensor(0.3564)
DEBUG all ious tensor([0.7572, 0.6426, 0.0122, 0.6956])
USE STAGE 1 MASK tensor(0.7572)
USE STAGE 1 MASK tensor(0.6426)
USE STAGE 2 MASK tensor(0.0122)
USE STAGE 1 MASK tensor(0.6956)
DEBUG all ious tensor([0.6942, 0.7688, 0.0200, 0.4698, 0.8641])
USE STAGE 1 MASK tensor(0.6942)
USE STAGE 1 MASK tensor(0.7688)
USE STAGE 2 MASK tensor(0.0200)
USE STAGE 1 MASK tensor(0.4698)
USE STAGE 1 MASK tensor(0.8641)
DEBUG all ious tensor([0.1662])
USE STAGE 2 MASK tensor(0.1662)
DEBUG all ious tensor([0.7291])
USE STAGE 1 MASK tensor(0.7291)
DEBUG all ious tensor([0.6866, 0.4289, 0.0416, 0.5576, 0.1614])
USE STAGE 1 MASK tensor(0.6866)
USE STAGE 2 MASK tensor(0.4289)
USE STAGE 2 MASK tensor(0.0416)
USE STAGE 1 MASK tensor(0.5576)
USE STAGE 2 MASK tensor(0.1614)
DEBUG all ious tensor([0.6691, 0.3187])
USE STAGE 1 MASK tensor(0.6691)
USE STAGE 2 MASK tensor(0.3187)
DEBUG all ious tensor([0.8551, 0.7897, 0.0150, 0.3614])
USE STAGE 1 MASK tensor(0.8551)
USE STAGE 1 MASK tensor(0.7897)
USE STAGE 2 MASK tensor(0.0150)
USE STAGE 2 MASK tensor(0.3614)
DEBUG all ious tensor([0.7473, 0.5840, 0.7062, 0.6873])
USE STAGE 1 MASK tensor(0.7473)
USE STAGE 1 MASK tensor(0.5840)
USE STAGE 1 MASK tensor(0.7062)
USE STAGE 1 MASK tensor(0.6873)
DEBUG all ious tensor([0.7782, 0.2562, 0.4639, 0.1567, 0.3095, 0.3872, 0.7356, 0.7136])
USE STAGE 1 MASK tensor(0.7782)
USE STAGE 2 MASK tensor(0.2562)
USE STAGE 1 MASK tensor(0.4639)
USE STAGE 2 MASK tensor(0.1567)
USE STAGE 2 MASK tensor(0.3095)
USE STAGE 2 MASK tensor(0.3872)
USE STAGE 1 MASK tensor(0.7356)
USE STAGE 1 MASK tensor(0.7136)
DEBUG all ious tensor([0.5965, 0.0040])
USE STAGE 1 MASK tensor(0.5965)
USE STAGE 2 MASK tensor(0.0040)
DEBUG all ious tensor([0.1127, 0.2584])
USE STAGE 2 MASK tensor(0.1127)
USE STAGE 2 MASK tensor(0.2584)
DEBUG all ious tensor([0.0281, 0.7765, 0.6144, 0.2605])
USE STAGE 2 MASK tensor(0.0281)
USE STAGE 1 MASK tensor(0.7765)
USE STAGE 1 MASK tensor(0.6144)
USE STAGE 2 MASK tensor(0.2605)
DEBUG all ious tensor([0.2043, 0.7902, 0.8156, 0.5101, 0.0305, 0.5454, 0.7895])
USE STAGE 2 MASK tensor(0.2043)
USE STAGE 1 MASK tensor(0.7902)
USE STAGE 1 MASK tensor(0.8156)
USE STAGE 1 MASK tensor(0.5101)
USE STAGE 2 MASK tensor(0.0305)
USE STAGE 1 MASK tensor(0.5454)
USE STAGE 1 MASK tensor(0.7895)
DEBUG all ious tensor([0.4997])
USE STAGE 1 MASK tensor(0.4997)
DEBUG all ious tensor([0.1178, 0.8132, 0.0806, 0.0724, 0.8822, 0.0051, 0.3929])
USE STAGE 2 MASK tensor(0.1178)
USE STAGE 1 MASK tensor(0.8132)
USE STAGE 2 MASK tensor(0.0806)
USE STAGE 2 MASK tensor(0.0724)
USE STAGE 1 MASK tensor(0.8822)
USE STAGE 2 MASK tensor(0.0051)
USE STAGE 2 MASK tensor(0.3929)
DEBUG all ious tensor([0.8653, 0.6839])
USE STAGE 1 MASK tensor(0.8653)
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 81it [00:00, 393.03it/s]tensor(0.6839)
DEBUG all ious tensor([0.7802, 0.8664, 0.6274, 0.0030])
USE STAGE 1 MASK tensor(0.7802)
USE STAGE 1 MASK tensor(0.8664)
USE STAGE 1 MASK tensor(0.6274)
USE STAGE 2 MASK tensor(0.0030)
DEBUG all ious tensor([0.3060, 0.0000, 0.0023, 0.0888, 0.1398, 0.1306, 0.0522, 0.3950, 0.2291,
        0.0989])
USE STAGE 2 MASK tensor(0.3060)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.0023)
USE STAGE 2 MASK tensor(0.0888)
USE STAGE 2 MASK tensor(0.1398)
USE STAGE 2 MASK tensor(0.1306)
USE STAGE 2 MASK tensor(0.0522)
USE STAGE 2 MASK tensor(0.3950)
USE STAGE 2 MASK tensor(0.2291)
USE STAGE 2 MASK tensor(0.0989)
DEBUG all ious tensor([0.4065, 0.0342])
USE STAGE 2 MASK tensor(0.4065)
USE STAGE 2 MASK tensor(0.0342)
DEBUG all ious tensor([0.4988, 0.1432])
USE STAGE 1 MASK tensor(0.4988)
USE STAGE 2 MASK tensor(0.1432)
DEBUG all ious tensor([0.1569, 0.0018])
USE STAGE 2 MASK tensor(0.1569)
USE STAGE 2 MASK tensor(0.0018)
DEBUG all ious tensor([0.6265, 0.6918])
USE STAGE 1 MASK tensor(0.6265)
USE STAGE 1 MASK tensor(0.6918)
DEBUG all ious tensor([0.6100, 0.1983])
USE STAGE 1 MASK tensor(0.6100)
USE STAGE 2 MASK tensor(0.1983)
DEBUG all ious tensor([0.6453, 0.7080, 0.6037])
USE STAGE 1 MASK tensor(0.6453)
USE STAGE 1 MASK tensor(0.7080)
USE STAGE 1 MASK tensor(0.6037)
DEBUG all ious tensor([0.2584, 0.8098])
USE STAGE 2 MASK tensor(0.2584)
USE STAGE 1 MASK tensor(0.8098)
DEBUG all ious tensor([0.6030])
USE STAGE 1 MASK tensor(0.6030)
DEBUG all ious tensor([0.1740, 0.7851, 0.0279, 0.8207])
USE STAGE 2 MASK tensor(0.1740)
USE STAGE 1 MASK tensor(0.7851)
USE STAGE 2 MASK tensor(0.0279)
USE STAGE 1 MASK tensor(0.8207)
DEBUG all ious tensor([0.8813, 0.4833, 0.5233])
USE STAGE 1 MASK tensor(0.8813)
USE STAGE 1 MASK tensor(0.4833)
USE STAGE 1 MASK tensor(0.5233)
DEBUG all ious tensor([0.6638, 0.2434, 0.1534, 0.0314, 0.7873, 0.6024, 0.0784])
USE STAGE 1 MASK tensor(0.6638)
USE STAGE 2 MASK tensor(0.2434)
USE STAGE 2 MASK tensor(0.1534)
USE STAGE 2 MASK tensor(0.0314)
USE STAGE 1 MASK tensor(0.7873)
USE STAGE 1 MASK tensor(0.6024)
USE STAGE 2 MASK tensor(0.0784)
DEBUG all ious tensor([0.7959])
USE STAGE 1 MASK tensor(0.7959)
DEBUG all ious []
DEBUG all ious tensor([0.1033, 0.8649])
USE STAGE 2 MASK tensor(0.1033)
USE STAGE 1 MASK tensor(0.8649)
DEBUG all ious tensor([0.8456])
USE STAGE 1 MASK tensor(0.8456)
DEBUG all ious tensor([0.5088, 0.7129, 0.0061])
USE STAGE 1 MASK tensor(0.5088)
USE STAGE 1 MASK tensor(0.7129)
USE STAGE 2 MASK tensor(0.0061)
DEBUG all ious tensor([0.6179, 0.2192])
USE STAGE 1 MASK tensor(0.6179)
USE STAGE 2 MASK tensor(0.2192)
DEBUG all ious tensor([0.8140, 0.7447, 0.4088, 0.6327, 0.5041])
USE STAGE 1 MASK tensor(0.8140)
USE STAGE 1 MASK tensor(0.7447)
USE STAGE 2 MASK tensor(0.4088)
USE STAGE 1 MASK tensor(0.6327)
USE STAGE 1 MASK tensor(0.5041)
DEBUG all ious tensor([0.0277, 0.5204, 0.0256])
USE STAGE 2 MASK tensor(0.0277)
USE STAGE 1 MASK tensor(0.5204)
USE STAGE 2 MASK tensor(0.0256)
DEBUG all ious tensor([0.3610, 0.8714, 0.6016, 0.3732])
USE STAGE 2 MASK tensor(0.3610)
USE STAGE 1 MASK tensor(0.8714)
USE STAGE 1 MASK tensor(0.6016)
USE STAGE 2 MASK tensor(0.3732)
DEBUG all ious tensor([0.6025])
USE STAGE 1 MASK tensor(0.6025)
DEBUG all ious tensor([0.0477, 0.5063, 0.0505])
USE STAGE 2 MASK tensor(0.0477)
USE STAGE 1 MASK tensor(0.5063)
USE STAGE 2 MASK tensor(0.0505)
DEBUG all ious tensor([0.7043, 0.4064])
USE STAGE 1 MASK tensor(0.7043)
USE STAGE 2 MASK tensor(0.4064)
DEBUG all ious tensor([0.1594])
USE STAGE 2 MASK tensor(0.1594)
DEBUG all ious tensor([0.3846, 0.4318, 0.4889, 0.3852, 0.6244])
USE STAGE 2 MASK tensor(0.3846)
USE STAGE 2 MASK tensor(0.4318)
USE STAGE 1 MASK tensor(0.4889)
USE STAGE 2 MASK tensor(0.3852)
USE STAGE 1 MASK tensor(0.6244)
DEBUG all ious tensor([0.7542, 0.0724])
USE STAGE 1 MASK tensor(0.7542)
USE STAGE 2 MASK tensor(0.0724)
DEBUG all ious tensor([0.1689, 0.0177, 0.0498, 0.4317, 0.0224, 0.0037, 0.1117, 0.6596, 0.4887,
        0.5700])
USE STAGE 2 MASK tensor(0.1689)
USE STAGE 2 MASK tensor(0.0177)
USE STAGE 2 MASK tensor(0.0498)
USE STAGE 2 MASK tensor(0.4317)
USE STAGE 2 MASK tensor(0.0224)
USE STAGE 2 MASK tensor(0.0037)
USE STAGE 2 MASK tensor(0.1117)
USE STAGE 1 MASK tensor(0.6596)
USE STAGE 1 MASK tensor(0.4887)
USE STAGE 1 MASK tensor(0.5700)
DEBUG all ious tensor([0.6266, 0.6257, 0.5745, 0.1166, 0.2672, 0.4375, 0.5207, 0.3304, 0.5509,
        0.8139, 0.8132])
USE STAGE 1 MASK tensor(0.6266)
USE STAGE 1 MASK tensor(0.6257)
USE STAGE 1 MASK tensor(0.5745)
USE STAGE 2 MASK tensor(0.1166)
USE STAGE 2 MASK tensor(0.2672)
USE STAGE 2 MASK tensor(0.4375)
USE STAGE 1 MASK tensor(0.5207)
USE STAGE 2 MASK tensor(0.3304)
USE STAGE 1 MASK tensor(0.5509)
USE STAGE 1 MASK tensor(0.8139)
USE STAGE 1 MASK tensor(0.8132)
DEBUG all ious tensor([0.7646, 0.7324, 0.5458, 0.8051, 0.0933, 0.3000])
USE STAGE 1 MASK tensor(0.7646)
USE STAGE 1 MASK tensor(0.7324)
USE STAGE 1 MASK tensor(0.5458)
USE STAGE 1 MASK tensor(0.8051)
USE STAGE 2 MASK tensor(0.0933)
USE STAGE 2 MASK tensor(0.3000)
DEBUG all ious tensor([0.7535, 0.4245])
USE STAGE 1 MASK tensor(0.7535)
USE STAGE 2 MASK tensor(0.4245)
DEBUG all ious tensor([0.0395, 0.5760, 0.6256])
USE STAGE 2 MASK tensor(0.0395)
USE STAGE 1 MASK tensor(0.5760)
USE STAGE 1 MASK tensor(0.6256)
DEBUG all ious tensor([0.0642, 0.5850, 0.2800, 0.0866])
USE STAGE 2 MASK tensor(0.0642)
USE STAGE 1 MASK tensor(0.5850)
USE STAGE 2 MASK tensor(0.2800)
USE STAGE 2 MASK tensor(0.0866)
DEBUG all ious tensor([0.7947, 0.9163, 0.5220, 0.0317, 0.2749, 0.1537])
USE STAGE 1 MASK tensor(0.7947)
USE STAGE 1 MASK tensor(0.9163)
USE STAGE 1 MASK tensor(0.5220)
USE STAGE 2 MASK tensor(0.0317)
USE STAGE 2 MASK tensor(0.2749)
USE STAGE 2 MASK tensor(0.1537)
DEBUG all ious tensor([0.0766, 0.6390])
USE STAGE 2 MASK tensor(0.0766)
USE STAGE 1 MASK tensor(0.6390)
DEBUG all ious tensor([0.7708, 0.7293, 0.6295])
USE STAGE 1 MASK tensor(0.7708)
USE STAGE 1 MASK tensor(0.7293)
USE STAGE 1 MASK tensor(0.6295)
DEBUG all ious tensor([0.7932, 0.6653, 0.6359, 0.2618, 0.2963])
USE STAGE 1 MASK tensor(0.7932)
USE STAGE 1 MASK tensor(0.6653)
USE STAGE 1 MASK tensor(0.6359)
USE STAGE 2 MASK tensor(0.2618)
USE STAGE 2 MASK tensor(0.2963)
DEBUG all ious tensor([0.8518, 0.1312])
USE STAGE 1 MASK tensor(0.8518)
USE STAGE 2 MASK tensor(0.1312)
DEBUG all ious tensor([0.9341, 0.8144])
USE STAGE 1 MASK tensor(0.9341)
USE STAGE 1 MASK tensor(0.8144)
DEBUG all ious tensor([0.8471])
USE STAGE 1 MASK tensor(0.8471)
DEBUG all ious tensor([0.2570, 0.6248, 0.3429])
USE STAGE 2 MASK tensor(0.2570)
USE STAGE 1 MASK tensor(0.6248)
USE STAGE 2 MASK tensor(0.3429)
DEBUG all ious tensor([0.4103, 0.7809, 0.0072, 0.3676, 0.8018])
USE STAGE 2 MASK tensor(0.4103)
USE STAGE 1 MASK tensor(0.7809)
USE STAGE 2 MASK tensor(0.0072)
USE STAGE 2 MASK tensor(0.3676)
USE STAGE 1 MASK tensor(0.8018)
DEBUG all ious tensor([0.6929, 0.3762, 0.5459, 0.6148, 0.3027])
USE STAGE 1 MASK tensor(0.6929)
USE STAGE 2 MASK tensor(0.3762)
USE STAGE 1 MASK tensor(0.5459)
USE STAGE 1 MASK tensor(0.6148)
USE STAGE 2 MASK tensor(0.3027)
DEBUG all ious tensor([0.4718, 0.4763, 0.0032, 0.2621, 0.4298])
USE STAGE 1 MASK tensor(0.4718)
USE STAGE 1 MASK tensor(0.4763)
USE STAGE 2 MASK tensor(0.0032)
USE STAGE 2 MASK tensor(0.2621)
USE STAGE 2 MASK tensor(0.4298)
DEBUG all ious tensor([0.7678, 0.6060])
USE STAGE 1 MASK tensor(0.7678)
USE STAGE 1 MASK tensor(0.6060)
DEBUG all ious tensor([0.2033, 0.2245, 0.1385, 0.0030, 0.0072, 0.3266])
USE STAGE 2 MASK tensor(0.2033)
USE STAGE 2 MASK tensor(0.2245)
USE STAGE 2 MASK tensor(0.1385)
USE STAGE 2 MASK tensor(0.0030)
USE STAGE 2 MASK tensor(0.0072)
USE STAGE 2 MASK tensor(0.3266)
DEBUG all ious tensor([0.6366, 0.7985, 0.7044, 0.0707, 0.8147])
USE STAGE 1 MASK tensor(0.6366)
USE STAGE 1 MASK tensor(0.7985)
USE STAGE 1 MASK tensor(0.7044)
USE STAGE 2 MASK tensor(0.0707)
USE STAGE 1 MASK tensor(0.8147)
DEBUG all ious tensor([0.0093, 0.1058, 0.0124])
USE STAGE 2 MASK tensor(0.0093)
USE STAGE 2 MASK tensor(0.1058)
USE STAGE 2 MASK tensor(0.0124)
DEBUG all ious tensor([0.7475, 0.3106, 0.7691, 0.7989, 0.8565])
USE STAGE 1 MASK tensor(0.7475)
USE STAGE 2 MASK tensor(0.3106)
USE STAGE 1 MASK tensor(0.7691)
USE STAGE 1 MASK Refining stage1 output with stage2 outcomes: 121it [00:00, 323.92it/s]Refining stage1 output with stage2 outcomes: 142it [00:00, 316.91it/s]
tensor(0.7989)
USE STAGE 1 MASK tensor(0.8565)
DEBUG all ious tensor([0.7285, 0.4151, 0.8303, 0.8954, 0.6876, 0.4132])
USE STAGE 1 MASK tensor(0.7285)
USE STAGE 2 MASK tensor(0.4151)
USE STAGE 1 MASK tensor(0.8303)
USE STAGE 1 MASK tensor(0.8954)
USE STAGE 1 MASK tensor(0.6876)
USE STAGE 2 MASK tensor(0.4132)
DEBUG all ious tensor([0.7339, 0.6638, 0.5238, 0.2387])
USE STAGE 1 MASK tensor(0.7339)
USE STAGE 1 MASK tensor(0.6638)
USE STAGE 1 MASK tensor(0.5238)
USE STAGE 2 MASK tensor(0.2387)
DEBUG all ious tensor([0.0322, 0.6785, 0.0175])
USE STAGE 2 MASK tensor(0.0322)
USE STAGE 1 MASK tensor(0.6785)
USE STAGE 2 MASK tensor(0.0175)
DEBUG all ious tensor([0.5502, 0.8747, 0.4106, 0.0000, 0.0210, 0.0729])
USE STAGE 1 MASK tensor(0.5502)
USE STAGE 1 MASK tensor(0.8747)
USE STAGE 2 MASK tensor(0.4106)
USE STAGE 2 MASK tensor(0.)
USE STAGE 2 MASK tensor(0.0210)
USE STAGE 2 MASK tensor(0.0729)
DEBUG all ious []
DEBUG all ious tensor([0.7932, 0.2562, 0.2221, 0.3675])
USE STAGE 1 MASK tensor(0.7932)
USE STAGE 2 MASK tensor(0.2562)
USE STAGE 2 MASK tensor(0.2221)
USE STAGE 2 MASK tensor(0.3675)
DEBUG all ious tensor([0.1903, 0.6903])
USE STAGE 2 MASK tensor(0.1903)
USE STAGE 1 MASK tensor(0.6903)
DEBUG all ious tensor([0.5301, 0.4478, 0.3810])
USE STAGE 1 MASK tensor(0.5301)
USE STAGE 2 MASK tensor(0.4478)
USE STAGE 2 MASK tensor(0.3810)
DEBUG all ious tensor([0.7031, 0.6826, 0.4227, 0.6454, 0.0839])
USE STAGE 1 MASK tensor(0.7031)
USE STAGE 1 MASK tensor(0.6826)
USE STAGE 2 MASK tensor(0.4227)
USE STAGE 1 MASK tensor(0.6454)
USE STAGE 2 MASK tensor(0.0839)
DEBUG all ious tensor([0.7155, 0.8048, 0.7462, 0.2739])
USE STAGE 1 MASK tensor(0.7155)
USE STAGE 1 MASK tensor(0.8048)
USE STAGE 1 MASK tensor(0.7462)
USE STAGE 2 MASK tensor(0.2739)
DEBUG all ious tensor([0.1955, 0.6892, 0.3269])
USE STAGE 2 MASK tensor(0.1955)
USE STAGE 1 MASK tensor(0.6892)
USE STAGE 2 MASK tensor(0.3269)
DEBUG all ious tensor([0.1207, 0.0555, 0.3180])
USE STAGE 2 MASK tensor(0.1207)
USE STAGE 2 MASK tensor(0.0555)
USE STAGE 2 MASK tensor(0.3180)
DEBUG all ious tensor([0.2011, 0.7110, 0.8452, 0.2676, 0.1744, 0.4767, 0.5544, 0.6048, 0.4973])
USE STAGE 2 MASK tensor(0.2011)
USE STAGE 1 MASK tensor(0.7110)
USE STAGE 1 MASK tensor(0.8452)
USE STAGE 2 MASK tensor(0.2676)
USE STAGE 2 MASK tensor(0.1744)
USE STAGE 1 MASK tensor(0.4767)
USE STAGE 1 MASK tensor(0.5544)
USE STAGE 1 MASK tensor(0.6048)
USE STAGE 1 MASK tensor(0.4973)
DEBUG all ious tensor([0.6983, 0.6143])
USE STAGE 1 MASK tensor(0.6983)
USE STAGE 1 MASK tensor(0.6143)
DEBUG all ious tensor([0.8569])
USE STAGE 1 MASK tensor(0.8569)
DEBUG all ious tensor([0.7700, 0.2265])
USE STAGE 1 MASK tensor(0.7700)
USE STAGE 2 MASK tensor(0.2265)
DEBUG all ious tensor([0.4050, 0.8988])
USE STAGE 2 MASK tensor(0.4050)
USE STAGE 1 MASK tensor(0.8988)
DEBUG all ious tensor([0.0600, 0.2707, 0.6095, 0.6541])
USE STAGE 2 MASK tensor(0.0600)
USE STAGE 2 MASK tensor(0.2707)
USE STAGE 1 MASK tensor(0.6095)
USE STAGE 1 MASK tensor(0.6541)
DEBUG all ious []
DEBUG all ious tensor([0.4274, 0.5109, 0.3312, 0.5112])
USE STAGE 2 MASK tensor(0.4274)
USE STAGE 1 MASK tensor(0.5109)
USE STAGE 2 MASK tensor(0.3312)
USE STAGE 1 MASK tensor(0.5112)
DEBUG all ious tensor([0.4440])
USE STAGE 2 MASK tensor(0.4440)
DEBUG all ious tensor([0.5729, 0.4178])
USE STAGE 1 MASK tensor(0.5729)
USE STAGE 2 MASK tensor(0.4178)
DEBUG all ious tensor([0.8397, 0.2299, 0.2829, 0.3015])
USE STAGE 1 MASK tensor(0.8397)
USE STAGE 2 MASK tensor(0.2299)
USE STAGE 2 MASK tensor(0.2829)
USE STAGE 2 MASK tensor(0.3015)
DEBUG all ious tensor([0.0355])
USE STAGE 2 MASK tensor(0.0355)
DEBUG all ious tensor([0.4362, 0.7232, 0.3291])
USE STAGE 2 MASK tensor(0.4362)
USE STAGE 1 MASK tensor(0.7232)
USE STAGE 2 MASK tensor(0.3291)
DEBUG all ious []
DEBUG all ious tensor([0.4595, 0.1859, 0.2759, 0.3574, 0.4407, 0.1302, 0.5646, 0.6262, 0.7221,
        0.5996, 0.8024, 0.7139, 0.0776, 0.0754, 0.0930, 0.0373])
USE STAGE 1 MASK tensor(0.4595)
USE STAGE 2 MASK tensor(0.1859)
USE STAGE 2 MASK tensor(0.2759)
USE STAGE 2 MASK tensor(0.3574)
USE STAGE 2 MASK tensor(0.4407)
USE STAGE 2 MASK tensor(0.1302)
USE STAGE 1 MASK tensor(0.5646)
USE STAGE 1 MASK tensor(0.6262)
USE STAGE 1 MASK tensor(0.7221)
USE STAGE 1 MASK tensor(0.5996)
USE STAGE 1 MASK tensor(0.8024)
USE STAGE 1 MASK tensor(0.7139)
USE STAGE 2 MASK tensor(0.0776)
USE STAGE 2 MASK tensor(0.0754)
USE STAGE 2 MASK tensor(0.0930)
USE STAGE 2 MASK tensor(0.0373)
DEBUG all ious tensor([0.4531, 0.5972])
USE STAGE 1 MASK tensor(0.4531)
USE STAGE 1 MASK tensor(0.5972)
DEBUG all ious tensor([0.1232, 0.2786, 0.5429])
USE STAGE 2 MASK tensor(0.1232)
USE STAGE 2 MASK tensor(0.2786)
USE STAGE 1 MASK tensor(0.5429)
DEBUG all ious tensor([0.2646, 0.4263, 0.6396, 0.5372])
USE STAGE 2 MASK tensor(0.2646)
USE STAGE 2 MASK tensor(0.4263)
USE STAGE 1 MASK tensor(0.6396)
USE STAGE 1 MASK tensor(0.5372)
DEBUG all ious tensor([0.3163, 0.1120])
USE STAGE 2 MASK tensor(0.3163)
USE STAGE 2 MASK tensor(0.1120)
DEBUG all ious tensor([0.7486, 0.5801, 0.6036, 0.7857])
USE STAGE 1 MASK tensor(0.7486)
USE STAGE 1 MASK tensor(0.5801)
USE STAGE 1 MASK tensor(0.6036)
USE STAGE 1 MASK tensor(0.7857)
DEBUG all ious tensor([0.4853, 0.7248, 0.5065, 0.5956, 0.4330, 0.1037])
USE STAGE 1 MASK tensor(0.4853)
USE STAGE 1 MASK tensor(0.7248)
USE STAGE 1 MASK tensor(0.5065)
USE STAGE 1 MASK tensor(0.5956)
USE STAGE 2 MASK tensor(0.4330)
USE STAGE 2 MASK tensor(0.1037)
DEBUG all ious tensor([0.5742, 0.6250, 0.5131, 0.5966, 0.4919, 0.2308, 0.0018])
USE STAGE 1 MASK tensor(0.5742)
USE STAGE 1 MASK tensor(0.6250)
USE STAGE 1 MASK tensor(0.5131)
USE STAGE 1 MASK tensor(0.5966)
USE STAGE 1 MASK tensor(0.4919)
USE STAGE 2 MASK tensor(0.2308)
USE STAGE 2 MASK tensor(0.0018)
DEBUG all ious tensor([0.6032, 0.5214])
USE STAGE 1 MASK tensor(0.6032)
USE STAGE 1 MASK tensor(0.5214)
DEBUG all ious tensor([0.0164, 0.7971, 0.0127, 0.6501, 0.0674, 0.3402])
USE STAGE 2 MASK tensor(0.0164)
USE STAGE 1 MASK tensor(0.7971)
USE STAGE 2 MASK tensor(0.0127)
USE STAGE 1 MASK tensor(0.6501)
USE STAGE 2 MASK tensor(0.0674)
USE STAGE 2 MASK tensor(0.3402)
DEBUG all ious tensor([0.8360, 0.8396, 0.7037, 0.0501, 0.7610])
USE STAGE 1 MASK tensor(0.8360)
USE STAGE 1 MASK tensor(0.8396)
USE STAGE 1 MASK tensor(0.7037)
USE STAGE 2 MASK tensor(0.0501)
USE STAGE 1 MASK tensor(0.7610)
DEBUG all ious tensor([0.2048, 0.3312, 0.7194, 0.0330, 0.5386])
USE STAGE 2 MASK tensor(0.2048)
USE STAGE 2 MASK tensor(0.3312)
USE STAGE 1 MASK tensor(0.7194)
USE STAGE 2 MASK tensor(0.0330)
USE STAGE 1 MASK tensor(0.5386)
DEBUG all ious tensor([0.3291, 0.0015, 0.0068, 0.2616])
USE STAGE 2 MASK tensor(0.3291)
USE STAGE 2 MASK tensor(0.0015)
USE STAGE 2 MASK tensor(0.0068)
USE STAGE 2 MASK tensor(0.2616)
DEBUG all ious tensor([0.2804, 0.7606, 0.4776, 0.1943, 0.3942])
USE STAGE 2 MASK tensor(0.2804)
USE STAGE 1 MASK tensor(0.7606)
USE STAGE 1 MASK tensor(0.4776)
USE STAGE 2 MASK tensor(0.1943)
USE STAGE 2 MASK tensor(0.3942)
DEBUG all ious tensor([0.1314, 0.0597])
USE STAGE 2 MASK tensor(0.1314)
USE STAGE 2 MASK tensor(0.0597)
Evaluating class window...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class window...:   1%|▏         | 2/142 [00:00<00:10, 13.48it/s]Evaluating class window...:   4%|▎         | 5/142 [00:00<00:09, 15.02it/s]Evaluating class window...:   5%|▍         | 7/142 [00:00<00:08, 15.11it/s]Evaluating class window...:   6%|▋         | 9/142 [00:00<00:08, 16.46it/s]Evaluating class window...:   9%|▉         | 13/142 [00:00<00:06, 19.45it/s]Evaluating class window...:  11%|█         | 15/142 [00:00<00:06, 19.52it/s]Evaluating class window...:  13%|█▎        | 18/142 [00:00<00:05, 21.26it/s]Evaluating class window...:  15%|█▍        | 21/142 [00:01<00:05, 22.65it/s]Evaluating class window...:  17%|█▋        | 24/142 [00:01<00:05, 22.78it/s]Evaluating class window...:  19%|█▉        | 27/142 [00:01<00:04, 23.99it/s]Evaluating class window...:  21%|██        | 30/142 [00:01<00:07, 15.53it/s]Evaluating class window...:  23%|██▎       | 32/142 [00:01<00:06, 16.14it/s]Evaluating class window...:  24%|██▍       | 34/142 [00:02<00:08, 12.98it/s]Evaluating class window...:  25%|██▌       | 36/142 [00:02<00:08, 12.87it/s]Evaluating class window...:  27%|██▋       | 39/142 [00:02<00:06, 15.13it/s]Evaluating class window...:  30%|███       | 43/142 [00:02<00:05, 17.29it/s]Evaluating class window...:  32%|███▏      | 45/142 [00:02<00:06, 15.32it/s]Evaluating class window...:  34%|███▍      | 48/142 [00:02<00:05, 16.33it/s]Evaluating class window...:  35%|███▌      | 50/142 [00:02<00:05, 16.49it/s]Evaluating class window...:  37%|███▋      | 53/142 [00:03<00:04, 18.28it/s]Evaluating class window...:  39%|███▊      | 55/142 [00:03<00:04, 18.35it/s]Evaluating class window...:  41%|████      | 58/142 [00:03<00:04, 20.09it/s]Evaluating class window...:  43%|████▎     | 61/142 [00:03<00:03, 21.42it/s]Evaluating class window...:  45%|████▌     | 64/142 [00:03<00:03, 21.20it/s]Evaluating class window...:  47%|████▋     | 67/142 [00:03<00:03, 21.73it/s]Evaluating class window...:  50%|█████     | 71/142 [00:03<00:03, 21.96it/s]Evaluating class window...:  53%|█████▎    | 75/142 [00:04<00:03, 21.91it/s]Evaluating class window...:  55%|█████▍    | 78/142 [00:04<00:02, 21.56it/s]Evaluating class window...:  57%|█████▋    | 81/142 [00:04<00:03, 19.83it/s]Evaluating class window...:  60%|█████▉    | 85/142 [00:04<00:02, 21.57it/s]Evaluating class window...:  62%|██████▏   | 88/142 [00:04<00:02, 21.03it/s]Evaluating class window...:  64%|██████▍   | 91/142 [00:04<00:02, 22.22it/s]Evaluating class window...:  66%|██████▌   | 94/142 [00:04<00:02, 21.18it/s]Evaluating class window...:  68%|██████▊   | 97/142 [00:05<00:02, 20.62it/s]Evaluating class window...:  70%|███████   | 100/142 [00:05<00:02, 17.34it/s]Evaluating class window...:  72%|███████▏  | 102/142 [00:05<00:02, 17.78it/s]Evaluating class window...:  73%|███████▎  | 104/142 [00:05<00:02, 17.96it/s]Evaluating class window...:  75%|███████▍  | 106/142 [00:05<00:01, 18.35it/s]Evaluating class window...:  76%|███████▌  | 108/142 [00:05<00:02, 14.97it/s]Evaluating class window...:  77%|███████▋  | 110/142 [00:06<00:02, 13.28it/s]Evaluating class window...:  80%|███████▉  | 113/142 [00:06<00:02, 14.38it/s]Evaluating class window...:  81%|████████  | 115/142 [00:06<00:02, 13.48it/s]Evaluating class window...:  83%|████████▎ | 118/142 [00:06<00:01, 16.09it/s]Evaluating class window...:  85%|████████▍ | 120/142 [00:06<00:01, 15.49it/s]Evaluating class window...:  87%|████████▋ | 123/142 [00:06<00:01, 17.36it/s]Evaluating class window...:  89%|████████▊ | 126/142 [00:06<00:00, 18.16it/s]Evaluating class window...:  90%|█████████ | 128/142 [00:07<00:00, 14.82it/s]Evaluating class window...:  92%|█████████▏| 131/142 [00:07<00:00, 17.51it/s]Evaluating class window...:  95%|█████████▌| 135/142 [00:07<00:00, 20.61it/s]Evaluating class window...:  97%|█████████▋| 138/142 [00:07<00:00, 18.79it/s]Evaluating class window...: 100%|██████████| 142/142 [00:07<00:00, 20.20it/s]Evaluating class window...: 100%|██████████| 142/142 [00:07<00:00, 18.18it/s]
  0%|          | 0/142 [00:00<?, ?it/s]  9%|▉         | 13/142 [00:00<00:01, 101.12it/s] 21%|██        | 30/142 [00:00<00:00, 136.12it/s] 31%|███       | 44/142 [00:00<00:00, 135.51it/s] 50%|█████     | 71/142 [00:00<00:00, 180.04it/s] 66%|██████▌   | 94/142 [00:00<00:00, 195.20it/s] 80%|████████  | 114/142 [00:00<00:00, 183.04it/s] 96%|█████████▌| 136/142 [00:00<00:00, 193.12it/s]100%|██████████| 142/142 [00:00<00:00, 178.96it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.004   0.006   0.007
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.006   0.007   0.009
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.002   0.002   0.003
################################################

DEBUG avg value {'ap': 0.28274845787967506, 'ap50%': 0.3659070280082988, 'ap25%': 0.44753612322791714, 'rc': 0.5277777777777778, 'rc50%': 0.671875, 'rc25%': 0.8046875}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes:  90%|█████████ | 9/10 [54:03<06:03, 363.73s/it]Projecting 2d masks to 3d point cloud:   0%|          | 0/142 [00:00<?, ?it/s]Working on scene0011_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129], [28, 29, 30, 31, 32, 33], [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152], [130, 131], [153, 156, 157, 158]]

Calculating viewed counts for every point:   0%|          | 0/238 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 14/238 [00:00<00:01, 135.26it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/238 [00:00<00:01, 146.43it/s][A
Calculating viewed counts for every point:  20%|█▉        | 47/238 [00:00<00:01, 154.07it/s][A
Calculating viewed counts for every point:  26%|██▋       | 63/238 [00:00<00:01, 153.66it/s][A
Calculating viewed counts for every point:  33%|███▎      | 79/238 [00:00<00:01, 147.94it/s][A
Calculating viewed counts for every point:  39%|███▉      | 94/238 [00:00<00:01, 141.28it/s][A
Calculating viewed counts for every point:  46%|████▌     | 109/238 [00:00<00:00, 140.33it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 124/238 [00:00<00:00, 135.19it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 138/238 [00:00<00:00, 133.20it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 154/238 [00:01<00:00, 138.30it/s][A
Calculating viewed counts for every point:  71%|███████   | 168/238 [00:01<00:00, 127.42it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 182/238 [00:01<00:00, 128.56it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 196/238 [00:01<00:00, 129.10it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 209/238 [00:01<00:00, 126.89it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 224/238 [00:01<00:00, 131.80it/s][A
Calculating viewed counts for every point: 100%|██████████| 238/238 [00:01<00:00, 127.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|          | 1/142 [00:07<17:18,  7.36s/it]tools/projection_2d_to_3d.py:47: RuntimeWarning: invalid value encountered in cast
  projected_pts = (np.round(projected_pts)).astype(np.int64)
detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(12176, device='cuda:0')
before filtering torch.Size([5, 237360])
after filtering torch.Size([3, 237360])
num_ins_points_after_filtering tensor([6463, 3187,  483], device='cuda:0')
Working on scene0015_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 33, 34, 35, 36, 37, 38, 39, 52, 53, 54], [5, 40, 41], [7, 8, 9, 57, 58, 59, 60], [11, 13, 14, 15, 18, 19, 20, 21, 22, 48, 49, 62, 64, 65], [23, 24], [26, 27, 28, 29, 30, 31, 32, 55], [42, 43, 44, 45], [50, 61]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 19/198 [00:00<00:00, 187.49it/s][A
Calculating viewed counts for every point:  20%|██        | 40/198 [00:00<00:00, 195.88it/s][A
Calculating viewed counts for every point:  31%|███       | 61/198 [00:00<00:00, 198.61it/s][A
Calculating viewed counts for every point:  41%|████▏     | 82/198 [00:00<00:00, 197.43it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 102/198 [00:00<00:00, 180.59it/s][A
Calculating viewed counts for every point:  61%|██████    | 121/198 [00:00<00:00, 177.02it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 142/198 [00:00<00:00, 184.81it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 161/198 [00:00<00:00, 177.96it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 181/198 [00:00<00:00, 179.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   1%|▏         | 2/142 [00:09<09:57,  4.27s/it]detected_ratio_thres_value tensor(0.2128, device='cuda:0')
final masked points tensor(6591, device='cuda:0')
before filtering torch.Size([8, 217086])
after filtering torch.Size([4, 217086])
num_ins_points_after_filtering tensor([1849,  904, 2630,  198], device='cuda:0')
Working on scene0019_00 class file cabinet
masks_to_be_merged [[1, 3, 5, 6, 7], [2, 4, 49], [16, 18, 19, 21, 24, 25, 27], [22, 23, 26], [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  47%|████▋     | 27/58 [00:00<00:00, 262.16it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 54/58 [00:00<00:00, 245.28it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   2%|▏         | 3/142 [00:10<06:11,  2.68s/it]detected_ratio_thres_value tensor(0.4545, device='cuda:0')
final masked points tensor(13724, device='cuda:0')
before filtering torch.Size([5, 136769])
after filtering torch.Size([3, 136769])
num_ins_points_after_filtering tensor([ 853, 2146, 9013], device='cuda:0')
Working on scene0025_00 class file cabinet
masks_to_be_merged [[0, 3, 4, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 147, 148, 149, 150, 151, 152, 154], [1, 8, 16, 17, 19, 22, 24, 26, 28, 30, 32, 34, 44, 45, 47, 48, 49, 50, 51, 52, 94, 95, 97, 99], [2, 7, 9, 11, 86, 87, 88, 89, 90, 91, 92, 153, 155], [5, 6, 14], [10, 12, 13, 15, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], [18, 20, 21, 23, 25, 27, 29, 31, 33, 40, 41, 42, 43, 46], [35, 36], [37, 38], [53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], [54, 134], [72, 74], [118, 119, 120], [121, 122], [124, 126], [125, 127], [156, 157, 158, 159, 160, 161]]

Calculating viewed counts for every point:   0%|          | 0/195 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 15/195 [00:00<00:01, 144.59it/s][A
Calculating viewed counts for every point:  17%|█▋        | 33/195 [00:00<00:00, 163.52it/s][A
Calculating viewed counts for every point:  27%|██▋       | 52/195 [00:00<00:00, 174.71it/s][A
Calculating viewed counts for every point:  36%|███▌      | 70/195 [00:00<00:00, 170.78it/s][A
Calculating viewed counts for every point:  46%|████▌     | 89/195 [00:00<00:00, 176.81it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 107/195 [00:00<00:00, 165.20it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 124/195 [00:00<00:00, 165.64it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 141/195 [00:00<00:00, 165.77it/s][A
Calculating viewed counts for every point:  81%|████████  | 158/195 [00:00<00:00, 161.04it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 175/195 [00:01<00:00, 159.65it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 193/195 [00:01<00:00, 164.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   3%|▎         | 4/142 [00:14<08:00,  3.48s/it]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(18120, device='cuda:0')
before filtering torch.Size([16, 173392])
after filtering torch.Size([4, 173392])
num_ins_points_after_filtering tensor([1119, 3718, 1253, 9161], device='cuda:0')
Working on scene0030_00 class file cabinet
masks_to_be_merged [[0, 78], [1, 2, 77], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [22, 23], [24, 26, 28], [25, 27, 29, 30, 35], [32, 34], [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 116, 117, 118]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 9/250 [00:00<00:02, 83.81it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/250 [00:00<00:02, 78.94it/s][A
Calculating viewed counts for every point:  12%|█▏        | 30/250 [00:00<00:02, 92.49it/s][A
Calculating viewed counts for every point:  16%|█▋        | 41/250 [00:00<00:02, 98.49it/s][A
Calculating viewed counts for every point:  21%|██        | 52/250 [00:00<00:01, 101.17it/s][A
Calculating viewed counts for every point:  26%|██▌       | 64/250 [00:00<00:01, 106.88it/s][A
Calculating viewed counts for every point:  30%|███       | 76/250 [00:00<00:01, 108.71it/s][A
Calculating viewed counts for every point:  35%|███▌      | 88/250 [00:00<00:01, 109.65it/s][A
Calculating viewed counts for every point:  40%|████      | 100/250 [00:00<00:01, 110.98it/s][A
Calculating viewed counts for every point:  45%|████▍     | 112/250 [00:01<00:01, 109.47it/s][A
Calculating viewed counts for every point:  49%|████▉     | 123/250 [00:01<00:01, 106.75it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 135/250 [00:01<00:01, 108.58it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 148/250 [00:01<00:00, 112.69it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 161/250 [00:01<00:00, 116.29it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 173/250 [00:01<00:00, 114.21it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 185/250 [00:01<00:00, 109.63it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 198/250 [00:01<00:00, 112.96it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 210/250 [00:01<00:00, 112.20it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 222/250 [00:02<00:00, 111.70it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 234/250 [00:02<00:00, 108.44it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 246/250 [00:02<00:00, 109.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▎         | 5/142 [00:19<08:52,  3.88s/it]detected_ratio_thres_value tensor(0.2982, device='cuda:0')
final masked points tensor(20304, device='cuda:0')
before filtering torch.Size([9, 293811])
after filtering torch.Size([5, 293811])
num_ins_points_after_filtering tensor([3255, 5995, 4770, 2885, 1752], device='cuda:0')
Working on scene0046_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 64, 65, 66, 67, 68, 79, 80, 81, 82, 83], [8, 9, 10, 11, 12, 13, 14, 18, 19, 26, 28, 29, 30, 31, 32, 33, 84, 85, 86, 87], [15, 16, 17, 20, 21, 23, 24, 25, 27], [52, 56, 57, 61, 62], [58, 59], [69, 70, 71], [74, 76, 77, 78]]

Calculating viewed counts for every point:   0%|          | 0/249 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 16/249 [00:00<00:01, 151.51it/s][A
Calculating viewed counts for every point:  14%|█▎        | 34/249 [00:00<00:01, 163.85it/s][A
Calculating viewed counts for every point:  20%|██        | 51/249 [00:00<00:01, 162.03it/s][A
Calculating viewed counts for every point:  28%|██▊       | 69/249 [00:00<00:01, 165.01it/s][A
Calculating viewed counts for every point:  35%|███▍      | 86/249 [00:00<00:01, 159.38it/s][A
Calculating viewed counts for every point:  41%|████▏     | 103/249 [00:00<00:00, 160.41it/s][A
Calculating viewed counts for every point:  48%|████▊     | 120/249 [00:00<00:00, 157.34it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 136/249 [00:00<00:00, 150.38it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 153/249 [00:00<00:00, 151.55it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 170/249 [00:01<00:00, 155.82it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 187/249 [00:01<00:00, 158.57it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 204/249 [00:01<00:00, 160.07it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 222/249 [00:01<00:00, 163.77it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 239/249 [00:01<00:00, 162.45it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   4%|▍         | 6/142 [00:22<08:11,  3.61s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(9509, device='cuda:0')
before filtering torch.Size([7, 186857])
after filtering torch.Size([3, 186857])
num_ins_points_after_filtering tensor([4663, 3693,  906], device='cuda:0')
Working on scene0050_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 101, 109, 110, 111, 112, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], [5, 113, 115, 116, 118, 121, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 146, 153], [20, 21, 22, 23, 24], [25, 26, 27, 28, 34, 36, 37, 38, 39, 40, 169], [29, 30, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53], [51, 52], [54, 55], [61, 62, 63, 64, 65], [66, 114, 117, 119, 120, 122, 123, 124, 126, 143, 144, 145, 148, 150, 152], [90, 92], [100, 102, 103], [104, 105, 106, 107, 108], [125, 127, 147, 149, 151], [129, 137, 154]]

Calculating viewed counts for every point:   0%|          | 0/466 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 20/466 [00:00<00:02, 195.37it/s][A
Calculating viewed counts for every point:   9%|▊         | 40/466 [00:00<00:02, 182.89it/s][A
Calculating viewed counts for every point:  13%|█▎        | 61/466 [00:00<00:02, 194.37it/s][A
Calculating viewed counts for every point:  17%|█▋        | 81/466 [00:00<00:01, 195.67it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/466 [00:00<00:01, 188.16it/s][A
Calculating viewed counts for every point:  26%|██▌       | 122/466 [00:00<00:01, 194.03it/s][A
Calculating viewed counts for every point:  30%|███       | 142/466 [00:00<00:01, 189.39it/s][A
Calculating viewed counts for every point:  35%|███▍      | 162/466 [00:00<00:01, 186.53it/s][A
Calculating viewed counts for every point:  39%|███▉      | 181/466 [00:00<00:01, 184.31it/s][A
Calculating viewed counts for every point:  43%|████▎     | 200/466 [00:01<00:01, 182.83it/s][A
Calculating viewed counts for every point:  47%|████▋     | 219/466 [00:01<00:01, 182.17it/s][A
Calculating viewed counts for every point:  51%|█████     | 238/466 [00:01<00:01, 184.44it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 259/466 [00:01<00:01, 191.49it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 279/466 [00:01<00:00, 193.41it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 299/466 [00:01<00:00, 187.35it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 318/466 [00:01<00:00, 183.52it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 339/466 [00:01<00:00, 190.02it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 359/466 [00:01<00:00, 188.80it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 379/466 [00:02<00:00, 191.66it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 399/466 [00:02<00:00, 188.09it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 418/466 [00:02<00:00, 188.63it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 437/466 [00:02<00:00, 181.09it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 456/466 [00:02<00:00, 178.38it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   5%|▍         | 7/142 [00:28<09:43,  4.32s/it]detected_ratio_thres_value tensor(0.2093, device='cuda:0')
final masked points tensor(17770, device='cuda:0')
before filtering torch.Size([14, 211406])
after filtering torch.Size([5, 211406])
num_ins_points_after_filtering tensor([3704,  747, 7242, 1796, 1318], device='cuda:0')
Working on scene0063_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [14, 15, 18, 21, 24, 29, 32, 33, 64, 65, 68, 69, 70, 71, 72, 73], [16, 17, 19, 20, 22, 25, 27, 30, 31, 49, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 66, 67], [26, 28, 55, 62], [35, 36], [37, 41, 48], [39, 42, 45, 46, 50, 51]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  46%|████▋     | 39/84 [00:00<00:00, 384.43it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 79/84 [00:00<00:00, 393.42it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   6%|▌         | 8/142 [00:29<07:34,  3.39s/it]detected_ratio_thres_value tensor(0.4500, device='cuda:0')
final masked points tensor(6927, device='cuda:0')
before filtering torch.Size([7, 76966])
after filtering torch.Size([4, 76966])
num_ins_points_after_filtering tensor([ 838, 2750, 2018, 1129], device='cuda:0')
Working on scene0064_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 5, 6, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48], [7, 8, 9, 11, 16, 50, 53, 56], [10, 12, 13, 14, 17, 18, 19, 21, 23, 54, 55, 57, 58], [20, 22, 24, 25], [26, 27], [28, 29, 30, 31], [32, 33], [44, 46, 49]]

Calculating viewed counts for every point:   0%|          | 0/121 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 16/121 [00:00<00:00, 159.89it/s][A
Calculating viewed counts for every point:  26%|██▋       | 32/121 [00:00<00:00, 159.45it/s][A
Calculating viewed counts for every point:  42%|████▏     | 51/121 [00:00<00:00, 173.33it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 69/121 [00:00<00:00, 157.32it/s][A
Calculating viewed counts for every point:  70%|███████   | 85/121 [00:00<00:00, 156.34it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 102/121 [00:00<00:00, 159.58it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 119/121 [00:00<00:00, 156.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   6%|▋         | 9/142 [00:31<06:14,  2.82s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(37898, device='cuda:0')
before filtering torch.Size([8, 230672])
after filtering torch.Size([5, 230672])
num_ins_points_after_filtering tensor([13171,  3115, 18086,   405,   505], device='cuda:0')
Working on scene0077_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 15, 16, 17, 18, 51, 53, 55, 57, 58, 59, 60], [5, 7, 8, 10, 11, 12, 14], [6, 56], [9, 13], [19, 20, 22, 24, 27, 29], [21, 23, 25, 26, 28, 30, 31, 32, 33], [34, 35, 36, 37, 38], [39, 40], [41, 42, 43, 44], [49, 50, 52, 54]]

Calculating viewed counts for every point:   0%|          | 0/61 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 32/61 [00:00<00:00, 319.65it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:   7%|▋         | 10/142 [00:32<04:49,  2.19s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(13630, device='cuda:0')
before filtering torch.Size([10, 92807])
after filtering torch.Size([6, 92807])
num_ins_points_after_filtering tensor([3952, 5353,  633, 1384,  612,  899], device='cuda:0')
Working on scene0081_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/30 [00:00<?, ?it/s][A
                                                                                 [AProjecting 2d masks to 3d point cloud:   8%|▊         | 11/142 [00:32<03:27,  1.58s/it]detected_ratio_thres_value tensor(0.1538, device='cuda:0')
final masked points tensor(7309, device='cuda:0')
before filtering torch.Size([1, 51381])
after filtering torch.Size([1, 51381])
num_ins_points_after_filtering tensor([7309], device='cuda:0')
Working on scene0084_00 class file cabinet
masks_to_be_merged [[0, 1, 6, 7, 8, 9, 10, 29], [2, 3, 4, 5], [11, 12, 13, 74], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34], [35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], [43, 44, 46, 70, 72, 73], [67, 68], [69, 71]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 23/198 [00:00<00:00, 222.74it/s][A
Calculating viewed counts for every point:  23%|██▎       | 46/198 [00:00<00:00, 198.12it/s][A
Calculating viewed counts for every point:  34%|███▍      | 68/198 [00:00<00:00, 205.56it/s][A
Calculating viewed counts for every point:  45%|████▍     | 89/198 [00:00<00:00, 187.38it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 108/198 [00:00<00:00, 179.82it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 129/198 [00:00<00:00, 188.02it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 149/198 [00:00<00:00, 190.75it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 170/198 [00:00<00:00, 194.34it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 190/198 [00:00<00:00, 192.12it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   8%|▊         | 12/142 [00:34<03:44,  1.73s/it]detected_ratio_thres_value tensor(0.2286, device='cuda:0')
final masked points tensor(3631, device='cuda:0')
before filtering torch.Size([8, 116845])
after filtering torch.Size([4, 116845])
num_ins_points_after_filtering tensor([ 398, 1135, 1281,  381], device='cuda:0')
Working on scene0086_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 25, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 42, 46, 48, 49, 50, 51], [5, 40, 43, 45], [8, 10, 13, 16, 19, 41, 44, 47], [24, 29], [32, 35], [53, 54], [55, 56, 57, 58, 59]]

Calculating viewed counts for every point:   0%|          | 0/143 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/143 [00:00<00:00, 206.76it/s][A
Calculating viewed counts for every point:  29%|██▉       | 42/143 [00:00<00:00, 197.59it/s][A
Calculating viewed counts for every point:  43%|████▎     | 62/143 [00:00<00:00, 196.04it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 82/143 [00:00<00:00, 190.17it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 103/143 [00:00<00:00, 194.53it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 123/143 [00:00<00:00, 191.94it/s][A
Calculating viewed counts for every point: 100%|██████████| 143/143 [00:00<00:00, 185.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:   9%|▉         | 13/142 [00:35<03:33,  1.65s/it]detected_ratio_thres_value tensor(0.2800, device='cuda:0')
final masked points tensor(2610, device='cuda:0')
before filtering torch.Size([7, 124572])
after filtering torch.Size([2, 124572])
num_ins_points_after_filtering tensor([965, 705], device='cuda:0')
Working on scene0088_00 class file cabinet
masks_to_be_merged [[2, 3, 4, 7, 8, 9], [5, 10]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 22/110 [00:00<00:00, 212.73it/s][A
Calculating viewed counts for every point:  40%|████      | 44/110 [00:00<00:00, 199.72it/s][A
Calculating viewed counts for every point:  61%|██████    | 67/110 [00:00<00:00, 209.21it/s][A
Calculating viewed counts for every point:  80%|████████  | 88/110 [00:00<00:00, 188.55it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 108/110 [00:00<00:00, 189.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  10%|▉         | 14/142 [00:36<02:59,  1.40s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(1368, device='cuda:0')
before filtering torch.Size([2, 166872])
after filtering torch.Size([1, 166872])
num_ins_points_after_filtering tensor([1187], device='cuda:0')
Working on scene0095_00 class file cabinet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 14, 17, 18, 19, 20, 21, 22, 23], [6, 7, 8, 9, 10, 11, 12, 13, 15, 16], [25, 26], [27, 28, 29, 30], [35, 41], [46, 47, 48, 49], [54, 55], [56, 57], [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 16/166 [00:00<00:00, 157.97it/s][A
Calculating viewed counts for every point:  21%|██        | 35/166 [00:00<00:00, 174.86it/s][A
Calculating viewed counts for every point:  32%|███▏      | 53/166 [00:00<00:00, 171.82it/s][A
Calculating viewed counts for every point:  43%|████▎     | 71/166 [00:00<00:00, 172.05it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 89/166 [00:00<00:00, 166.04it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 106/166 [00:00<00:00, 164.51it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 123/166 [00:00<00:00, 161.93it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 143/166 [00:00<00:00, 172.13it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 161/166 [00:00<00:00, 170.88it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  11%|█         | 15/142 [00:39<03:39,  1.72s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(9863, device='cuda:0')
before filtering torch.Size([10, 214895])
after filtering torch.Size([3, 214895])
num_ins_points_after_filtering tensor([2635,  753, 5191], device='cuda:0')
Working on scene0100_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], [53, 54], [55, 57]]

Calculating viewed counts for every point:   0%|          | 0/102 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███▏      | 32/102 [00:00<00:00, 316.30it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 66/102 [00:00<00:00, 328.66it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 99/102 [00:00<00:00, 315.53it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  11%|█▏        | 16/142 [00:40<03:20,  1.59s/it]detected_ratio_thres_value tensor(0.5429, device='cuda:0')
final masked points tensor(6544, device='cuda:0')
before filtering torch.Size([3, 52304])
after filtering torch.Size([1, 52304])
num_ins_points_after_filtering tensor([6544], device='cuda:0')
Working on scene0131_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 79], [4, 5], [6, 7, 8], [20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], [26, 28], [31, 33, 35], [45, 46], [48, 49, 50, 51, 53], [52, 54, 55], [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69], [66, 70, 71, 73, 75, 77, 81, 83, 84, 85, 86], [68, 72, 74, 76, 78, 80, 82]]

Calculating viewed counts for every point:   0%|          | 0/108 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 22/108 [00:00<00:00, 210.92it/s][A
Calculating viewed counts for every point:  41%|████      | 44/108 [00:00<00:00, 214.34it/s][A
Calculating viewed counts for every point:  61%|██████    | 66/108 [00:00<00:00, 215.44it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 88/108 [00:00<00:00, 213.06it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  12%|█▏        | 17/142 [00:42<03:30,  1.68s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(20008, device='cuda:0')
before filtering torch.Size([12, 177091])
after filtering torch.Size([7, 177091])
num_ins_points_after_filtering tensor([3123, 8678,  231, 1534, 1714, 1395, 1058], device='cuda:0')
Working on scene0139_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 113, 114, 115, 116, 117, 118, 119, 121, 124], [9, 10, 11, 120, 122, 123, 125, 126, 127, 128, 129], [12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 34, 35, 36], [20, 22, 25, 27], [32, 33], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56], [54, 55], [57, 59, 61, 63, 65], [62, 64], [110, 111]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 40/136 [00:00<00:00, 396.86it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 80/136 [00:00<00:00, 378.98it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 127/136 [00:00<00:00, 414.92it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 18/142 [00:44<03:49,  1.85s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(12779, device='cuda:0')
before filtering torch.Size([10, 72007])
after filtering torch.Size([6, 72007])
num_ins_points_after_filtering tensor([1558, 1651, 2644, 4717,  745,  921], device='cuda:0')
Working on scene0144_00 class file cabinet
masks_to_be_merged [[9, 10, 11, 43, 87], [35, 36], [39, 83], [40, 41, 42], [44, 45], [56, 57, 58], [62, 63, 64], [66, 67], [71, 72], [73, 74, 75], [76, 77, 78, 79, 80, 81], [90, 91, 92]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 25/144 [00:00<00:00, 248.91it/s][A
Calculating viewed counts for every point:  36%|███▌      | 52/144 [00:00<00:00, 259.20it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 78/144 [00:00<00:00, 252.40it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 104/144 [00:00<00:00, 244.97it/s][A
Calculating viewed counts for every point:  90%|█████████ | 130/144 [00:00<00:00, 249.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  13%|█▎        | 19/142 [00:46<03:59,  1.95s/it]detected_ratio_thres_value tensor(0.2222, device='cuda:0')
final masked points tensor(8487, device='cuda:0')
before filtering torch.Size([12, 126879])
after filtering torch.Size([10, 126879])
num_ins_points_after_filtering tensor([597,  38, 910, 367, 659, 222, 247, 932, 591,  49], device='cuda:0')
Working on scene0146_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 7, 8, 9, 10, 81, 83, 85, 87, 89, 91], [3, 4, 5, 6, 59, 61, 63, 65, 67, 69, 75, 77, 92, 93], [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40], [41, 42], [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 82, 84, 86, 88, 90]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 38/141 [00:00<00:00, 376.98it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 76/141 [00:00<00:00, 324.15it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 109/141 [00:00<00:00, 319.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  14%|█▍        | 20/142 [00:48<03:51,  1.89s/it]detected_ratio_thres_value tensor(0.3478, device='cuda:0')
final masked points tensor(8579, device='cuda:0')
before filtering torch.Size([5, 60438])
after filtering torch.Size([4, 60438])
num_ins_points_after_filtering tensor([ 925,  417, 3442, 3774], device='cuda:0')
Working on scene0149_00 class file cabinet
masks_to_be_merged [[0, 2, 3, 4, 24, 167, 169, 170, 171, 172, 173, 176], [1, 5, 166], [6, 9, 11, 12, 14, 16, 19, 20, 22, 23, 148, 149, 151, 152, 153, 155, 158, 160, 164], [7, 8, 10, 13, 15, 17, 18, 21, 157, 159, 161, 162, 163, 165], [26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 43, 44, 47, 48, 49, 57, 59, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 141, 186, 187, 188, 189, 190, 197, 198, 199, 200, 201, 202, 204, 222, 224, 226, 227, 228, 229, 230, 231, 232], [34, 36, 40, 42, 45, 46, 50, 51, 53, 54, 56, 58, 61, 62, 63, 64, 67, 68, 70, 72, 74, 77, 140, 142, 143, 191, 192, 193, 194, 195, 196], [52, 55, 129, 133, 137, 139, 144, 145, 146, 147, 150], [60, 65, 66, 69, 71, 73, 76, 80], [154, 156], [174, 175, 177, 178, 179, 180, 181, 182, 183], [203, 206, 208, 216, 217, 218, 220, 221, 223, 225], [205, 207, 209, 210, 211, 212, 213, 214, 215]]

Calculating viewed counts for every point:   0%|          | 0/141 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 22/141 [00:00<00:00, 215.74it/s][A
Calculating viewed counts for every point:  31%|███       | 44/141 [00:00<00:00, 211.74it/s][A
Calculating viewed counts for every point:  47%|████▋     | 66/141 [00:00<00:00, 213.84it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 92/141 [00:00<00:00, 229.97it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 118/141 [00:00<00:00, 240.62it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  15%|█▍        | 21/142 [00:54<06:00,  2.98s/it]detected_ratio_thres_value tensor(0.3261, device='cuda:0')
final masked points tensor(29217, device='cuda:0')
before filtering torch.Size([12, 162396])
after filtering torch.Size([9, 162396])
num_ins_points_after_filtering tensor([ 679, 1805, 1018, 9375, 8451, 2881, 1555,  505, 2391], device='cuda:0')
Working on scene0153_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 28, 29, 30, 31, 32, 33], [14, 15, 18, 19, 20], [17, 22, 23, 25]]

Calculating viewed counts for every point:   0%|          | 0/59 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 49/59 [00:00<00:00, 484.64it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  15%|█▌        | 22/142 [00:54<04:17,  2.15s/it]detected_ratio_thres_value tensor(0.4545, device='cuda:0')
final masked points tensor(3579, device='cuda:0')
before filtering torch.Size([3, 47709])
after filtering torch.Size([1, 47709])
num_ins_points_after_filtering tensor([2163], device='cuda:0')
Working on scene0164_00 class file cabinet
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 139, 140, 141, 142, 143, 144, 145, 146, 217, 218, 219], [11, 12, 21, 22, 31, 37, 39, 40, 43, 44, 46, 48, 50, 153, 154, 155, 156, 157, 158, 161, 163], [17, 18, 19, 147, 148, 149, 150, 151], [20, 23, 24, 26, 27, 152, 167, 168, 171, 172, 173, 174, 176, 177, 179], [25, 28, 164, 165, 166, 169, 170, 175, 178, 180, 181], [29, 30, 32, 33, 34, 35, 38, 52, 55, 61, 62, 64, 159, 160, 162, 182, 183, 184, 185], [36, 41, 42, 45, 47, 49, 51, 53, 54, 56, 57, 58, 59, 60, 63, 65, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 214, 216], [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 103, 105, 106, 108, 109, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212], [99, 102, 104, 107, 110, 111, 112, 113, 116, 124, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 196, 197, 210, 213, 215]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 34/189 [00:00<00:00, 330.61it/s][A
Calculating viewed counts for every point:  36%|███▌      | 68/189 [00:00<00:00, 330.14it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 102/189 [00:00<00:00, 329.99it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 135/189 [00:00<00:00, 305.66it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 169/189 [00:00<00:00, 316.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  16%|█▌        | 23/142 [00:55<03:55,  1.98s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(16842, device='cuda:0')
before filtering torch.Size([9, 94315])
after filtering torch.Size([8, 94315])
num_ins_points_after_filtering tensor([ 947,  992, 1194, 2728,  523, 3693, 4429, 2007], device='cuda:0')
Working on scene0169_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], [17, 19, 20, 21, 22], [53, 54]]

Calculating viewed counts for every point:   0%|          | 0/204 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 15/204 [00:00<00:01, 146.72it/s][A
Calculating viewed counts for every point:  15%|█▍        | 30/204 [00:00<00:01, 145.11it/s][A
Calculating viewed counts for every point:  22%|██▏       | 45/204 [00:00<00:01, 130.54it/s][A
Calculating viewed counts for every point:  29%|██▉       | 59/204 [00:00<00:01, 128.46it/s][A
Calculating viewed counts for every point:  35%|███▌      | 72/204 [00:00<00:01, 123.44it/s][A
Calculating viewed counts for every point:  42%|████▏     | 85/204 [00:00<00:00, 124.68it/s][A
Calculating viewed counts for every point:  48%|████▊     | 98/204 [00:00<00:00, 125.66it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 112/204 [00:00<00:00, 129.35it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 127/204 [00:00<00:00, 132.98it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 141/204 [00:01<00:00, 125.12it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 155/204 [00:01<00:00, 126.75it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 169/204 [00:01<00:00, 128.40it/s][A
Calculating viewed counts for every point:  90%|█████████ | 184/204 [00:01<00:00, 132.27it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 198/204 [00:01<00:00, 132.87it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  17%|█▋        | 24/142 [00:58<03:59,  2.03s/it]detected_ratio_thres_value tensor(0.4062, device='cuda:0')
final masked points tensor(4759, device='cuda:0')
before filtering torch.Size([3, 239354])
after filtering torch.Size([1, 239354])
num_ins_points_after_filtering tensor([4694], device='cuda:0')
Working on scene0187_00 class file cabinet
masks_to_be_merged [[0, 2, 5, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 34, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 138, 140, 142, 143, 146, 180, 182], [1, 3, 4, 6, 7, 8, 11, 13, 15, 24, 27, 100, 101, 102, 104, 106, 108, 109, 129, 130], [64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 85, 88, 90, 92, 94, 96, 136, 137, 139, 141, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185], [80, 84, 86, 89, 91, 93, 95, 97, 98, 99, 166, 170, 171, 172]]

Calculating viewed counts for every point:   0%|          | 0/227 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 23/227 [00:00<00:00, 224.80it/s][A
Calculating viewed counts for every point:  20%|██        | 46/227 [00:00<00:00, 219.41it/s][A
Calculating viewed counts for every point:  30%|██▉       | 68/227 [00:00<00:00, 215.56it/s][A
Calculating viewed counts for every point:  40%|███▉      | 90/227 [00:00<00:00, 213.65it/s][A
Calculating viewed counts for every point:  49%|████▉     | 112/227 [00:00<00:00, 215.84it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 134/227 [00:00<00:00, 210.01it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 156/227 [00:00<00:00, 211.25it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 178/227 [00:00<00:00, 199.71it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 201/227 [00:00<00:00, 205.87it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 222/227 [00:01<00:00, 201.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 25/142 [01:00<04:07,  2.12s/it]detected_ratio_thres_value tensor(0.3500, device='cuda:0')
final masked points tensor(12430, device='cuda:0')
before filtering torch.Size([4, 173752])
after filtering torch.Size([2, 173752])
num_ins_points_after_filtering tensor([5619, 4729], device='cuda:0')
Working on scene0193_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 13, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], [5, 6, 7, 8, 9, 10, 11, 36, 38, 39], [14, 16, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/72 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▋       | 19/72 [00:00<00:00, 189.78it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 41/72 [00:00<00:00, 206.16it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 62/72 [00:00<00:00, 200.58it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  18%|█▊        | 26/142 [01:00<03:12,  1.66s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(9902, device='cuda:0')
before filtering torch.Size([3, 101783])
after filtering torch.Size([2, 101783])
num_ins_points_after_filtering tensor([6038, 2637], device='cuda:0')
Working on scene0196_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30], [20, 21]]

Calculating viewed counts for every point:   0%|          | 0/192 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 24/192 [00:00<00:00, 234.31it/s][A
Calculating viewed counts for every point:  25%|██▌       | 48/192 [00:00<00:00, 216.28it/s][A
Calculating viewed counts for every point:  36%|███▋      | 70/192 [00:00<00:00, 165.95it/s][A
Calculating viewed counts for every point:  46%|████▌     | 88/192 [00:00<00:00, 157.39it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 109/192 [00:00<00:00, 171.99it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 133/192 [00:00<00:00, 191.48it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 156/192 [00:00<00:00, 201.75it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 187/192 [00:00<00:00, 233.13it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  19%|█▉        | 27/142 [01:02<02:59,  1.56s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(3503, device='cuda:0')
before filtering torch.Size([2, 146032])
after filtering torch.Size([1, 146032])
num_ins_points_after_filtering tensor([3338], device='cuda:0')
Working on scene0203_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 14, 15, 16, 17, 18, 42, 43, 44, 45, 57, 58, 59, 61, 62], [6, 50], [19, 52], [20, 21, 22, 24, 25, 54, 55, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93], [23, 56], [27, 29], [28, 30, 31, 32, 33, 36, 38], [41, 60], [65, 66, 67], [68, 73, 87, 89]]

Calculating viewed counts for every point:   0%|          | 0/146 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/146 [00:00<00:00, 183.20it/s][A
Calculating viewed counts for every point:  26%|██▌       | 38/146 [00:00<00:00, 180.39it/s][A
Calculating viewed counts for every point:  40%|███▉      | 58/146 [00:00<00:00, 188.27it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 78/146 [00:00<00:00, 189.42it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 97/146 [00:00<00:00, 188.68it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 116/146 [00:00<00:00, 186.93it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 135/146 [00:00<00:00, 187.25it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|█▉        | 28/142 [01:03<02:53,  1.52s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(15327, device='cuda:0')
before filtering torch.Size([10, 205756])
after filtering torch.Size([4, 205756])
num_ins_points_after_filtering tensor([1366, 7246, 3799, 1914], device='cuda:0')
Working on scene0207_00 class file cabinet
masks_to_be_merged [[0, 1, 69, 70, 72, 101], [2, 3, 4, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [5, 6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18], [19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 71, 73, 74, 75, 89], [25, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], [26, 34, 35, 36, 37, 53, 54, 55, 56, 57], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 63], [48, 49, 50, 51], [62, 64], [66, 67, 68], [102, 103, 104]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/199 [00:00<00:01, 115.02it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:01, 113.19it/s][A
Calculating viewed counts for every point:  18%|█▊        | 36/199 [00:00<00:01, 116.14it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/199 [00:00<00:01, 115.94it/s][A
Calculating viewed counts for every point:  30%|███       | 60/199 [00:00<00:01, 112.67it/s][A
Calculating viewed counts for every point:  36%|███▌      | 72/199 [00:00<00:01, 111.18it/s][A
Calculating viewed counts for every point:  42%|████▏     | 84/199 [00:00<00:01, 109.67it/s][A
Calculating viewed counts for every point:  48%|████▊     | 95/199 [00:00<00:01, 87.42it/s] [A
Calculating viewed counts for every point:  53%|█████▎    | 106/199 [00:01<00:01, 92.04it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 117/199 [00:01<00:00, 96.27it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 129/199 [00:01<00:00, 101.31it/s][A
Calculating viewed counts for every point:  71%|███████   | 141/199 [00:01<00:00, 104.66it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 153/199 [00:01<00:00, 108.27it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 166/199 [00:01<00:00, 112.73it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 178/199 [00:01<00:00, 114.57it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 190/199 [00:01<00:00, 115.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  20%|██        | 29/142 [01:06<03:41,  1.96s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(32751, device='cuda:0')
before filtering torch.Size([12, 304396])
after filtering torch.Size([9, 304396])
num_ins_points_after_filtering tensor([1174, 6766, 6838, 1561, 5665, 1143, 2973, 3876, 1370], device='cuda:0')
Working on scene0208_00 class file cabinet
masks_to_be_merged [[1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74], [20, 23, 25, 26, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 112, 113, 115, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 147], [24, 27, 30], [39, 47, 143, 145, 146, 148, 149, 150], [42, 44, 48, 49, 50], [51, 52, 104, 105, 106, 107, 108, 109, 110, 114, 116, 176, 177, 178, 179, 180, 181, 184, 185, 189, 190], [53, 54, 55, 56, 57, 58, 59, 61], [75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209], [95, 96, 97, 98, 99, 100, 101, 102], [140, 152], [153, 154, 155, 156, 157], [161, 162], [163, 164, 165], [168, 169, 170], [171, 172, 173, 174], [183, 186, 187], [197, 198, 199]]

Calculating viewed counts for every point:   0%|          | 0/239 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 11/239 [00:00<00:02, 102.46it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/239 [00:00<00:02, 100.54it/s][A
Calculating viewed counts for every point:  14%|█▍        | 33/239 [00:00<00:01, 104.41it/s][A
Calculating viewed counts for every point:  19%|█▉        | 45/239 [00:00<00:01, 108.48it/s][A
Calculating viewed counts for every point:  23%|██▎       | 56/239 [00:00<00:01, 104.24it/s][A
Calculating viewed counts for every point:  28%|██▊       | 67/239 [00:00<00:01, 98.96it/s] [A
Calculating viewed counts for every point:  33%|███▎      | 78/239 [00:00<00:01, 100.25it/s][A
Calculating viewed counts for every point:  37%|███▋      | 89/239 [00:00<00:01, 99.99it/s] [A
Calculating viewed counts for every point:  42%|████▏     | 101/239 [00:00<00:01, 105.79it/s][A
Calculating viewed counts for every point:  47%|████▋     | 113/239 [00:01<00:01, 107.42it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 124/239 [00:01<00:01, 108.01it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 135/239 [00:01<00:00, 108.07it/s][A
Calculating viewed counts for every point:  61%|██████    | 146/239 [00:01<00:00, 107.29it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 158/239 [00:01<00:00, 108.61it/s][A
Calculating viewed counts for every point:  71%|███████   | 169/239 [00:01<00:00, 105.82it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 180/239 [00:01<00:00, 103.78it/s][A
Calculating viewed counts for every point:  80%|████████  | 192/239 [00:01<00:00, 106.82it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 203/239 [00:01<00:00, 106.99it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 214/239 [00:02<00:00, 105.86it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 225/239 [00:02<00:00, 106.12it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 236/239 [00:02<00:00, 103.96it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  21%|██        | 30/142 [01:14<07:06,  3.81s/it]detected_ratio_thres_value tensor(0.3871, device='cuda:0')
final masked points tensor(88669, device='cuda:0')
before filtering torch.Size([17, 407386])
after filtering torch.Size([3, 407386])
num_ins_points_after_filtering tensor([31379,  1375, 30349], device='cuda:0')
Working on scene0217_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 102, 104], [7, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 87, 88, 89, 91, 93, 97, 98, 99, 100, 101, 103, 105, 106, 108, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 125], [11, 13, 14, 17, 90, 92, 94, 96, 107, 109, 111, 114, 117], [24, 28, 29, 30, 31, 124, 126, 127, 128, 129, 131, 132], [32, 33, 34, 35, 37, 39, 41, 43, 45, 47, 50, 52, 54, 55, 133, 134, 136, 138, 141, 142, 144], [36, 38, 40, 42, 44, 46, 48, 49, 51, 53, 56, 57, 59, 60, 61, 62, 135, 137, 139, 140, 143, 145], [63, 65, 66, 67, 68, 69, 70, 71], [80, 81, 82]]

Calculating viewed counts for every point:   0%|          | 0/125 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 20/125 [00:00<00:00, 198.65it/s][A
Calculating viewed counts for every point:  33%|███▎      | 41/125 [00:00<00:00, 204.65it/s][A
Calculating viewed counts for every point:  50%|████▉     | 62/125 [00:00<00:00, 200.44it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 83/125 [00:00<00:00, 189.96it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 103/125 [00:00<00:00, 180.28it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 124/125 [00:00<00:00, 187.28it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  22%|██▏       | 31/142 [01:17<06:28,  3.50s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(19725, device='cuda:0')
before filtering torch.Size([8, 126385])
after filtering torch.Size([7, 126385])
num_ins_points_after_filtering tensor([1450, 2766, 2286,  664, 3894, 4509, 4069], device='cuda:0')
Working on scene0221_00 class file cabinet
masks_to_be_merged [[2, 3, 4, 5, 6, 7, 8], [9, 10], [13, 14, 15, 16, 17, 18, 19, 20], [23, 24, 25, 26, 27, 28, 29], [30, 31, 32], [33, 34, 37, 38], [35, 36]]

Calculating viewed counts for every point:   0%|          | 0/98 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|██        | 20/98 [00:00<00:00, 194.75it/s][A
Calculating viewed counts for every point:  41%|████      | 40/98 [00:00<00:00, 197.72it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 61/98 [00:00<00:00, 199.87it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 81/98 [00:00<00:00, 190.16it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 32/142 [01:18<05:02,  2.75s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(9432, device='cuda:0')
before filtering torch.Size([7, 185828])
after filtering torch.Size([4, 185828])
num_ins_points_after_filtering tensor([3010, 1527, 2389,  972], device='cuda:0')
Working on scene0222_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 336, 339, 340, 341, 342], [15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 121, 123, 125, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151], [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 223], [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 328, 332, 333], [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], [200, 201, 202], [203, 204], [231, 233], [285, 286, 287, 288, 289, 290], [304, 305, 306, 307, 308, 309], [321, 322, 323, 324, 327, 329, 330, 331, 337]]

Calculating viewed counts for every point:   0%|          | 0/543 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 16/543 [00:00<00:03, 156.14it/s][A
Calculating viewed counts for every point:   7%|▋         | 36/543 [00:00<00:02, 180.34it/s][A
Calculating viewed counts for every point:  10%|█         | 56/543 [00:00<00:02, 187.97it/s][A
Calculating viewed counts for every point:  14%|█▍        | 75/543 [00:00<00:02, 185.89it/s][A
Calculating viewed counts for every point:  17%|█▋        | 94/543 [00:00<00:02, 175.09it/s][A
Calculating viewed counts for every point:  21%|██        | 112/543 [00:00<00:02, 171.07it/s][A
Calculating viewed counts for every point:  24%|██▍       | 131/543 [00:00<00:02, 174.42it/s][A
Calculating viewed counts for every point:  28%|██▊       | 150/543 [00:00<00:02, 178.61it/s][A
Calculating viewed counts for every point:  31%|███▏      | 171/543 [00:00<00:01, 186.43it/s][A
Calculating viewed counts for every point:  35%|███▍      | 190/543 [00:01<00:01, 185.44it/s][A
Calculating viewed counts for every point:  39%|███▉      | 213/543 [00:01<00:01, 196.36it/s][A
Calculating viewed counts for every point:  43%|████▎     | 234/543 [00:01<00:01, 199.72it/s][A
Calculating viewed counts for every point:  47%|████▋     | 254/543 [00:01<00:01, 193.37it/s][A
Calculating viewed counts for every point:  50%|█████     | 274/543 [00:01<00:01, 187.55it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 293/543 [00:01<00:01, 186.95it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 313/543 [00:01<00:01, 186.55it/s][A
Calculating viewed counts for every point:  61%|██████    | 332/543 [00:01<00:01, 186.84it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 351/543 [00:01<00:01, 180.38it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 371/543 [00:02<00:00, 183.55it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 390/543 [00:02<00:00, 177.77it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 410/543 [00:02<00:00, 183.64it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 429/543 [00:02<00:00, 181.24it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 449/543 [00:02<00:00, 184.08it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 468/543 [00:02<00:00, 176.60it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 486/543 [00:02<00:00, 174.63it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 504/543 [00:02<00:00, 166.24it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 521/543 [00:02<00:00, 162.80it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 538/543 [00:03<00:00, 159.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  23%|██▎       | 33/142 [01:32<10:51,  5.97s/it]detected_ratio_thres_value tensor(0.4096, device='cuda:0')
final masked points tensor(16757, device='cuda:0')
before filtering torch.Size([11, 234831])
after filtering torch.Size([5, 234831])
num_ins_points_after_filtering tensor([4518, 1381, 1983, 5906, 2533], device='cuda:0')
Working on scene0231_00 class file cabinet
masks_to_be_merged [[0, 1, 3, 5, 86, 153, 155, 157, 159, 192, 193, 194, 196, 201, 202, 235, 236, 238, 239, 276, 278, 279, 280, 281, 314, 315, 316, 317, 318], [4, 36, 149, 161, 164, 168, 169, 172, 173, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 303, 306, 308, 309, 310, 311, 312, 313], [6, 7, 8, 9, 10, 24, 25, 28, 30, 31, 33, 34, 35, 37, 39, 40, 41, 46, 48, 83, 84, 85, 87, 88, 89, 90, 91, 374, 375, 378, 380], [11, 12, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44, 45, 75, 79, 80, 81, 82, 255, 256, 371, 372, 373, 376, 377, 379, 381, 382, 383, 384], [22, 23, 77, 78], [26, 27, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 68, 92, 94, 95, 96, 97, 100, 102, 103, 113, 114, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 141, 144, 145, 150, 151, 152, 154, 156, 158, 160, 162, 163, 165, 166, 167, 170, 171, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 249, 250, 251, 263, 267, 268, 270, 272, 273, 274, 275, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 304, 305, 307, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 337, 345, 347, 348, 349, 350, 351, 352, 353, 354], [62, 104, 105, 107, 110, 112, 117, 231, 262, 265, 269, 271, 342, 343, 344, 346], [67, 69, 70, 71, 72, 254, 257, 259, 260, 264, 357, 358, 359, 360, 361, 362, 364, 366, 368, 370], [73, 74, 258, 261, 266, 367], [98, 99, 101, 106, 108, 109, 111, 115, 119, 121, 135, 139, 329, 334, 336, 338, 339, 340, 341], [134, 138, 140, 142, 148, 174, 176, 298, 326, 328, 333, 335], [143, 147, 178, 180], [189, 190, 191], [220, 221], [241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 355, 356]]

Calculating viewed counts for every point:   0%|          | 0/444 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 10/444 [00:00<00:04, 98.18it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/444 [00:00<00:03, 109.36it/s][A
Calculating viewed counts for every point:   7%|▋         | 33/444 [00:00<00:03, 108.41it/s][A
Calculating viewed counts for every point:  10%|█         | 45/444 [00:00<00:03, 109.98it/s][A
Calculating viewed counts for every point:  13%|█▎        | 56/444 [00:00<00:03, 106.18it/s][A
Calculating viewed counts for every point:  16%|█▌        | 69/444 [00:00<00:03, 111.16it/s][A
Calculating viewed counts for every point:  18%|█▊        | 81/444 [00:00<00:03, 110.06it/s][A
Calculating viewed counts for every point:  21%|██        | 93/444 [00:00<00:03, 111.63it/s][A
Calculating viewed counts for every point:  24%|██▎       | 105/444 [00:00<00:03, 105.75it/s][A
Calculating viewed counts for every point:  27%|██▋       | 118/444 [00:01<00:02, 110.38it/s][A
Calculating viewed counts for every point:  29%|██▉       | 130/444 [00:01<00:02, 106.58it/s][A
Calculating viewed counts for every point:  32%|███▏      | 141/444 [00:01<00:02, 103.36it/s][A
Calculating viewed counts for every point:  34%|███▍      | 153/444 [00:01<00:02, 106.43it/s][A
Calculating viewed counts for every point:  37%|███▋      | 164/444 [00:01<00:02, 104.68it/s][A
Calculating viewed counts for every point:  39%|███▉      | 175/444 [00:01<00:02, 102.22it/s][A
Calculating viewed counts for every point:  42%|████▏     | 187/444 [00:01<00:02, 106.64it/s][A
Calculating viewed counts for every point:  45%|████▍     | 199/444 [00:01<00:02, 109.09it/s][A
Calculating viewed counts for every point:  47%|████▋     | 210/444 [00:01<00:02, 107.21it/s][A
Calculating viewed counts for every point:  50%|████▉     | 221/444 [00:02<00:02, 103.60it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 232/444 [00:02<00:02, 103.87it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 244/444 [00:02<00:01, 107.98it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 256/444 [00:02<00:01, 108.59it/s][A
Calculating viewed counts for every point:  60%|██████    | 267/444 [00:02<00:01, 104.35it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 278/444 [00:02<00:01, 105.68it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 290/444 [00:02<00:01, 106.57it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 301/444 [00:02<00:01, 105.53it/s][A
Calculating viewed counts for every point:  70%|███████   | 312/444 [00:02<00:01, 99.15it/s] [A
Calculating viewed counts for every point:  73%|███████▎  | 322/444 [00:03<00:01, 97.06it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 333/444 [00:03<00:01, 98.73it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 344/444 [00:03<00:00, 100.04it/s][A
Calculating viewed counts for every point:  80%|████████  | 356/444 [00:03<00:00, 103.85it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 367/444 [00:03<00:00, 105.18it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 379/444 [00:03<00:00, 107.09it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 390/444 [00:03<00:00, 103.47it/s][A
Calculating viewed counts for every point:  90%|█████████ | 401/444 [00:03<00:00, 104.29it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 412/444 [00:03<00:00, 105.51it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 423/444 [00:04<00:00, 106.03it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 434/444 [00:04<00:00, 106.75it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  24%|██▍       | 34/142 [01:48<16:21,  9.09s/it]detected_ratio_thres_value tensor(0.2909, device='cuda:0')
final masked points tensor(45669, device='cuda:0')
before filtering torch.Size([15, 419537])
after filtering torch.Size([9, 419537])
num_ins_points_after_filtering tensor([4837, 2888, 3431, 3619, 8771, 8488, 3370, 4566, 2444], device='cuda:0')
Working on scene0246_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 34, 36, 37, 38, 39, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 69, 72, 73, 74], [3, 4, 149, 151, 154, 164, 167, 170, 173, 175, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], [6, 7, 8, 9, 10, 11, 12, 42, 43, 44, 45, 65, 66, 144, 145, 146, 147, 148, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 168, 171, 174, 176, 179], [13, 62], [16, 17], [25, 26, 27, 28], [35, 48, 58, 60, 68, 70, 71, 83, 84, 85, 86, 87, 88, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141], [61, 67], [63, 64], [75, 77, 78], [79, 80], [82, 89, 90, 91, 92], [93, 94, 95, 96, 97, 98, 99], [113, 115, 116, 117], [139, 142], [140, 143], [162, 166, 169, 172], [181, 182]]

Calculating viewed counts for every point:   0%|          | 0/296 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 16/296 [00:00<00:01, 156.40it/s][A
Calculating viewed counts for every point:  12%|█▏        | 35/296 [00:00<00:01, 173.02it/s][A
Calculating viewed counts for every point:  18%|█▊        | 54/296 [00:00<00:01, 179.33it/s][A
Calculating viewed counts for every point:  25%|██▍       | 73/296 [00:00<00:01, 181.23it/s][A
Calculating viewed counts for every point:  32%|███▏      | 94/296 [00:00<00:01, 190.34it/s][A
Calculating viewed counts for every point:  39%|███▊      | 114/296 [00:00<00:01, 180.21it/s][A
Calculating viewed counts for every point:  45%|████▍     | 133/296 [00:00<00:00, 175.75it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 156/296 [00:00<00:00, 188.99it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 176/296 [00:00<00:00, 185.84it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 196/296 [00:01<00:00, 189.83it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 217/296 [00:01<00:00, 194.99it/s][A
Calculating viewed counts for every point:  80%|████████  | 237/296 [00:01<00:00, 190.33it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 259/296 [00:01<00:00, 198.01it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 279/296 [00:01<00:00, 196.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▍       | 35/142 [01:54<14:38,  8.21s/it]detected_ratio_thres_value tensor(0.3704, device='cuda:0')
final masked points tensor(15139, device='cuda:0')
before filtering torch.Size([18, 201062])
after filtering torch.Size([4, 201062])
num_ins_points_after_filtering tensor([4360, 1382, 3839, 4690], device='cuda:0')
Working on scene0249_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 7, 8, 9, 10], [3, 5, 6], [13, 14, 47, 48, 49, 50, 51, 52, 53], [16, 17, 54], [18, 19, 20, 21, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 88, 89, 90, 93, 95, 96, 97], [22, 24, 26, 27, 28, 29, 30, 61, 62, 63, 64, 70, 98, 99, 100, 101, 102, 103, 104], [23, 25, 82, 83, 86, 91, 92, 94], [31, 32], [33, 36], [58, 59, 60, 65, 66, 67]]

Calculating viewed counts for every point:   0%|          | 0/274 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/274 [00:00<00:01, 148.54it/s][A
Calculating viewed counts for every point:  11%|█         | 30/274 [00:00<00:01, 143.93it/s][A
Calculating viewed counts for every point:  16%|█▋        | 45/274 [00:00<00:01, 123.51it/s][A
Calculating viewed counts for every point:  21%|██        | 58/274 [00:00<00:01, 115.90it/s][A
Calculating viewed counts for every point:  26%|██▋       | 72/274 [00:00<00:01, 121.28it/s][A
Calculating viewed counts for every point:  31%|███       | 85/274 [00:00<00:01, 120.92it/s][A
Calculating viewed counts for every point:  36%|███▌      | 98/274 [00:00<00:01, 118.92it/s][A
Calculating viewed counts for every point:  40%|████      | 110/274 [00:00<00:01, 116.42it/s][A
Calculating viewed counts for every point:  46%|████▌     | 125/274 [00:01<00:01, 123.93it/s][A
Calculating viewed counts for every point:  50%|█████     | 138/274 [00:01<00:01, 113.58it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 150/274 [00:01<00:01, 110.42it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 163/274 [00:01<00:00, 115.30it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 175/274 [00:01<00:00, 114.32it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 187/274 [00:01<00:00, 112.72it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 199/274 [00:01<00:00, 110.83it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 211/274 [00:01<00:00, 111.54it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 223/274 [00:01<00:00, 113.73it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 237/274 [00:02<00:00, 120.10it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 251/274 [00:02<00:00, 125.26it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 266/274 [00:02<00:00, 131.30it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  25%|██▌       | 36/142 [01:58<12:22,  7.00s/it]detected_ratio_thres_value tensor(0.1795, device='cuda:0')
final masked points tensor(8487, device='cuda:0')
before filtering torch.Size([10, 331031])
after filtering torch.Size([5, 331031])
num_ins_points_after_filtering tensor([2087,  173,  278, 1542, 4054], device='cuda:0')
Working on scene0251_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7], [8, 9], [10, 11, 12, 13, 14, 16], [15, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 28, 30, 33], [27, 29, 31, 32], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/155 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 13/155 [00:00<00:01, 127.83it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/155 [00:00<00:01, 126.92it/s][A
Calculating viewed counts for every point:  25%|██▌       | 39/155 [00:00<00:00, 126.71it/s][A
Calculating viewed counts for every point:  34%|███▍      | 53/155 [00:00<00:00, 130.44it/s][A
Calculating viewed counts for every point:  44%|████▍     | 68/155 [00:00<00:00, 137.14it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 83/155 [00:00<00:00, 137.90it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 97/155 [00:00<00:00, 133.34it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 111/155 [00:00<00:00, 134.54it/s][A
Calculating viewed counts for every point:  81%|████████  | 125/155 [00:00<00:00, 129.49it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 139/155 [00:01<00:00, 130.67it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 153/155 [00:01<00:00, 127.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  26%|██▌       | 37/142 [02:00<09:32,  5.45s/it]detected_ratio_thres_value tensor(0.1282, device='cuda:0')
final masked points tensor(21428, device='cuda:0')
before filtering torch.Size([7, 226765])
after filtering torch.Size([5, 226765])
num_ins_points_after_filtering tensor([2233,  889, 5102, 3297, 8700], device='cuda:0')
Working on scene0256_00 class file cabinet
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 37, 43, 53, 55, 77, 117, 118, 119, 120, 176, 177], [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], [27, 29, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 125, 126, 128, 129, 130, 131, 132, 133, 134, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175], [121, 122, 127, 171], [123, 124]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 26/156 [00:00<00:00, 259.36it/s][A
Calculating viewed counts for every point:  37%|███▋      | 58/156 [00:00<00:00, 292.17it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 92/156 [00:00<00:00, 312.21it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 124/156 [00:00<00:00, 313.57it/s][A
Calculating viewed counts for every point: 100%|██████████| 156/156 [00:00<00:00, 307.59it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 38/142 [02:04<08:24,  4.85s/it]detected_ratio_thres_value tensor(0.3137, device='cuda:0')
final masked points tensor(2906, device='cuda:0')
before filtering torch.Size([5, 108517])
after filtering torch.Size([2, 108517])
num_ins_points_after_filtering tensor([1552,  884], device='cuda:0')
Working on scene0257_00 class file cabinet
masks_to_be_merged [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 49, 51, 53, 55, 56, 57, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86], [40, 74], [46, 48, 50, 52, 54], [59, 60], [61, 62, 63, 64, 65, 66, 67, 70], [71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/165 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 20/165 [00:00<00:00, 195.68it/s][A
Calculating viewed counts for every point:  25%|██▍       | 41/165 [00:00<00:00, 199.69it/s][A
Calculating viewed counts for every point:  39%|███▉      | 64/165 [00:00<00:00, 210.96it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 86/165 [00:00<00:00, 198.53it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 109/165 [00:00<00:00, 206.03it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 130/165 [00:00<00:00, 195.62it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 153/165 [00:00<00:00, 204.28it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  27%|██▋       | 39/142 [02:06<07:02,  4.11s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(9531, device='cuda:0')
before filtering torch.Size([6, 180928])
after filtering torch.Size([1, 180928])
num_ins_points_after_filtering tensor([7487], device='cuda:0')
Working on scene0277_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 84, 85, 86, 87, 88, 89, 90, 92], [6, 8, 10, 11, 12, 58], [19, 20, 64, 65, 66], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], [43, 83], [61, 62, 63], [69, 70]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  23%|██▎       | 27/115 [00:00<00:00, 260.41it/s][A
Calculating viewed counts for every point:  47%|████▋     | 54/115 [00:00<00:00, 244.60it/s][A
Calculating viewed counts for every point:  70%|███████   | 81/115 [00:00<00:00, 254.16it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 107/115 [00:00<00:00, 247.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  28%|██▊       | 40/142 [02:08<05:55,  3.48s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(11144, device='cuda:0')
before filtering torch.Size([7, 79184])
after filtering torch.Size([5, 79184])
num_ins_points_after_filtering tensor([3123, 1953,  856, 3808, 1271], device='cuda:0')
Working on scene0278_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 9, 10, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69], [4, 5, 6, 7, 8, 11, 12, 14, 16, 66, 67, 70, 71, 72], [17, 18, 19, 20, 21, 22, 23, 24, 73, 74, 75, 76, 77, 78, 81], [26, 28, 30, 32, 33, 36, 38, 41, 43, 45, 47, 50, 52, 53, 54, 79], [31, 34], [39, 40], [55, 56]]

Calculating viewed counts for every point:   0%|          | 0/80 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  50%|█████     | 40/80 [00:00<00:00, 397.04it/s][A
Calculating viewed counts for every point: 100%|██████████| 80/80 [00:00<00:00, 365.89it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  29%|██▉       | 41/142 [02:09<04:46,  2.84s/it]detected_ratio_thres_value tensor(0.3333, device='cuda:0')
final masked points tensor(17217, device='cuda:0')
before filtering torch.Size([7, 77020])
after filtering torch.Size([6, 77020])
num_ins_points_after_filtering tensor([4400, 2537, 6078, 4116,   20,   19], device='cuda:0')
Working on scene0300_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 6, 8, 10, 12, 76, 79, 81, 83, 85, 88, 90, 92, 94, 102, 104, 107, 108, 110, 111, 112, 114, 116, 123, 124, 126, 130, 131, 132, 135, 137, 139, 140, 142, 145, 147, 150, 153, 155, 156, 159, 160, 162, 163, 176, 177, 179, 182, 183, 186, 187, 188, 189, 190, 192, 193, 196, 200, 201, 203, 205, 207, 208], [1, 3, 5, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 125, 127, 128, 129, 133, 134, 136, 138, 141, 143, 144, 146, 148, 149, 151, 152, 154, 157, 158, 161, 175, 178, 180, 181, 184, 185, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256], [25, 42, 45, 48, 52, 228, 253, 255], [26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 43, 46, 50, 54, 57, 62, 66, 69, 212, 215, 216, 217, 219, 222, 225, 229, 230, 231, 232], [55, 59, 63, 68, 71, 72, 74, 75, 78, 80, 82, 84, 86, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 113, 115, 117, 118, 119, 120, 121, 122, 191, 194, 195, 198, 199, 202, 204, 206, 209, 210, 211, 218, 220, 223, 227], [164, 168, 170, 171, 173], [165, 172], [166, 167]]

Calculating viewed counts for every point:   0%|          | 0/175 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 25/175 [00:00<00:00, 248.33it/s][A
Calculating viewed counts for every point:  29%|██▊       | 50/175 [00:00<00:00, 245.99it/s][A
Calculating viewed counts for every point:  45%|████▌     | 79/175 [00:00<00:00, 261.72it/s][A
Calculating viewed counts for every point:  61%|██████    | 107/175 [00:00<00:00, 266.14it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 135/175 [00:00<00:00, 268.26it/s][A
Calculating viewed counts for every point:  94%|█████████▎| 164/175 [00:00<00:00, 273.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|██▉       | 42/142 [02:16<06:36,  3.96s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(25694, device='cuda:0')
before filtering torch.Size([8, 140216])
after filtering torch.Size([4, 140216])
num_ins_points_after_filtering tensor([ 6579,  6137, 10051,  2875], device='cuda:0')
Working on scene0304_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88, 90, 92, 93, 95, 96, 97, 98, 99, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [11, 135, 137, 140, 144, 146, 149, 150, 152, 153, 154, 155, 158], [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 46, 47, 49, 51, 52, 54, 56, 58, 59, 60, 61, 62, 65, 86, 87, 91, 94, 101, 102, 104, 105, 106, 107, 108, 109, 110, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], [35, 40, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 143], [41, 116, 117], [48, 50, 53, 55, 57, 183, 185], [100, 103], [136, 138, 142, 145, 147, 148]]

Calculating viewed counts for every point:   0%|          | 0/178 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 20/178 [00:00<00:00, 193.52it/s][A
Calculating viewed counts for every point:  24%|██▎       | 42/178 [00:00<00:00, 206.40it/s][A
Calculating viewed counts for every point:  38%|███▊      | 68/178 [00:00<00:00, 229.89it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 96/178 [00:00<00:00, 244.91it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 121/178 [00:00<00:00, 233.14it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 145/178 [00:00<00:00, 234.20it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 169/178 [00:00<00:00, 228.23it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  30%|███       | 43/142 [02:21<07:16,  4.41s/it]detected_ratio_thres_value tensor(0.4524, device='cuda:0')
final masked points tensor(39100, device='cuda:0')
before filtering torch.Size([8, 164016])
after filtering torch.Size([6, 164016])
num_ins_points_after_filtering tensor([11390,  9520,  7493,  7411,   292,  1022], device='cuda:0')
Working on scene0307_00 class file cabinet
masks_to_be_merged [[0, 1, 5, 17, 18, 19, 86, 88, 91, 93], [2, 3, 4, 6, 7, 12, 13, 14, 15, 16, 20, 21, 22, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92], [8, 23, 24, 94, 95], [9, 10, 11], [25, 26, 27, 28, 96], [29, 31, 32, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [30, 33, 34, 35, 36, 37], [39, 40, 41, 42, 43, 44, 47, 71, 72, 73, 74, 75], [62, 63, 67, 68, 69, 70], [64, 65, 66]]

Calculating viewed counts for every point:   0%|          | 0/205 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 11/205 [00:00<00:01, 105.42it/s][A
Calculating viewed counts for every point:  11%|█         | 22/205 [00:00<00:01, 95.28it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 32/205 [00:00<00:01, 90.78it/s][A
Calculating viewed counts for every point:  20%|██        | 42/205 [00:00<00:01, 92.52it/s][A
Calculating viewed counts for every point:  26%|██▌       | 53/205 [00:00<00:01, 96.19it/s][A
Calculating viewed counts for every point:  31%|███       | 63/205 [00:00<00:01, 95.12it/s][A
Calculating viewed counts for every point:  37%|███▋      | 75/205 [00:00<00:01, 100.73it/s][A
Calculating viewed counts for every point:  42%|████▏     | 86/205 [00:00<00:01, 94.39it/s] [A
Calculating viewed counts for every point:  47%|████▋     | 96/205 [00:01<00:01, 93.14it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 106/205 [00:01<00:01, 92.82it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 116/205 [00:01<00:00, 90.35it/s][A
Calculating viewed counts for every point:  61%|██████▏   | 126/205 [00:01<00:00, 89.63it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 137/205 [00:01<00:00, 93.42it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 147/205 [00:01<00:00, 91.53it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 157/205 [00:01<00:00, 92.00it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 167/205 [00:01<00:00, 87.67it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 177/205 [00:01<00:00, 90.09it/s][A
Calculating viewed counts for every point:  91%|█████████ | 187/205 [00:02<00:00, 87.88it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 198/205 [00:02<00:00, 92.87it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  31%|███       | 44/142 [02:26<07:15,  4.45s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(25797, device='cuda:0')
before filtering torch.Size([10, 371616])
after filtering torch.Size([6, 371616])
num_ins_points_after_filtering tensor([ 3929,  3244, 11735,  1714,  1499,   707], device='cuda:0')
Working on scene0314_00 class file cabinet
masks_to_be_merged [[0, 1], [3, 4, 6, 7, 8, 9, 10, 11, 46, 47, 48, 49, 50, 51], [5, 52], [13, 16, 17, 18, 19, 20, 27, 29, 32], [14, 15], [21, 22, 23, 37, 38, 39, 40, 41, 42, 43, 44], [28, 36]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 29/93 [00:00<00:00, 286.57it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 58/93 [00:00<00:00, 254.38it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 85/93 [00:00<00:00, 260.61it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 45/142 [02:27<05:27,  3.38s/it]detected_ratio_thres_value tensor(0.0909, device='cuda:0')
final masked points tensor(10935, device='cuda:0')
before filtering torch.Size([7, 87446])
after filtering torch.Size([7, 87446])
num_ins_points_after_filtering tensor([5312,  895, 1074,  398,  703,  371,   24], device='cuda:0')
Working on scene0316_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 12, 14, 39, 47, 48, 51], [6, 8, 9, 10, 11, 13, 15, 16, 41, 50, 52, 53, 55], [17, 18, 19, 20, 21, 22, 23, 56, 57], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], [40, 42, 43, 44, 45, 46, 49, 54]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 24/77 [00:00<00:00, 237.27it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 48/77 [00:00<00:00, 221.99it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 73/77 [00:00<00:00, 230.36it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  32%|███▏      | 46/142 [02:28<04:16,  2.67s/it]detected_ratio_thres_value tensor(0.2778, device='cuda:0')
final masked points tensor(9426, device='cuda:0')
before filtering torch.Size([5, 78769])
after filtering torch.Size([4, 78769])
num_ins_points_after_filtering tensor([2561, 1573, 1292, 2946], device='cuda:0')
Working on scene0328_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 18, 67, 68, 69, 70, 71, 105, 106, 107, 168, 170, 171, 172, 173, 174, 176], [1, 7, 12, 36, 37, 38, 39, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 61, 62, 65, 66, 108, 110, 111, 112, 113, 115, 117, 119, 175, 177], [3, 30, 31, 32, 33, 34, 35, 95, 97, 98, 99, 100, 101, 102, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], [16, 19, 21, 23, 25, 27, 29, 90, 91, 93, 94, 151, 152, 154, 156, 158, 160], [17, 20, 22, 24, 26, 28, 76, 78, 79, 81, 83, 85, 87, 88, 89, 92, 96, 153, 155, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169], [40, 42, 44, 47, 114, 116, 118, 120, 121, 122, 123, 124, 125, 126, 134], [56, 57, 58, 59, 60, 63, 64], [72, 73, 75], [74, 77, 80, 82, 84, 86], [104, 109], [133, 135]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 23/142 [00:00<00:00, 224.30it/s][A
Calculating viewed counts for every point:  39%|███▉      | 56/142 [00:00<00:00, 281.60it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 85/142 [00:00<00:00, 283.69it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 116/142 [00:00<00:00, 292.48it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  33%|███▎      | 47/142 [02:32<04:46,  3.02s/it]detected_ratio_thres_value tensor(0.3030, device='cuda:0')
final masked points tensor(22104, device='cuda:0')
before filtering torch.Size([11, 111467])
after filtering torch.Size([6, 111467])
num_ins_points_after_filtering tensor([1037, 2840, 5565, 3826, 6476, 1746], device='cuda:0')
Working on scene0329_00 class file cabinet
masks_to_be_merged [[2, 4, 5, 6, 7, 9, 12, 18, 19, 20, 21, 22, 23, 24, 80, 81, 82, 83, 84, 85], [8, 10, 11, 13, 14, 15, 16, 17, 72, 74, 75, 76, 77, 79], [26, 27, 28, 29, 30, 31, 32], [35, 37], [39, 40, 41], [46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60], [61, 62], [63, 64], [66, 67, 68, 69, 70, 71, 73]]

Calculating viewed counts for every point:   0%|          | 0/156 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 10/156 [00:00<00:01, 94.15it/s][A
Calculating viewed counts for every point:  13%|█▎        | 20/156 [00:00<00:01, 89.24it/s][A
Calculating viewed counts for every point:  21%|██        | 32/156 [00:00<00:01, 99.09it/s][A
Calculating viewed counts for every point:  29%|██▉       | 45/156 [00:00<00:01, 110.21it/s][A
Calculating viewed counts for every point:  37%|███▋      | 57/156 [00:00<00:00, 111.54it/s][A
Calculating viewed counts for every point:  44%|████▍     | 69/156 [00:00<00:00, 112.13it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 81/156 [00:00<00:00, 114.31it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 93/156 [00:00<00:00, 115.92it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 105/156 [00:00<00:00, 114.38it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 117/156 [00:01<00:00, 105.38it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 129/156 [00:01<00:00, 108.43it/s][A
Calculating viewed counts for every point:  90%|█████████ | 141/156 [00:01<00:00, 110.50it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 153/156 [00:01<00:00, 113.01it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  34%|███▍      | 48/142 [02:35<04:52,  3.11s/it]detected_ratio_thres_value tensor(0.3529, device='cuda:0')
final masked points tensor(25512, device='cuda:0')
before filtering torch.Size([9, 355413])
after filtering torch.Size([6, 355413])
num_ins_points_after_filtering tensor([8993, 3117, 2646,  584, 5326, 3649], device='cuda:0')
Working on scene0334_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]]

Calculating viewed counts for every point:   0%|          | 0/119 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 6/119 [00:00<00:01, 58.30it/s][A
Calculating viewed counts for every point:  13%|█▎        | 15/119 [00:00<00:01, 69.83it/s][A
Calculating viewed counts for every point:  18%|█▊        | 22/119 [00:00<00:01, 55.11it/s][A
Calculating viewed counts for every point:  24%|██▎       | 28/119 [00:00<00:01, 54.67it/s][A
Calculating viewed counts for every point:  29%|██▉       | 35/119 [00:00<00:01, 57.70it/s][A
Calculating viewed counts for every point:  34%|███▍      | 41/119 [00:00<00:01, 55.36it/s][A
Calculating viewed counts for every point:  39%|███▉      | 47/119 [00:00<00:01, 55.45it/s][A
Calculating viewed counts for every point:  45%|████▌     | 54/119 [00:00<00:01, 56.85it/s][A
Calculating viewed counts for every point:  50%|█████     | 60/119 [00:01<00:01, 53.35it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 66/119 [00:01<00:01, 51.65it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 77/119 [00:01<00:00, 66.24it/s][A
Calculating viewed counts for every point:  71%|███████   | 84/119 [00:01<00:00, 64.18it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 91/119 [00:01<00:00, 64.12it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 98/119 [00:01<00:00, 60.55it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 105/119 [00:01<00:00, 59.47it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 112/119 [00:01<00:00, 58.50it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 118/119 [00:02<00:00, 56.95it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  35%|███▍      | 49/142 [02:37<04:31,  2.92s/it]detected_ratio_thres_value tensor(0.2174, device='cuda:0')
final masked points tensor(28295, device='cuda:0')
before filtering torch.Size([1, 197174])
after filtering torch.Size([1, 197174])
num_ins_points_after_filtering tensor([28295], device='cuda:0')
Working on scene0338_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 4, 6, 7, 8, 11, 13, 15, 17, 19, 22, 84, 85, 87, 90, 92, 94, 96, 98, 100, 102, 105], [3, 5, 9, 10, 12, 14, 16, 18, 21, 24, 26, 88, 89, 91, 93, 95, 97, 99, 101, 103, 106, 109], [20, 23, 25, 27, 28, 30, 34, 37, 40, 43, 44, 49, 104, 107, 108, 111, 113, 117, 120, 124, 127, 130, 133], [29, 32, 36, 39, 42, 45, 48, 51, 110, 115, 116, 119, 122, 125, 128, 131, 135, 138, 140], [31, 33, 35, 38, 41, 46, 47, 50, 52, 54, 112, 114, 118, 121, 123, 126, 129, 132, 134, 136, 137, 139, 141, 142], [53, 67], [55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 82, 83], [74, 76, 78, 81]]

Calculating viewed counts for every point:   0%|          | 0/81 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▏     | 34/81 [00:00<00:00, 338.40it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 68/81 [00:00<00:00, 252.20it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  35%|███▌      | 50/142 [02:40<04:32,  2.96s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(29868, device='cuda:0')
before filtering torch.Size([8, 106339])
after filtering torch.Size([7, 106339])
num_ins_points_after_filtering tensor([3049, 3002, 4883,  691, 3390, 9925, 4919], device='cuda:0')
Working on scene0342_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 6], [3, 5, 7, 8, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/93 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  27%|██▋       | 25/93 [00:00<00:00, 246.05it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 50/93 [00:00<00:00, 174.51it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 76/93 [00:00<00:00, 204.47it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  36%|███▌      | 51/142 [02:41<03:30,  2.31s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(2077, device='cuda:0')
before filtering torch.Size([2, 89958])
after filtering torch.Size([2, 89958])
num_ins_points_after_filtering tensor([ 372, 1705], device='cuda:0')
Working on scene0343_00 class file cabinet
masks_to_be_merged [[0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 24, 25, 27, 29, 31, 32, 34, 35, 37, 39, 41, 44, 48, 148, 149, 150, 151, 152, 154, 155, 156, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 188, 189, 191, 193, 196, 198, 199, 201, 204, 207, 211, 212, 215, 217], [2, 10, 13, 16, 20, 166, 173, 179], [17, 21, 23, 26, 28, 30, 33, 36, 40, 43, 46, 49, 53, 153, 157, 161, 183, 184, 187, 190, 195, 197, 200, 203, 206, 209, 214, 216, 218, 219, 220, 224], [38, 42, 45, 47, 51, 54, 55, 59, 62, 64, 69, 73, 76, 79, 80, 83, 86, 96, 202, 205, 208, 221, 223, 228, 230, 234, 238], [50, 52, 56, 65, 147, 194, 210, 213, 240, 241], [58, 60, 63, 66, 70, 74, 78, 81, 84, 87, 222, 226, 231, 237, 239], [68, 72], [71, 75, 85, 89, 107, 109], [82, 90, 94, 97, 100, 102, 108, 112, 113, 114, 115], [88, 91, 92, 93, 95, 98, 116, 117, 118, 119], [99, 101, 103, 104, 105, 106, 233, 235], [110, 111], [120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], [229, 232, 236]]

Calculating viewed counts for every point:   0%|          | 0/124 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  18%|█▊        | 22/124 [00:00<00:00, 219.50it/s][A
Calculating viewed counts for every point:  35%|███▌      | 44/124 [00:00<00:00, 207.89it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 65/124 [00:00<00:00, 87.49it/s] [A
Calculating viewed counts for every point:  64%|██████▎   | 79/124 [00:00<00:00, 96.71it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 102/124 [00:00<00:00, 126.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 52/142 [02:49<05:40,  3.79s/it]detected_ratio_thres_value tensor(0.3438, device='cuda:0')
final masked points tensor(26833, device='cuda:0')
before filtering torch.Size([14, 165618])
after filtering torch.Size([8, 165618])
num_ins_points_after_filtering tensor([3530, 4074, 3600, 1820, 1584,  815, 6236,  173], device='cuda:0')
Working on scene0351_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 66, 67, 68, 69, 70, 71, 72, 73, 74, 92, 93, 94], [13, 14, 15, 16, 17, 19, 20, 21, 22, 35, 36, 37, 38, 39], [18, 88, 90, 91], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], [44, 45, 46, 47, 48, 49, 50], [51, 52, 53, 54, 55, 56, 58, 59, 60, 61], [63, 64, 77], [76, 80, 82, 83, 84, 85], [81, 86]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|▉         | 14/147 [00:00<00:00, 135.00it/s][A
Calculating viewed counts for every point:  19%|█▉        | 28/147 [00:00<00:00, 119.93it/s][A
Calculating viewed counts for every point:  28%|██▊       | 41/147 [00:00<00:00, 115.82it/s][A
Calculating viewed counts for every point:  37%|███▋      | 54/147 [00:00<00:00, 111.24it/s][A
Calculating viewed counts for every point:  45%|████▍     | 66/147 [00:00<00:00, 102.32it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 82/147 [00:00<00:00, 114.01it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 94/147 [00:00<00:00, 110.96it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 106/147 [00:00<00:00, 100.89it/s][A
Calculating viewed counts for every point:  81%|████████  | 119/147 [00:01<00:00, 106.99it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 131/147 [00:01<00:00, 108.52it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 143/147 [00:01<00:00, 95.15it/s] [A
                                                                                            [AProjecting 2d masks to 3d point cloud:  37%|███▋      | 53/142 [02:53<05:45,  3.88s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(11435, device='cuda:0')
before filtering torch.Size([9, 172134])
after filtering torch.Size([6, 172134])
num_ins_points_after_filtering tensor([1087, 5398, 3196,  259,  492,  648], device='cuda:0')
Working on scene0353_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 162, 163, 164, 165, 166, 167, 168], [15, 106], [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 105], [27, 28, 29, 30, 31, 32, 33, 34, 35, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], [36, 37, 38, 39, 41, 42, 43, 136, 138, 139, 140, 141, 142, 143], [40, 44, 45, 46, 47, 50, 51, 145, 146, 147, 148, 149], [48, 49, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], [56, 57, 69], [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [120, 121, 122, 123]]

Calculating viewed counts for every point:   0%|          | 0/299 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 14/299 [00:00<00:02, 118.72it/s][A
Calculating viewed counts for every point:   9%|▊         | 26/299 [00:00<00:04, 59.62it/s] [A
Calculating viewed counts for every point:  16%|█▌        | 47/299 [00:00<00:02, 99.95it/s][A
Calculating viewed counts for every point:  20%|██        | 60/299 [00:00<00:02, 106.99it/s][A
Calculating viewed counts for every point:  26%|██▌       | 77/299 [00:00<00:01, 124.37it/s][A
Calculating viewed counts for every point:  31%|███       | 92/299 [00:00<00:01, 122.69it/s][A
Calculating viewed counts for every point:  38%|███▊      | 113/299 [00:00<00:01, 146.80it/s][A
Calculating viewed counts for every point:  43%|████▎     | 129/299 [00:01<00:01, 149.04it/s][A
Calculating viewed counts for every point:  48%|████▊     | 145/299 [00:01<00:01, 133.80it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 164/299 [00:01<00:00, 148.56it/s][A
Calculating viewed counts for every point:  60%|██████    | 180/299 [00:01<00:00, 146.14it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 197/299 [00:01<00:00, 152.30it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 215/299 [00:01<00:00, 159.49it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 232/299 [00:01<00:00, 152.54it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 248/299 [00:01<00:00, 143.80it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 263/299 [00:01<00:00, 135.32it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 278/299 [00:02<00:00, 138.47it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 293/299 [00:02<00:00, 134.67it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  38%|███▊      | 54/142 [03:00<07:02,  4.80s/it]detected_ratio_thres_value tensor(0.3276, device='cuda:0')
final masked points tensor(18000, device='cuda:0')
before filtering torch.Size([10, 208782])
after filtering torch.Size([4, 208782])
num_ins_points_after_filtering tensor([3068, 2875, 1365, 4299], device='cuda:0')
Working on scene0354_00 class file cabinet
masks_to_be_merged [[7, 9, 10]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 13/113 [00:00<00:00, 128.18it/s][A
Calculating viewed counts for every point:  27%|██▋       | 31/113 [00:00<00:00, 146.33it/s][A
Calculating viewed counts for every point:  41%|████      | 46/113 [00:00<00:00, 126.38it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 59/113 [00:00<00:00, 118.40it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 72/113 [00:00<00:00, 121.08it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 87/113 [00:00<00:00, 129.91it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 101/113 [00:00<00:00, 126.08it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▊      | 55/142 [03:01<05:26,  3.76s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(2002, device='cuda:0')
before filtering torch.Size([1, 110569])
after filtering torch.Size([1, 110569])
num_ins_points_after_filtering tensor([1241], device='cuda:0')
Working on scene0355_00 class file cabinet
masks_to_be_merged [[1, 2, 3], [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], [30, 32], [33, 34]]

Calculating viewed counts for every point:   0%|          | 0/115 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 10/115 [00:00<00:01, 97.87it/s][A
Calculating viewed counts for every point:  30%|██▉       | 34/115 [00:00<00:00, 170.94it/s][A
Calculating viewed counts for every point:  44%|████▍     | 51/115 [00:00<00:00, 144.50it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 68/115 [00:00<00:00, 151.57it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 86/115 [00:00<00:00, 160.61it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 103/115 [00:00<00:00, 128.72it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  39%|███▉      | 56/142 [03:03<04:32,  3.17s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(5147, device='cuda:0')
before filtering torch.Size([5, 136135])
after filtering torch.Size([2, 136135])
num_ins_points_after_filtering tensor([2120, 2422], device='cuda:0')
Working on scene0356_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 75, 76, 77, 78, 79, 80, 81], [9, 57], [10, 55, 56], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], [30, 31], [32, 33, 74], [58, 59]]

Calculating viewed counts for every point:   0%|          | 0/136 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 12/136 [00:00<00:01, 113.05it/s][A
Calculating viewed counts for every point:  18%|█▊        | 24/136 [00:00<00:01, 82.94it/s] [A
Calculating viewed counts for every point:  24%|██▍       | 33/136 [00:00<00:01, 79.78it/s][A
Calculating viewed counts for every point:  38%|███▊      | 52/136 [00:00<00:00, 114.83it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 73/136 [00:00<00:00, 143.67it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 89/136 [00:00<00:00, 130.31it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 103/136 [00:00<00:00, 105.99it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 115/136 [00:01<00:00, 105.93it/s][A
Calculating viewed counts for every point: 100%|██████████| 136/136 [00:01<00:00, 131.72it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  40%|████      | 57/142 [03:06<04:32,  3.21s/it]detected_ratio_thres_value tensor(0.2973, device='cuda:0')
final masked points tensor(6794, device='cuda:0')
before filtering torch.Size([7, 81172])
after filtering torch.Size([2, 81172])
num_ins_points_after_filtering tensor([4597, 2096], device='cuda:0')
Working on scene0357_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 7, 9, 10, 44, 45, 46, 48], [5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25], [26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], [39, 40, 41, 42, 43], [47, 49, 54, 55, 56, 57], [50, 51, 52, 53]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 14/91 [00:00<00:00, 139.44it/s][A
Calculating viewed counts for every point:  31%|███       | 28/91 [00:00<00:00, 123.62it/s][A
Calculating viewed counts for every point:  46%|████▌     | 42/91 [00:00<00:00, 130.10it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 56/91 [00:00<00:00, 109.98it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 68/91 [00:00<00:00, 109.85it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 80/91 [00:00<00:00, 109.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  41%|████      | 58/142 [03:08<04:00,  2.86s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(9095, device='cuda:0')
before filtering torch.Size([7, 136945])
after filtering torch.Size([7, 136945])
num_ins_points_after_filtering tensor([ 694, 1994,  970,  597,  862, 3257,  655], device='cuda:0')
Working on scene0377_00 class file cabinet
masks_to_be_merged [[0, 1, 30, 31, 32, 33], [2, 3, 4, 5, 6, 7, 8, 25, 26, 27, 28, 29], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/91 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 6/91 [00:00<00:01, 56.13it/s][A
Calculating viewed counts for every point:  16%|█▋        | 15/91 [00:00<00:01, 71.08it/s][A
Calculating viewed counts for every point:  25%|██▌       | 23/91 [00:00<00:01, 63.79it/s][A
Calculating viewed counts for every point:  33%|███▎      | 30/91 [00:00<00:01, 60.16it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 49/91 [00:00<00:00, 100.39it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 60/91 [00:00<00:00, 97.29it/s] [A
Calculating viewed counts for every point:  78%|███████▊  | 71/91 [00:00<00:00, 84.10it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 80/91 [00:00<00:00, 83.51it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 89/91 [00:01<00:00, 76.96it/s][A
                                                                                          [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 59/142 [03:10<03:31,  2.54s/it]detected_ratio_thres_value tensor(0.1250, device='cuda:0')
final masked points tensor(9411, device='cuda:0')
before filtering torch.Size([3, 111811])
after filtering torch.Size([2, 111811])
num_ins_points_after_filtering tensor([4711, 3921], device='cuda:0')
Working on scene0378_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 95, 96, 97, 98, 228, 229, 231], [18, 26, 184, 205, 211, 217, 218, 220, 222, 223, 225, 227, 230], [23, 142, 143, 144, 157, 159, 161, 163, 175, 177, 178, 179, 180, 181, 183, 187, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 219, 221, 224, 226], [72, 74, 81, 84, 86, 88], [75, 79, 82, 83, 85, 87, 89], [90, 91, 92, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], [93, 94], [115, 121, 123, 139, 140, 141, 147, 149, 151], [145, 146, 148, 150, 152, 153, 154, 155, 156, 158, 160, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 182, 185, 186, 188, 189, 191, 193, 196, 208, 209, 210, 212, 213, 214, 215, 216]]

Calculating viewed counts for every point:   0%|          | 0/190 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/190 [00:00<00:00, 179.63it/s][A
Calculating viewed counts for every point:  20%|██        | 38/190 [00:00<00:00, 186.14it/s][A
Calculating viewed counts for every point:  30%|███       | 57/190 [00:00<00:00, 139.23it/s][A
Calculating viewed counts for every point:  38%|███▊      | 72/190 [00:00<00:01, 116.60it/s][A
Calculating viewed counts for every point:  45%|████▍     | 85/190 [00:00<00:00, 114.84it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 102/190 [00:00<00:00, 129.62it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 121/190 [00:00<00:00, 145.81it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 137/190 [00:01<00:00, 138.34it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 156/190 [00:01<00:00, 151.98it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 176/190 [00:01<00:00, 161.79it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  42%|████▏     | 60/142 [03:19<06:02,  4.42s/it]detected_ratio_thres_value tensor(0.3158, device='cuda:0')
final masked points tensor(25456, device='cuda:0')
before filtering torch.Size([9, 156298])
after filtering torch.Size([5, 156298])
num_ins_points_after_filtering tensor([4404, 3831, 3671, 3627, 6579], device='cuda:0')
Working on scene0382_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 8, 18, 19, 20, 38, 39, 40, 41, 42, 43, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], [7, 9, 10, 11, 12, 13, 14, 15, 16, 17], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [69, 70]]

Calculating viewed counts for every point:   0%|          | 0/113 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▊        | 21/113 [00:00<00:00, 192.64it/s][A
Calculating viewed counts for every point:  36%|███▋      | 41/113 [00:00<00:00, 155.97it/s][A
Calculating viewed counts for every point:  50%|█████     | 57/113 [00:00<00:00, 112.91it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 75/113 [00:00<00:00, 130.93it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 92/113 [00:00<00:00, 137.39it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 107/113 [00:00<00:00, 137.81it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  43%|████▎     | 61/142 [03:22<05:21,  3.96s/it]detected_ratio_thres_value tensor(0.4000, device='cuda:0')
final masked points tensor(13977, device='cuda:0')
before filtering torch.Size([4, 100285])
after filtering torch.Size([3, 100285])
num_ins_points_after_filtering tensor([4771, 7708, 1490], device='cuda:0')
Working on scene0389_00 class file cabinet
masks_to_be_merged [[0, 1, 3, 4, 109, 110, 111, 112, 113], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [17, 18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], [36, 38, 39, 40, 42, 43, 44], [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 78, 88, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 104], [69, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 95, 97, 103, 105, 106], [107, 108]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 12/142 [00:00<00:01, 105.84it/s][A
Calculating viewed counts for every point:  23%|██▎       | 32/142 [00:00<00:00, 156.40it/s][A
Calculating viewed counts for every point:  36%|███▌      | 51/142 [00:00<00:00, 169.17it/s][A
Calculating viewed counts for every point:  50%|█████     | 71/142 [00:00<00:00, 180.89it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 90/142 [00:00<00:00, 164.30it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 113/142 [00:00<00:00, 183.61it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 132/142 [00:00<00:00, 184.00it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▎     | 62/142 [03:25<05:02,  3.78s/it]detected_ratio_thres_value tensor(0.4222, device='cuda:0')
final masked points tensor(16073, device='cuda:0')
before filtering torch.Size([8, 201003])
after filtering torch.Size([7, 201003])
num_ins_points_after_filtering tensor([1410, 1736, 2050, 1570, 2577, 5459,  918], device='cuda:0')
Working on scene0406_00 class file cabinet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]

Calculating viewed counts for every point:   0%|          | 0/142 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 21/142 [00:00<00:00, 199.63it/s][A
Calculating viewed counts for every point:  29%|██▉       | 41/142 [00:00<00:00, 182.02it/s][A
Calculating viewed counts for every point:  42%|████▏     | 60/142 [00:00<00:00, 181.61it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 79/142 [00:00<00:00, 176.61it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 97/142 [00:00<00:00, 175.87it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 117/142 [00:00<00:00, 182.21it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 136/142 [00:00<00:00, 178.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  44%|████▍     | 63/142 [03:26<04:00,  3.05s/it]detected_ratio_thres_value tensor(0.2667, device='cuda:0')
final masked points tensor(1957, device='cuda:0')
before filtering torch.Size([2, 48864])
after filtering torch.Size([1, 48864])
num_ins_points_after_filtering tensor([1946], device='cuda:0')
Working on scene0412_00 class file cabinet
masks_to_be_merged [[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 32, 37, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86], [1, 74, 75], [25, 31, 36, 105, 107, 108, 111, 193, 201, 205], [26, 30, 33, 35, 39, 85, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 101, 102], [28, 189, 194], [34, 93], [40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 55, 56, 58, 60, 62, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 146, 149, 151, 155, 156, 157, 190, 191, 197, 199, 200, 202, 203, 204, 206, 207, 208, 209, 211], [41, 48, 52, 54, 57, 59, 61, 63, 65, 66, 170, 188, 195, 196, 198], [67, 68, 174, 176, 177, 179, 180, 181], [90, 94], [103, 104, 106, 109], [137, 140, 142, 143, 144, 145, 148, 150, 152, 153, 154], [158, 159, 160, 161], [162, 163, 164, 165, 166, 167, 168, 169], [173, 175], [182, 183], [184, 185, 186], [212, 213, 214]]

Calculating viewed counts for every point:   0%|          | 0/237 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 15/237 [00:00<00:01, 149.39it/s][A
Calculating viewed counts for every point:  16%|█▌        | 37/237 [00:00<00:01, 190.36it/s][A
Calculating viewed counts for every point:  25%|██▌       | 60/237 [00:00<00:00, 206.04it/s][A
Calculating viewed counts for every point:  34%|███▍      | 81/237 [00:00<00:00, 187.28it/s][A
Calculating viewed counts for every point:  42%|████▏     | 100/237 [00:00<00:00, 177.84it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 123/237 [00:00<00:00, 193.16it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 150/237 [00:00<00:00, 216.53it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 172/237 [00:00<00:00, 213.90it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 194/237 [00:00<00:00, 198.24it/s][A
Calculating viewed counts for every point:  91%|█████████ | 215/237 [00:01<00:00, 190.93it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 236/237 [00:01<00:00, 195.20it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  45%|████▌     | 64/142 [03:33<05:20,  4.12s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(27747, device='cuda:0')
before filtering torch.Size([18, 175557])
after filtering torch.Size([10, 175557])
num_ins_points_after_filtering tensor([11403,  1468,  5487,  3151,  1567,   114,  1416,   718,   439,   155],
       device='cuda:0')
Working on scene0414_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [14, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/117 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 17/117 [00:00<00:00, 167.32it/s][A
Calculating viewed counts for every point:  29%|██▉       | 34/117 [00:00<00:00, 89.26it/s] [A
Calculating viewed counts for every point:  38%|███▊      | 45/117 [00:00<00:00, 77.81it/s][A
Calculating viewed counts for every point:  46%|████▌     | 54/117 [00:00<00:00, 77.52it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 63/117 [00:00<00:00, 73.01it/s][A
Calculating viewed counts for every point:  61%|██████    | 71/117 [00:00<00:00, 68.51it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 79/117 [00:01<00:00, 66.04it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 93/117 [00:01<00:00, 83.30it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 105/117 [00:01<00:00, 91.28it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 115/117 [00:01<00:00, 85.11it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  46%|████▌     | 65/142 [03:35<04:42,  3.66s/it]detected_ratio_thres_value tensor(0.4286, device='cuda:0')
final masked points tensor(5957, device='cuda:0')
before filtering torch.Size([2, 192685])
after filtering torch.Size([2, 192685])
num_ins_points_after_filtering tensor([4288, 1655], device='cuda:0')
Working on scene0423_00 class file cabinet
No 3d masks detected in backprojection!
Working on scene0426_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 53, 54, 55, 56, 57], [8, 9, 10, 60], [11, 69], [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91], [45, 47], [51, 52], [58, 59, 61], [62, 63, 64, 65, 66, 67, 68]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 21/231 [00:00<00:01, 204.47it/s][A
Calculating viewed counts for every point:  18%|█▊        | 42/231 [00:00<00:01, 177.00it/s][A
Calculating viewed counts for every point:  30%|███       | 70/231 [00:00<00:00, 216.46it/s][A
Calculating viewed counts for every point:  40%|████      | 93/231 [00:00<00:00, 217.65it/s][A
Calculating viewed counts for every point:  50%|█████     | 116/231 [00:00<00:00, 199.18it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 137/231 [00:00<00:00, 190.33it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 157/231 [00:00<00:00, 186.42it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 176/231 [00:00<00:00, 176.41it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 200/231 [00:01<00:00, 190.35it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 222/231 [00:01<00:00, 194.97it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  47%|████▋     | 67/142 [03:39<03:24,  2.73s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(4334, device='cuda:0')
before filtering torch.Size([8, 135867])
after filtering torch.Size([1, 135867])
num_ins_points_after_filtering tensor([3160], device='cuda:0')
Working on scene0427_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3], [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 34, 36, 37, 38, 41, 43, 44, 46, 47], [7, 9, 16, 20, 21, 22, 23, 39, 40, 42, 45], [24, 25, 26, 27, 28, 29, 30, 31, 32], [33, 35]]

Calculating viewed counts for every point:   0%|          | 0/132 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 23/132 [00:00<00:00, 223.87it/s][A
Calculating viewed counts for every point:  36%|███▋      | 48/132 [00:00<00:00, 238.55it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 72/132 [00:00<00:00, 219.58it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 95/132 [00:00<00:00, 198.71it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 122/132 [00:00<00:00, 214.71it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  48%|████▊     | 68/142 [03:40<03:00,  2.44s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(4198, device='cuda:0')
before filtering torch.Size([5, 74074])
after filtering torch.Size([2, 74074])
num_ins_points_after_filtering tensor([ 973, 2537], device='cuda:0')
Working on scene0430_00 class file cabinet
masks_to_be_merged [[1, 3, 5, 6, 8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 27, 30], [4, 7, 9, 11, 12, 13, 15, 29, 31, 32, 33, 34, 35, 36], [43, 44]]

Calculating viewed counts for every point:   0%|          | 0/231 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 16/231 [00:00<00:01, 137.29it/s][A
Calculating viewed counts for every point:  13%|█▎        | 30/231 [00:00<00:01, 126.37it/s][A
Calculating viewed counts for every point:  19%|█▉        | 44/231 [00:00<00:01, 128.99it/s][A
Calculating viewed counts for every point:  25%|██▌       | 58/231 [00:00<00:01, 132.76it/s][A
Calculating viewed counts for every point:  31%|███       | 72/231 [00:00<00:01, 123.11it/s][A
Calculating viewed counts for every point:  37%|███▋      | 85/231 [00:00<00:01, 124.75it/s][A
Calculating viewed counts for every point:  42%|████▏     | 98/231 [00:00<00:01, 116.96it/s][A
Calculating viewed counts for every point:  48%|████▊     | 110/231 [00:00<00:01, 115.56it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 129/231 [00:01<00:00, 135.23it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 143/231 [00:01<00:00, 124.24it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 156/231 [00:01<00:00, 110.91it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 168/231 [00:01<00:00, 105.80it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 181/231 [00:01<00:00, 111.02it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 193/231 [00:01<00:00, 93.44it/s] [A
Calculating viewed counts for every point:  88%|████████▊ | 203/231 [00:01<00:00, 94.43it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 217/231 [00:01<00:00, 105.21it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  49%|████▊     | 69/142 [03:43<03:09,  2.60s/it]detected_ratio_thres_value tensor(0.1304, device='cuda:0')
final masked points tensor(1718, device='cuda:0')
before filtering torch.Size([3, 210249])
after filtering torch.Size([2, 210249])
num_ins_points_after_filtering tensor([465, 644], device='cuda:0')
Working on scene0432_00 class file cabinet
masks_to_be_merged [[0, 1]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  42%|████▏     | 22/52 [00:00<00:00, 210.20it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  49%|████▉     | 70/142 [03:44<02:26,  2.03s/it]detected_ratio_thres_value tensor(0.0800, device='cuda:0')
final masked points tensor(1571, device='cuda:0')
before filtering torch.Size([1, 39529])
after filtering torch.Size([1, 39529])
num_ins_points_after_filtering tensor([1571], device='cuda:0')
Working on scene0435_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], [8, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 40, 86, 89, 90, 91, 106, 154, 155], [16, 103], [48, 49, 50, 51, 52, 53], [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 104, 105, 107, 108, 109, 110, 147, 148, 149, 150, 151, 152, 153, 156], [85, 87], [111, 112, 140, 141, 142, 143, 144, 145, 146], [113, 134, 135, 136], [114, 115, 132, 133], [116, 119, 121, 122, 123, 128, 129, 130, 131], [117, 118, 120], [124, 125, 126], [137, 138, 139]]

Calculating viewed counts for every point:   0%|          | 0/328 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 14/328 [00:00<00:02, 134.23it/s][A
Calculating viewed counts for every point:   9%|▉         | 30/328 [00:00<00:02, 147.23it/s][A
Calculating viewed counts for every point:  14%|█▎        | 45/328 [00:00<00:02, 110.78it/s][A
Calculating viewed counts for every point:  17%|█▋        | 57/328 [00:00<00:02, 111.75it/s][A
Calculating viewed counts for every point:  21%|██▏       | 70/328 [00:00<00:02, 116.67it/s][A
Calculating viewed counts for every point:  25%|██▌       | 83/328 [00:00<00:02, 111.72it/s][A
Calculating viewed counts for every point:  30%|██▉       | 97/328 [00:00<00:01, 119.24it/s][A
Calculating viewed counts for every point:  34%|███▎      | 110/328 [00:00<00:02, 108.59it/s][A
Calculating viewed counts for every point:  38%|███▊      | 125/328 [00:01<00:01, 112.26it/s][A
Calculating viewed counts for every point:  42%|████▏     | 137/328 [00:01<00:01, 112.33it/s][A
Calculating viewed counts for every point:  45%|████▌     | 149/328 [00:01<00:01, 111.73it/s][A
Calculating viewed counts for every point:  51%|█████     | 167/328 [00:01<00:01, 130.31it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 181/328 [00:01<00:01, 132.96it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 195/328 [00:01<00:01, 106.65it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 207/328 [00:01<00:01, 109.82it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 219/328 [00:01<00:00, 111.41it/s][A
Calculating viewed counts for every point:  71%|███████   | 232/328 [00:02<00:00, 114.98it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 249/328 [00:02<00:00, 128.10it/s][A
Calculating viewed counts for every point:  80%|████████  | 263/328 [00:02<00:00, 120.85it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 276/328 [00:02<00:00, 119.00it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 289/328 [00:02<00:00, 98.11it/s] [A
Calculating viewed counts for every point:  93%|█████████▎| 305/328 [00:02<00:00, 111.52it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 317/328 [00:02<00:00, 112.83it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  50%|█████     | 71/142 [03:51<04:12,  3.56s/it]detected_ratio_thres_value tensor(0.2791, device='cuda:0')
final masked points tensor(16295, device='cuda:0')
before filtering torch.Size([14, 254998])
after filtering torch.Size([6, 254998])
num_ins_points_after_filtering tensor([2472, 1941, 3309, 6010,  672,  719], device='cuda:0')
Working on scene0441_00 class file cabinet
masks_to_be_merged [[0, 1, 2], [3, 4, 5], [6, 7, 8, 9, 10, 11, 12, 14, 17, 28, 29, 40, 42, 43, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66], [13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 36, 38, 39, 41, 44, 46, 47, 65, 67, 68, 69, 70, 71, 72], [30, 32, 33, 34, 35, 37]]

Calculating viewed counts for every point:   0%|          | 0/77 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 10/77 [00:00<00:00, 99.11it/s][A
Calculating viewed counts for every point:  35%|███▌      | 27/77 [00:00<00:00, 138.05it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 50/77 [00:00<00:00, 178.91it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 68/77 [00:00<00:00, 136.67it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  51%|█████     | 72/142 [03:54<03:50,  3.29s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(4199, device='cuda:0')
before filtering torch.Size([5, 86191])
after filtering torch.Size([4, 86191])
num_ins_points_after_filtering tensor([ 106, 1766, 1675,  550], device='cuda:0')
Working on scene0458_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], [10, 11, 12, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57], [13, 14, 59], [15, 16, 17, 18, 60, 61, 62, 63, 68], [19, 20, 21, 22, 23, 24, 25, 26, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98]]

Calculating viewed counts for every point:   0%|          | 0/199 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/199 [00:00<00:00, 236.11it/s][A
Calculating viewed counts for every point:  25%|██▍       | 49/199 [00:00<00:00, 243.25it/s][A
Calculating viewed counts for every point:  38%|███▊      | 75/199 [00:00<00:00, 247.58it/s][A
Calculating viewed counts for every point:  50%|█████     | 100/199 [00:00<00:00, 221.89it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 123/199 [00:00<00:00, 180.26it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 143/199 [00:00<00:00, 178.42it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 164/199 [00:00<00:00, 185.67it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 193/199 [00:00<00:00, 197.69it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  51%|█████▏    | 73/142 [03:57<03:51,  3.36s/it]detected_ratio_thres_value tensor(0.3235, device='cuda:0')
final masked points tensor(7176, device='cuda:0')
before filtering torch.Size([5, 65264])
after filtering torch.Size([2, 65264])
num_ins_points_after_filtering tensor([1646, 3592], device='cuda:0')
Working on scene0461_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40], [34, 35, 36, 37]]

Calculating viewed counts for every point:   0%|          | 0/52 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 15/52 [00:00<00:00, 146.65it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 34/52 [00:00<00:00, 156.06it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 50/52 [00:00<00:00, 125.94it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  52%|█████▏    | 74/142 [03:59<03:08,  2.77s/it]detected_ratio_thres_value tensor(0.3889, device='cuda:0')
final masked points tensor(2497, device='cuda:0')
before filtering torch.Size([2, 59134])
after filtering torch.Size([2, 59134])
num_ins_points_after_filtering tensor([1961,  536], device='cuda:0')
Working on scene0462_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 6, 7, 10, 13, 15, 18, 20, 127, 129, 131, 133, 135, 137, 138, 139, 140, 142, 148, 150, 153, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 168], [4, 5, 9, 14, 22, 24, 26, 28, 29, 36, 141, 143, 147, 151, 171, 173], [8, 144, 145, 146, 149, 152, 154], [11, 12, 16, 17, 19, 21, 23, 25, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 54, 55, 57, 58, 60, 61, 63, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 174, 175, 177, 178], [30, 31, 32, 33, 34, 35, 52], [46, 47, 50, 53, 56, 59, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 88, 89, 90, 91, 176], [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 130, 132, 134], [161, 163, 165]]

Calculating viewed counts for every point:   0%|          | 0/114 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 15/114 [00:00<00:00, 143.32it/s][A
Calculating viewed counts for every point:  33%|███▎      | 38/114 [00:00<00:00, 190.51it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 65/114 [00:00<00:00, 226.12it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 88/114 [00:00<00:00, 222.22it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 111/114 [00:00<00:00, 211.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  53%|█████▎    | 75/142 [04:03<03:29,  3.12s/it]detected_ratio_thres_value tensor(0.5238, device='cuda:0')
final masked points tensor(31714, device='cuda:0')
before filtering torch.Size([8, 156714])
after filtering torch.Size([4, 156714])
num_ins_points_after_filtering tensor([ 5063,  2458,  1856, 20845], device='cuda:0')
Working on scene0474_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 119], [16, 17, 19, 20], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], [38, 39, 40, 42, 95, 96, 97, 98, 103, 104, 106], [41, 99, 100, 101, 102, 105], [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 111, 112, 113, 114, 115], [55, 56, 58, 63, 116, 117, 118], [107, 108, 109, 110]]

Calculating viewed counts for every point:   0%|          | 0/164 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 17/164 [00:00<00:00, 169.33it/s][A
Calculating viewed counts for every point:  21%|██▏       | 35/164 [00:00<00:00, 171.87it/s][A
Calculating viewed counts for every point:  32%|███▏      | 53/164 [00:00<00:01, 110.78it/s][A
Calculating viewed counts for every point:  40%|████      | 66/164 [00:00<00:01, 72.58it/s] [A
Calculating viewed counts for every point:  49%|████▉     | 80/164 [00:00<00:00, 86.25it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 92/164 [00:00<00:00, 91.24it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 104/164 [00:01<00:00, 96.47it/s][A
Calculating viewed counts for every point:  71%|███████▏  | 117/164 [00:01<00:00, 104.31it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 129/164 [00:01<00:00, 101.72it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 140/164 [00:01<00:00, 99.91it/s] [A
Calculating viewed counts for every point:  92%|█████████▏| 151/164 [00:01<00:00, 95.49it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 163/164 [00:01<00:00, 100.70it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  54%|█████▎    | 76/142 [04:08<04:03,  3.69s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(13454, device='cuda:0')
before filtering torch.Size([8, 182281])
after filtering torch.Size([4, 182281])
num_ins_points_after_filtering tensor([6980, 2215,  829, 1849], device='cuda:0')
Working on scene0488_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 5, 6, 7, 10, 14, 15, 17, 18, 79, 80, 82, 84, 85, 86, 88, 92, 97, 100, 102, 103, 105, 106, 107, 108, 110, 112, 115, 119], [1, 3, 19, 111, 113, 116, 117, 120], [8, 11, 13, 16, 81, 83], [9, 12, 87, 91, 96, 98, 118, 121], [20, 23, 24, 26, 28, 31, 51, 52, 54, 56, 58, 60, 63, 67, 72, 76, 77], [21, 22, 25, 27, 30, 32, 39, 41, 44, 47, 50, 53, 55, 57, 59, 61, 64, 69, 74], [29, 65, 68, 71, 75, 78], [33, 36], [34, 35, 37], [38, 40, 42, 43, 45, 46, 48, 49], [62, 66, 70, 73], [89, 93, 99, 104], [90, 94, 95, 101], [114, 122]]

Calculating viewed counts for every point:   0%|          | 0/60 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  32%|███▏      | 19/60 [00:00<00:00, 183.31it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 41/60 [00:00<00:00, 199.02it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  54%|█████▍    | 77/142 [04:11<03:43,  3.43s/it]detected_ratio_thres_value tensor(0.3462, device='cuda:0')
final masked points tensor(10184, device='cuda:0')
before filtering torch.Size([14, 108319])
after filtering torch.Size([6, 108319])
num_ins_points_after_filtering tensor([1851, 1381, 1166,  911,  767, 2251], device='cuda:0')
Working on scene0490_00 class file cabinet
masks_to_be_merged [[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 47, 51, 52, 53, 54, 55, 56, 57, 66, 67, 69, 71, 73, 74], [30, 31, 32, 33, 35], [34, 37], [38, 39, 40, 42, 44], [41, 43], [45, 46], [48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65]]

Calculating viewed counts for every point:   0%|          | 0/129 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 19/129 [00:00<00:00, 187.07it/s][A
Calculating viewed counts for every point:  31%|███       | 40/129 [00:00<00:00, 197.12it/s][A
Calculating viewed counts for every point:  47%|████▋     | 61/129 [00:00<00:00, 184.03it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 85/129 [00:00<00:00, 202.18it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 106/129 [00:00<00:00, 185.03it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 125/129 [00:00<00:00, 164.98it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  55%|█████▍    | 78/142 [04:13<03:21,  3.15s/it]detected_ratio_thres_value tensor(0.3226, device='cuda:0')
final masked points tensor(17473, device='cuda:0')
before filtering torch.Size([7, 131283])
after filtering torch.Size([2, 131283])
num_ins_points_after_filtering tensor([12204,   900], device='cuda:0')
Working on scene0494_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 16, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [11, 14, 15, 17]]

Calculating viewed counts for every point:   0%|          | 0/75 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  16%|█▌        | 12/75 [00:00<00:00, 116.15it/s][A
Calculating viewed counts for every point:  40%|████      | 30/75 [00:00<00:00, 149.52it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 52/75 [00:00<00:00, 177.56it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 73/75 [00:00<00:00, 188.91it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  56%|█████▌    | 79/142 [04:14<02:41,  2.56s/it]detected_ratio_thres_value tensor(0.3077, device='cuda:0')
final masked points tensor(1826, device='cuda:0')
before filtering torch.Size([2, 62048])
after filtering torch.Size([1, 62048])
num_ins_points_after_filtering tensor([1771], device='cuda:0')
Working on scene0496_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 6, 7, 8, 9, 11, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [10, 12, 17, 18, 19, 20], [21, 22, 23, 24, 25]]

Calculating viewed counts for every point:   0%|          | 0/134 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 10/134 [00:00<00:01, 99.98it/s][A
Calculating viewed counts for every point:  15%|█▍        | 20/134 [00:00<00:01, 99.52it/s][A
Calculating viewed counts for every point:  22%|██▏       | 30/134 [00:00<00:01, 76.63it/s][A
Calculating viewed counts for every point:  31%|███       | 41/134 [00:00<00:01, 85.58it/s][A
Calculating viewed counts for every point:  38%|███▊      | 51/134 [00:00<00:00, 88.32it/s][A
Calculating viewed counts for every point:  46%|████▌     | 61/134 [00:00<00:00, 78.62it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 70/134 [00:00<00:00, 72.48it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 78/134 [00:01<00:00, 66.46it/s][A
Calculating viewed counts for every point:  66%|██████▋   | 89/134 [00:01<00:00, 75.69it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 97/134 [00:01<00:00, 69.52it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 105/134 [00:01<00:00, 62.99it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 112/134 [00:01<00:00, 60.88it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 119/134 [00:01<00:00, 58.00it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 130/134 [00:01<00:00, 69.62it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  56%|█████▋    | 80/142 [04:17<02:44,  2.65s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(6006, device='cuda:0')
before filtering torch.Size([3, 192962])
after filtering torch.Size([2, 192962])
num_ins_points_after_filtering tensor([4576,  978], device='cuda:0')
Working on scene0500_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40], [37, 38, 39, 41, 42], [43, 44], [45, 46]]

Calculating viewed counts for every point:   0%|          | 0/219 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   3%|▎         | 6/219 [00:00<00:03, 55.40it/s][A
Calculating viewed counts for every point:   6%|▋         | 14/219 [00:00<00:03, 66.05it/s][A
Calculating viewed counts for every point:  10%|▉         | 21/219 [00:00<00:02, 67.46it/s][A
Calculating viewed counts for every point:  13%|█▎        | 28/219 [00:00<00:03, 61.38it/s][A
Calculating viewed counts for every point:  16%|█▌        | 35/219 [00:00<00:02, 62.79it/s][A
Calculating viewed counts for every point:  19%|█▉        | 42/219 [00:00<00:02, 60.91it/s][A
Calculating viewed counts for every point:  23%|██▎       | 50/219 [00:00<00:02, 63.57it/s][A
Calculating viewed counts for every point:  26%|██▌       | 57/219 [00:00<00:02, 59.42it/s][A
Calculating viewed counts for every point:  29%|██▉       | 64/219 [00:01<00:02, 55.10it/s][A
Calculating viewed counts for every point:  32%|███▏      | 70/219 [00:01<00:02, 52.99it/s][A
Calculating viewed counts for every point:  35%|███▍      | 76/219 [00:01<00:02, 49.62it/s][A
Calculating viewed counts for every point:  37%|███▋      | 82/219 [00:01<00:02, 50.43it/s][A
Calculating viewed counts for every point:  40%|████      | 88/219 [00:01<00:02, 51.05it/s][A
Calculating viewed counts for every point:  43%|████▎     | 94/219 [00:01<00:02, 52.01it/s][A
Calculating viewed counts for every point:  46%|████▌     | 100/219 [00:01<00:02, 47.54it/s][A
Calculating viewed counts for every point:  48%|████▊     | 105/219 [00:01<00:02, 46.89it/s][A
Calculating viewed counts for every point:  51%|█████     | 111/219 [00:02<00:02, 49.12it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 118/219 [00:02<00:01, 51.51it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 124/219 [00:02<00:01, 50.93it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 130/219 [00:02<00:01, 49.16it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 136/219 [00:02<00:01, 50.41it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 142/219 [00:02<00:01, 51.69it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 148/219 [00:02<00:01, 51.15it/s][A
Calculating viewed counts for every point:  70%|███████   | 154/219 [00:02<00:01, 49.95it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 164/219 [00:02<00:00, 62.47it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 175/219 [00:03<00:00, 73.83it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 183/219 [00:03<00:00, 65.89it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 190/219 [00:03<00:00, 59.13it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 197/219 [00:03<00:00, 52.64it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 203/219 [00:03<00:00, 51.49it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 209/219 [00:03<00:00, 51.90it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 215/219 [00:03<00:00, 52.44it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  57%|█████▋    | 81/142 [04:23<03:37,  3.57s/it]detected_ratio_thres_value tensor(0.3429, device='cuda:0')
final masked points tensor(11844, device='cuda:0')
before filtering torch.Size([5, 396942])
after filtering torch.Size([3, 396942])
num_ins_points_after_filtering tensor([2601, 5652, 3491], device='cuda:0')
Working on scene0518_00 class file cabinet
masks_to_be_merged [[0, 3, 6, 9, 33, 34, 35, 36, 38, 40, 41, 42, 120, 121, 122, 123, 124, 125, 128, 165, 166, 167, 168, 169, 170, 171, 172, 173], [1, 4, 7, 10, 11, 13, 102, 104, 107, 111, 114, 118], [2, 5, 8, 12], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 47, 49, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], [29, 30], [32, 51, 53, 55, 56, 57, 58, 60, 61, 62, 64, 126, 127, 129, 130, 131, 132], [37, 39, 89, 90, 92, 94, 96, 97, 98, 101, 105, 108, 110], [48, 50, 52, 59, 63], [82, 83, 84, 85, 154, 155, 156, 159, 161], [86, 87, 88, 91, 93, 95, 157, 158, 160, 162, 163, 164], [99, 100, 103, 106, 109, 115, 117], [112, 113, 116, 119]]

Calculating viewed counts for every point:   0%|          | 0/147 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 19/147 [00:00<00:00, 151.26it/s][A
Calculating viewed counts for every point:  29%|██▉       | 43/147 [00:00<00:00, 197.08it/s][A
Calculating viewed counts for every point:  48%|████▊     | 70/147 [00:00<00:00, 226.54it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 96/147 [00:00<00:00, 238.50it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 121/147 [00:01<00:00, 58.75it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 141/147 [00:01<00:00, 73.79it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 82/142 [04:28<04:07,  4.12s/it]detected_ratio_thres_value tensor(0.3143, device='cuda:0')
final masked points tensor(14739, device='cuda:0')
before filtering torch.Size([12, 130180])
after filtering torch.Size([6, 130180])
num_ins_points_after_filtering tensor([5354, 1559, 1690, 1119, 1433, 1211], device='cuda:0')
Working on scene0527_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 4, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], [3, 5, 6, 7, 8, 49, 50, 51], [9, 10, 11, 12, 13, 14, 15, 52], [16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32], [22, 23, 24, 25, 26]]

Calculating viewed counts for every point:   0%|          | 0/68 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  40%|███▉      | 27/68 [00:00<00:00, 269.93it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 63/68 [00:00<00:00, 321.09it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  58%|█████▊    | 83/142 [04:29<03:10,  3.22s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(7027, device='cuda:0')
before filtering torch.Size([5, 65893])
after filtering torch.Size([4, 65893])
num_ins_points_after_filtering tensor([2312, 1490, 1676, 1021], device='cuda:0')
Working on scene0535_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 68], [1, 3, 5], [20, 21], [22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 69, 70], [26, 28, 36, 37], [38, 39, 40], [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54], [51, 53, 55, 56], [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]]

Calculating viewed counts for every point:   0%|          | 0/69 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▍       | 17/69 [00:00<00:00, 154.32it/s][A
Calculating viewed counts for every point:  51%|█████     | 35/69 [00:00<00:00, 168.54it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 52/69 [00:00<00:00, 142.31it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 68/69 [00:00<00:00, 146.01it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  59%|█████▉    | 84/142 [04:32<02:53,  2.99s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(12025, device='cuda:0')
before filtering torch.Size([9, 90268])
after filtering torch.Size([5, 90268])
num_ins_points_after_filtering tensor([1266, 1268, 2334, 1975, 3553], device='cuda:0')
Working on scene0549_00 class file cabinet
masks_to_be_merged [[1, 2], [3, 4, 5, 6, 7, 8, 9]]

Calculating viewed counts for every point:   0%|          | 0/83 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 16/83 [00:00<00:00, 157.98it/s][A
Calculating viewed counts for every point:  45%|████▍     | 37/83 [00:00<00:00, 184.63it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 56/83 [00:00<00:00, 173.66it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 74/83 [00:00<00:00, 174.10it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  60%|█████▉    | 85/142 [04:33<02:11,  2.31s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(5213, device='cuda:0')
before filtering torch.Size([2, 161973])
after filtering torch.Size([2, 161973])
num_ins_points_after_filtering tensor([3856, 1324], device='cuda:0')
Working on scene0550_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 9, 10, 11, 66, 67, 68, 69, 71, 74, 76, 78, 81, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 170], [5, 6, 7], [8, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 36, 37, 40, 43], [25, 38, 39, 41, 42, 44, 45], [31, 32, 33, 34, 156, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199], [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 72, 73, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101], [112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155], [152, 154], [173, 174, 175, 176], [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], [222, 223]]

Calculating viewed counts for every point:   0%|          | 0/392 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 17/392 [00:00<00:02, 164.84it/s][A
Calculating viewed counts for every point:   9%|▉         | 37/392 [00:00<00:01, 182.95it/s][A
Calculating viewed counts for every point:  16%|█▌        | 63/392 [00:00<00:01, 211.61it/s][A
Calculating viewed counts for every point:  22%|██▏       | 85/392 [00:00<00:01, 197.87it/s][A
Calculating viewed counts for every point:  28%|██▊       | 111/392 [00:00<00:01, 209.68it/s][A
Calculating viewed counts for every point:  35%|███▌      | 139/392 [00:00<00:01, 229.79it/s][A
Calculating viewed counts for every point:  42%|████▏     | 163/392 [00:00<00:01, 204.94it/s][A
Calculating viewed counts for every point:  48%|████▊     | 189/392 [00:00<00:00, 218.61it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 215/392 [00:00<00:00, 228.96it/s][A
Calculating viewed counts for every point:  61%|██████    | 239/392 [00:01<00:00, 213.37it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 261/392 [00:01<00:00, 208.48it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 283/392 [00:01<00:00, 196.64it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 303/392 [00:01<00:00, 189.90it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 323/392 [00:01<00:00, 187.49it/s][A
Calculating viewed counts for every point:  89%|████████▊ | 347/392 [00:01<00:00, 199.87it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 368/392 [00:01<00:00, 201.51it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  61%|██████    | 86/142 [04:40<03:38,  3.90s/it]detected_ratio_thres_value tensor(0.2353, device='cuda:0')
final masked points tensor(23826, device='cuda:0')
before filtering torch.Size([12, 127677])
after filtering torch.Size([8, 127677])
num_ins_points_after_filtering tensor([ 894, 3599, 2982, 1775, 2635, 4026, 1695, 4805], device='cuda:0')
Working on scene0552_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], [34, 36, 79, 80, 81, 82, 84, 86], [35, 37], [39, 40, 41, 42, 43, 45, 46, 47], [83, 85]]

Calculating viewed counts for every point:   0%|          | 0/89 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 23/89 [00:00<00:00, 224.42it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 46/89 [00:00<00:00, 216.95it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 74/89 [00:00<00:00, 242.17it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  61%|██████▏   | 87/142 [04:42<03:04,  3.35s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(15794, device='cuda:0')
before filtering torch.Size([6, 123103])
after filtering torch.Size([4, 123103])
num_ins_points_after_filtering tensor([8248, 3171,  505, 3499], device='cuda:0')
Working on scene0553_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [15, 16, 17, 18, 19, 20, 23, 24, 26, 28, 30, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 54, 64], [21, 22, 25, 27, 29, 31, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]]

Calculating viewed counts for every point:   0%|          | 0/151 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█▏        | 17/151 [00:00<00:00, 168.18it/s][A
Calculating viewed counts for every point:  34%|███▍      | 52/151 [00:00<00:00, 269.56it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 79/151 [00:00<00:00, 241.75it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 104/151 [00:00<00:00, 240.57it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 129/151 [00:00<00:00, 218.43it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  62%|██████▏   | 88/142 [04:44<02:40,  2.97s/it]detected_ratio_thres_value tensor(0.2857, device='cuda:0')
final masked points tensor(7390, device='cuda:0')
before filtering torch.Size([4, 62854])
after filtering torch.Size([3, 62854])
num_ins_points_after_filtering tensor([1340, 1165, 3390], device='cuda:0')
Working on scene0558_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 42, 44, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], [35, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56]]

Calculating viewed counts for every point:   0%|          | 0/71 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 39/71 [00:00<00:00, 380.49it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 89/142 [04:46<02:12,  2.50s/it]detected_ratio_thres_value tensor(0.3750, device='cuda:0')
final masked points tensor(24482, device='cuda:0')
before filtering torch.Size([2, 92953])
after filtering torch.Size([2, 92953])
num_ins_points_after_filtering tensor([15059,  9410], device='cuda:0')
Working on scene0559_00 class file cabinet
masks_to_be_merged [[0, 2], [4, 5, 6, 7, 8], [9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19]]

Calculating viewed counts for every point:   0%|          | 0/58 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  31%|███       | 18/58 [00:00<00:00, 176.26it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 36/58 [00:00<00:00, 162.87it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  63%|██████▎   | 90/142 [04:47<01:44,  2.00s/it]detected_ratio_thres_value tensor(0.1667, device='cuda:0')
final masked points tensor(9023, device='cuda:0')
before filtering torch.Size([4, 89796])
after filtering torch.Size([3, 89796])
num_ins_points_after_filtering tensor([2158, 1401, 5004], device='cuda:0')
Working on scene0565_00 class file cabinet
masks_to_be_merged [[0, 2, 3], [4, 5, 6, 7], [8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 34, 36, 37, 38], [9, 11], [26, 28, 29, 30, 31, 32, 33, 35, 39, 46, 47, 48], [40, 41, 42, 43, 44], [49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 65, 68, 69], [57, 59, 61, 63, 64, 66, 67, 70, 71, 72, 73]]

Calculating viewed counts for every point:   0%|          | 0/107 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 15/107 [00:00<00:00, 132.28it/s][A
Calculating viewed counts for every point:  27%|██▋       | 29/107 [00:00<00:00, 119.71it/s][A
Calculating viewed counts for every point:  42%|████▏     | 45/107 [00:00<00:00, 134.37it/s][A
Calculating viewed counts for every point:  61%|██████    | 65/107 [00:00<00:00, 153.92it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 84/107 [00:00<00:00, 166.04it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 104/107 [00:00<00:00, 174.77it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  64%|██████▍   | 91/142 [04:49<01:44,  2.04s/it]detected_ratio_thres_value tensor(0.2188, device='cuda:0')
final masked points tensor(15401, device='cuda:0')
before filtering torch.Size([8, 167558])
after filtering torch.Size([6, 167558])
num_ins_points_after_filtering tensor([2045,  993,  690,  394, 6997, 2739], device='cuda:0')
Working on scene0568_00 class file cabinet
masks_to_be_merged [[0, 1], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 77], [41, 43, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 76, 78, 80, 81, 82], [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], [101, 102], [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], [129, 131, 132, 133, 134, 135, 136, 137, 138]]

Calculating viewed counts for every point:   0%|          | 0/166 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▍         | 8/166 [00:00<00:02, 67.71it/s][A
Calculating viewed counts for every point:   9%|▉         | 15/166 [00:00<00:02, 57.18it/s][A
Calculating viewed counts for every point:  14%|█▍        | 23/166 [00:00<00:02, 65.54it/s][A
Calculating viewed counts for every point:  21%|██        | 35/166 [00:00<00:01, 83.52it/s][A
Calculating viewed counts for every point:  30%|██▉       | 49/166 [00:00<00:01, 99.74it/s][A
Calculating viewed counts for every point:  36%|███▌      | 60/166 [00:00<00:01, 91.98it/s][A
Calculating viewed counts for every point:  42%|████▏     | 70/166 [00:00<00:01, 85.66it/s][A
Calculating viewed counts for every point:  51%|█████     | 84/166 [00:00<00:00, 99.32it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 97/166 [00:01<00:00, 104.67it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 108/166 [00:01<00:00, 97.27it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 119/166 [00:01<00:00, 95.91it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 130/166 [00:01<00:00, 97.80it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 142/166 [00:01<00:00, 102.07it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 154/166 [00:01<00:00, 105.87it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 165/166 [00:01<00:00, 106.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  65%|██████▍   | 92/142 [04:55<02:43,  3.26s/it]detected_ratio_thres_value tensor(0.3235, device='cuda:0')
final masked points tensor(30454, device='cuda:0')
before filtering torch.Size([8, 232453])
after filtering torch.Size([6, 232453])
num_ins_points_after_filtering tensor([13060,  4227,  4012,  1223,  5423,  2438], device='cuda:0')
Working on scene0574_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], [12, 13, 14], [15, 16, 18], [17, 19, 20, 21, 22, 23, 24, 25, 26], [27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], [34, 35]]

Calculating viewed counts for every point:   0%|          | 0/103 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 38/103 [00:00<00:00, 379.80it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 76/103 [00:00<00:00, 321.12it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  65%|██████▌   | 93/142 [04:56<02:06,  2.57s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(8147, device='cuda:0')
before filtering torch.Size([6, 55521])
after filtering torch.Size([2, 55521])
num_ins_points_after_filtering tensor([4041, 2733], device='cuda:0')
Working on scene0575_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 84, 85, 86, 87, 88, 89, 90, 119, 120, 121], [13, 16, 21, 25], [14, 15, 17, 18, 19, 20, 22, 27, 28, 29, 30, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118], [23, 24], [42, 43, 44, 45, 46, 48, 57, 59, 61, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], [47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 67, 74, 76, 80, 82], [92, 93, 99, 117]]

Calculating viewed counts for every point:   0%|          | 0/294 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▋         | 19/294 [00:00<00:01, 187.01it/s][A
Calculating viewed counts for every point:  14%|█▎        | 40/294 [00:00<00:01, 198.11it/s][A
Calculating viewed counts for every point:  21%|██▏       | 63/294 [00:00<00:01, 210.61it/s][A
Calculating viewed counts for every point:  30%|██▉       | 87/294 [00:00<00:00, 221.62it/s][A
Calculating viewed counts for every point:  37%|███▋      | 110/294 [00:00<00:00, 216.60it/s][A
Calculating viewed counts for every point:  45%|████▍     | 132/294 [00:00<00:00, 212.06it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 158/294 [00:00<00:00, 224.70it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 181/294 [00:00<00:00, 216.90it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 203/294 [00:00<00:00, 194.13it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 223/294 [00:01<00:00, 188.63it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 244/294 [00:01<00:00, 194.45it/s][A
Calculating viewed counts for every point:  90%|█████████ | 266/294 [00:01<00:00, 200.62it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 287/294 [00:01<00:00, 199.52it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  66%|██████▌   | 94/142 [04:59<02:19,  2.91s/it]detected_ratio_thres_value tensor(0.1852, device='cuda:0')
final masked points tensor(10248, device='cuda:0')
before filtering torch.Size([7, 194207])
after filtering torch.Size([4, 194207])
num_ins_points_after_filtering tensor([3526,  252, 1140, 4229], device='cuda:0')
Working on scene0578_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 8, 9, 10, 11, 12, 15, 16, 20, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 73, 90, 91], [4, 5, 6, 7], [13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], [31, 33, 34, 69, 70, 72, 76, 78, 79, 80, 81, 82, 84, 86], [41, 45, 47, 48], [83, 85], [87, 88, 89]]

Calculating viewed counts for every point:   0%|          | 0/149 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 28/149 [00:00<00:00, 271.37it/s][A
Calculating viewed counts for every point:  38%|███▊      | 56/149 [00:00<00:00, 257.47it/s][A
Calculating viewed counts for every point:  56%|█████▋    | 84/149 [00:00<00:00, 263.63it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 111/149 [00:00<00:00, 251.14it/s][A
Calculating viewed counts for every point:  94%|█████████▍| 140/149 [00:00<00:00, 263.84it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  67%|██████▋   | 95/142 [05:01<02:01,  2.58s/it]detected_ratio_thres_value tensor(0.2593, device='cuda:0')
final masked points tensor(9595, device='cuda:0')
before filtering torch.Size([7, 147607])
after filtering torch.Size([3, 147607])
num_ins_points_after_filtering tensor([3857, 1328, 4005], device='cuda:0')
Working on scene0580_00 class file cabinet
masks_to_be_merged [[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 54, 55, 56, 57, 58, 59, 62, 64, 65, 67, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 205, 206, 207, 208], [1, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 60, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74], [14, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 179, 180, 181, 182], [15, 16, 17, 18, 19, 20, 21, 22, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 184, 185, 186, 187, 188, 189, 190, 201], [23, 24, 25, 26, 27, 192, 194, 196, 197, 200, 203], [28, 44, 45, 46, 191, 195, 198, 199, 202, 204], [173, 174, 175, 176, 177, 178]]

Calculating viewed counts for every point:   0%|          | 0/477 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 24/477 [00:00<00:01, 235.22it/s][A
Calculating viewed counts for every point:  11%|█         | 51/477 [00:00<00:01, 254.08it/s][A
Calculating viewed counts for every point:  16%|█▋        | 78/477 [00:00<00:01, 258.43it/s][A
Calculating viewed counts for every point:  22%|██▏       | 104/477 [00:00<00:01, 258.94it/s][A
Calculating viewed counts for every point:  27%|██▋       | 131/477 [00:00<00:01, 260.23it/s][A
Calculating viewed counts for every point:  33%|███▎      | 158/477 [00:00<00:01, 256.25it/s][A
Calculating viewed counts for every point:  39%|███▊      | 184/477 [00:00<00:01, 253.40it/s][A
Calculating viewed counts for every point:  44%|████▍     | 210/477 [00:00<00:01, 248.14it/s][A
Calculating viewed counts for every point:  49%|████▉     | 235/477 [00:00<00:00, 245.62it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 260/477 [00:01<00:00, 242.01it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 285/477 [00:01<00:00, 233.16it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 311/477 [00:01<00:00, 240.02it/s][A
Calculating viewed counts for every point:  70%|███████   | 336/477 [00:01<00:00, 233.48it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 361/477 [00:01<00:00, 236.45it/s][A
Calculating viewed counts for every point:  81%|████████  | 385/477 [00:01<00:00, 229.92it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 410/477 [00:01<00:00, 228.29it/s][A
Calculating viewed counts for every point:  91%|█████████ | 435/477 [00:01<00:00, 232.25it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 462/477 [00:01<00:00, 242.63it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 96/142 [05:08<02:54,  3.78s/it]detected_ratio_thres_value tensor(0.3011, device='cuda:0')
final masked points tensor(16335, device='cuda:0')
before filtering torch.Size([7, 158047])
after filtering torch.Size([4, 158047])
num_ins_points_after_filtering tensor([3464, 1123, 5540, 3762], device='cuda:0')
Working on scene0583_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 104, 105, 106, 107, 108, 109, 110], [13, 14, 15, 50, 51, 52, 53, 54, 55, 67, 68, 69, 70, 72, 94, 95, 96, 97], [23, 25, 27, 29, 78, 79, 80, 83], [71, 73, 74, 75, 76, 77], [92, 93, 98, 99, 100, 101, 102]]

Calculating viewed counts for every point:   0%|          | 0/198 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 25/198 [00:00<00:00, 247.87it/s][A
Calculating viewed counts for every point:  27%|██▋       | 53/198 [00:00<00:00, 262.93it/s][A
Calculating viewed counts for every point:  40%|████      | 80/198 [00:00<00:00, 256.10it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 107/198 [00:00<00:00, 260.31it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 134/198 [00:00<00:00, 245.87it/s][A
Calculating viewed counts for every point:  80%|████████  | 159/198 [00:00<00:00, 243.77it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 184/198 [00:00<00:00, 239.56it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  68%|██████▊   | 97/142 [05:11<02:35,  3.45s/it]detected_ratio_thres_value tensor(0.5357, device='cuda:0')
final masked points tensor(3606, device='cuda:0')
before filtering torch.Size([5, 146782])
after filtering torch.Size([1, 146782])
num_ins_points_after_filtering tensor([3005], device='cuda:0')
Working on scene0591_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 5, 6, 7, 14, 16, 17, 18, 78, 123, 125, 128, 132, 135, 136, 138, 139, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191], [3, 4, 8, 9, 10, 11, 12, 13, 15, 22, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 126, 129, 188, 192, 193, 194], [19, 20], [23, 27, 28, 31, 33], [24, 26, 29, 30], [34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 49, 52, 55, 58, 61, 65, 67, 69, 71, 72, 73, 75, 77, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], [42, 45, 48, 51, 54, 57, 60, 62, 64, 66, 68, 74, 76, 79, 83], [44, 47, 50, 53, 56, 59, 82], [63, 70], [115, 118, 122, 124, 127, 130, 133], [131, 134, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 156, 159, 162, 163, 164, 166, 167, 169, 171, 174, 175, 176, 177, 178, 180, 183], [149, 151, 155, 157, 161], [152, 154, 158, 160, 165, 168, 170, 172, 173]]

Calculating viewed counts for every point:   0%|          | 0/173 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▊         | 15/173 [00:00<00:01, 140.61it/s][A
Calculating viewed counts for every point:  18%|█▊        | 32/173 [00:00<00:00, 156.72it/s][A
Calculating viewed counts for every point:  28%|██▊       | 49/173 [00:00<00:00, 162.10it/s][A
Calculating viewed counts for every point:  38%|███▊      | 66/173 [00:00<00:00, 152.53it/s][A
Calculating viewed counts for every point:  47%|████▋     | 82/173 [00:00<00:00, 154.55it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 98/173 [00:00<00:00, 153.61it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 114/173 [00:00<00:00, 153.40it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 131/173 [00:00<00:00, 156.33it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 147/173 [00:00<00:00, 152.98it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 164/173 [00:01<00:00, 155.80it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  69%|██████▉   | 98/142 [05:16<02:51,  3.91s/it]detected_ratio_thres_value tensor(0.3922, device='cuda:0')
final masked points tensor(22569, device='cuda:0')
before filtering torch.Size([13, 175600])
after filtering torch.Size([6, 175600])
num_ins_points_after_filtering tensor([2121, 4667,  566, 6592,  504, 3515], device='cuda:0')
Working on scene0593_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 279, 280, 282, 283, 285, 286, 287], [10, 12, 14, 15, 16, 18, 19, 20, 21, 24, 27, 31, 33, 35, 37, 39, 41, 119, 121, 275, 278, 284], [22, 23, 25, 26, 28, 29, 30, 32, 34, 36, 38, 40, 43, 45, 48, 271, 273, 274, 276, 277, 281], [42, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 62, 63, 65, 68, 231, 232, 233, 234, 235, 236, 238, 240, 242, 244, 248, 264, 268, 269, 270, 272], [58, 59, 61, 64, 66, 70, 72, 74, 237, 239, 241, 243, 246, 247, 250, 252, 254, 257, 261, 263, 265, 267], [67, 69, 71, 73, 76, 79, 81, 82, 83, 84, 85, 86, 245, 249, 251, 262, 266], [75, 77, 78, 80, 253, 255, 258, 259, 260], [87, 88, 90, 92, 93, 95, 97, 99, 101, 176, 178, 182, 186, 189, 198], [89, 256], [91, 94, 96, 98, 100], [102, 103, 105, 107, 180, 184, 187, 192, 194, 196, 197, 199, 200, 201, 202], [132, 133, 144, 145, 147, 148, 149, 205, 207], [134, 135, 136, 138, 139, 140, 141, 142, 143, 146, 203, 204, 206], [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 183, 185, 188, 190, 193, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228]]

Calculating viewed counts for every point:   0%|          | 0/230 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 18/230 [00:00<00:01, 177.66it/s][A
Calculating viewed counts for every point:  17%|█▋        | 39/230 [00:00<00:00, 192.09it/s][A
Calculating viewed counts for every point:  26%|██▌       | 59/230 [00:00<00:00, 192.71it/s][A
Calculating viewed counts for every point:  34%|███▍      | 79/230 [00:00<00:00, 185.95it/s][A
Calculating viewed counts for every point:  43%|████▎     | 100/230 [00:00<00:00, 192.12it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 122/230 [00:00<00:00, 198.40it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 142/230 [00:00<00:00, 183.50it/s][A
Calculating viewed counts for every point:  71%|███████   | 163/230 [00:00<00:00, 189.45it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 183/230 [00:00<00:00, 188.31it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 202/230 [00:01<00:00, 186.64it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 221/230 [00:01<00:00, 182.65it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  70%|██████▉   | 99/142 [05:24<03:48,  5.33s/it]detected_ratio_thres_value tensor(0.5600, device='cuda:0')
final masked points tensor(56563, device='cuda:0')
before filtering torch.Size([14, 211902])
after filtering torch.Size([8, 211902])
num_ins_points_after_filtering tensor([25511,  1259,  2497,  2602,  1444,  1226,  2293, 17123],
       device='cuda:0')
Working on scene0595_00 class file cabinet
masks_to_be_merged [[0, 1, 49, 50, 51, 52, 53, 54, 55, 56], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 45, 46, 47, 48], [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 37, 38, 39, 41, 42, 44], [31, 34, 36, 40]]

Calculating viewed counts for every point:   0%|          | 0/76 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  29%|██▉       | 22/76 [00:00<00:00, 214.47it/s][A
Calculating viewed counts for every point:  61%|██████    | 46/76 [00:00<00:00, 226.05it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 75/76 [00:00<00:00, 253.82it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  70%|███████   | 100/142 [05:25<02:52,  4.10s/it]detected_ratio_thres_value tensor(0.3214, device='cuda:0')
final masked points tensor(18025, device='cuda:0')
before filtering torch.Size([4, 142330])
after filtering torch.Size([3, 142330])
num_ins_points_after_filtering tensor([ 1379, 11087,  5119], device='cuda:0')
Working on scene0598_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 8, 17, 83], [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22], [16, 19, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72], [51, 52, 53, 55, 56, 58, 59, 60, 61, 63], [54, 57], [74, 75, 76, 77, 78, 79]]

Calculating viewed counts for every point:   0%|          | 0/101 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▍       | 24/101 [00:00<00:00, 239.28it/s][A
Calculating viewed counts for every point:  50%|█████     | 51/101 [00:00<00:00, 255.64it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 78/101 [00:00<00:00, 258.66it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  71%|███████   | 101/142 [05:27<02:20,  3.42s/it]detected_ratio_thres_value tensor(0.3030, device='cuda:0')
final masked points tensor(53805, device='cuda:0')
before filtering torch.Size([6, 145562])
after filtering torch.Size([3, 145562])
num_ins_points_after_filtering tensor([21084,  3704, 27299], device='cuda:0')
Working on scene0599_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 69, 70, 71, 72, 73], [11, 12, 74, 75], [15, 16, 17, 18, 19, 79], [20, 21, 22, 23, 24, 25, 26], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], [67, 68], [76, 77]]

Calculating viewed counts for every point:   0%|          | 0/189 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▍        | 28/189 [00:00<00:00, 273.04it/s][A
Calculating viewed counts for every point:  30%|██▉       | 56/189 [00:00<00:00, 247.38it/s][A
Calculating viewed counts for every point:  43%|████▎     | 81/189 [00:00<00:00, 246.24it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 107/189 [00:00<00:00, 248.41it/s][A
Calculating viewed counts for every point:  71%|███████   | 134/189 [00:00<00:00, 252.67it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 160/189 [00:00<00:00, 240.51it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 185/189 [00:00<00:00, 227.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  72%|███████▏  | 102/142 [05:29<01:59,  2.99s/it]detected_ratio_thres_value tensor(0.1163, device='cuda:0')
final masked points tensor(9429, device='cuda:0')
before filtering torch.Size([7, 141933])
after filtering torch.Size([3, 141933])
num_ins_points_after_filtering tensor([1562, 3566, 1926], device='cuda:0')
Working on scene0606_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], [69, 70, 72, 73, 74, 75], [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103]]

Calculating viewed counts for every point:   0%|          | 0/250 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 26/250 [00:00<00:00, 259.08it/s][A
Calculating viewed counts for every point:  21%|██        | 52/250 [00:00<00:00, 243.30it/s][A
Calculating viewed counts for every point:  31%|███       | 77/250 [00:00<00:00, 244.32it/s][A
Calculating viewed counts for every point:  41%|████      | 102/250 [00:00<00:00, 230.06it/s][A
Calculating viewed counts for every point:  50%|█████     | 126/250 [00:00<00:00, 218.82it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 149/250 [00:00<00:00, 213.16it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 171/250 [00:00<00:00, 206.90it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 192/250 [00:00<00:00, 200.35it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 216/250 [00:00<00:00, 210.49it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 238/250 [00:01<00:00, 206.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 103/142 [05:32<01:55,  2.97s/it]detected_ratio_thres_value tensor(0.4138, device='cuda:0')
final masked points tensor(10132, device='cuda:0')
before filtering torch.Size([3, 164401])
after filtering torch.Size([2, 164401])
num_ins_points_after_filtering tensor([5985, 4034], device='cuda:0')
Working on scene0607_00 class file cabinet
masks_to_be_merged [[1, 2, 3, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 32, 33, 35, 36, 38, 41], [8, 29, 30, 31, 64, 65, 66, 67]]

Calculating viewed counts for every point:   0%|          | 0/100 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  26%|██▌       | 26/100 [00:00<00:00, 259.80it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 53/100 [00:00<00:00, 264.49it/s][A
Calculating viewed counts for every point:  80%|████████  | 80/100 [00:00<00:00, 264.64it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  73%|███████▎  | 104/142 [05:33<01:33,  2.46s/it]detected_ratio_thres_value tensor(0.3913, device='cuda:0')
final masked points tensor(9121, device='cuda:0')
before filtering torch.Size([3, 113156])
after filtering torch.Size([1, 113156])
num_ins_points_after_filtering tensor([3976], device='cuda:0')
Working on scene0608_00 class file cabinet
masks_to_be_merged [[1, 3, 6, 8, 10, 12, 13, 14, 15, 17, 19, 22, 24, 26, 28, 30, 31, 138, 142, 143, 145, 146, 148, 149, 150, 151, 152, 164, 165, 166, 167, 168, 211, 212, 213, 214, 215, 216, 218, 219, 221, 224, 226, 228, 229, 230], [7, 9, 11, 16, 18, 20, 21, 23, 27, 29, 32, 33, 34, 35, 39, 41, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [36, 37, 38, 40, 43, 45, 47], [97, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117], [98, 99, 100, 101, 102, 103, 107, 111], [118, 119, 120, 122, 123, 124], [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 153, 154, 155, 157, 159, 161, 163, 231, 232], [156, 158, 160], [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210], [217, 227], [220, 222, 223]]

Calculating viewed counts for every point:   0%|          | 0/339 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 23/339 [00:00<00:01, 222.14it/s][A
Calculating viewed counts for every point:  14%|█▎        | 46/339 [00:00<00:01, 221.41it/s][A
Calculating viewed counts for every point:  20%|██        | 69/339 [00:00<00:01, 222.09it/s][A
Calculating viewed counts for every point:  28%|██▊       | 94/339 [00:00<00:01, 230.89it/s][A
Calculating viewed counts for every point:  35%|███▍      | 118/339 [00:00<00:00, 225.57it/s][A
Calculating viewed counts for every point:  42%|████▏     | 141/339 [00:00<00:00, 223.01it/s][A
Calculating viewed counts for every point:  48%|████▊     | 164/339 [00:00<00:00, 210.41it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 188/339 [00:00<00:00, 219.04it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 211/339 [00:00<00:00, 215.49it/s][A
Calculating viewed counts for every point:  69%|██████▊   | 233/339 [00:01<00:00, 213.66it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 256/339 [00:01<00:00, 217.37it/s][A
Calculating viewed counts for every point:  82%|████████▏ | 279/339 [00:01<00:00, 219.82it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 302/339 [00:01<00:00, 220.14it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 325/339 [00:01<00:00, 220.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  74%|███████▍  | 105/142 [05:41<02:26,  3.95s/it]detected_ratio_thres_value tensor(0.2576, device='cuda:0')
final masked points tensor(9488, device='cuda:0')
before filtering torch.Size([11, 186579])
after filtering torch.Size([5, 186579])
num_ins_points_after_filtering tensor([2165, 2339,  719,  858,  711], device='cuda:0')
Working on scene0609_00 class file cabinet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0616_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 28], [14, 15, 16], [18, 19, 20, 21, 22, 23, 24, 26, 27]]

Calculating viewed counts for every point:   0%|          | 0/304 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 12/304 [00:00<00:02, 110.51it/s][A
Calculating viewed counts for every point:   8%|▊         | 24/304 [00:00<00:02, 107.52it/s][A
Calculating viewed counts for every point:  12%|█▏        | 36/304 [00:00<00:02, 112.55it/s][A
Calculating viewed counts for every point:  16%|█▌        | 49/304 [00:00<00:02, 115.24it/s][A
Calculating viewed counts for every point:  20%|██        | 61/304 [00:00<00:02, 114.42it/s][A
Calculating viewed counts for every point:  24%|██▍       | 73/304 [00:00<00:02, 107.37it/s][A
Calculating viewed counts for every point:  28%|██▊       | 85/304 [00:00<00:02, 109.32it/s][A
Calculating viewed counts for every point:  32%|███▏      | 98/304 [00:00<00:01, 114.82it/s][A
Calculating viewed counts for every point:  36%|███▌      | 110/304 [00:00<00:01, 112.14it/s][A
Calculating viewed counts for every point:  40%|████      | 122/304 [00:01<00:01, 107.20it/s][A
Calculating viewed counts for every point:  45%|████▍     | 136/304 [00:01<00:01, 113.99it/s][A
Calculating viewed counts for every point:  49%|████▊     | 148/304 [00:01<00:01, 113.64it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 161/304 [00:01<00:01, 113.27it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 173/304 [00:01<00:01, 113.98it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 187/304 [00:01<00:00, 119.83it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 200/304 [00:01<00:00, 116.34it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 212/304 [00:01<00:00, 113.37it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 224/304 [00:01<00:00, 112.61it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 238/304 [00:02<00:00, 118.57it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 251/304 [00:02<00:00, 121.20it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 264/304 [00:02<00:00, 114.29it/s][A
Calculating viewed counts for every point:  91%|█████████ | 276/304 [00:02<00:00, 113.51it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 288/304 [00:02<00:00, 111.85it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 300/304 [00:02<00:00, 108.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  75%|███████▌  | 107/142 [05:45<01:45,  3.02s/it]detected_ratio_thres_value tensor(0.1111, device='cuda:0')
final masked points tensor(17534, device='cuda:0')
before filtering torch.Size([3, 310248])
after filtering torch.Size([3, 310248])
num_ins_points_after_filtering tensor([7495,  879, 6926], device='cuda:0')
Working on scene0618_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 13/90 [00:00<00:00, 127.66it/s][A
Calculating viewed counts for every point:  29%|██▉       | 26/90 [00:00<00:00, 120.99it/s][A
Calculating viewed counts for every point:  43%|████▎     | 39/90 [00:00<00:00, 119.56it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 53/90 [00:00<00:00, 123.47it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 66/90 [00:00<00:00, 119.54it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 78/90 [00:00<00:00, 115.32it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  76%|███████▌  | 108/142 [05:46<01:26,  2.54s/it]detected_ratio_thres_value tensor(0.2105, device='cuda:0')
final masked points tensor(6959, device='cuda:0')
before filtering torch.Size([2, 232740])
after filtering torch.Size([2, 232740])
num_ins_points_after_filtering tensor([5350, 1609], device='cuda:0')
Working on scene0621_00 class file cabinet
masks_to_be_merged [[1, 6, 7], [2, 3, 4, 5], [8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 60, 61, 62, 64, 65, 66], [24, 63], [26, 27, 28], [29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43], [35, 44, 45, 46, 47], [48, 49], [56, 57, 58]]

Calculating viewed counts for every point:   0%|          | 0/268 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/268 [00:00<00:01, 170.57it/s][A
Calculating viewed counts for every point:  13%|█▎        | 36/268 [00:00<00:01, 161.24it/s][A
Calculating viewed counts for every point:  20%|█▉        | 53/268 [00:00<00:01, 149.27it/s][A
Calculating viewed counts for every point:  26%|██▌       | 69/268 [00:00<00:01, 146.54it/s][A
Calculating viewed counts for every point:  31%|███▏      | 84/268 [00:00<00:01, 146.80it/s][A
Calculating viewed counts for every point:  37%|███▋      | 100/268 [00:00<00:01, 148.99it/s][A
Calculating viewed counts for every point:  44%|████▎     | 117/268 [00:00<00:00, 154.70it/s][A
Calculating viewed counts for every point:  51%|█████     | 136/268 [00:00<00:00, 163.58it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 153/268 [00:00<00:00, 162.19it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 170/268 [00:01<00:00, 160.85it/s][A
Calculating viewed counts for every point:  70%|███████   | 188/268 [00:01<00:00, 163.75it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 205/268 [00:01<00:00, 163.06it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 222/268 [00:01<00:00, 156.19it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 240/268 [00:01<00:00, 162.63it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 257/268 [00:01<00:00, 160.76it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 109/142 [05:49<01:28,  2.67s/it]detected_ratio_thres_value tensor(0.0896, device='cuda:0')
final masked points tensor(20158, device='cuda:0')
before filtering torch.Size([10, 250821])
after filtering torch.Size([7, 250821])
num_ins_points_after_filtering tensor([ 435, 6733, 3254,  279,  847, 2154,  634], device='cuda:0')
Working on scene0629_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 112, 113, 114, 116, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 32, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 61, 76, 79, 81, 142, 143, 144, 146, 147, 148, 149, 152, 154, 157, 159, 161, 164, 166], [25, 27, 29, 31, 33, 36, 38, 40, 53, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 78, 83, 85, 87, 89, 91, 94, 95, 98, 99, 102, 104, 105, 107, 108, 109, 110, 111, 145, 150, 153, 155, 158, 160, 162, 163, 165, 167, 168, 169, 171, 183, 184, 185], [73, 84], [75, 77, 80, 86, 88], [82, 156], [93, 172], [96, 97, 100, 101, 103], [106, 174, 175, 176, 177, 178, 179, 180, 181, 182], [115, 120, 121, 122, 123, 124, 127], [117, 118, 119], [138, 139], [140, 141]]

Calculating viewed counts for every point:   0%|          | 0/275 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   5%|▌         | 15/275 [00:00<00:01, 147.00it/s][A
Calculating viewed counts for every point:  12%|█▏        | 32/275 [00:00<00:01, 158.45it/s][A
Calculating viewed counts for every point:  17%|█▋        | 48/275 [00:00<00:01, 158.93it/s][A
Calculating viewed counts for every point:  24%|██▍       | 66/275 [00:00<00:01, 163.70it/s][A
Calculating viewed counts for every point:  30%|███       | 83/275 [00:00<00:01, 155.53it/s][A
Calculating viewed counts for every point:  36%|███▋      | 100/275 [00:00<00:01, 159.50it/s][A
Calculating viewed counts for every point:  43%|████▎     | 117/275 [00:00<00:00, 158.13it/s][A
Calculating viewed counts for every point:  48%|████▊     | 133/275 [00:00<00:00, 156.46it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 149/275 [00:00<00:00, 150.61it/s][A
Calculating viewed counts for every point:  60%|██████    | 165/275 [00:01<00:00, 150.91it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 181/275 [00:01<00:00, 145.03it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 197/275 [00:01<00:00, 141.38it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 213/275 [00:01<00:00, 146.00it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 229/275 [00:01<00:00, 149.44it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 245/275 [00:01<00:00, 145.33it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 262/275 [00:01<00:00, 150.37it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  77%|███████▋  | 110/142 [05:54<01:43,  3.24s/it]detected_ratio_thres_value tensor(0.3143, device='cuda:0')
final masked points tensor(14698, device='cuda:0')
before filtering torch.Size([13, 255083])
after filtering torch.Size([4, 255083])
num_ins_points_after_filtering tensor([6028, 2764, 3330,  732], device='cuda:0')
Working on scene0633_00 class file cabinet
masks_to_be_merged [[0, 1, 4, 5, 7, 9, 12, 14, 16, 19, 20, 23, 24, 25, 89, 90, 91, 92, 93, 94, 95, 98, 100, 102, 103, 104, 105, 106, 107, 108, 116, 118, 120, 121, 122], [2, 6, 8, 10, 13, 18, 21, 96, 97, 99, 101, 112, 113, 114, 115, 117, 119], [3, 11, 15, 17, 22, 26, 27, 29, 31, 33, 37, 63, 64, 66, 69, 81, 82, 83, 84, 85, 86, 87, 88, 123, 124, 125, 126, 127, 128, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156], [28, 32, 34, 36, 47, 48, 51, 52, 55, 56, 59, 62, 71, 74, 76, 77, 79, 80, 129, 141, 142, 143, 157, 158], [30, 35, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 53, 54, 57, 58, 60, 61, 65, 67, 68, 70, 72, 73, 75, 78, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], [109, 111]]

Calculating viewed counts for every point:   0%|          | 0/160 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  19%|█▉        | 31/160 [00:00<00:00, 304.80it/s][A
Calculating viewed counts for every point:  39%|███▉      | 63/160 [00:00<00:00, 309.34it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 99/160 [00:00<00:00, 329.90it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 134/160 [00:00<00:00, 335.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  78%|███████▊  | 111/142 [05:56<01:37,  3.13s/it]detected_ratio_thres_value tensor(0.3000, device='cuda:0')
final masked points tensor(22430, device='cuda:0')
before filtering torch.Size([6, 101007])
after filtering torch.Size([4, 101007])
num_ins_points_after_filtering tensor([4974, 4651, 5693, 5795], device='cuda:0')
Working on scene0643_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 27, 105, 107, 109, 110, 111, 112, 113, 114, 115, 118, 122, 123, 125, 127], [14, 15, 16], [22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 44, 46, 49, 104, 108], [37, 38, 39, 40, 41, 43, 45, 47, 48, 50, 51, 52, 53, 99, 100, 101, 102, 103, 106], [55, 56, 57, 58, 59, 61, 64, 67, 90, 92, 93, 94, 95, 96, 97, 98, 149, 150], [60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 85, 137, 138, 144, 145, 146, 147, 148, 154, 155], [75, 76, 77, 78, 83, 84, 139, 140, 141, 142, 143, 151, 152, 153], [87, 88, 89, 91], [116, 117, 119, 120, 124, 126, 128, 129, 130, 161, 162, 164, 166], [131, 133, 134, 135, 136, 156, 157, 158, 159, 160, 163]]

Calculating viewed counts for every point:   0%|          | 0/194 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   9%|▉         | 18/194 [00:00<00:01, 174.12it/s][A
Calculating viewed counts for every point:  20%|█▉        | 38/194 [00:00<00:00, 188.18it/s][A
Calculating viewed counts for every point:  30%|██▉       | 58/194 [00:00<00:00, 191.84it/s][A
Calculating viewed counts for every point:  40%|████      | 78/194 [00:00<00:00, 190.72it/s][A
Calculating viewed counts for every point:  51%|█████     | 98/194 [00:00<00:00, 187.97it/s][A
Calculating viewed counts for every point:  60%|██████    | 117/194 [00:00<00:00, 185.36it/s][A
Calculating viewed counts for every point:  71%|███████   | 137/194 [00:00<00:00, 187.88it/s][A
Calculating viewed counts for every point:  80%|████████  | 156/194 [00:00<00:00, 177.13it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 174/194 [00:00<00:00, 172.34it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 192/194 [00:01<00:00, 171.53it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  79%|███████▉  | 112/142 [06:01<01:43,  3.45s/it]detected_ratio_thres_value tensor(0.3200, device='cuda:0')
final masked points tensor(22926, device='cuda:0')
before filtering torch.Size([10, 167360])
after filtering torch.Size([7, 167360])
num_ins_points_after_filtering tensor([3045, 2930, 2266, 6583, 1997, 4053,  930], device='cuda:0')
Working on scene0644_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [16, 17, 18, 19, 20, 21, 22], [25, 27, 28, 29, 30, 31, 32, 33, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100], [61, 62], [65, 69, 70, 71, 72, 73, 74, 75], [66, 67, 68], [95, 98, 99, 101], [102, 103, 104, 105], [107, 108, 109]]

Calculating viewed counts for every point:   0%|          | 0/201 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 12/201 [00:00<00:01, 116.12it/s][A
Calculating viewed counts for every point:  12%|█▏        | 24/201 [00:00<00:01, 118.00it/s][A
Calculating viewed counts for every point:  18%|█▊        | 36/201 [00:00<00:01, 115.35it/s][A
Calculating viewed counts for every point:  24%|██▍       | 48/201 [00:00<00:01, 111.26it/s][A
Calculating viewed counts for every point:  30%|██▉       | 60/201 [00:00<00:01, 107.32it/s][A
Calculating viewed counts for every point:  36%|███▌      | 72/201 [00:00<00:01, 110.04it/s][A
Calculating viewed counts for every point:  42%|████▏     | 85/201 [00:00<00:01, 113.76it/s][A
Calculating viewed counts for every point:  48%|████▊     | 97/201 [00:00<00:00, 113.30it/s][A
Calculating viewed counts for every point:  54%|█████▍    | 109/201 [00:00<00:00, 108.90it/s][A
Calculating viewed counts for every point:  61%|██████    | 122/201 [00:01<00:00, 113.62it/s][A
Calculating viewed counts for every point:  67%|██████▋   | 134/201 [00:01<00:00, 114.13it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 146/201 [00:01<00:00, 113.15it/s][A
Calculating viewed counts for every point:  79%|███████▊  | 158/201 [00:01<00:00, 108.68it/s][A
Calculating viewed counts for every point:  85%|████████▌ | 171/201 [00:01<00:00, 112.48it/s][A
Calculating viewed counts for every point:  91%|█████████ | 183/201 [00:01<00:00, 113.09it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 195/201 [00:01<00:00, 111.49it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|███████▉  | 113/142 [06:05<01:45,  3.62s/it]detected_ratio_thres_value tensor(0.2059, device='cuda:0')
final masked points tensor(20758, device='cuda:0')
before filtering torch.Size([9, 299472])
after filtering torch.Size([5, 299472])
num_ins_points_after_filtering tensor([ 5166,   683, 10812,  1279,   642], device='cuda:0')
Working on scene0645_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], [13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], [28, 29, 30, 31], [33, 34, 35], [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54], [48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]]

Calculating viewed counts for every point:   0%|          | 0/451 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   2%|▏         | 11/451 [00:00<00:04, 107.81it/s][A
Calculating viewed counts for every point:   5%|▍         | 22/451 [00:00<00:04, 105.27it/s][A
Calculating viewed counts for every point:   8%|▊         | 34/451 [00:00<00:03, 109.10it/s][A
Calculating viewed counts for every point:  10%|▉         | 45/451 [00:00<00:03, 106.48it/s][A
Calculating viewed counts for every point:  12%|█▏        | 56/451 [00:00<00:03, 106.88it/s][A
Calculating viewed counts for every point:  15%|█▍        | 67/451 [00:00<00:03, 105.13it/s][A
Calculating viewed counts for every point:  18%|█▊        | 79/451 [00:00<00:03, 108.07it/s][A
Calculating viewed counts for every point:  20%|█▉        | 90/451 [00:00<00:03, 104.57it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/451 [00:00<00:03, 104.73it/s][A
Calculating viewed counts for every point:  25%|██▍       | 112/451 [00:01<00:03, 104.86it/s][A
Calculating viewed counts for every point:  27%|██▋       | 123/451 [00:01<00:03, 105.27it/s][A
Calculating viewed counts for every point:  30%|██▉       | 134/451 [00:01<00:03, 103.43it/s][A
Calculating viewed counts for every point:  32%|███▏      | 145/451 [00:01<00:03, 100.64it/s][A
Calculating viewed counts for every point:  35%|███▍      | 156/451 [00:01<00:02, 102.56it/s][A
Calculating viewed counts for every point:  37%|███▋      | 167/451 [00:01<00:02, 103.18it/s][A
Calculating viewed counts for every point:  39%|███▉      | 178/451 [00:01<00:02, 100.06it/s][A
Calculating viewed counts for every point:  42%|████▏     | 189/451 [00:01<00:02, 99.68it/s] [A
Calculating viewed counts for every point:  45%|████▍     | 201/451 [00:01<00:02, 105.08it/s][A
Calculating viewed counts for every point:  47%|████▋     | 213/451 [00:02<00:02, 108.81it/s][A
Calculating viewed counts for every point:  50%|████▉     | 225/451 [00:02<00:02, 110.22it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 237/451 [00:02<00:01, 107.19it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 249/451 [00:02<00:01, 109.68it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 261/451 [00:02<00:01, 106.94it/s][A
Calculating viewed counts for every point:  60%|██████    | 272/451 [00:02<00:01, 103.79it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 283/451 [00:02<00:01, 100.32it/s][A
Calculating viewed counts for every point:  65%|██████▌   | 294/451 [00:02<00:01, 100.53it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 305/451 [00:02<00:01, 99.63it/s] [A
Calculating viewed counts for every point:  70%|███████   | 316/451 [00:03<00:01, 101.18it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 328/451 [00:03<00:01, 106.07it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 341/451 [00:03<00:00, 112.23it/s][A
Calculating viewed counts for every point:  78%|███████▊  | 353/451 [00:03<00:00, 112.53it/s][A
Calculating viewed counts for every point:  81%|████████  | 365/451 [00:03<00:00, 113.41it/s][A
Calculating viewed counts for every point:  84%|████████▍ | 378/451 [00:03<00:00, 115.61it/s][A
Calculating viewed counts for every point:  86%|████████▋ | 390/451 [00:03<00:00, 113.17it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 403/451 [00:03<00:00, 115.40it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 415/451 [00:03<00:00, 112.88it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 427/451 [00:04<00:00, 110.49it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 439/451 [00:04<00:00, 108.22it/s][A
Calculating viewed counts for every point: 100%|█████████▉| 450/451 [00:04<00:00, 101.55it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  80%|████████  | 114/142 [06:12<02:09,  4.63s/it]detected_ratio_thres_value tensor(0.2576, device='cuda:0')
final masked points tensor(10064, device='cuda:0')
before filtering torch.Size([7, 352477])
after filtering torch.Size([4, 352477])
num_ins_points_after_filtering tensor([2340, 1160, 1602, 3859], device='cuda:0')
Working on scene0647_00 class file cabinet
masks_to_be_merged [[0, 26, 27, 28], [1, 2, 3, 4, 5], [6, 7, 8], [22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/110 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  17%|█▋        | 19/110 [00:00<00:00, 182.54it/s][A
Calculating viewed counts for every point:  35%|███▍      | 38/110 [00:00<00:00, 175.41it/s][A
Calculating viewed counts for every point:  54%|█████▎    | 59/110 [00:00<00:00, 186.76it/s][A
Calculating viewed counts for every point:  71%|███████   | 78/110 [00:00<00:00, 186.25it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 97/110 [00:00<00:00, 186.74it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  81%|████████  | 115/142 [06:13<01:37,  3.62s/it]detected_ratio_thres_value tensor(0.0851, device='cuda:0')
final masked points tensor(11614, device='cuda:0')
before filtering torch.Size([4, 196185])
after filtering torch.Size([4, 196185])
num_ins_points_after_filtering tensor([1892, 4923,  537, 3830], device='cuda:0')
Working on scene0648_00 class file cabinet
masks_to_be_merged [[0, 2, 3, 4, 5, 164, 165, 166, 167, 168, 171, 173, 215, 216, 217, 218, 219, 220], [1, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 214, 241, 242, 243, 244, 245, 246, 247], [33, 34, 35, 36, 37, 38, 40, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240], [46, 47, 48, 50, 155, 156, 157, 158, 159, 160, 161], [94, 96, 97, 99], [221, 222, 223]]

Calculating viewed counts for every point:   0%|          | 0/419 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   6%|▌         | 24/419 [00:00<00:01, 236.02it/s][A
Calculating viewed counts for every point:  11%|█▏        | 48/419 [00:00<00:01, 232.64it/s][A
Calculating viewed counts for every point:  17%|█▋        | 72/419 [00:00<00:01, 233.92it/s][A
Calculating viewed counts for every point:  23%|██▎       | 98/419 [00:00<00:01, 237.70it/s][A
Calculating viewed counts for every point:  29%|██▉       | 123/419 [00:00<00:01, 239.71it/s][A
Calculating viewed counts for every point:  35%|███▌      | 147/419 [00:00<00:01, 229.83it/s][A
Calculating viewed counts for every point:  41%|████      | 172/419 [00:00<00:01, 236.03it/s][A
Calculating viewed counts for every point:  47%|████▋     | 196/419 [00:00<00:00, 236.29it/s][A
Calculating viewed counts for every point:  53%|█████▎    | 220/419 [00:00<00:00, 232.32it/s][A
Calculating viewed counts for every point:  58%|█████▊    | 244/419 [00:01<00:00, 226.84it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 269/419 [00:01<00:00, 232.99it/s][A
Calculating viewed counts for every point:  70%|██████▉   | 293/419 [00:01<00:00, 233.49it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 317/419 [00:01<00:00, 221.19it/s][A
Calculating viewed counts for every point:  81%|████████  | 340/419 [00:01<00:00, 219.60it/s][A
Calculating viewed counts for every point:  87%|████████▋ | 363/419 [00:01<00:00, 215.10it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 389/419 [00:01<00:00, 225.25it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 412/419 [00:01<00:00, 223.50it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 116/142 [06:21<02:08,  4.93s/it]detected_ratio_thres_value tensor(0.3667, device='cuda:0')
final masked points tensor(13630, device='cuda:0')
before filtering torch.Size([8, 167915])
after filtering torch.Size([4, 167915])
num_ins_points_after_filtering tensor([ 608, 4632, 3435, 2687], device='cuda:0')
Working on scene0651_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 20, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69], [3, 4, 6, 8, 21, 23, 63, 65], [17, 18, 22, 25, 32, 67], [19, 24], [26, 28, 29, 31], [27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [50, 51]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/104 [00:00<00:00, 259.66it/s][A
Calculating viewed counts for every point:  50%|█████     | 52/104 [00:00<00:00, 255.66it/s][A
Calculating viewed counts for every point:  75%|███████▌  | 78/104 [00:00<00:00, 230.85it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 102/104 [00:00<00:00, 225.11it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  82%|████████▏ | 117/142 [06:22<01:37,  3.89s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(8139, device='cuda:0')
before filtering torch.Size([7, 88450])
after filtering torch.Size([3, 88450])
num_ins_points_after_filtering tensor([3811,  871, 2637], device='cuda:0')
Working on scene0652_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], [40, 41, 42, 43, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 132], [52, 53], [54, 55, 58], [127, 128, 129]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▎       | 34/144 [00:00<00:00, 332.50it/s][A
Calculating viewed counts for every point:  48%|████▊     | 69/144 [00:00<00:00, 338.88it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 103/144 [00:00<00:00, 338.22it/s][A
Calculating viewed counts for every point:  95%|█████████▌| 137/144 [00:00<00:00, 324.68it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  83%|████████▎ | 118/142 [06:25<01:25,  3.56s/it]detected_ratio_thres_value tensor(0.5455, device='cuda:0')
final masked points tensor(8248, device='cuda:0')
before filtering torch.Size([5, 100286])
after filtering torch.Size([1, 100286])
num_ins_points_after_filtering tensor([5652], device='cuda:0')
Working on scene0653_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], [5, 10, 131, 134, 139], [14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46, 47], [17, 19], [48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 69, 70, 74, 75, 77, 79, 82, 85, 87, 89, 91, 93, 95, 97, 98, 100, 102, 105, 108, 110, 112, 113, 115, 118, 119, 121, 123, 124, 125, 126, 128, 130, 132, 136, 137, 141], [59, 61, 63, 65, 68, 72, 76, 78, 81, 84, 96, 99], [67, 71, 73, 80, 83, 86, 88, 90, 92, 94, 103, 104, 106, 107, 109, 111, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 215, 216, 217, 233, 235, 238, 242, 248], [114, 116, 117, 122, 127, 129, 133, 135, 138, 140, 142], [183, 218, 220, 221, 223], [184, 185, 192, 198, 199, 203, 204, 205, 206, 208, 209, 211, 212, 213, 219], [186, 187, 189, 191, 193, 194, 195, 196, 197, 200, 201, 202, 207, 210], [188, 190], [222, 225, 227, 228, 230, 236, 240, 244, 246, 252, 254, 256, 262, 263, 265, 268, 269], [226, 229, 231, 234, 237, 241, 243, 249, 250, 253, 255, 261, 264, 266, 267, 270, 272, 295, 296, 298, 300], [232, 239, 245, 247, 251], [257, 260], [258, 259], [271, 273, 274, 275, 276, 277, 278, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], [279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 301, 303], [283, 287], [284, 285, 286], [297, 299], [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333], [329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 372, 373, 374, 375, 376, 377, 378, 379, 380, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399], [332, 334, 335, 336, 337, 338], [348, 350, 354, 356, 357, 358, 359, 360, 361, 364, 370, 371], [349, 351, 352, 353, 355], [362, 363, 365, 366, 367, 368, 369], [381, 382, 383]]

Calculating viewed counts for every point:   0%|          | 0/388 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▎         | 14/388 [00:00<00:02, 139.70it/s][A
Calculating viewed counts for every point:   8%|▊         | 30/388 [00:00<00:02, 147.42it/s][A
Calculating viewed counts for every point:  12%|█▏        | 45/388 [00:00<00:02, 146.34it/s][A
Calculating viewed counts for every point:  15%|█▌        | 60/388 [00:00<00:02, 147.46it/s][A
Calculating viewed counts for every point:  19%|█▉        | 75/388 [00:00<00:02, 146.21it/s][A
Calculating viewed counts for every point:  23%|██▎       | 90/388 [00:00<00:02, 146.84it/s][A
Calculating viewed counts for every point:  27%|██▋       | 105/388 [00:00<00:01, 146.46it/s][A
Calculating viewed counts for every point:  31%|███       | 120/388 [00:00<00:01, 147.09it/s][A
Calculating viewed counts for every point:  35%|███▍      | 135/388 [00:00<00:01, 143.91it/s][A
Calculating viewed counts for every point:  39%|███▉      | 151/388 [00:01<00:01, 146.85it/s][A
Calculating viewed counts for every point:  43%|████▎     | 166/388 [00:01<00:01, 144.58it/s][A
Calculating viewed counts for every point:  47%|████▋     | 182/388 [00:01<00:01, 146.64it/s][A
Calculating viewed counts for every point:  51%|█████     | 197/388 [00:01<00:01, 144.52it/s][A
Calculating viewed counts for every point:  55%|█████▌    | 214/388 [00:01<00:01, 150.20it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 230/388 [00:01<00:01, 147.48it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 247/388 [00:01<00:00, 151.78it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 263/388 [00:01<00:00, 149.08it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 278/388 [00:01<00:00, 148.32it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 293/388 [00:02<00:00, 143.28it/s][A
Calculating viewed counts for every point:  80%|███████▉  | 309/388 [00:02<00:00, 147.79it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 324/388 [00:02<00:00, 143.39it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 340/388 [00:02<00:00, 147.22it/s][A
Calculating viewed counts for every point:  91%|█████████▏| 355/388 [00:02<00:00, 146.20it/s][A
Calculating viewed counts for every point:  96%|█████████▌| 372/388 [00:02<00:00, 150.67it/s][A
Calculating viewed counts for every point: 100%|██████████| 388/388 [00:02<00:00, 145.91it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  84%|████████▍ | 119/142 [06:44<03:06,  8.11s/it]detected_ratio_thres_value tensor(0.2931, device='cuda:0')
final masked points tensor(18797, device='cuda:0')
before filtering torch.Size([29, 284951])
after filtering torch.Size([10, 284951])
num_ins_points_after_filtering tensor([1625,  785,  848, 2639,  885, 1190, 1229, 1655, 1812, 3330],
       device='cuda:0')
Working on scene0655_00 class file cabinet
masks_to_be_merged [[1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/111 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  14%|█▍        | 16/111 [00:00<00:00, 156.16it/s][A
Calculating viewed counts for every point:  32%|███▏      | 35/111 [00:00<00:00, 170.33it/s][A
Calculating viewed counts for every point:  48%|████▊     | 53/111 [00:00<00:00, 172.74it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 73/111 [00:00<00:00, 182.45it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 95/111 [00:00<00:00, 193.36it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  85%|████████▍ | 120/142 [06:45<02:10,  5.91s/it]detected_ratio_thres_value tensor(0.1053, device='cuda:0')
final masked points tensor(5408, device='cuda:0')
before filtering torch.Size([1, 139138])
after filtering torch.Size([1, 139138])
num_ins_points_after_filtering tensor([4111], device='cuda:0')
Working on scene0658_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18], [1, 3, 5, 6, 9], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], [33, 34, 35, 36, 37, 38, 39, 40], [41, 42, 43, 44, 45, 46, 47, 48, 49, 50]]

Calculating viewed counts for every point:   0%|          | 0/55 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  33%|███▎      | 18/55 [00:00<00:00, 177.78it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 40/55 [00:00<00:00, 197.80it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  85%|████████▌ | 121/142 [06:46<01:33,  4.46s/it]detected_ratio_thres_value tensor(0.3125, device='cuda:0')
final masked points tensor(22428, device='cuda:0')
before filtering torch.Size([5, 129951])
after filtering torch.Size([5, 129951])
num_ins_points_after_filtering tensor([1838, 2217, 4318, 9998, 4057], device='cuda:0')
Working on scene0660_00 class file cabinet
No 3d masks detected in backprojection!
Working on scene0663_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 123, 132, 133, 134, 135, 136, 137, 139, 235, 236, 237, 238], [6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 143, 144, 146, 147, 148, 149, 151, 153], [30, 31, 32, 138, 140, 141, 142, 145], [33, 34], [36, 37, 38, 39, 40, 41], [53, 55, 57], [54, 56], [74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204], [87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 230, 231, 233], [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131], [163, 165], [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229]]

Calculating viewed counts for every point:   0%|          | 0/295 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 23/295 [00:00<00:01, 221.92it/s][A
Calculating viewed counts for every point:  16%|█▌        | 46/295 [00:00<00:01, 218.67it/s][A
Calculating viewed counts for every point:  23%|██▎       | 69/295 [00:00<00:01, 220.93it/s][A
Calculating viewed counts for every point:  32%|███▏      | 95/295 [00:00<00:00, 235.01it/s][A
Calculating viewed counts for every point:  40%|████      | 119/295 [00:00<00:00, 226.45it/s][A
Calculating viewed counts for every point:  48%|████▊     | 142/295 [00:00<00:00, 224.12it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 165/295 [00:00<00:00, 223.15it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 190/295 [00:00<00:00, 228.65it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 216/295 [00:00<00:00, 237.81it/s][A
Calculating viewed counts for every point:  81%|████████▏ | 240/295 [00:01<00:00, 222.66it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 263/295 [00:01<00:00, 219.57it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 289/295 [00:01<00:00, 229.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 123/142 [06:53<01:18,  4.11s/it]detected_ratio_thres_value tensor(0.3415, device='cuda:0')
final masked points tensor(34196, device='cuda:0')
before filtering torch.Size([13, 184428])
after filtering torch.Size([6, 184428])
num_ins_points_after_filtering tensor([  844,  2420,  2148, 13304, 10102,  3941], device='cuda:0')
Working on scene0664_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]]

Calculating viewed counts for every point:   0%|          | 0/144 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  24%|██▎       | 34/144 [00:00<00:00, 333.11it/s][A
Calculating viewed counts for every point:  49%|████▉     | 71/144 [00:00<00:00, 349.59it/s][A
Calculating viewed counts for every point:  74%|███████▎  | 106/144 [00:00<00:00, 338.08it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 140/144 [00:00<00:00, 320.98it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  87%|████████▋ | 124/142 [06:54<00:59,  3.31s/it]detected_ratio_thres_value tensor(0.3182, device='cuda:0')
final masked points tensor(3513, device='cuda:0')
before filtering torch.Size([2, 44585])
after filtering torch.Size([2, 44585])
num_ins_points_after_filtering tensor([1207, 2306], device='cuda:0')
Working on scene0665_00 class file cabinet
masks_to_be_merged [[0, 2, 4, 6, 8], [1, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], [18, 19, 20, 21, 22, 23, 24]]

Calculating viewed counts for every point:   0%|          | 0/104 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  12%|█▎        | 13/104 [00:00<00:00, 121.67it/s][A
Calculating viewed counts for every point:  25%|██▌       | 26/104 [00:00<00:00, 123.89it/s][A
Calculating viewed counts for every point:  38%|███▊      | 39/104 [00:00<00:00, 126.12it/s][A
Calculating viewed counts for every point:  51%|█████     | 53/104 [00:00<00:00, 126.41it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 66/104 [00:00<00:00, 125.06it/s][A
Calculating viewed counts for every point:  76%|███████▌  | 79/104 [00:00<00:00, 121.57it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 92/104 [00:00<00:00, 123.44it/s][A
                                                                                            [AProjecting 2d masks to 3d point cloud:  88%|████████▊ | 125/142 [06:55<00:47,  2.79s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(14204, device='cuda:0')
before filtering torch.Size([3, 252726])
after filtering torch.Size([3, 252726])
num_ins_points_after_filtering tensor([1836, 5438, 6930], device='cuda:0')
Working on scene0670_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 161, 162, 163, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 209, 211, 213, 215, 216, 217, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319], [6, 10, 13, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 39, 43, 260], [14, 16, 17, 19, 54, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 337, 344, 347, 350, 353], [32, 36, 38, 40, 41, 42, 44, 45, 46, 47, 50, 60, 62, 64, 66, 67, 68, 71, 75, 77, 80, 84, 355, 356, 357, 358, 360, 366], [34, 48, 49, 52, 55, 57, 59, 61, 63, 65, 339, 341, 342, 345, 348, 351, 359, 361, 362, 363, 364, 365, 367], [51, 53, 56, 58, 331, 333, 336, 338, 340, 343, 346, 349, 352, 354], [69, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 153], [155, 156, 157, 158, 159, 160], [164, 165, 166, 167, 168, 169, 171, 187, 188, 196, 197, 205, 207, 208, 210, 212, 214, 222, 223, 228], [170, 172], [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230], [293, 294, 295, 296, 297, 298, 299]]

Calculating viewed counts for every point:   0%|          | 0/303 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 25/303 [00:00<00:01, 240.67it/s][A
Calculating viewed counts for every point:  17%|█▋        | 50/303 [00:00<00:01, 212.97it/s][A
Calculating viewed counts for every point:  25%|██▍       | 75/303 [00:00<00:01, 226.95it/s][A
Calculating viewed counts for every point:  32%|███▏      | 98/303 [00:00<00:00, 224.85it/s][A
Calculating viewed counts for every point:  41%|████      | 124/303 [00:00<00:00, 236.38it/s][A
Calculating viewed counts for every point:  49%|████▉     | 148/303 [00:00<00:00, 232.93it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 172/303 [00:00<00:00, 234.07it/s][A
Calculating viewed counts for every point:  65%|██████▍   | 196/303 [00:00<00:00, 232.35it/s][A
Calculating viewed counts for every point:  73%|███████▎  | 221/303 [00:00<00:00, 235.95it/s][A
Calculating viewed counts for every point:  81%|████████  | 245/303 [00:01<00:00, 226.52it/s][A
Calculating viewed counts for every point:  89%|████████▉ | 271/303 [00:01<00:00, 236.21it/s][A
Calculating viewed counts for every point:  98%|█████████▊| 297/303 [00:01<00:00, 241.93it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  89%|████████▊ | 126/142 [07:08<01:27,  5.48s/it]detected_ratio_thres_value tensor(0.3710, device='cuda:0')
final masked points tensor(28220, device='cuda:0')
before filtering torch.Size([12, 176038])
after filtering torch.Size([6, 176038])
num_ins_points_after_filtering tensor([3162, 4553,  875,  661, 4808, 9801], device='cuda:0')
Working on scene0671_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3]]

Calculating viewed counts for every point:   0%|          | 0/78 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  36%|███▌      | 28/78 [00:00<00:00, 276.21it/s][A
Calculating viewed counts for every point:  81%|████████  | 63/78 [00:00<00:00, 318.01it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  89%|████████▉ | 127/142 [07:09<01:01,  4.07s/it]detected_ratio_thres_value tensor(0.0476, device='cuda:0')
final masked points tensor(3799, device='cuda:0')
before filtering torch.Size([1, 81469])
after filtering torch.Size([1, 81469])
num_ins_points_after_filtering tensor([3695], device='cuda:0')
Working on scene0678_00 class file cabinet
masks_to_be_merged [[0, 3, 5, 12, 14, 15, 16, 17, 18, 96, 97, 98, 99, 100, 101, 102], [1, 2, 4, 6, 7, 8, 10, 11, 13], [9, 69, 70, 74, 76, 78, 79, 81, 113, 114, 115, 116, 117, 120, 125, 128], [19, 20, 21, 22, 23, 105, 106, 107, 108, 109, 110], [24, 25, 111], [26, 27, 28], [29, 34, 36, 38, 40, 43, 44], [30, 31, 32, 33, 35, 37, 39, 41, 42, 48, 50], [45, 46, 47, 49, 51, 52], [53, 54, 55, 56, 57, 58, 60, 61], [59, 62, 63, 65, 66, 68, 72, 118, 119, 121, 122, 123, 124], [64, 67, 71, 73, 75, 77, 80, 82, 83, 84, 85, 86, 87, 126, 127, 129, 130, 131, 132, 133, 134], [88, 135], [91, 92, 93], [94, 95], [103, 104]]

Calculating viewed counts for every point:   0%|          | 0/245 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 11/245 [00:00<00:02, 102.30it/s][A
Calculating viewed counts for every point:   9%|▉         | 22/245 [00:00<00:02, 97.97it/s] [A
Calculating viewed counts for every point:  13%|█▎        | 32/245 [00:00<00:02, 92.22it/s][A
Calculating viewed counts for every point:  17%|█▋        | 42/245 [00:00<00:02, 94.29it/s][A
Calculating viewed counts for every point:  22%|██▏       | 53/245 [00:00<00:01, 97.15it/s][A
Calculating viewed counts for every point:  26%|██▌       | 64/245 [00:00<00:01, 100.92it/s][A
Calculating viewed counts for every point:  31%|███       | 75/245 [00:00<00:01, 101.61it/s][A
Calculating viewed counts for every point:  35%|███▌      | 86/245 [00:00<00:01, 97.29it/s] [A
Calculating viewed counts for every point:  40%|███▉      | 97/245 [00:00<00:01, 99.41it/s][A
Calculating viewed counts for every point:  44%|████▎     | 107/245 [00:01<00:01, 96.53it/s][A
Calculating viewed counts for every point:  48%|████▊     | 117/245 [00:01<00:01, 92.53it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 128/245 [00:01<00:01, 95.34it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 139/245 [00:01<00:01, 97.13it/s][A
Calculating viewed counts for every point:  61%|██████    | 150/245 [00:01<00:00, 100.13it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 161/245 [00:01<00:00, 102.60it/s][A
Calculating viewed counts for every point:  70%|███████   | 172/245 [00:01<00:00, 104.60it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 183/245 [00:01<00:00, 100.75it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 194/245 [00:01<00:00, 101.61it/s][A
Calculating viewed counts for every point:  84%|████████▎ | 205/245 [00:02<00:00, 97.07it/s] [A
Calculating viewed counts for every point:  88%|████████▊ | 215/245 [00:02<00:00, 96.73it/s][A
Calculating viewed counts for every point:  92%|█████████▏| 225/245 [00:02<00:00, 97.13it/s][A
Calculating viewed counts for every point:  96%|█████████▋| 236/245 [00:02<00:00, 100.35it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  90%|█████████ | 128/142 [07:14<01:03,  4.55s/it]detected_ratio_thres_value tensor(0.2143, device='cuda:0')
final masked points tensor(53125, device='cuda:0')
before filtering torch.Size([16, 364811])
after filtering torch.Size([11, 364811])
num_ins_points_after_filtering tensor([ 2953,   921, 17677,  2136,  7548,  5459,  7987,  1621,  3386,  2414,
          244], device='cuda:0')
Working on scene0684_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 6, 7, 9, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75], [5, 8, 10, 59, 61, 73, 79], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 94, 95]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  39%|███▉      | 34/87 [00:00<00:00, 335.24it/s][A
Calculating viewed counts for every point:  80%|████████  | 70/87 [00:00<00:00, 347.78it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  91%|█████████ | 129/142 [07:16<00:47,  3.65s/it]detected_ratio_thres_value tensor(0.3571, device='cuda:0')
final masked points tensor(6075, device='cuda:0')
before filtering torch.Size([4, 41364])
after filtering torch.Size([3, 41364])
num_ins_points_after_filtering tensor([1130, 1723, 2983], device='cuda:0')
Working on scene0685_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 22, 144, 149, 150, 151, 152, 153, 154, 156, 158, 160, 163, 171, 174, 175, 177, 178, 179], [15, 17, 19, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33], [34, 35, 36, 39, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 91], [37, 38, 40, 42, 47, 49], [87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105], [102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 122], [115, 117], [116, 118, 121, 123, 126, 127, 128, 131, 132, 146], [124, 125, 148], [129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147], [155, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173]]

Calculating viewed counts for every point:   0%|          | 0/196 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  15%|█▌        | 30/196 [00:00<00:00, 291.05it/s][A
Calculating viewed counts for every point:  31%|███       | 60/196 [00:00<00:00, 257.17it/s][A
Calculating viewed counts for every point:  44%|████▍     | 86/196 [00:00<00:00, 257.01it/s][A
Calculating viewed counts for every point:  57%|█████▋    | 112/196 [00:00<00:00, 257.01it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 141/196 [00:00<00:00, 268.36it/s][A
Calculating viewed counts for every point:  86%|████████▌ | 169/196 [00:00<00:00, 272.17it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 130/142 [07:20<00:47,  3.93s/it]detected_ratio_thres_value tensor(0.4167, device='cuda:0')
final masked points tensor(23059, device='cuda:0')
before filtering torch.Size([11, 132720])
after filtering torch.Size([4, 132720])
num_ins_points_after_filtering tensor([ 2927, 11912,  1826,  2730], device='cuda:0')
Working on scene0686_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], [38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], [44, 46, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78]]

Calculating viewed counts for every point:   0%|          | 0/153 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  13%|█▎        | 20/153 [00:00<00:00, 195.69it/s][A
Calculating viewed counts for every point:  29%|██▉       | 44/153 [00:00<00:00, 219.69it/s][A
Calculating viewed counts for every point:  44%|████▍     | 68/153 [00:00<00:00, 228.64it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 91/153 [00:00<00:00, 220.93it/s][A
Calculating viewed counts for every point:  75%|███████▍  | 114/153 [00:00<00:00, 220.30it/s][A
Calculating viewed counts for every point:  91%|█████████ | 139/153 [00:00<00:00, 228.33it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  92%|█████████▏| 131/142 [07:22<00:36,  3.31s/it]detected_ratio_thres_value tensor(0.3810, device='cuda:0')
final masked points tensor(6729, device='cuda:0')
before filtering torch.Size([4, 89776])
after filtering torch.Size([4, 89776])
num_ins_points_after_filtering tensor([ 533, 3132, 1697, 1367], device='cuda:0')
Working on scene0689_00 class file cabinet
masks_to_be_merged [[3, 4], [8, 9]]

Calculating viewed counts for every point:   0%|          | 0/87 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  28%|██▊       | 24/87 [00:00<00:00, 236.01it/s][A
Calculating viewed counts for every point:  60%|█████▉    | 52/87 [00:00<00:00, 259.01it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 78/87 [00:00<00:00, 258.04it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  93%|█████████▎| 132/142 [07:23<00:25,  2.51s/it]detected_ratio_thres_value tensor(0.1429, device='cuda:0')
final masked points tensor(1653, device='cuda:0')
before filtering torch.Size([2, 122129])
after filtering torch.Size([2, 122129])
num_ins_points_after_filtering tensor([626, 849], device='cuda:0')
Working on scene0690_00 class file cabinet
masks_to_be_merged [[2, 3], [7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50], [15, 17]]

Calculating viewed counts for every point:   0%|          | 0/90 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  34%|███▍      | 31/90 [00:00<00:00, 301.96it/s][A
Calculating viewed counts for every point:  69%|██████▉   | 62/90 [00:00<00:00, 297.57it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  94%|█████████▎| 133/142 [07:24<00:18,  2.00s/it]detected_ratio_thres_value tensor(0.3846, device='cuda:0')
final masked points tensor(31973, device='cuda:0')
before filtering torch.Size([3, 106050])
after filtering torch.Size([1, 106050])
num_ins_points_after_filtering tensor([31961], device='cuda:0')
Working on scene0693_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94]]

Calculating viewed counts for every point:   0%|          | 0/174 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  20%|█▉        | 34/174 [00:00<00:00, 337.55it/s][A
Calculating viewed counts for every point:  39%|███▉      | 68/174 [00:00<00:00, 332.09it/s][A
Calculating viewed counts for every point:  59%|█████▊    | 102/174 [00:00<00:00, 312.60it/s][A
Calculating viewed counts for every point:  79%|███████▉  | 138/174 [00:00<00:00, 329.08it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 172/174 [00:00<00:00, 319.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  94%|█████████▍| 134/142 [07:25<00:15,  1.95s/it]detected_ratio_thres_value tensor(0.6316, device='cuda:0')
final masked points tensor(2269, device='cuda:0')
before filtering torch.Size([1, 41327])
after filtering torch.Size([1, 41327])
num_ins_points_after_filtering tensor([2269], device='cuda:0')
Working on scene0695_00 class file cabinet
masks_to_be_merged [[0, 22, 23], [1, 2, 3, 4, 5], [6, 24, 25, 26, 27], [9, 11, 13, 31, 32, 33, 34, 35, 36, 39], [10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38], [41, 42, 43, 44]]

Calculating viewed counts for every point:   0%|          | 0/182 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 19/182 [00:00<00:00, 188.29it/s][A
Calculating viewed counts for every point:  21%|██        | 38/182 [00:00<00:00, 174.60it/s][A
Calculating viewed counts for every point:  32%|███▏      | 59/182 [00:00<00:00, 187.10it/s][A
Calculating viewed counts for every point:  47%|████▋     | 86/182 [00:00<00:00, 216.75it/s][A
Calculating viewed counts for every point:  62%|██████▏   | 112/182 [00:00<00:00, 230.45it/s][A
Calculating viewed counts for every point:  77%|███████▋  | 140/182 [00:00<00:00, 246.70it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 170/182 [00:00<00:00, 260.60it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  95%|█████████▌| 135/142 [07:27<00:12,  1.79s/it]detected_ratio_thres_value tensor(0.2083, device='cuda:0')
final masked points tensor(10940, device='cuda:0')
before filtering torch.Size([6, 133418])
after filtering torch.Size([5, 133418])
num_ins_points_after_filtering tensor([ 338, 4761, 1737, 1981,  960], device='cuda:0')
Working on scene0696_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 7, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80], [6, 8, 9, 72, 90], [12, 13, 14, 15, 17, 19, 21, 23, 25, 27, 81], [16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 82, 83, 84, 85], [48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61], [51, 58], [86, 87, 88, 89]]

Calculating viewed counts for every point:   0%|          | 0/130 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  10%|█         | 13/130 [00:00<00:00, 122.09it/s][A
Calculating viewed counts for every point:  20%|██        | 26/130 [00:00<00:00, 125.73it/s][A
Calculating viewed counts for every point:  30%|███       | 39/130 [00:00<00:00, 127.19it/s][A
Calculating viewed counts for every point:  40%|████      | 52/130 [00:00<00:00, 120.20it/s][A
Calculating viewed counts for every point:  50%|█████     | 65/130 [00:00<00:00, 120.34it/s][A
Calculating viewed counts for every point:  60%|██████    | 78/130 [00:00<00:00, 120.02it/s][A
Calculating viewed counts for every point:  70%|███████   | 91/130 [00:00<00:00, 122.74it/s][A
Calculating viewed counts for every point:  80%|████████  | 104/130 [00:00<00:00, 124.56it/s][A
Calculating viewed counts for every point:  90%|█████████ | 117/130 [00:00<00:00, 121.27it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▌| 136/142 [07:30<00:12,  2.06s/it]detected_ratio_thres_value tensor(0.3056, device='cuda:0')
final masked points tensor(15960, device='cuda:0')
before filtering torch.Size([7, 231067])
after filtering torch.Size([4, 231067])
num_ins_points_after_filtering tensor([2888, 3223, 7869, 1917], device='cuda:0')
Working on scene0697_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 68, 69, 70, 71, 72, 73, 74, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], [22, 109, 111, 114, 118, 121], [23, 24, 25, 107, 108, 112], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 113, 115, 117, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], [39, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], [54, 55, 75, 76, 217, 219, 221, 223, 229, 231], [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 212, 213, 214, 215, 216, 218, 220, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], [79, 80, 81, 83, 85, 87, 88], [82, 84, 86], [110, 116, 119], [208, 209]]

Calculating viewed counts for every point:   0%|          | 0/288 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  11%|█         | 32/288 [00:00<00:00, 318.11it/s][A
Calculating viewed counts for every point:  22%|██▏       | 64/288 [00:00<00:00, 284.09it/s][A
Calculating viewed counts for every point:  32%|███▏      | 93/288 [00:00<00:00, 284.89it/s][A
Calculating viewed counts for every point:  42%|████▏     | 122/288 [00:00<00:00, 270.32it/s][A
Calculating viewed counts for every point:  52%|█████▏    | 150/288 [00:00<00:00, 272.70it/s][A
Calculating viewed counts for every point:  64%|██████▍   | 184/288 [00:00<00:00, 294.24it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 214/288 [00:00<00:00, 285.49it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 244/288 [00:00<00:00, 288.04it/s][A
Calculating viewed counts for every point:  95%|█████████▍| 273/288 [00:00<00:00, 276.58it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  96%|█████████▋| 137/142 [07:36<00:16,  3.33s/it]detected_ratio_thres_value tensor(0.4054, device='cuda:0')
final masked points tensor(13954, device='cuda:0')
before filtering torch.Size([12, 139300])
after filtering torch.Size([6, 139300])
num_ins_points_after_filtering tensor([1474, 3463, 1979, 3858,  925,  952], device='cuda:0')
Working on scene0699_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 148, 150, 151, 157, 158, 159, 160, 161, 163, 164, 166, 174, 176, 177], [30, 34, 35], [31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106], [107, 108, 109], [110, 111, 112], [126, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149], [152, 153, 154, 155, 156], [162, 165, 167, 168, 170, 171, 172, 173, 175]]

Calculating viewed counts for every point:   0%|          | 0/220 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   8%|▊         | 17/220 [00:00<00:01, 167.01it/s][A
Calculating viewed counts for every point:  16%|█▋        | 36/220 [00:00<00:01, 176.70it/s][A
Calculating viewed counts for every point:  26%|██▋       | 58/220 [00:00<00:00, 193.48it/s][A
Calculating viewed counts for every point:  36%|███▌      | 79/220 [00:00<00:00, 197.03it/s][A
Calculating viewed counts for every point:  45%|████▌     | 100/220 [00:00<00:00, 198.27it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 120/220 [00:00<00:00, 196.51it/s][A
Calculating viewed counts for every point:  64%|██████▎   | 140/220 [00:00<00:00, 188.81it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 159/220 [00:00<00:00, 186.97it/s][A
Calculating viewed counts for every point:  81%|████████  | 178/220 [00:00<00:00, 187.53it/s][A
Calculating viewed counts for every point:  90%|████████▉ | 197/220 [00:01<00:00, 187.17it/s][A
Calculating viewed counts for every point:  99%|█████████▊| 217/220 [00:01<00:00, 190.44it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  97%|█████████▋| 138/142 [07:40<00:14,  3.65s/it]detected_ratio_thres_value tensor(0.3864, device='cuda:0')
final masked points tensor(9895, device='cuda:0')
before filtering torch.Size([9, 153041])
after filtering torch.Size([5, 153041])
num_ins_points_after_filtering tensor([3556, 1516, 1133,  953, 1961], device='cuda:0')
Working on scene0700_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 137, 138, 166], [9, 10, 11, 12, 13, 15, 16, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], [14, 17, 18, 191, 193], [19, 20, 21, 22], [110, 111, 119], [121, 133, 134, 135, 136], [122, 123, 124, 125, 126, 127, 128, 129, 130, 131], [139, 140, 141, 142, 143, 155, 156, 157, 159, 161], [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], [158, 160, 162, 163], [167, 168]]

Calculating viewed counts for every point:   0%|          | 0/459 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   4%|▍         | 18/459 [00:00<00:02, 175.66it/s][A
Calculating viewed counts for every point:   8%|▊         | 38/459 [00:00<00:02, 187.11it/s][A
Calculating viewed counts for every point:  13%|█▎        | 58/459 [00:00<00:02, 189.77it/s][A
Calculating viewed counts for every point:  17%|█▋        | 79/459 [00:00<00:01, 194.35it/s][A
Calculating viewed counts for every point:  22%|██▏       | 101/459 [00:00<00:01, 200.73it/s][A
Calculating viewed counts for every point:  27%|██▋       | 123/459 [00:00<00:01, 206.13it/s][A
Calculating viewed counts for every point:  31%|███▏      | 144/459 [00:00<00:01, 199.85it/s][A
Calculating viewed counts for every point:  36%|███▋      | 167/459 [00:00<00:01, 207.19it/s][A
Calculating viewed counts for every point:  41%|████      | 188/459 [00:00<00:01, 199.85it/s][A
Calculating viewed counts for every point:  46%|████▌     | 209/459 [00:01<00:01, 201.25it/s][A
Calculating viewed counts for every point:  50%|█████     | 230/459 [00:01<00:01, 202.28it/s][A
Calculating viewed counts for every point:  55%|█████▍    | 251/459 [00:01<00:01, 197.79it/s][A
Calculating viewed counts for every point:  59%|█████▉    | 271/459 [00:01<00:00, 189.28it/s][A
Calculating viewed counts for every point:  63%|██████▎   | 291/459 [00:01<00:00, 189.99it/s][A
Calculating viewed counts for every point:  68%|██████▊   | 311/459 [00:01<00:00, 187.38it/s][A
Calculating viewed counts for every point:  72%|███████▏  | 330/459 [00:01<00:00, 181.35it/s][A
Calculating viewed counts for every point:  76%|███████▋  | 350/459 [00:01<00:00, 186.23it/s][A
Calculating viewed counts for every point:  80%|████████  | 369/459 [00:01<00:00, 183.82it/s][A
Calculating viewed counts for every point:  85%|████████▍ | 388/459 [00:02<00:00, 174.03it/s][A
Calculating viewed counts for every point:  88%|████████▊ | 406/459 [00:02<00:00, 172.28it/s][A
Calculating viewed counts for every point:  93%|█████████▎| 426/459 [00:02<00:00, 178.84it/s][A
Calculating viewed counts for every point:  97%|█████████▋| 444/459 [00:02<00:00, 178.14it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud:  98%|█████████▊| 139/142 [07:48<00:14,  4.82s/it]detected_ratio_thres_value tensor(0.3273, device='cuda:0')
final masked points tensor(24737, device='cuda:0')
before filtering torch.Size([11, 167755])
after filtering torch.Size([5, 167755])
num_ins_points_after_filtering tensor([13487,  2290,  2411,  3584,  1076], device='cuda:0')
Working on scene0701_00 class file cabinet
masks_to_be_merged []
No 3d masks detected after aggregation
Working on scene0702_00 class file cabinet
masks_to_be_merged [[1, 2], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]]

Calculating viewed counts for every point:   0%|          | 0/84 [00:00<?, ?it/s][A
Calculating viewed counts for every point:  37%|███▋      | 31/84 [00:00<00:00, 301.10it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 62/84 [00:00<00:00, 289.86it/s][A
                                                                                           [AProjecting 2d masks to 3d point cloud:  99%|█████████▉| 141/142 [07:48<00:02,  2.71s/it]detected_ratio_thres_value tensor(0.1818, device='cuda:0')
final masked points tensor(3856, device='cuda:0')
before filtering torch.Size([2, 54769])
after filtering torch.Size([2, 54769])
num_ins_points_after_filtering tensor([ 143, 2491], device='cuda:0')
Working on scene0704_00 class file cabinet
masks_to_be_merged [[0, 1, 2, 4, 6, 9, 19, 21, 23, 25], [3, 5], [14, 16], [22, 24, 26], [32, 57, 58, 59], [34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 61, 62, 63], [35, 39], [52, 56], [66, 70], [67, 71, 73, 75, 77, 79, 81, 87, 88], [68, 76, 86, 89, 136, 139], [69, 72, 74], [91, 130], [92, 129], [93, 94, 95, 97, 98, 99, 128], [106, 107, 108, 109, 110, 179, 180, 216, 219, 221, 222], [113, 115, 116, 118, 119], [132, 134], [137, 138, 141, 142, 143, 189, 190, 191, 192, 195, 200, 201, 202, 203], [151, 152, 153, 154, 155, 156], [157, 158, 159, 162], [160, 164, 165, 166, 167, 168, 169, 170], [161, 163], [185, 187, 188], [193, 194, 196, 197, 198, 199, 204, 205], [206, 207, 208, 209, 210, 211], [243, 244]]

Calculating viewed counts for every point:   0%|          | 0/241 [00:00<?, ?it/s][A
Calculating viewed counts for every point:   7%|▋         | 18/241 [00:00<00:01, 176.73it/s][A
Calculating viewed counts for every point:  15%|█▍        | 36/241 [00:00<00:01, 170.08it/s][A
Calculating viewed counts for every point:  23%|██▎       | 56/241 [00:00<00:01, 179.77it/s][A
Calculating viewed counts for every point:  32%|███▏      | 77/241 [00:00<00:00, 188.07it/s][A
Calculating viewed counts for every point:  40%|███▉      | 96/241 [00:00<00:00, 186.80it/s][A
Calculating viewed counts for every point:  48%|████▊     | 116/241 [00:00<00:00, 188.50it/s][A
Calculating viewed counts for every point:  56%|█████▌    | 135/241 [00:00<00:00, 181.83it/s][A
Calculating viewed counts for every point:  66%|██████▌   | 158/241 [00:00<00:00, 195.37it/s][A
Calculating viewed counts for every point:  74%|███████▍  | 179/241 [00:00<00:00, 196.90it/s][A
Calculating viewed counts for every point:  83%|████████▎ | 199/241 [00:01<00:00, 188.94it/s][A
Calculating viewed counts for every point:  91%|█████████ | 219/241 [00:01<00:00, 190.64it/s][A
Calculating viewed counts for every point:  99%|█████████▉| 239/241 [00:01<00:00, 193.03it/s][A
                                                                                             [AProjecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [07:55<00:00,  3.57s/it]Projecting 2d masks to 3d point cloud: 100%|██████████| 142/142 [07:55<00:00,  3.35s/it]
detected_ratio_thres_value tensor(0.2609, device='cuda:0')
final masked points tensor(42695, device='cuda:0')
before filtering torch.Size([27, 183029])
after filtering torch.Size([11, 183029])
num_ins_points_after_filtering tensor([ 2085,   492,  2553,   357,  1605,   725,  2845, 14857,  1504,  1572,
         1827], device='cuda:0')
Processing class: file_cabinet
Select thresholds for refinement:   0%|          | 0/142 [00:00<?, ?it/s]Select thresholds for refinement:   1%|          | 1/142 [00:01<03:02,  1.29s/it]Select thresholds for refinement:   1%|▏         | 2/142 [00:01<01:38,  1.42it/s]Select thresholds for refinement:   2%|▏         | 3/142 [00:01<01:09,  2.00it/s]Select thresholds for refinement:   3%|▎         | 4/142 [00:02<00:56,  2.46it/s]Select thresholds for refinement:   4%|▎         | 5/142 [00:02<00:55,  2.49it/s]Select thresholds for refinement:   4%|▍         | 6/142 [00:02<00:48,  2.80it/s]Select thresholds for refinement:   5%|▍         | 7/142 [00:03<00:47,  2.84it/s]Select thresholds for refinement:   6%|▌         | 8/142 [00:03<00:40,  3.35it/s]Select thresholds for refinement:   6%|▋         | 9/142 [00:03<00:42,  3.16it/s]Select thresholds for refinement:   7%|▋         | 10/142 [00:03<00:42,  3.14it/s]Select thresholds for refinement:   8%|▊         | 11/142 [00:04<00:36,  3.58it/s]Select thresholds for refinement:   8%|▊         | 12/142 [00:04<00:34,  3.77it/s]Select thresholds for refinement:   9%|▉         | 13/142 [00:04<00:32,  4.03it/s]Select thresholds for refinement:  10%|▉         | 14/142 [00:04<00:30,  4.21it/s]Select thresholds for refinement:  11%|█         | 15/142 [00:05<00:33,  3.82it/s]Select thresholds for refinement:  11%|█▏        | 16/142 [00:05<00:27,  4.52it/s]Select thresholds for refinement:  12%|█▏        | 17/142 [00:05<00:30,  4.07it/s]Select thresholds for refinement:  13%|█▎        | 18/142 [00:05<00:28,  4.41it/s]DEBUG best_match_after_iou_check [tensor(43), tensor(155), tensor(305)]
DEBUG uniques tensor([ 43, 155, 305]) tensor([1, 1, 1])
Matched 1 times with 43
Matched 1 times with 155
Matched 1 times with 305
iou for matched labels tensor([0.4264, 0.4804, 0.3722])
Matched labels: ['kitchen_counter', 'desk', 'kitchen_counter']
Clip similarities: [0.6630859375, 0.74169921875, 0.6630859375]
DEBUG best_match_after_iou_check [tensor(57), tensor(3), tensor(0), tensor(170)]
DEBUG uniques tensor([  0,   3,  57, 170]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 3
Matched 1 times with 57
Matched 1 times with 170
iou for matched labels tensor([0.5349, 0.2678, 0.7140, 0.2041])
Matched labels: ['desk', 'table', 'desk', 'monitor']
Clip similarities: [0.74169921875, 0.73095703125, 0.74169921875, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(113), tensor(11), tensor(135)]
DEBUG uniques tensor([ 11, 113, 135]) tensor([1, 1, 1])
Matched 1 times with 11
Matched 1 times with 113
Matched 1 times with 135
iou for matched labels tensor([0.2891, 0.7558, 0.6290])
Matched labels: ['sofa_chair', 'door', 'mini_fridge']
Clip similarities: [0.6533203125, 0.73779296875, 0.7177734375]
DEBUG best_match_after_iou_check [tensor(129), tensor(115), tensor(193), tensor(96)]
DEBUG uniques tensor([ 96, 115, 129, 193]) tensor([1, 1, 1, 1])
Matched 1 times with 96
Matched 1 times with 115
Matched 1 times with 129
Matched 1 times with 193
iou for matched labels tensor([0.7241, 0.6515, 0.6501, 0.7325])
Matched labels: ['mini_fridge', 'file_cabinet', 'bin', 'file_cabinet']
Clip similarities: [0.7177734375, 0.97216796875, 0.7333984375, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(103), tensor(31), tensor(29), tensor(6), tensor(139)]
DEBUG uniques tensor([  6,  29,  31, 103, 139]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 29
Matched 1 times with 31
Matched 1 times with 103
Matched 1 times with 139
iou for matched labels tensor([0.6313, 0.2386, 0.2922, 0.5566, 0.4143])
Matched labels: ['bookshelf', 'bookshelf', 'bookshelf', 'bookshelf', 'folded_chair']
Clip similarities: [0.822265625, 0.822265625, 0.822265625, 0.822265625, 0.615234375]
DEBUG best_match_after_iou_check [tensor(42), tensor(167), tensor(119)]
DEBUG uniques tensor([ 42, 119, 167]) tensor([1, 1, 1])
Matched 1 times with 42
Matched 1 times with 119
Matched 1 times with 167
iou for matched labels tensor([0.7439, 0.7265, 0.7054])
Matched labels: ['desk', 'closet_door', 'dresser']
Clip similarities: [0.74169921875, 0.72998046875, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(143), tensor(167), tensor(189), tensor(159), tensor(84)]
DEBUG uniques tensor([ 84, 143, 159, 167, 189]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 84
Matched 1 times with 143
Matched 1 times with 159
Matched 1 times with 167
Matched 1 times with 189
iou for matched labels tensor([0.5848, 0.1947, 0.2609, 0.3390, 0.4385])
Matched labels: ['desk', 'storage_bin', 'doorframe', 'shelf', 'light_switch']
Clip similarities: [0.74169921875, 0.8212890625, 0.677734375, 0.78662109375, 0.67626953125]
DEBUG best_match_after_iou_check [tensor(57), tensor(23), tensor(71), tensor(113)]
DEBUG uniques tensor([ 23,  57,  71, 113]) tensor([1, 1, 1, 1])
Matched 1 times with 23
Matched 1 times with 57
Matched 1 times with 71
Matched 1 times with 113
iou for matched labels tensor([0.6976, 0.4738, 0.7360, 0.2712])
Matched labels: ['toaster_oven', 'refrigerator', 'counter', 'file_cabinet']
Clip similarities: [0.716796875, 0.73583984375, 0.71630859375, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(71), tensor(25), tensor(178), tensor(191), tensor(191)]
DEBUG uniques tensor([ 25,  71, 178, 191]) tensor([1, 1, 1, 2])
Matched 1 times with 25
Matched 1 times with 71
Matched 1 times with 178
Matched 2 times with 191
Merge stage2 masks
iou for matched labels tensor([0.6045, 0.3059, 0.3930, 0.4558])
Matched labels: ['bookshelf', 'coffee_table', 'shelf', 'folded_chair']
Clip similarities: [0.822265625, 0.71142578125, 0.78662109375, 0.615234375]
DEBUG best_match_after_iou_check [tensor(132), tensor(5), tensor(17), tensor(10), tensor(33), tensor(46)]
DEBUG uniques tensor([  5,  10,  17,  33,  46, 132]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 10
Matched 1 times with 17
Matched 1 times with 33
Matched 1 times with 46
Matched 1 times with 132
iou for matched labels tensor([0.7137, 0.3596, 0.4452, 0.4893, 0.3409, 0.5217])
Matched labels: ['monitor', 'shelf', 'copier', 'copier', 'box', 'copier']
Clip similarities: [0.68212890625, 0.78662109375, 0.74609375, 0.74609375, 0.75634765625, 0.74609375]
DEBUG best_match_after_iou_check [tensor(53)]
DEBUG uniques tensor([53]) tensor([1])
Matched 1 times with 53
iou for matched labels tensor([0.4757])
Matched labels: ['folded_chair']
Clip similarities: [0.615234375]
DEBUG best_match_after_iou_check [tensor(24), tensor(32), tensor(3), tensor(150)]
DEBUG uniques tensor([  3,  24,  32, 150]) tensor([1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 24
Matched 1 times with 32
Matched 1 times with 150
iou for matched labels tensor([0.3473, 0.7113, 0.7640, 0.6583])
Matched labels: ['paper_towel_dispenser', 'ironing_board', 'radiator', 'bar']
Clip similarities: [0.64892578125, 0.58935546875, 0.66845703125, 0.66552734375]
DEBUG best_match_after_iou_check [tensor(0), tensor(20)]
DEBUG uniques tensor([ 0, 20]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 20
iou for matched labels tensor([0.8520, 0.3459])
Matched labels: ['paper_towel_dispenser', 'paper_towel_dispenser']
Clip similarities: [0.64892578125, 0.64892578125]
DEBUG best_match_after_iou_check [tensor(83)]
DEBUG uniques tensor([83]) tensor([1])
Matched 1 times with 83
iou for matched labels tensor([0.2082])
Matched labels: ['desk']
Clip similarities: [0.74169921875]
DEBUG best_match_after_iou_check [tensor(176), tensor(13), tensor(176)]
DEBUG uniques tensor([ 13, 176]) tensor([1, 2])
Matched 1 times with 13
Matched 2 times with 176
Merge stage2 masks
iou for matched labels tensor([0.5314, 0.6938])
Matched labels: ['monitor', 'file_cabinet']
Clip similarities: [0.68212890625, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(14)]
DEBUG uniques tensor([14]) tensor([1])
Matched 1 times with 14
iou for matched labels tensor([0.7413])
Matched labels: ['bathroom_counter']
Clip similarities: [0.640625]
DEBUG best_match_after_iou_check [tensor(22), tensor(35), tensor(193), tensor(8), tensor(116), tensor(43), tensor(102)]
DEBUG uniques tensor([  8,  22,  35,  43, 102, 116, 193]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 8
Matched 1 times with 22
Matched 1 times with 35
Matched 1 times with 43
Matched 1 times with 102
Matched 1 times with 116
Matched 1 times with 193
iou for matched labels tensor([0.3660, 0.5899, 0.1891, 0.3490, 0.5587, 0.6790, 0.8074])
Matched labels: ['file_cabinet', 'desk', 'computer_tower', 'desk', 'refrigerator', 'refrigerator', 'refrigerator']
Clip similarities: [0.97216796875, 0.74169921875, 0.6708984375, 0.74169921875, 0.73583984375, 0.73583984375, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(95), tensor(115), tensor(115), tensor(34), tensor(151), tensor(90)]
DEBUG uniques tensor([ 34,  90,  95, 115, 151]) tensor([1, 1, 1, 2, 1])
Matched 1 times with 34
Matched 1 times with 90
Matched 1 times with 95
Matched 2 times with 115
Merge stage2 masks
Matched 1 times with 151
iou for matched labels tensor([0.6727, 0.4910, 0.7030, 0.3417, 0.4548])
Matched labels: ['sink', 'washing_machine', 'closet_door', 'bathroom_stall_door', 'washing_machine']
Clip similarities: [0.6943359375, 0.69287109375, 0.72998046875, 0.64501953125, 0.69287109375]
DEBUG best_match_after_iou_check [tensor(288), tensor(294), tensor(122), tensor(82), tensor(82), tensor(13), tensor(35), tensor(9), tensor(35), tensor(109)]
DEBUG uniques tensor([  9,  13,  35,  82, 109, 122, 288, 294]) tensor([1, 1, 2, 2, 1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 13
Matched 2 times with 35
Merge stage2 masks
Matched 2 times with 82
Merge stage2 masks
Matched 1 times with 109
Matched 1 times with 122
Matched 1 times with 288
Matched 1 times with 294
iou for matched labels Select thresholds for refinement:  13%|█▎        | 19/142 [00:06<00:30,  4.00it/s]Select thresholds for refinement:  14%|█▍        | 20/142 [00:06<00:26,  4.60it/s]Select thresholds for refinement:  15%|█▍        | 21/142 [00:06<00:30,  4.01it/s]Select thresholds for refinement:  15%|█▌        | 22/142 [00:06<00:25,  4.70it/s]Select thresholds for refinement:  16%|█▌        | 23/142 [00:06<00:25,  4.59it/s]Select thresholds for refinement:  17%|█▋        | 24/142 [00:07<00:28,  4.11it/s]Select thresholds for refinement:  18%|█▊        | 25/142 [00:07<00:30,  3.82it/s]Select thresholds for refinement:  18%|█▊        | 26/142 [00:07<00:29,  3.90it/s]Select thresholds for refinement:  19%|█▉        | 27/142 [00:07<00:27,  4.20it/s]Select thresholds for refinement:  20%|█▉        | 28/142 [00:08<00:30,  3.76it/s]Select thresholds for refinement:  20%|██        | 29/142 [00:08<00:34,  3.27it/s]Select thresholds for refinement:  21%|██        | 30/142 [00:09<00:38,  2.92it/s]Select thresholds for refinement:  22%|██▏       | 31/142 [00:09<00:36,  3.08it/s]Select thresholds for refinement:  23%|██▎       | 32/142 [00:09<00:32,  3.40it/s]Select thresholds for refinement:  23%|██▎       | 33/142 [00:09<00:32,  3.36it/s]Select thresholds for refinement:  24%|██▍       | 34/142 [00:10<00:38,  2.83it/s]tensor([0.0514, 0.0212, 0.1747, 0.1616, 0.3223, 0.0285, 0.0851, 0.2336])
Matched labels: ['chair', 'person', 'dresser', 'bag', 'sofa_chair', 'closet_door', 'dresser', 'printer']
Clip similarities: [0.70654296875, 0.705078125, 0.76025390625, 0.712890625, 0.6533203125, 0.72998046875, 0.76025390625, 0.75390625]
DEBUG best_match_after_iou_check [tensor(81), tensor(18), tensor(43), tensor(139)]
DEBUG uniques tensor([ 18,  43,  81, 139]) tensor([1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 43
Matched 1 times with 81
Matched 1 times with 139
iou for matched labels tensor([0.3461, 0.6799, 0.6455, 0.8316])
Matched labels: ['toilet_paper_dispenser', 'box', 'door', 'bin']
Clip similarities: [0.6748046875, 0.75634765625, 0.73779296875, 0.7333984375]
DEBUG best_match_after_iou_check [tensor(12), tensor(118), tensor(106), tensor(111), tensor(34), tensor(79), tensor(61), tensor(69), tensor(61)]
DEBUG uniques tensor([ 12,  34,  61,  69,  79, 106, 111, 118]) tensor([1, 1, 2, 1, 1, 1, 1, 1])
Matched 1 times with 12
Matched 1 times with 34
Matched 2 times with 61
Merge stage2 masks
Matched 1 times with 69
Matched 1 times with 79
Matched 1 times with 106
Matched 1 times with 111
Matched 1 times with 118
iou for matched labels tensor([0.7864, 0.5252, 0.8027, 0.3816, 0.9379, 0.5124, 0.6806, 0.8366])
Matched labels: ['refrigerator', 'microwave', 'cabinet', 'dishwasher', 'closet_door', 'cabinet', 'refrigerator', 'closet_door']
Clip similarities: [0.73583984375, 0.72509765625, 0.861328125, 0.65478515625, 0.72998046875, 0.861328125, 0.73583984375, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.7439])
Matched labels: ['bathroom_counter']
Clip similarities: [0.640625]
DEBUG best_match_after_iou_check [tensor(162), tensor(88), tensor(77), tensor(69), tensor(126), tensor(63), tensor(142), tensor(15)]
DEBUG uniques tensor([ 15,  63,  69,  77,  88, 126, 142, 162]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 15
Matched 1 times with 63
Matched 1 times with 69
Matched 1 times with 77
Matched 1 times with 88
Matched 1 times with 126
Matched 1 times with 142
Matched 1 times with 162
iou for matched labels tensor([0.8348, 0.8093, 0.7132, 0.4622, 0.2720, 0.7717, 0.3976, 0.5009])
Matched labels: ['refrigerator', 'dishwasher', 'kitchen_counter', 'kitchen_cabinet', 'box', 'kitchen_counter', 'kitchen_counter', 'refrigerator']
Clip similarities: [0.73583984375, 0.65478515625, 0.6630859375, 0.783203125, 0.75634765625, 0.6630859375, 0.6630859375, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(12)]
DEBUG uniques tensor([12]) tensor([1])
Matched 1 times with 12
iou for matched labels tensor([0.6719])
Matched labels: ['desk']
Clip similarities: [0.74169921875]
DEBUG best_match_after_iou_check [tensor(28), tensor(2)]
DEBUG uniques tensor([ 2, 28]) tensor([1, 1])
Matched 1 times with 2
Matched 1 times with 28
iou for matched labels tensor([0.8429, 0.8905])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.71142578125, 0.71142578125]
DEBUG best_match_after_iou_check [tensor(65), tensor(46)]
DEBUG uniques tensor([46, 65]) tensor([1, 1])
Matched 1 times with 46
Matched 1 times with 65
iou for matched labels tensor([0.5468, 0.5331])
Matched labels: ['chair', 'bookshelf']
Clip similarities: [0.70654296875, 0.822265625]
DEBUG best_match_after_iou_check [tensor(16)]
DEBUG uniques tensor([16]) tensor([1])
Matched 1 times with 16
iou for matched labels tensor([0.7173])
Matched labels: ['door']
Clip similarities: [0.73779296875]
DEBUG best_match_after_iou_check [tensor(139), tensor(35), tensor(161), tensor(134)]
DEBUG uniques tensor([ 35, 134, 139, 161]) tensor([1, 1, 1, 1])
Matched 1 times with 35
Matched 1 times with 134
Matched 1 times with 139
Matched 1 times with 161
iou for matched labels tensor([0.5873, 0.3155, 0.4837, 0.6679])
Matched labels: ['box', 'shelf', 'bookshelf', 'doorframe']
Clip similarities: [0.75634765625, 0.78662109375, 0.822265625, 0.677734375]
DEBUG best_match_after_iou_check [tensor(180), tensor(14), tensor(359), tensor(217), tensor(69), tensor(371), tensor(36), tensor(46), tensor(565)]
DEBUG uniques tensor([ 14,  36,  46,  69, 180, 217, 359, 371, 565]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 14
Matched 1 times with 36
Matched 1 times with 46
Matched 1 times with 69
Matched 1 times with 180
Matched 1 times with 217
Matched 1 times with 359
Matched 1 times with 371
Matched 1 times with 565
iou for matched labels tensor([0.6013, 0.7470, 0.5733, 0.5079, 0.4919, 0.4623, 0.7027, 0.6409, 0.6260])
Matched labels: ['kitchen_counter', 'shelf', 'closet_wall', 'kitchen_counter', 'kitchen_cabinet', 'stove', 'bathroom_counter', 'bathroom_cabinet', 'dresser']
Clip similarities: [0.6630859375, 0.78662109375, 0.7138671875, 0.6630859375, 0.783203125, 0.71044921875, 0.640625, 0.75, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(123), tensor(400), tensor(211)]
DEBUG uniques tensor([123, 211, 400]) tensor([1, 1, 1])
Matched 1 times with 123
Matched 1 times with 211
Matched 1 times with 400
iou for matched labels tensor([0.5655, 0.5007, 0.5518])
Matched labels: ['bookshelf', 'table', 'shelf']
Clip similarities: [0.822265625, 0.73095703125, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(20), tensor(24), tensor(7), tensor(108), tensor(46), tensor(57), tensor(10)]
DEBUG uniques tensor([  7,  10,  20,  24,  46,  57, 108]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 10
Matched 1 times with 20
Matched 1 times with 24
Matched 1 times with 46
Matched 1 times with 57
Matched 1 times with 108
iou for matched labels tensor([0.2456, 0.6516, 0.5829, 0.6080, 0.6192, 0.3983, 0.6937])
Matched labels: ['bed', 'desk', 'shelf', 'bin', 'desk', 'bed', 'closet_door']
Clip similarities: [0.62890625, 0.74169921875, 0.78662109375, 0.7333984375, 0.74169921875, 0.62890625, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(74), tensor(0), tensor(165), tensor(58)]
DEBUG uniques tensor([  0,  58,  74, 165]) tensor([1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 58
Matched 1 times with 74
Matched 1 times with 165
iou for matched labels tensor([0.6337, 0.9081, 0.5573, 0.4600])
Matched labels: ['kitchen_counter', 'radiator', 'desk', 'closet_door']
Clip similarities: [0.6630859375, 0.66845703125, 0.74169921875, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(127), tensor(184), tensor(46), tensor(123), tensor(124)]
DEBUG uniques tensor([ 46, 123, 124, 127, 184]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 46
Matched 1 times with 123
Matched 1 times with 124
Matched 1 times with 127
Matched 1 times with 184
iou for matched labels tensor([0.3482, 0.6977, 0.6843, 0.5005, 0.5495])
Matched labels: ['dresser', 'refrigerator', 'refrigerator', 'dresser', 'closet_door']
Clip similarities: [0.76025390625, 0.73583984375, 0.73583984375, 0.76025390625, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(30), tensor(32), tensor(89), tensor(83), tensor(25), tensor(73), tensor(100), tensor(104), tensor(164)]
DEBUG uniques tensor([ 25,  30,  32,  73,  83,  89, 100, 104, 164]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 25
Matched 1 times with 30
Matched 1 times with 32
Matched 1 times with 73
Matched 1 times with 83
Matched 1 times with 89
Matched 1 times with 100
Matched 1 times with 104
Matched 1 times with 164
iou for matched labels tensor([0.6252, 0.4023, 0.5719, 0.3954, 0.3839, 0.8202, 0.8739, 0.7894, 0.3686])
Matched labels: ['kitchen_counter', 'kitchen_cabinet', 'kitchen_counter', 'desk', 'kitchen_counter', 'kitchen_cabinet', 'kitchen_cabinet', 'kitchen_cabinet', 'kitchen_counter']
Clip similarities: [0.6630859375, 0.783203125, 0.6630859375, 0.74169921875, 0.6630859375, 0.783203125, 0.783203125, 0.783203125, 0.6630859375]
DEBUG best_match_after_iou_check [tensor(414), tensor(258), tensor(9), tensor(236)]
DEBUG uniques tensor([  9, 236, 258, 414]) tensor([1, 1, 1, 1])
Matched 1 times with 9
Matched 1 times with 236
Matched 1 times with 258
Matched 1 times with 414
iou for matched labels tensor([0.5082, 0.6329, 0.8372, 0.3479])
Matched labels: Select thresholds for refinement:  25%|██▍       | 35/142 [00:10<00:36,  2.95it/s]Select thresholds for refinement:  25%|██▌       | 36/142 [00:11<00:36,  2.93it/s]Select thresholds for refinement:  26%|██▌       | 37/142 [00:11<00:35,  2.94it/s]Select thresholds for refinement:  27%|██▋       | 38/142 [00:11<00:31,  3.34it/s]Select thresholds for refinement:  27%|██▋       | 39/142 [00:11<00:29,  3.53it/s]Select thresholds for refinement:  28%|██▊       | 40/142 [00:12<00:26,  3.92it/s]Select thresholds for refinement:  29%|██▉       | 41/142 [00:12<00:23,  4.23it/s]Select thresholds for refinement:  30%|██▉       | 42/142 [00:12<00:25,  3.99it/s]Select thresholds for refinement:  30%|███       | 43/142 [00:12<00:28,  3.47it/s]Select thresholds for refinement:  31%|███       | 44/142 [00:13<00:32,  3.05it/s]Select thresholds for refinement:  32%|███▏      | 45/142 [00:13<00:28,  3.38it/s]Select thresholds for refinement:  32%|███▏      | 46/142 [00:13<00:25,  3.81it/s]Select thresholds for refinement:  33%|███▎      | 47/142 [00:13<00:25,  3.73it/s]Select thresholds for refinement:  34%|███▍      | 48/142 [00:14<00:29,  3.19it/s]Select thresholds for refinement:  35%|███▍      | 49/142 [00:14<00:28,  3.29it/s]Select thresholds for refinement:  35%|███▌      | 50/142 [00:14<00:28,  3.27it/s]Select thresholds for refinement:  36%|███▌      | 51/142 [00:15<00:24,  3.70it/s]['furniture', 'furniture', 'file_cabinet', 'sink']
Clip similarities: [0.765625, 0.765625, 0.97216796875, 0.6943359375]
DEBUG best_match_after_iou_check [tensor(0), tensor(96), tensor(133), tensor(72), tensor(119)]
DEBUG uniques tensor([  0,  72,  96, 119, 133]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 72
Matched 1 times with 96
Matched 1 times with 119
Matched 1 times with 133
iou for matched labels tensor([0.7398, 0.2578, 0.4171, 0.7732, 0.6894])
Matched labels: ['desk', 'bar', 'monitor', 'recycling_bin', 'monitor']
Clip similarities: [0.74169921875, 0.66552734375, 0.68212890625, 0.775390625, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(162), tensor(86), tensor(196), tensor(168), tensor(162)]
DEBUG uniques tensor([ 86, 162, 168, 196]) tensor([1, 2, 1, 1])
Matched 1 times with 86
Matched 2 times with 162
Merge stage2 masks
Matched 1 times with 168
Matched 1 times with 196
iou for matched labels tensor([0.4214, 0.8048, 0.5725, 0.8119])
Matched labels: ['bin', 'doorframe', 'furniture', 'file_cabinet']
Clip similarities: [0.7333984375, 0.677734375, 0.765625, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(104), tensor(29)]
DEBUG uniques tensor([ 29, 104]) tensor([1, 1])
Matched 1 times with 29
Matched 1 times with 104
iou for matched labels tensor([0.8115, 0.7240])
Matched labels: ['file_cabinet', 'box']
Clip similarities: [0.97216796875, 0.75634765625]
DEBUG best_match_after_iou_check [tensor(299)]
DEBUG uniques tensor([299]) tensor([1])
Matched 1 times with 299
iou for matched labels tensor([0.6395])
Matched labels: ['table']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(74), tensor(4), tensor(74), tensor(93), tensor(4)]
DEBUG uniques tensor([ 4, 74, 93]) tensor([2, 2, 1])
Matched 2 times with 4
Merge stage2 masks
Matched 2 times with 74
Merge stage2 masks
Matched 1 times with 93
iou for matched labels tensor([0.4322, 0.5360, 0.7561])
Matched labels: ['bed', 'shelf', 'desk']
Clip similarities: [0.62890625, 0.78662109375, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(4), tensor(47), tensor(57), tensor(3), tensor(3), tensor(3)]
DEBUG uniques tensor([ 3,  4, 47, 57]) tensor([3, 1, 1, 1])
Matched 3 times with 3
Merge stage2 masks
Matched 1 times with 4
Matched 1 times with 47
Matched 1 times with 57
iou for matched labels tensor([0.8104, 0.5288, 0.7245, 0.8187])
Matched labels: ['copier', 'kitchen_counter', 'kitchen_counter', 'file_cabinet']
Clip similarities: [0.74609375, 0.6630859375, 0.6630859375, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(112), tensor(54), tensor(43), tensor(135)]
DEBUG uniques tensor([ 43,  54, 112, 135]) tensor([1, 1, 1, 1])
Matched 1 times with 43
Matched 1 times with 54
Matched 1 times with 112
Matched 1 times with 135
iou for matched labels tensor([0.7565, 0.6780, 0.8528, 0.5153])
Matched labels: ['desk', 'desk', 'shelf', 'desk']
Clip similarities: [0.74169921875, 0.74169921875, 0.78662109375, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(7), tensor(2), tensor(46), tensor(6), tensor(79), tensor(90)]
DEBUG uniques tensor([ 2,  6,  7, 46, 79, 90]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 6
Matched 1 times with 7
Matched 1 times with 46
Matched 1 times with 79
Matched 1 times with 90
iou for matched labels tensor([0.7245, 0.5954, 0.7036, 0.5162, 0.1538, 0.3096])
Matched labels: ['mailbox', 'mailbox', 'file_cabinet', 'mailbox', 'cup', 'bin']
Clip similarities: [0.7587890625, 0.7587890625, 0.97216796875, 0.7587890625, 0.6748046875, 0.7333984375]
DEBUG best_match_after_iou_check [tensor(5), tensor(229), tensor(194), tensor(6), tensor(435), tensor(282)]
DEBUG uniques tensor([  5,   6, 194, 229, 282, 435]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 5
Matched 1 times with 6
Matched 1 times with 194
Matched 1 times with 229
Matched 1 times with 282
Matched 1 times with 435
iou for matched labels tensor([0.8253, 0.6891, 0.3771, 0.3779, 0.4669, 0.3239])
Matched labels: ['washing_machine', 'doorframe', 'shelf', 'refrigerator', 'oven', 'closet']
Clip similarities: [0.69287109375, 0.677734375, 0.78662109375, 0.73583984375, 0.73095703125, 0.779296875]
DEBUG best_match_after_iou_check [tensor(56), tensor(25), tensor(19), tensor(158), tensor(175), tensor(25), tensor(159)]
DEBUG uniques tensor([ 19,  25,  56, 158, 159, 175]) tensor([1, 2, 1, 1, 1, 1])
Matched 1 times with 19
Matched 2 times with 25
Merge stage2 masks
Matched 1 times with 56
Matched 1 times with 158
Matched 1 times with 159
Matched 1 times with 175
iou for matched labels tensor([0.1921, 0.1462, 0.4967, 0.7752, 0.0071, 0.6123])
Matched labels: ['desk', 'desk', 'chair', 'table', 'lamp', 'monitor']
Clip similarities: [0.74169921875, 0.74169921875, 0.70654296875, 0.73095703125, 0.6611328125, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(28), tensor(39), tensor(1), tensor(99)]
DEBUG uniques tensor([ 1, 28, 39, 99]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 28
Matched 1 times with 39
Matched 1 times with 99
iou for matched labels tensor([0.7086, 0.6701, 0.3606, 0.7694])
Matched labels: ['water_cooler', 'water_cooler', 'sofa_chair', 'sofa_chair']
Clip similarities: [0.7119140625, 0.7119140625, 0.6533203125, 0.6533203125]
DEBUG best_match_after_iou_check [tensor(18), tensor(41), tensor(72), tensor(23), tensor(94), tensor(31)]
DEBUG uniques tensor([18, 23, 31, 41, 72, 94]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 23
Matched 1 times with 31
Matched 1 times with 41
Matched 1 times with 72
Matched 1 times with 94
iou for matched labels tensor([0.5632, 0.2686, 0.3219, 0.7588, 0.5306, 0.3400])
Matched labels: ['cabinet', 'bar', 'kitchen_counter', 'kitchen_cabinet', 'cabinet', 'refrigerator']
Clip similarities: [0.861328125, 0.66552734375, 0.6630859375, 0.783203125, 0.861328125, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(1), tensor(65), tensor(194), tensor(377), tensor(109), tensor(41)]
DEBUG uniques tensor([  1,  41,  65, 109, 194, 377]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 41
Matched 1 times with 65
Matched 1 times with 109
Matched 1 times with 194
Matched 1 times with 377
iou for matched labels tensor([0.3474, 0.8284, 0.5155, 0.2462, 0.5554, 0.8950])
Matched labels: ['whiteboard', 'door', 'stair_rail', 'bin', 'desk', 'door']
Clip similarities: [0.6083984375, 0.73779296875, 0.5703125, 0.7333984375, 0.74169921875, 0.73779296875]
DEBUG best_match_after_iou_check [tensor(52)]
DEBUG uniques tensor([52]) tensor([1])
Matched 1 times with 52
iou for matched labels tensor([0.7197])
Matched labels: ['bookshelf']
Clip similarities: [0.822265625]
DEBUG best_match_after_iou_check [tensor(42), tensor(68), tensor(28), tensor(39), tensor(10), tensor(80), tensor(2)]
DEBUG uniques tensor([ 2, 10, 28, 39, 42, 68, 80]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 2
Matched 1 times with 10
Matched 1 times with 28
Matched 1 times with 39
Matched 1 times with 42
Matched 1 times with 68
Matched 1 times with 80
iou for matched labels tensor([0.8827, 0.8876, 0.8215, 0.6376, 0.8711, 0.5738, 0.4246])
Matched labels: ['file_cabinet', 'file_cabinet', 'copier', 'copier', 'bin', 'recycling_bin', 'file_cabinet']
Clip similarities: [0.97216796875, 0.97216796875, 0.74609375, 0.74609375, 0.7333984375, 0.775390625, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(115), tensor(4)]
DEBUG uniques tensor([  4, 115]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 115
iou for matched labels tensor([0.3294, 0.8288])
Matched labels: ['box', 'monitor']
Clip similarities: [0.75634765625, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(29), tensor(183), tensor(46), tensor(80), tensor(30), tensor(68), tensor(104), tensor(0)]
DEBUG uniques tensor([  0,  29,  30,  46,  68,  80, 104, 183]) tensor([1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 29
Matched 1 times with 30
Matched 1 times with 46
Matched 1 times with 68
Matched 1 times with 80
Matched 1 times with 104
Matched 1 times with 183
iou for matched labels tensor([0.4909, 0.6361, 0.7391, 0.4556, 0.4825, 0.7444, 0.3486, 0.0000])
Matched labels: Select thresholds for refinement:  37%|███▋      | 52/142 [00:15<00:26,  3.45it/s]Select thresholds for refinement:  37%|███▋      | 53/142 [00:15<00:25,  3.56it/s]Select thresholds for refinement:  38%|███▊      | 54/142 [00:15<00:23,  3.73it/s]Select thresholds for refinement:  39%|███▊      | 55/142 [00:16<00:21,  4.05it/s]Select thresholds for refinement:  39%|███▉      | 56/142 [00:16<00:20,  4.21it/s]Select thresholds for refinement:  40%|████      | 57/142 [00:16<00:19,  4.33it/s]Select thresholds for refinement:  41%|████      | 58/142 [00:16<00:19,  4.22it/s]Select thresholds for refinement:  42%|████▏     | 59/142 [00:17<00:18,  4.45it/s]Select thresholds for refinement:  42%|████▏     | 60/142 [00:17<00:18,  4.41it/s]Select thresholds for refinement:  43%|████▎     | 61/142 [00:17<00:19,  4.13it/s]Select thresholds for refinement:  44%|████▎     | 62/142 [00:17<00:21,  3.64it/s]Select thresholds for refinement:  44%|████▍     | 63/142 [00:18<00:18,  4.37it/s]Select thresholds for refinement:  45%|████▌     | 64/142 [00:18<00:19,  4.06it/s]Select thresholds for refinement:  46%|████▌     | 65/142 [00:18<00:19,  3.87it/s]Select thresholds for refinement:  46%|████▋     | 66/142 [00:18<00:18,  4.09it/s]Select thresholds for refinement:  47%|████▋     | 67/142 [00:19<00:16,  4.42it/s]Select thresholds for refinement:  48%|████▊     | 68/142 [00:19<00:16,  4.44it/s]Select thresholds for refinement:  49%|████▊     | 69/142 [00:19<00:17,  4.23it/s]Select thresholds for refinement:  49%|████▉     | 70/142 [00:19<00:14,  4.98it/s]Select thresholds for refinement:  50%|█████     | 71/142 [00:19<00:16,  4.23it/s]Select thresholds for refinement:  51%|█████     | 72/142 [00:20<00:15,  4.53it/s]['cart', 'tv_stand', 'furniture', 'furniture', 'shelf', 'monitor', 'furniture', 'shelf']
Clip similarities: [0.74951171875, 0.75244140625, 0.765625, 0.765625, 0.78662109375, 0.68212890625, 0.765625, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(132), tensor(11), tensor(191), tensor(43), tensor(35), tensor(23)]
DEBUG uniques tensor([ 11,  23,  35,  43, 132, 191]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 11
Matched 1 times with 23
Matched 1 times with 35
Matched 1 times with 43
Matched 1 times with 132
Matched 1 times with 191
iou for matched labels tensor([0.1517, 0.8396, 0.7671, 0.2105, 0.2601, 0.2604])
Matched labels: ['desk', 'whiteboard', 'closet_wall', 'desk', 'monitor', 'monitor']
Clip similarities: [0.74169921875, 0.6083984375, 0.7138671875, 0.74169921875, 0.68212890625, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(59), tensor(7), tensor(199), tensor(227)]
DEBUG uniques tensor([  7,  59, 199, 227]) tensor([1, 1, 1, 1])
Matched 1 times with 7
Matched 1 times with 59
Matched 1 times with 199
Matched 1 times with 227
iou for matched labels tensor([0.5675, 0.6341, 0.5132, 0.3379])
Matched labels: ['shelf', 'shelf', 'mini_fridge', 'towel']
Clip similarities: [0.78662109375, 0.78662109375, 0.7177734375, 0.62158203125]
DEBUG best_match_after_iou_check [tensor(62)]
DEBUG uniques tensor([62]) tensor([1])
Matched 1 times with 62
iou for matched labels tensor([0.1064])
Matched labels: ['chair']
Clip similarities: [0.70654296875]
DEBUG best_match_after_iou_check [tensor(168), tensor(134)]
DEBUG uniques tensor([134, 168]) tensor([1, 1])
Matched 1 times with 134
Matched 1 times with 168
iou for matched labels tensor([0.6219, 0.6892])
Matched labels: ['desk', 'desk']
Clip similarities: [0.74169921875, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(98), tensor(72)]
DEBUG uniques tensor([72, 98]) tensor([1, 1])
Matched 1 times with 72
Matched 1 times with 98
iou for matched labels tensor([0.5852, 0.9312])
Matched labels: ['shelf', 'dresser']
Clip similarities: [0.78662109375, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(97), tensor(26), tensor(104), tensor(69), tensor(57), tensor(76), tensor(24)]
DEBUG uniques tensor([ 24,  26,  57,  69,  76,  97, 104]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 26
Matched 1 times with 57
Matched 1 times with 69
Matched 1 times with 76
Matched 1 times with 97
Matched 1 times with 104
iou for matched labels tensor([0.5576, 0.2770, 0.5000, 0.8560, 0.1414, 0.4889, 0.4011])
Matched labels: ['crate', 'shelf', 'kitchen_counter', 'door', 'doorframe', 'closet_door', 'case_of_water_bottles']
Clip similarities: [0.7734375, 0.78662109375, 0.6630859375, 0.73779296875, 0.677734375, 0.72998046875, 0.70068359375]
DEBUG best_match_after_iou_check [tensor(8), tensor(57)]
DEBUG uniques tensor([ 8, 57]) tensor([1, 1])
Matched 1 times with 8
Matched 1 times with 57
iou for matched labels tensor([0.8391, 0.4559])
Matched labels: ['shelf', 'shelf']
Clip similarities: [0.78662109375, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(69), tensor(59), tensor(61), tensor(26), tensor(87)]
DEBUG uniques tensor([26, 59, 61, 69, 87]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 26
Matched 1 times with 59
Matched 1 times with 61
Matched 1 times with 69
Matched 1 times with 87
iou for matched labels tensor([0.5488, 0.6565, 0.3794, 0.8190, 0.5579])
Matched labels: ['desk', 'desk', 'blackboard', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.74169921875, 0.74169921875, 0.6328125, 0.97216796875, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(3), tensor(50), tensor(1)]
DEBUG uniques tensor([ 1,  3, 50]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 3
Matched 1 times with 50
iou for matched labels tensor([0.7722, 0.7757, 0.7929])
Matched labels: ['desk', 'dresser', 'radiator']
Clip similarities: [0.74169921875, 0.76025390625, 0.66845703125]
DEBUG best_match_after_iou_check [tensor(178), tensor(64), tensor(19), tensor(0), tensor(29), tensor(105), tensor(86)]
DEBUG uniques tensor([  0,  19,  29,  64,  86, 105, 178]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 19
Matched 1 times with 29
Matched 1 times with 64
Matched 1 times with 86
Matched 1 times with 105
Matched 1 times with 178
iou for matched labels tensor([0.4194, 0.7768, 0.7501, 0.8053, 0.6694, 0.6887, 0.6200])
Matched labels: ['bar', 'desk', 'dresser', 'radiator', 'door', 'dresser', 'refrigerator']
Clip similarities: [0.66552734375, 0.74169921875, 0.76025390625, 0.66845703125, 0.73779296875, 0.76025390625, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(77)]
DEBUG uniques tensor([77]) tensor([1])
Matched 1 times with 77
iou for matched labels tensor([0.5604])
Matched labels: ['bathroom_counter']
Clip similarities: [0.640625]
DEBUG best_match_after_iou_check [tensor(46), tensor(87), tensor(50), tensor(19), tensor(16), tensor(460), tensor(84), tensor(235), tensor(23), tensor(143)]
DEBUG uniques tensor([ 16,  19,  23,  46,  50,  84,  87, 143, 235, 460]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 16
Matched 1 times with 19
Matched 1 times with 23
Matched 1 times with 46
Matched 1 times with 50
Matched 1 times with 84
Matched 1 times with 87
Matched 1 times with 143
Matched 1 times with 235
Matched 1 times with 460
iou for matched labels tensor([0.3312, 0.7763, 0.6567, 0.4418, 0.4212, 0.2551, 0.6341, 0.2466, 0.4069,
        0.2436])
Matched labels: ['ladder', 'bin', 'refrigerator', 'box', 'crate', 'trash_bin', 'bin', 'bathroom_stall_door', 'crate', 'doorframe']
Clip similarities: [0.71435546875, 0.7333984375, 0.73583984375, 0.75634765625, 0.7734375, 0.7724609375, 0.7333984375, 0.64501953125, 0.7734375, 0.677734375]
DEBUG best_match_after_iou_check [tensor(64), tensor(222)]
DEBUG uniques tensor([ 64, 222]) tensor([1, 1])
Matched 1 times with 64
Matched 1 times with 222
iou for matched labels tensor([0.7252, 0.3083])
Matched labels: ['desk', 'trash_can']
Clip similarities: [0.74169921875, 0.7451171875]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(40)]
DEBUG uniques tensor([40]) tensor([1])
Matched 1 times with 40
iou for matched labels tensor([0.7122])
Matched labels: ['dresser']
Clip similarities: [0.76025390625]
DEBUG best_match_after_iou_check [tensor(62), tensor(6)]
DEBUG uniques tensor([ 6, 62]) tensor([1, 1])
Matched 1 times with 6
Matched 1 times with 62
iou for matched labels tensor([0.8737, 0.7298])
Matched labels: ['trash_can', 'door']
Clip similarities: [0.7451171875, 0.73779296875]
DEBUG best_match_after_iou_check [tensor(110), tensor(52)]
DEBUG uniques tensor([ 52, 110]) tensor([1, 1])
Matched 1 times with 52
Matched 1 times with 110
iou for matched labels tensor([0.6326, 0.7072])
Matched labels: ['monitor', 'monitor']
Clip similarities: [0.68212890625, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(0)]
DEBUG uniques tensor([0]) tensor([1])
Matched 1 times with 0
iou for matched labels tensor([0.5327])
Matched labels: ['folded_chair']
Clip similarities: [0.615234375]
DEBUG best_match_after_iou_check [tensor(239), tensor(34), tensor(117), tensor(43), tensor(96), tensor(40)]
DEBUG uniques tensor([ 34,  40,  43,  96, 117, 239]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 34
Matched 1 times with 40
Matched 1 times with 43
Matched 1 times with 96
Matched 1 times with 117
Matched 1 times with 239
iou for matched labels tensor([0.7490, 0.3294, 0.6226, 0.6847, 0.2930, 0.3480])
Matched labels: ['mini_fridge', 'desk', 'dresser', 'dresser', 'tv', 'bathroom_counter']
Clip similarities: [0.7177734375, 0.74169921875, 0.76025390625, 0.76025390625, 0.68798828125, 0.640625]
DEBUG best_match_after_iou_check [tensor(137), tensor(125), tensor(36), tensor(94)]
DEBUG uniques tensor([ 36,  94, 125, 137]) tensor([1, 1, 1, 1])
Matched 1 times with 36
Matched 1 times with 94
Matched 1 times with 125
Matched 1 times with 137
iou for matched labels tensor([0.4344, 0.5509, 0.8196, 0.2219])
Matched labels: ['stair_rail', 'bathroom_stall', 'bin', 'bathroom_stall_door']
Clip similarities: [0.5703125, 0.69677734375, 0.7333984375, 0.64501953125]
DEBUG best_match_after_iou_check [tensor(50), tensor(200)]
DEBUG uniques Select thresholds for refinement:  51%|█████▏    | 73/142 [00:20<00:13,  5.05it/s]Select thresholds for refinement:  52%|█████▏    | 74/142 [00:20<00:13,  5.18it/s]Select thresholds for refinement:  53%|█████▎    | 75/142 [00:20<00:14,  4.64it/s]Select thresholds for refinement:  54%|█████▎    | 76/142 [00:21<00:16,  4.11it/s]Select thresholds for refinement:  54%|█████▍    | 77/142 [00:21<00:17,  3.81it/s]Select thresholds for refinement:  55%|█████▍    | 78/142 [00:21<00:15,  4.01it/s]Select thresholds for refinement:  56%|█████▌    | 79/142 [00:21<00:14,  4.38it/s]Select thresholds for refinement:  56%|█████▋    | 80/142 [00:21<00:14,  4.27it/s]Select thresholds for refinement:  57%|█████▋    | 81/142 [00:22<00:17,  3.57it/s]Select thresholds for refinement:  58%|█████▊    | 82/142 [00:22<00:17,  3.44it/s]Select thresholds for refinement:  58%|█████▊    | 83/142 [00:22<00:15,  3.80it/s]Select thresholds for refinement:  59%|█████▉    | 84/142 [00:23<00:14,  4.09it/s]Select thresholds for refinement:  60%|█████▉    | 85/142 [00:23<00:14,  3.90it/s]Select thresholds for refinement:  61%|██████    | 86/142 [00:23<00:15,  3.61it/s]Select thresholds for refinement:  61%|██████▏   | 87/142 [00:23<00:14,  3.79it/s]Select thresholds for refinement:  62%|██████▏   | 88/142 [00:24<00:12,  4.35it/s]Select thresholds for refinement:  63%|██████▎   | 89/142 [00:24<00:11,  4.48it/s]Select thresholds for refinement:  63%|██████▎   | 90/142 [00:24<00:11,  4.37it/s]Select thresholds for refinement:  64%|██████▍   | 91/142 [00:24<00:12,  4.18it/s]tensor([ 50, 200]) tensor([1, 1])
Matched 1 times with 50
Matched 1 times with 200
iou for matched labels tensor([0.5221, 0.7133])
Matched labels: ['bathroom_counter', 'shower_wall']
Clip similarities: [0.640625, 0.62109375]
DEBUG best_match_after_iou_check [tensor(84), tensor(23)]
DEBUG uniques tensor([23, 84]) tensor([1, 1])
Matched 1 times with 23
Matched 1 times with 84
iou for matched labels tensor([0.8011, 0.3140])
Matched labels: ['coffee_table', 'coffee_table']
Clip similarities: [0.71142578125, 0.71142578125]
DEBUG best_match_after_iou_check [tensor(36), tensor(169), tensor(20), tensor(92)]
DEBUG uniques tensor([ 20,  36,  92, 169]) tensor([1, 1, 1, 1])
Matched 1 times with 20
Matched 1 times with 36
Matched 1 times with 92
Matched 1 times with 169
iou for matched labels tensor([0.4647, 0.7133, 0.7439, 0.5811])
Matched labels: ['copier', 'counter', 'laundry_hamper', 'file_cabinet']
Clip similarities: [0.74609375, 0.71630859375, 0.72216796875, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(36), tensor(134), tensor(155), tensor(27)]
DEBUG uniques tensor([ 27,  36, 134, 155]) tensor([1, 1, 1, 1])
Matched 1 times with 27
Matched 1 times with 36
Matched 1 times with 134
Matched 1 times with 155
iou for matched labels tensor([0.5903, 0.4139, 0.3127, 0.3773])
Matched labels: ['shelf', 'computer_tower', 'desk', 'desk']
Clip similarities: [0.78662109375, 0.6708984375, 0.74169921875, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(0), tensor(100), tensor(51), tensor(36), tensor(118), tensor(92)]
DEBUG uniques tensor([  0,  36,  51,  92, 100, 118]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 0
Matched 1 times with 36
Matched 1 times with 51
Matched 1 times with 92
Matched 1 times with 100
Matched 1 times with 118
iou for matched labels tensor([0.6645, 0.4828, 0.6787, 0.4153, 0.3513, 0.6495])
Matched labels: ['refrigerator', 'refrigerator', 'refrigerator', 'oven', 'refrigerator', 'dresser']
Clip similarities: [0.73583984375, 0.73583984375, 0.73583984375, 0.73095703125, 0.73583984375, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(4), tensor(45)]
DEBUG uniques tensor([ 4, 45]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 45
iou for matched labels tensor([0.8167, 0.3623])
Matched labels: ['table', 'folded_chair']
Clip similarities: [0.73095703125, 0.615234375]
DEBUG best_match_after_iou_check [tensor(7)]
DEBUG uniques tensor([7]) tensor([1])
Matched 1 times with 7
iou for matched labels tensor([0.5722])
Matched labels: ['desk']
Clip similarities: [0.74169921875]
DEBUG best_match_after_iou_check [tensor(126), tensor(41)]
DEBUG uniques tensor([ 41, 126]) tensor([1, 1])
Matched 1 times with 41
Matched 1 times with 126
iou for matched labels tensor([0.5105, 0.3149])
Matched labels: ['tv_stand', 'power_outlet']
Clip similarities: [0.75244140625, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(343), tensor(1), tensor(307)]
DEBUG uniques tensor([  1, 307, 343]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 307
Matched 1 times with 343
iou for matched labels tensor([0.3180, 0.7154, 0.3726])
Matched labels: ['whiteboard', 'blackboard', 'end_table']
Clip similarities: [0.6083984375, 0.6328125, 0.75537109375]
DEBUG best_match_after_iou_check [tensor(178), tensor(10), tensor(61), tensor(12), tensor(47), tensor(16)]
DEBUG uniques tensor([ 10,  12,  16,  47,  61, 178]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 10
Matched 1 times with 12
Matched 1 times with 16
Matched 1 times with 47
Matched 1 times with 61
Matched 1 times with 178
iou for matched labels tensor([0.5488, 0.7594, 0.7018, 0.4853, 0.6767, 0.3267])
Matched labels: ['shelf', 'shelf', 'file_cabinet', 'shelf', 'shelf', 'shelf']
Clip similarities: [0.78662109375, 0.78662109375, 0.97216796875, 0.78662109375, 0.78662109375, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(92), tensor(44), tensor(86), tensor(75)]
DEBUG uniques tensor([44, 75, 86, 92]) tensor([1, 1, 1, 1])
Matched 1 times with 44
Matched 1 times with 75
Matched 1 times with 86
Matched 1 times with 92
iou for matched labels tensor([0.5937, 0.4248, 0.6448, 0.3289])
Matched labels: ['bathroom_counter', 'sink', 'printer', 'closet_door']
Clip similarities: [0.640625, 0.6943359375, 0.75390625, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(104), tensor(45), tensor(6), tensor(9), tensor(9)]
DEBUG uniques tensor([  6,   9,  45, 104]) tensor([1, 2, 1, 1])
Matched 1 times with 6
Matched 2 times with 9
Merge stage2 masks
Matched 1 times with 45
Matched 1 times with 104
iou for matched labels tensor([0.6762, 0.4767, 0.6264, 0.5888])
Matched labels: ['tv_stand', 'box', 'desk', 'desk']
Clip similarities: [0.75244140625, 0.75634765625, 0.74169921875, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(128), tensor(182)]
DEBUG uniques tensor([128, 182]) tensor([1, 1])
Matched 1 times with 128
Matched 1 times with 182
iou for matched labels tensor([0.6164, 0.6221])
Matched labels: ['cart', 'table']
Clip similarities: [0.74951171875, 0.73095703125]
DEBUG best_match_after_iou_check [tensor(63), tensor(6), tensor(30), tensor(98), tensor(135), tensor(79), tensor(61), tensor(79)]
DEBUG uniques tensor([  6,  30,  61,  63,  79,  98, 135]) tensor([1, 1, 1, 1, 2, 1, 1])
Matched 1 times with 6
Matched 1 times with 30
Matched 1 times with 61
Matched 1 times with 63
Matched 2 times with 79
Merge stage2 masks
Matched 1 times with 98
Matched 1 times with 135
iou for matched labels tensor([0.4516, 0.6962, 0.9191, 0.4425, 0.2190, 0.8108, 0.6366])
Matched labels: ['trash_can', 'bathroom_stall_door', 'door', 'shower_wall', 'shower_wall', 'paper_towel_dispenser', 'bathroom_counter']
Clip similarities: [0.7451171875, 0.64501953125, 0.73779296875, 0.62109375, 0.62109375, 0.64892578125, 0.640625]
DEBUG best_match_after_iou_check [tensor(1), tensor(111), tensor(189), tensor(147)]
DEBUG uniques tensor([  1, 111, 147, 189]) tensor([1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 111
Matched 1 times with 147
Matched 1 times with 189
iou for matched labels tensor([0.9159, 0.7913, 0.4147, 0.3738])
Matched labels: ['copier', 'bin', 'refrigerator', 'file_cabinet']
Clip similarities: [0.74609375, 0.7333984375, 0.73583984375, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(38), tensor(74), tensor(124)]
DEBUG uniques tensor([ 38,  74, 124]) tensor([1, 1, 1])
Matched 1 times with 38
Matched 1 times with 74
Matched 1 times with 124
iou for matched labels tensor([0.5971, 0.8380, 0.8419])
Matched labels: ['toilet_paper_dispenser', 'paper_towel_dispenser', 'trash_can']
Clip similarities: [0.6748046875, 0.64892578125, 0.7451171875]
DEBUG best_match_after_iou_check [tensor(61), tensor(98)]
DEBUG uniques tensor([61, 98]) tensor([1, 1])
Matched 1 times with 61
Matched 1 times with 98
iou for matched labels tensor([0.6180, 0.6586])
Matched labels: ['bookshelf', 'bookshelf']
Clip similarities: [0.822265625, 0.822265625]
DEBUG best_match_after_iou_check [tensor(80), tensor(88), tensor(0)]
DEBUG uniques tensor([ 0, 80, 88]) tensor([1, 1, 1])
Matched 1 times with 0
Matched 1 times with 80
Matched 1 times with 88
iou for matched labels tensor([0.4990, 0.4238, 0.4151])
Matched labels: ['refrigerator', 'clothes', 'whiteboard']
Clip similarities: [0.73583984375, 0.7041015625, 0.6083984375]
DEBUG best_match_after_iou_check [tensor(24), tensor(92), tensor(86), tensor(143), tensor(34), tensor(34)]
DEBUG uniques tensor([ 24,  34,  86,  92, 143]) tensor([1, 2, 1, 1, 1])
Matched 1 times with 24
Matched 2 times with 34
Merge stage2 masks
Matched 1 times with 86
Matched 1 times with 92
Matched 1 times with 143
iou for matched labels tensor([0.5144, 0.7372, 0.4296, 0.5439, 0.8541])
Matched labels: ['cart', 'printer', 'printer', 'file_cabinet', 'desk']
Clip similarities: [0.74951171875, 0.75390625, 0.75390625, 0.97216796875, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(52), tensor(140), tensor(108), tensor(39), tensor(57), tensor(98)]
DEBUG uniques tensor([ 39,  52,  57,  98, 108, 140]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 39
Matched 1 times with 52
Matched 1 times with 57
Matched 1 times with 98
Matched 1 times with 108
Matched 1 times with 140
iou for matched labels Select thresholds for refinement:  65%|██████▍   | 92/142 [00:25<00:13,  3.70it/s]Select thresholds for refinement:  65%|██████▌   | 93/142 [00:25<00:11,  4.31it/s]Select thresholds for refinement:  66%|██████▌   | 94/142 [00:25<00:12,  3.75it/s]Select thresholds for refinement:  67%|██████▋   | 95/142 [00:25<00:12,  3.86it/s]Select thresholds for refinement:  68%|██████▊   | 96/142 [00:26<00:12,  3.82it/s]Select thresholds for refinement:  68%|██████▊   | 97/142 [00:26<00:11,  4.00it/s]Select thresholds for refinement:  69%|██████▉   | 98/142 [00:26<00:11,  3.82it/s]Select thresholds for refinement:  70%|██████▉   | 99/142 [00:26<00:12,  3.49it/s]Select thresholds for refinement:  70%|███████   | 100/142 [00:27<00:11,  3.54it/s]Select thresholds for refinement:  71%|███████   | 101/142 [00:27<00:11,  3.67it/s]Select thresholds for refinement:  72%|███████▏  | 102/142 [00:27<00:10,  3.72it/s]Select thresholds for refinement:  73%|███████▎  | 103/142 [00:28<00:10,  3.88it/s]Select thresholds for refinement:  73%|███████▎  | 104/142 [00:28<00:08,  4.22it/s]Select thresholds for refinement:  74%|███████▍  | 105/142 [00:28<00:09,  4.00it/s]Select thresholds for refinement:  75%|███████▍  | 106/142 [00:28<00:07,  4.84it/s]Select thresholds for refinement:  75%|███████▌  | 107/142 [00:29<00:10,  3.43it/s]Select thresholds for refinement:  76%|███████▌  | 108/142 [00:29<00:09,  3.42it/s]Select thresholds for refinement:  77%|███████▋  | 109/142 [00:29<00:09,  3.31it/s]Select thresholds for refinement:  77%|███████▋  | 110/142 [00:30<00:10,  3.16it/s]Select thresholds for refinement:  78%|███████▊  | 111/142 [00:30<00:09,  3.43it/s]tensor([0.7462, 0.6796, 0.7576, 0.6682, 0.7498, 0.3258])
Matched labels: ['shelf', 'shelf', 'storage_bin', 'desk', 'tv_stand', 'coffee_table']
Clip similarities: [0.78662109375, 0.78662109375, 0.8212890625, 0.74169921875, 0.75244140625, 0.71142578125]
DEBUG best_match_after_iou_check [tensor(88), tensor(51)]
DEBUG uniques tensor([51, 88]) tensor([1, 1])
Matched 1 times with 51
Matched 1 times with 88
iou for matched labels tensor([0.4597, 0.4133])
Matched labels: ['door', 'bathroom_counter']
Clip similarities: [0.73779296875, 0.640625]
DEBUG best_match_after_iou_check [tensor(48), tensor(116), tensor(100), tensor(127)]
DEBUG uniques tensor([ 48, 100, 116, 127]) tensor([1, 1, 1, 1])
Matched 1 times with 48
Matched 1 times with 100
Matched 1 times with 116
Matched 1 times with 127
iou for matched labels tensor([0.4832, 0.7251, 0.6907, 0.5079])
Matched labels: ['table', 'laptop', 'bin', 'light_switch']
Clip similarities: [0.73095703125, 0.72802734375, 0.7333984375, 0.67626953125]
DEBUG best_match_after_iou_check [tensor(55), tensor(28), tensor(89)]
DEBUG uniques tensor([28, 55, 89]) tensor([1, 1, 1])
Matched 1 times with 28
Matched 1 times with 55
Matched 1 times with 89
iou for matched labels tensor([0.4692, 0.5399, 0.6666])
Matched labels: ['table', 'desk', 'projector_screen']
Clip similarities: [0.73095703125, 0.74169921875, 0.63525390625]
DEBUG best_match_after_iou_check [tensor(80), tensor(115), tensor(85), tensor(45)]
DEBUG uniques tensor([ 45,  80,  85, 115]) tensor([1, 1, 1, 1])
Matched 1 times with 45
Matched 1 times with 80
Matched 1 times with 85
Matched 1 times with 115
iou for matched labels tensor([0.6313, 0.5599, 0.5138, 0.7016])
Matched labels: ['bed', 'nightstand', 'bookshelf', 'dresser']
Clip similarities: [0.62890625, 0.7060546875, 0.822265625, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(96)]
DEBUG uniques tensor([96]) tensor([1])
Matched 1 times with 96
iou for matched labels tensor([0.6827])
Matched labels: ['sink']
Clip similarities: [0.6943359375]
DEBUG best_match_after_iou_check [tensor(91), tensor(128), tensor(23), tensor(126), tensor(74), tensor(178)]
DEBUG uniques tensor([ 23,  74,  91, 126, 128, 178]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 23
Matched 1 times with 74
Matched 1 times with 91
Matched 1 times with 126
Matched 1 times with 128
Matched 1 times with 178
iou for matched labels tensor([0.4111, 0.7857, 0.3537, 0.7414, 0.6017, 0.4451])
Matched labels: ['desk', 'file_cabinet', 'file_cabinet', 'file_cabinet', 'file_cabinet', 'refrigerator']
Clip similarities: [0.74169921875, 0.97216796875, 0.97216796875, 0.97216796875, 0.97216796875, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(118), tensor(29), tensor(28), tensor(56), tensor(178), tensor(223), tensor(153), tensor(118)]
DEBUG uniques tensor([ 28,  29,  56, 118, 153, 178, 223]) tensor([1, 1, 1, 2, 1, 1, 1])
Matched 1 times with 28
Matched 1 times with 29
Matched 1 times with 56
Matched 2 times with 118
Merge stage2 masks
Matched 1 times with 153
Matched 1 times with 178
Matched 1 times with 223
iou for matched labels tensor([0.3644, 0.7179, 0.6793, 0.4381, 0.5081, 0.6858, 0.7497])
Matched labels: ['copier', 'desk', 'bin', 'copier', 'cabinet', 'mini_fridge', 'file_cabinet']
Clip similarities: [0.74609375, 0.74169921875, 0.7333984375, 0.74609375, 0.861328125, 0.7177734375, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(74), tensor(56), tensor(27)]
DEBUG uniques tensor([27, 56, 74]) tensor([1, 1, 1])
Matched 1 times with 27
Matched 1 times with 56
Matched 1 times with 74
iou for matched labels tensor([0.5481, 0.7991, 0.2841])
Matched labels: ['bag', 'laundry_hamper', 'washing_machine']
Clip similarities: [0.712890625, 0.72216796875, 0.69287109375]
DEBUG best_match_after_iou_check [tensor(76), tensor(11), tensor(156)]
DEBUG uniques tensor([ 11,  76, 156]) tensor([1, 1, 1])
Matched 1 times with 11
Matched 1 times with 76
Matched 1 times with 156
iou for matched labels tensor([0.8223, 0.6649, 0.8140])
Matched labels: ['shelf', 'desk', 'shelf']
Clip similarities: [0.78662109375, 0.74169921875, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(104), tensor(96), tensor(7)]
DEBUG uniques tensor([  7,  96, 104]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 96
Matched 1 times with 104
iou for matched labels tensor([0.2327, 0.4933, 0.8761])
Matched labels: ['table', 'blackboard', 'bin']
Clip similarities: [0.73095703125, 0.6328125, 0.7333984375]
DEBUG best_match_after_iou_check [tensor(16), tensor(68)]
DEBUG uniques tensor([16, 68]) tensor([1, 1])
Matched 1 times with 16
Matched 1 times with 68
iou for matched labels tensor([0.6036, 0.5155])
Matched labels: ['kitchen_counter', 'refrigerator']
Clip similarities: [0.6630859375, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(6)]
DEBUG uniques tensor([6]) tensor([1])
Matched 1 times with 6
iou for matched labels tensor([0.7416])
Matched labels: ['refrigerator']
Clip similarities: [0.73583984375]
DEBUG best_match_after_iou_check [tensor(147), tensor(162), tensor(17), tensor(98), tensor(197)]
DEBUG uniques tensor([ 17,  98, 147, 162, 197]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 98
Matched 1 times with 147
Matched 1 times with 162
Matched 1 times with 197
iou for matched labels tensor([0.7674, 0.5554, 0.5648, 0.5865, 0.2568])
Matched labels: ['coffee_table', 'monitor', 'box', 'refrigerator', 'guitar']
Clip similarities: [0.71142578125, 0.68212890625, 0.75634765625, 0.73583984375, 0.673828125]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(4), tensor(11), tensor(191)]
DEBUG uniques tensor([  4,  11, 191]) tensor([1, 1, 1])
Matched 1 times with 4
Matched 1 times with 11
Matched 1 times with 191
iou for matched labels tensor([0.6965, 0.6982, 0.2605])
Matched labels: ['door', 'radiator', 'chair']
Clip similarities: [0.73779296875, 0.66845703125, 0.70654296875]
DEBUG best_match_after_iou_check [tensor(190), tensor(0)]
DEBUG uniques tensor([  0, 190]) tensor([1, 1])
Matched 1 times with 0
Matched 1 times with 190
iou for matched labels tensor([0.6440, 0.4679])
Matched labels: ['tv_stand', 'radiator']
Clip similarities: [0.75244140625, 0.66845703125]
DEBUG best_match_after_iou_check [tensor(203), tensor(22), tensor(33), tensor(56), tensor(67), tensor(67), tensor(225)]
DEBUG uniques tensor([ 22,  33,  56,  67, 203, 225]) tensor([1, 1, 1, 2, 1, 1])
Matched 1 times with 22
Matched 1 times with 33
Matched 1 times with 56
Matched 2 times with 67
Merge stage2 masks
Matched 1 times with 203
Matched 1 times with 225
iou for matched labels tensor([0.1822, 0.5549, 0.6707, 0.0997, 0.2248, 0.7698])
Matched labels: ['desk', 'door', 'desk', 'folded_chair', 'desk', 'desk']
Clip similarities: [0.74169921875, 0.73779296875, 0.74169921875, 0.615234375, 0.74169921875, 0.74169921875]
DEBUG best_match_after_iou_check [tensor(2), tensor(306), tensor(306), tensor(13)]
DEBUG uniques tensor([  2,  13, 306]) tensor([1, 1, 2])
Matched 1 times with 2
Matched 1 times with 13
Matched 2 times with 306
Merge stage2 masks
iou for matched labels tensor([0.5839, 0.6007, 0.7492])
Matched labels: ['mattress', 'shelf', 'tv_stand']
Clip similarities: [0.6953125, 0.78662109375, 0.75244140625]
DEBUG best_match_after_iou_check [tensor(71), tensor(103), tensor(88), tensor(24)]
DEBUG uniques tensor([ 24,  71,  88, 103]) tensor([1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 71
Matched 1 times with 88
Matched 1 times with 103
iou for matched labels tensor([0.7660, 0.6546, 0.4064, 0.8897])
Matched labels: ['shelf', 'furniture', 'crate', 'closet_door']
Clip similarities: [0.78662109375, 0.765625, 0.7734375, 0.72998046875]
DEBUG best_match_after_iou_check [tensor(146), tensor(230), tensor(77), tensor(25), tensor(103), tensor(140), tensor(76)]
DEBUG uniques tensor([ 25,  76,  77, 103, 140, 146, 230]) tensor([1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 25
Matched 1 times with 76
Matched 1 times with 77
Matched 1 times with 103
Matched 1 times with 140
Matched 1 times with 146
Matched 1 times with 230
iou for matched labels tensor([0.5657, 0.6887, 0.5139, 0.6606, 0.4849, 0.4955, 0.7107])
Matched labels: Select thresholds for refinement:  79%|███████▉  | 112/142 [00:30<00:08,  3.48it/s]Select thresholds for refinement:  80%|███████▉  | 113/142 [00:30<00:08,  3.28it/s]Select thresholds for refinement:  80%|████████  | 114/142 [00:31<00:09,  2.99it/s]Select thresholds for refinement:  81%|████████  | 115/142 [00:31<00:08,  3.31it/s]Select thresholds for refinement:  82%|████████▏ | 116/142 [00:31<00:07,  3.63it/s]Select thresholds for refinement:  82%|████████▏ | 117/142 [00:31<00:06,  3.90it/s]Select thresholds for refinement:  83%|████████▎ | 118/142 [00:32<00:05,  4.31it/s]Select thresholds for refinement:  84%|████████▍ | 119/142 [00:32<00:06,  3.65it/s]Select thresholds for refinement:  85%|████████▍ | 120/142 [00:32<00:05,  3.97it/s]Select thresholds for refinement:  85%|████████▌ | 121/142 [00:32<00:05,  3.85it/s]Select thresholds for refinement:  86%|████████▌ | 122/142 [00:33<00:04,  4.72it/s]Select thresholds for refinement:  87%|████████▋ | 123/142 [00:33<00:04,  4.42it/s]Select thresholds for refinement:  87%|████████▋ | 124/142 [00:33<00:03,  4.84it/s]Select thresholds for refinement:  88%|████████▊ | 125/142 [00:33<00:03,  4.26it/s]Select thresholds for refinement:  89%|████████▊ | 126/142 [00:34<00:03,  4.19it/s]Select thresholds for refinement:  89%|████████▉ | 127/142 [00:34<00:03,  4.62it/s]Select thresholds for refinement:  90%|█████████ | 128/142 [00:34<00:03,  3.57it/s]Select thresholds for refinement:  91%|█████████ | 129/142 [00:34<00:03,  4.18it/s]Select thresholds for refinement:  92%|█████████▏| 130/142 [00:35<00:02,  4.28it/s]['desk', 'trash_can', 'desk', 'shelf', 'desk', 'shelf', 'refrigerator']
Clip similarities: [0.74169921875, 0.7451171875, 0.74169921875, 0.78662109375, 0.74169921875, 0.78662109375, 0.73583984375]
DEBUG best_match_after_iou_check [tensor(147), tensor(239), tensor(247), tensor(278), tensor(13)]
DEBUG uniques tensor([ 13, 147, 239, 247, 278]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 147
Matched 1 times with 239
Matched 1 times with 247
Matched 1 times with 278
iou for matched labels tensor([0.6912, 0.6075, 0.4411, 0.2274, 0.4186])
Matched labels: ['mini_fridge', 'box', 'case_of_water_bottles', 'folded_chair', 'monitor']
Clip similarities: [0.7177734375, 0.75634765625, 0.70068359375, 0.615234375, 0.68212890625]
DEBUG best_match_after_iou_check [tensor(24), tensor(296), tensor(66), tensor(65)]
DEBUG uniques tensor([ 24,  65,  66, 296]) tensor([1, 1, 1, 1])
Matched 1 times with 24
Matched 1 times with 65
Matched 1 times with 66
Matched 1 times with 296
iou for matched labels tensor([0.6435, 0.7082, 0.7033, 0.5484])
Matched labels: ['dresser', 'monitor', 'bin', 'dresser']
Clip similarities: [0.76025390625, 0.68212890625, 0.7333984375, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(78), tensor(118), tensor(86), tensor(174)]
DEBUG uniques tensor([ 78,  86, 118, 174]) tensor([1, 1, 1, 1])
Matched 1 times with 78
Matched 1 times with 86
Matched 1 times with 118
Matched 1 times with 174
iou for matched labels tensor([0.2203, 0.5013, 0.1453, 0.4143])
Matched labels: ['table', 'door', 'table', 'tv']
Clip similarities: [0.73095703125, 0.73779296875, 0.73095703125, 0.68798828125]
DEBUG best_match_after_iou_check [tensor(223), tensor(193), tensor(30), tensor(17)]
DEBUG uniques tensor([ 17,  30, 193, 223]) tensor([1, 1, 1, 1])
Matched 1 times with 17
Matched 1 times with 30
Matched 1 times with 193
Matched 1 times with 223
iou for matched labels tensor([0.3761, 0.5732, 0.5917, 0.5141])
Matched labels: ['bed', 'shelf', 'storage_bin', 'shelf']
Clip similarities: [0.62890625, 0.78662109375, 0.8212890625, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(1), tensor(154), tensor(127)]
DEBUG uniques tensor([  1, 127, 154]) tensor([1, 1, 1])
Matched 1 times with 1
Matched 1 times with 127
Matched 1 times with 154
iou for matched labels tensor([0.8693, 0.6471, 0.7693])
Matched labels: ['refrigerator', 'range_hood', 'dishwasher']
Clip similarities: [0.73583984375, 0.57421875, 0.65478515625]
DEBUG best_match_after_iou_check [tensor(94)]
DEBUG uniques tensor([94]) tensor([1])
Matched 1 times with 94
iou for matched labels tensor([0.8141])
Matched labels: ['dresser']
Clip similarities: [0.76025390625]
DEBUG best_match_after_iou_check [tensor(80), tensor(107), tensor(173), tensor(108), tensor(35), tensor(96), tensor(46), tensor(54), tensor(139), tensor(18)]
DEBUG uniques tensor([ 18,  35,  46,  54,  80,  96, 107, 108, 139, 173]) tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 35
Matched 1 times with 46
Matched 1 times with 54
Matched 1 times with 80
Matched 1 times with 96
Matched 1 times with 107
Matched 1 times with 108
Matched 1 times with 139
Matched 1 times with 173
iou for matched labels tensor([0.7793, 0.7951, 0.7350, 0.6707, 0.6503, 0.6180, 0.7149, 0.8188, 0.8006,
        0.8583])
Matched labels: ['desk', 'file_cabinet', 'file_cabinet', 'file_cabinet', 'box', 'bin', 'bin', 'desk', 'file_cabinet', 'file_cabinet']
Clip similarities: [0.74169921875, 0.97216796875, 0.97216796875, 0.97216796875, 0.75634765625, 0.7333984375, 0.7333984375, 0.74169921875, 0.97216796875, 0.97216796875]
DEBUG best_match_after_iou_check [tensor(57)]
DEBUG uniques tensor([57]) tensor([1])
Matched 1 times with 57
iou for matched labels tensor([0.3707])
Matched labels: ['table']
Clip similarities: [0.73095703125]
DEBUG best_match_after_iou_check [tensor(73), tensor(44), tensor(116), tensor(77), tensor(44)]
DEBUG uniques tensor([ 44,  73,  77, 116]) tensor([2, 1, 1, 1])
Matched 2 times with 44
Merge stage2 masks
Matched 1 times with 73
Matched 1 times with 77
Matched 1 times with 116
iou for matched labels tensor([0.5006, 0.7346, 0.4330, 0.6008])
Matched labels: ['tv_stand', 'tv_stand', 'closet_door', 'tv_stand']
Clip similarities: [0.75244140625, 0.75244140625, 0.72998046875, 0.75244140625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(66), tensor(197), tensor(23), tensor(34), tensor(105), tensor(30)]
DEBUG uniques tensor([ 23,  30,  34,  66, 105, 197]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 23
Matched 1 times with 30
Matched 1 times with 34
Matched 1 times with 66
Matched 1 times with 105
Matched 1 times with 197
iou for matched labels tensor([0.6495, 0.7633, 0.3481, 0.6798, 0.4524, 0.5677])
Matched labels: ['file_cabinet', 'suitcase', 'shelf', 'shelf', 'shelf', 'shelf']
Clip similarities: [0.97216796875, 0.775390625, 0.78662109375, 0.78662109375, 0.78662109375, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(117), tensor(90)]
DEBUG uniques tensor([ 90, 117]) tensor([1, 1])
Matched 1 times with 90
Matched 1 times with 117
iou for matched labels tensor([0.4126, 0.6489])
Matched labels: ['closet_door', 'bathroom_counter']
Clip similarities: [0.72998046875, 0.640625]
DEBUG best_match_after_iou_check [tensor(56), tensor(15), tensor(139)]
DEBUG uniques tensor([ 15,  56, 139]) tensor([1, 1, 1])
Matched 1 times with 15
Matched 1 times with 56
Matched 1 times with 139
iou for matched labels tensor([0.4717, 0.7194, 0.7381])
Matched labels: ['folded_chair', 'desk', 'folded_chair']
Clip similarities: [0.615234375, 0.74169921875, 0.615234375]
DEBUG best_match_after_iou_check [tensor(3), tensor(136), tensor(90), tensor(252), tensor(55), tensor(60)]
DEBUG uniques tensor([  3,  55,  60,  90, 136, 252]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 3
Matched 1 times with 55
Matched 1 times with 60
Matched 1 times with 90
Matched 1 times with 136
Matched 1 times with 252
iou for matched labels tensor([0.3990, 0.6945, 0.7294, 0.4376, 0.7814, 0.6840])
Matched labels: ['dishwasher', 'kitchen_cabinet', 'dresser', 'door', 'kitchen_counter', 'shelf']
Clip similarities: [0.65478515625, 0.783203125, 0.76025390625, 0.73779296875, 0.6630859375, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(110)]
DEBUG uniques tensor([110]) tensor([1])
Matched 1 times with 110
iou for matched labels tensor([0.5319])
Matched labels: ['folded_chair']
Clip similarities: [0.615234375]
DEBUG best_match_after_iou_check [tensor(44), tensor(12), tensor(53), tensor(12), tensor(23), tensor(170), tensor(137), tensor(157), tensor(6), tensor(12), tensor(6)]
DEBUG uniques tensor([  6,  12,  23,  44,  53, 137, 157, 170]) tensor([2, 3, 1, 1, 1, 1, 1, 1])
Matched 2 times with 6
Merge stage2 masks
Matched 3 times with 12
Merge stage2 masks
Matched 1 times with 23
Matched 1 times with 44
Matched 1 times with 53
Matched 1 times with 137
Matched 1 times with 157
Matched 1 times with 170
iou for matched labels tensor([0.6522, 0.4945, 0.4500, 0.6886, 0.3519, 0.4092, 0.1086, 0.2196])
Matched labels: ['storage_bin', 'washing_machine', 'washing_machine', 'laundry_detergent', 'washing_machine', 'washing_machine', 'washing_machine', 'washing_machine']
Clip similarities: [0.8212890625, 0.69287109375, 0.69287109375, 0.640625, 0.69287109375, 0.69287109375, 0.69287109375, 0.69287109375]
DEBUG best_match_after_iou_check [tensor(8), tensor(7), tensor(57)]
DEBUG uniques tensor([ 7,  8, 57]) tensor([1, 1, 1])
Matched 1 times with 7
Matched 1 times with 8
Matched 1 times with 57
iou for matched labels tensor([0.8604, 0.7494, 0.6851])
Matched labels: ['box', 'desk', 'radiator']
Clip similarities: [0.75634765625, 0.74169921875, 0.66845703125]
DEBUG best_match_after_iou_check [tensor(55), tensor(112), tensor(14), tensor(68)]
DEBUG uniques tensor([ 14,  55,  68, 112]) tensor([1, 1, 1, 1])
Matched 1 times with 14
Matched 1 times with 55
Matched 1 times with 68
Matched 1 times with 112
iou for matched labels tensor([0.6424, 0.5648, 0.6555, 0.5127])
Matched labels: ['bin', 'printer', 'file_cabinet', 'closet_door']
Clip similarities: [0.7333984375, 0.75390625, 0.97216796875, 0.72998046875]
DEBUG best_match_after_iou_check Select thresholds for refinement:  92%|█████████▏| 131/142 [00:35<00:02,  4.33it/s]Select thresholds for refinement:  93%|█████████▎| 132/142 [00:35<00:02,  4.35it/s]Select thresholds for refinement:  94%|█████████▎| 133/142 [00:35<00:01,  4.54it/s]Select thresholds for refinement:  95%|█████████▌| 135/142 [00:35<00:01,  5.05it/s]Select thresholds for refinement:  96%|█████████▌| 136/142 [00:36<00:01,  4.43it/s]Select thresholds for refinement:  96%|█████████▋| 137/142 [00:36<00:01,  4.22it/s]Select thresholds for refinement:  97%|█████████▋| 138/142 [00:36<00:00,  4.22it/s]Select thresholds for refinement:  98%|█████████▊| 139/142 [00:37<00:00,  4.11it/s]Select thresholds for refinement:  99%|█████████▊| 140/142 [00:37<00:00,  4.63it/s]Select thresholds for refinement:  99%|█████████▉| 141/142 [00:37<00:00,  4.91it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  3.99it/s]Select thresholds for refinement: 100%|██████████| 142/142 [00:37<00:00,  3.76it/s]
[tensor(6), tensor(68), tensor(76), tensor(19)]
DEBUG uniques tensor([ 6, 19, 68, 76]) tensor([1, 1, 1, 1])
Matched 1 times with 6
Matched 1 times with 19
Matched 1 times with 68
Matched 1 times with 76
iou for matched labels tensor([0.8029, 0.7477, 0.6939, 0.8128])
Matched labels: ['paper_towel_dispenser', 'bathroom_stall_door', 'paper_towel_dispenser', 'paper_towel_dispenser']
Clip similarities: [0.64892578125, 0.64501953125, 0.64892578125, 0.64892578125]
DEBUG best_match_after_iou_check [tensor(18), tensor(98)]
DEBUG uniques tensor([18, 98]) tensor([1, 1])
Matched 1 times with 18
Matched 1 times with 98
iou for matched labels tensor([0.2116, 0.0931])
Matched labels: ['folded_chair', 'folded_chair']
Clip similarities: [0.615234375, 0.615234375]
DEBUG best_match_after_iou_check [tensor(51)]
DEBUG uniques tensor([51]) tensor([1])
Matched 1 times with 51
iou for matched labels tensor([0.5188])
Matched labels: ['cabinet']
Clip similarities: [0.861328125]
DEBUG best_match_after_iou_check [tensor(82)]
DEBUG uniques tensor([82]) tensor([1])
Matched 1 times with 82
iou for matched labels tensor([0.7031])
Matched labels: ['bathroom_cabinet']
Clip similarities: [0.75]
DEBUG best_match_after_iou_check [tensor(91), tensor(100), tensor(220), tensor(25), tensor(73)]
DEBUG uniques tensor([ 25,  73,  91, 100, 220]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 25
Matched 1 times with 73
Matched 1 times with 91
Matched 1 times with 100
Matched 1 times with 220
iou for matched labels tensor([0.2860, 0.2839, 0.4213, 0.5607, 0.4652])
Matched labels: ['laptop', 'closet_wall', 'dresser', 'desk', 'rail']
Clip similarities: [0.72802734375, 0.7138671875, 0.76025390625, 0.74169921875, 0.62060546875]
DEBUG best_match_after_iou_check [tensor(154), tensor(75), tensor(217), tensor(18)]
DEBUG uniques tensor([ 18,  75, 154, 217]) tensor([1, 1, 1, 1])
Matched 1 times with 18
Matched 1 times with 75
Matched 1 times with 154
Matched 1 times with 217
iou for matched labels tensor([0.7156, 0.7753, 0.4704, 0.3821])
Matched labels: ['dining_table', 'dresser', 'bar', 'shelf']
Clip similarities: [0.6953125, 0.76025390625, 0.66552734375, 0.78662109375]
DEBUG best_match_after_iou_check [tensor(35), tensor(36), tensor(40), tensor(101), tensor(49), tensor(16)]
DEBUG uniques tensor([ 16,  35,  36,  40,  49, 101]) tensor([1, 1, 1, 1, 1, 1])
Matched 1 times with 16
Matched 1 times with 35
Matched 1 times with 36
Matched 1 times with 40
Matched 1 times with 49
Matched 1 times with 101
iou for matched labels tensor([0.6719, 0.6960, 0.7610, 0.7184, 0.5685, 0.3735])
Matched labels: ['dresser', 'dresser', 'radiator', 'dresser', 'dresser', 'bed']
Clip similarities: [0.76025390625, 0.76025390625, 0.66845703125, 0.76025390625, 0.76025390625, 0.62890625]
DEBUG best_match_after_iou_check [tensor(81), tensor(13), tensor(51), tensor(159), tensor(178)]
DEBUG uniques tensor([ 13,  51,  81, 159, 178]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 13
Matched 1 times with 51
Matched 1 times with 81
Matched 1 times with 159
Matched 1 times with 178
iou for matched labels tensor([0.8458, 0.8512, 0.8207, 0.3266, 0.4547])
Matched labels: ['radiator', 'laundry_hamper', 'radiator', 'closet_door', 'dresser']
Clip similarities: [0.66845703125, 0.72216796875, 0.66845703125, 0.72998046875, 0.76025390625]
DEBUG best_match_after_iou_check [tensor(144), tensor(107), tensor(31), tensor(1), tensor(168)]
DEBUG uniques tensor([  1,  31, 107, 144, 168]) tensor([1, 1, 1, 1, 1])
Matched 1 times with 1
Matched 1 times with 31
Matched 1 times with 107
Matched 1 times with 144
Matched 1 times with 168
iou for matched labels tensor([0.3848, 0.7259, 0.5611, 0.3296, 0.6413])
Matched labels: ['shelf', 'file_cabinet', 'door', 'whiteboard', 'monitor']
Clip similarities: [0.78662109375, 0.97216796875, 0.73779296875, 0.6083984375, 0.68212890625]
Empty stage 2 mask
DEBUG best_match_after_iou_check [tensor(4), tensor(90)]
DEBUG uniques tensor([ 4, 90]) tensor([1, 1])
Matched 1 times with 4
Matched 1 times with 90
iou for matched labels tensor([0.7606, 0.7867])
Matched labels: ['vent', 'bathroom_stall_door']
Clip similarities: [0.69287109375, 0.64501953125]
DEBUG best_match_after_iou_check [tensor(332), tensor(341), tensor(55), tensor(63), tensor(289), tensor(240), tensor(157), tensor(183), tensor(95), tensor(31), tensor(31)]
DEBUG uniques tensor([ 31,  55,  63,  95, 157, 183, 240, 289, 332, 341]) tensor([2, 1, 1, 1, 1, 1, 1, 1, 1, 1])
Matched 2 times with 31
Merge stage2 masks
Matched 1 times with 55
Matched 1 times with 63
Matched 1 times with 95
Matched 1 times with 157
Matched 1 times with 183
Matched 1 times with 240
Matched 1 times with 289
Matched 1 times with 332
Matched 1 times with 341
iou for matched labels tensor([0.0957, 0.0451, 0.2345, 0.0694, 0.1850, 0.1704, 0.2535, 0.5101, 0.2466,
        0.2498])
Matched labels: ['dustpan', 'bar', 'bin', 'bulletin_board', 'shelf', 'bin', 'paper_cutter', 'closet_door', 'bin', 'copier']
Clip similarities: [0.69873046875, 0.66552734375, 0.7333984375, 0.73291015625, 0.78662109375, 0.7333984375, 0.6767578125, 0.72998046875, 0.7333984375, 0.74609375]
Unique similarities: [0.5703125, 0.57421875, 0.58935546875, 0.6083984375, 0.615234375, 0.62060546875, 0.62109375, 0.62158203125, 0.62890625, 0.6328125, 0.63525390625, 0.640625, 0.64501953125, 0.64892578125, 0.6533203125, 0.65478515625, 0.6611328125, 0.6630859375, 0.66552734375, 0.66845703125, 0.6708984375, 0.673828125, 0.6748046875, 0.67626953125, 0.6767578125, 0.677734375, 0.68212890625, 0.68798828125, 0.69287109375, 0.6943359375, 0.6953125, 0.69677734375, 0.69873046875, 0.70068359375, 0.7041015625, 0.705078125, 0.7060546875, 0.70654296875, 0.71044921875, 0.71142578125, 0.7119140625, 0.712890625, 0.7138671875, 0.71435546875, 0.71630859375, 0.716796875, 0.7177734375, 0.72216796875, 0.72509765625, 0.72802734375, 0.72998046875, 0.73095703125, 0.73291015625, 0.7333984375, 0.73583984375, 0.73779296875, 0.74169921875, 0.7451171875, 0.74609375, 0.74951171875, 0.75, 0.75244140625, 0.75390625, 0.75537109375, 0.75634765625, 0.7587890625, 0.76025390625, 0.765625, 0.7724609375, 0.7734375, 0.775390625, 0.779296875, 0.783203125, 0.78662109375, 0.8212890625, 0.822265625, 0.861328125, 0.97216796875]
Refining stage1 output with stage2 outcomes: 0it [00:00, ?it/s]Refining stage1 output with stage2 outcomes: 39it [00:00, 386.02it/s]DEBUG all ious tensor([0.4264, 0.4804, 0.3722])
USE STAGE 2 MASK tensor(0.4264)
USE STAGE 1 MASK tensor(0.4804)
USE STAGE 2 MASK tensor(0.3722)
DEBUG all ious tensor([0.5349, 0.2678, 0.7140, 0.2041])
USE STAGE 1 MASK tensor(0.5349)
USE STAGE 2 MASK tensor(0.2678)
USE STAGE 1 MASK tensor(0.7140)
USE STAGE 2 MASK tensor(0.2041)
DEBUG all ious tensor([0.2891, 0.7558, 0.6290])
USE STAGE 2 MASK tensor(0.2891)
USE STAGE 1 MASK tensor(0.7558)
USE STAGE 1 MASK tensor(0.6290)
DEBUG all ious tensor([0.7241, 0.6515, 0.6501, 0.7325])
USE STAGE 1 MASK tensor(0.7241)
USE STAGE 1 MASK tensor(0.6515)
USE STAGE 1 MASK tensor(0.6501)
USE STAGE 1 MASK tensor(0.7325)
DEBUG all ious tensor([0.6313, 0.2386, 0.2922, 0.5566, 0.4143])
USE STAGE 1 MASK tensor(0.6313)
USE STAGE 2 MASK tensor(0.2386)
USE STAGE 2 MASK tensor(0.2922)
USE STAGE 1 MASK tensor(0.5566)
USE STAGE 2 MASK tensor(0.4143)
DEBUG all ious tensor([0.7439, 0.7265, 0.7054])
USE STAGE 1 MASK tensor(0.7439)
USE STAGE 1 MASK tensor(0.7265)
USE STAGE 1 MASK tensor(0.7054)
DEBUG all ious tensor([0.5848, 0.1947, 0.2609, 0.3390, 0.4385])
USE STAGE 1 MASK tensor(0.5848)
USE STAGE 2 MASK tensor(0.1947)
USE STAGE 2 MASK tensor(0.2609)
USE STAGE 2 MASK tensor(0.3390)
USE STAGE 2 MASK tensor(0.4385)
DEBUG all ious tensor([0.6976, 0.4738, 0.7360, 0.2712])
USE STAGE 1 MASK tensor(0.6976)
USE STAGE 1 MASK tensor(0.4738)
USE STAGE 1 MASK tensor(0.7360)
USE STAGE 2 MASK tensor(0.2712)
DEBUG all ious tensor([0.6045, 0.3059, 0.3930, 0.4558])
USE STAGE 1 MASK tensor(0.6045)
USE STAGE 2 MASK tensor(0.3059)
USE STAGE 2 MASK tensor(0.3930)
USE STAGE 1 MASK tensor(0.4558)
DEBUG all ious tensor([0.7137, 0.3596, 0.4452, 0.4893, 0.3409, 0.5217])
USE STAGE 1 MASK tensor(0.7137)
USE STAGE 2 MASK tensor(0.3596)
USE STAGE 2 MASK tensor(0.4452)
USE STAGE 1 MASK tensor(0.4893)
USE STAGE 2 MASK tensor(0.3409)
USE STAGE 1 MASK tensor(0.5217)
DEBUG all ious tensor([0.4757])
USE STAGE 1 MASK tensor(0.4757)
DEBUG all ious tensor([0.3473, 0.7113, 0.7640, 0.6583])
USE STAGE 2 MASK tensor(0.3473)
USE STAGE 1 MASK tensor(0.7113)
USE STAGE 1 MASK tensor(0.7640)
USE STAGE 1 MASK tensor(0.6583)
DEBUG all ious tensor([0.8520, 0.3459])
USE STAGE 1 MASK tensor(0.8520)
USE STAGE 2 MASK tensor(0.3459)
DEBUG all ious tensor([0.2082])
USE STAGE 2 MASK tensor(0.2082)
DEBUG all ious tensor([0.5314, 0.6938])
USE STAGE 1 MASK tensor(0.5314)
USE STAGE 1 MASK tensor(0.6938)
DEBUG all ious tensor([0.7413])
USE STAGE 1 MASK tensor(0.7413)
DEBUG all ious tensor([0.3660, 0.5899, 0.1891, 0.3490, 0.5587, 0.6790, 0.8074])
USE STAGE 2 MASK tensor(0.3660)
USE STAGE 1 MASK tensor(0.5899)
USE STAGE 2 MASK tensor(0.1891)
USE STAGE 2 MASK tensor(0.3490)
USE STAGE 1 MASK tensor(0.5587)
USE STAGE 1 MASK tensor(0.6790)
USE STAGE 1 MASK tensor(0.8074)
DEBUG all ious tensor([0.6727, 0.4910, 0.7030, 0.3417, 0.4548])
USE STAGE 1 MASK tensor(0.6727)
USE STAGE 1 MASK tensor(0.4910)
USE STAGE 1 MASK tensor(0.7030)
USE STAGE 2 MASK tensor(0.3417)
USE STAGE 1 MASK tensor(0.4548)
DEBUG all ious tensor([0.0514, 0.0212, 0.1747, 0.1616, 0.3223, 0.0285, 0.0851, 0.2336])
USE STAGE 2 MASK tensor(0.0514)
USE STAGE 2 MASK tensor(0.0212)
USE STAGE 2 MASK tensor(0.1747)
USE STAGE 2 MASK tensor(0.1616)
USE STAGE 2 MASK tensor(0.3223)
USE STAGE 2 MASK tensor(0.0285)
USE STAGE 2 MASK tensor(0.0851)
USE STAGE 2 MASK tensor(0.2336)
DEBUG all ious tensor([0.3461, 0.6799, 0.6455, 0.8316])
USE STAGE 2 MASK tensor(0.3461)
USE STAGE 1 MASK tensor(0.6799)
USE STAGE 1 MASK tensor(0.6455)
USE STAGE 1 MASK tensor(0.8316)
DEBUG all ious tensor([0.7864, 0.5252, 0.8027, 0.3816, 0.9379, 0.5124, 0.6806, 0.8366])
USE STAGE 1 MASK tensor(0.7864)
USE STAGE 1 MASK tensor(0.5252)
USE STAGE 1 MASK tensor(0.8027)
USE STAGE 2 MASK tensor(0.3816)
USE STAGE 1 MASK tensor(0.9379)
USE STAGE 1 MASK tensor(0.5124)
USE STAGE 1 MASK tensor(0.6806)
USE STAGE 1 MASK tensor(0.8366)
DEBUG all ious tensor([0.7439])
USE STAGE 1 MASK tensor(0.7439)
DEBUG all ious tensor([0.8348, 0.8093, 0.7132, 0.4622, 0.2720, 0.7717, 0.3976, 0.5009])
USE STAGE 1 MASK tensor(0.8348)
USE STAGE 1 MASK tensor(0.8093)
USE STAGE 1 MASK tensor(0.7132)
USE STAGE 1 MASK tensor(0.4622)
USE STAGE 2 MASK tensor(0.2720)
USE STAGE 1 MASK tensor(0.7717)
USE STAGE 2 MASK tensor(0.3976)
USE STAGE 1 MASK tensor(0.5009)
DEBUG all ious tensor([0.6719])
USE STAGE 1 MASK tensor(0.6719)
DEBUG all ious tensor([0.8429, 0.8905])
USE STAGE 1 MASK tensor(0.8429)
USE STAGE 1 MASK tensor(0.8905)
DEBUG all ious tensor([0.5468, 0.5331])
USE STAGE 1 MASK tensor(0.5468)
USE STAGE 1 MASK tensor(0.5331)
DEBUG all ious tensor([0.7173])
USE STAGE 1 MASK tensor(0.7173)
DEBUG all ious tensor([0.5873, 0.3155, 0.4837, 0.6679])
USE STAGE 1 MASK tensor(0.5873)
USE STAGE 2 MASK tensor(0.3155)
USE STAGE 1 MASK tensor(0.4837)
USE STAGE 1 MASK tensor(0.6679)
DEBUG all ious tensor([0.6013, 0.7470, 0.5733, 0.5079, 0.4919, 0.4623, 0.7027, 0.6409, 0.6260])
USE STAGE 1 MASK tensor(0.6013)
USE STAGE 1 MASK tensor(0.7470)
USE STAGE 1 MASK tensor(0.5733)
USE STAGE 1 MASK tensor(0.5079)
USE STAGE 1 MASK tensor(0.4919)
USE STAGE 1 MASK tensor(0.4623)
USE STAGE 1 MASK tensor(0.7027)
USE STAGE 1 MASK tensor(0.6409)
USE STAGE 1 MASK tensor(0.6260)
DEBUG all ious tensor([0.5655, 0.5007, 0.5518])
USE STAGE 1 MASK tensor(0.5655)
USE STAGE 1 MASK tensor(0.5007)
USE STAGE 1 MASK tensor(0.5518)
DEBUG all ious tensor([0.2456, 0.6516, 0.5829, 0.6080, 0.6192, 0.3983, 0.6937])
USE STAGE 2 MASK tensor(0.2456)
USE STAGE 1 MASK tensor(0.6516)
USE STAGE 1 MASK tensor(0.5829)
USE STAGE 1 MASK tensor(0.6080)
USE STAGE 1 MASK tensor(0.6192)
USE STAGE 2 MASK tensor(0.3983)
USE STAGE 1 MASK tensor(0.6937)
DEBUG all ious tensor([0.6337, 0.9081, 0.5573, 0.4600])
USE STAGE 1 MASK tensor(0.6337)
USE STAGE 1 MASK tensor(0.9081)
USE STAGE 1 MASK tensor(0.5573)
USE STAGE 1 MASK tensor(0.4600)
DEBUG all ious tensor([0.3482, 0.6977, 0.6843, 0.5005, 0.5495])
USE STAGE 2 MASK tensor(0.3482)
USE STAGE 1 MASK tensor(0.6977)
USE STAGE 1 MASK tensor(0.6843)
USE STAGE 1 MASK tensor(0.5005)
USE STAGE 1 MASK tensor(0.5495)
DEBUG all ious tensor([0.6252, 0.4023, 0.5719, 0.3954, 0.3839, 0.8202, 0.8739, 0.7894, 0.3686])
USE STAGE 1 MASK tensor(0.6252)
USE STAGE 2 MASK tensor(0.4023)
USE STAGE 1 MASK tensor(0.5719)
USE STAGE 2 MASK tensor(0.3954)
USE STAGE 2 MASK tensor(0.3839)
USE STAGE 1 MASK tensor(0.8202)
USE STAGE 1 MASK tensor(0.8739)
USE STAGE 1 MASK tensor(0.7894)
USE STAGE 2 MASK tensor(0.3686)
DEBUG all ious tensor([0.5082, 0.6329, 0.8372, 0.3479])
USE STAGE 1 MASK tensor(0.5082)
USE STAGE 1 MASK tensor(0.6329)
USE STAGE 1 MASK tensor(0.8372)
USE STAGE 2 MASK tensor(0.3479)
DEBUG all ious tensor([0.7398, 0.2578, 0.4171, 0.7732, 0.6894])
USE STAGE 1 MASK tensor(0.7398)
USE STAGE 2 MASK tensor(0.2578)
USE STAGE 2 MASK tensor(0.4171)
USE STAGE 1 MASK tensor(0.7732)
USE STAGE 1 MASK tensor(0.6894)
DEBUG all ious tensor([0.4214, 0.8048, 0.5725, 0.8119])
USE STAGE 2 MASK tensor(0.4214)
USE STAGE 1 MASK tensor(0.8048)
USE STAGE 1 MASK tensor(0.5725)
USE STAGE 1 MASK tensor(0.8119)
DEBUG all ious tensor([0.8115, 0.7240])
USE STAGE 1 MASK tensor(0.8115)
USE STAGE 1 MASK tensor(0.7240)
DEBUG all ious tensor([0.6395])
USE STAGE 1 MASK tensor(0.6395)
DEBUG all ious tensor([0.4322, 0.5360, 0.7561])
USE STAGE 2 MASK tensor(0.4322)
USE STAGE 1 MASK tensor(0.5360)
USE STAGE 1 MASK tensor(0.7561)
DEBUG all ious tensor([0.8104, 0.5288, 0.7245, 0.8187])
USE STAGE 1 MASK tensor(0.8104)
USE STAGE 1 MASK tensor(0.5288)
USE STAGE 1 MASK tensor(0.7245)
USE STAGE 1 MASK tensor(0.8187)
DEBUG all ious tensor([0.7565, 0.6780, 0.8528, 0.5153])
USE STAGE 1 MASK tensor(0.7565)
USE STAGE 1 MASK tensor(0.6780)
USE STAGE 1 MASK tensor(0.8528)
USE STAGE 1 MASK tensor(0.5153)
DEBUG all ious tensor([0.7245, 0.5954, 0.7036, 0.5162, 0.1538, 0.3096])
USE STAGE 1 MASK tensor(0.7245)
USE STAGE 1 MASK tensor(0.5954)
USE STAGE 1 MASK tensor(0.7036)
USE STAGE 1 MASK tensor(0.5162)
USE STAGE 2 MASK tensor(0.1538)
USE STAGE 2 MASK tensor(0.3096)
DEBUG all ious tensor([0.8253, 0.6891, 0.3771, 0.3779, 0.4669, 0.3239])
USE STAGE 1 MASK tensor(0.8253)
USE STAGE 1 MASK tensor(0.6891)
USE STAGE 2 MASK tensor(0.3771)
USE STAGE 2 MASK tensor(0.3779)
USE STAGE 1 MASK tensor(0.4669)
Refining stage1 output with stage2 outcomes: 78it [00:00, 330.58it/s]USE STAGE 2 MASK tensor(0.3239)
DEBUG all ious tensor([0.1921, 0.1462, 0.4967, 0.7752, 0.0071, 0.6123])
USE STAGE 2 MASK tensor(0.1921)
USE STAGE 2 MASK tensor(0.1462)
USE STAGE 1 MASK tensor(0.4967)
USE STAGE 1 MASK tensor(0.7752)
USE STAGE 2 MASK tensor(0.0071)
USE STAGE 1 MASK tensor(0.6123)
DEBUG all ious tensor([0.7086, 0.6701, 0.3606, 0.7694])
USE STAGE 1 MASK tensor(0.7086)
USE STAGE 1 MASK tensor(0.6701)
USE STAGE 2 MASK tensor(0.3606)
USE STAGE 1 MASK tensor(0.7694)
DEBUG all ious tensor([0.5632, 0.2686, 0.3219, 0.7588, 0.5306, 0.3400])
USE STAGE 1 MASK tensor(0.5632)
USE STAGE 2 MASK tensor(0.2686)
USE STAGE 2 MASK tensor(0.3219)
USE STAGE 1 MASK tensor(0.7588)
USE STAGE 1 MASK tensor(0.5306)
USE STAGE 2 MASK tensor(0.3400)
DEBUG all ious tensor([0.3474, 0.8284, 0.5155, 0.2462, 0.5554, 0.8950])
USE STAGE 2 MASK tensor(0.3474)
USE STAGE 1 MASK tensor(0.8284)
USE STAGE 1 MASK tensor(0.5155)
USE STAGE 2 MASK tensor(0.2462)
USE STAGE 1 MASK tensor(0.5554)
USE STAGE 1 MASK tensor(0.8950)
DEBUG all ious tensor([0.7197])
USE STAGE 1 MASK tensor(0.7197)
DEBUG all ious tensor([0.8827, 0.8876, 0.8215, 0.6376, 0.8711, 0.5738, 0.4246])
USE STAGE 1 MASK tensor(0.8827)
USE STAGE 1 MASK tensor(0.8876)
USE STAGE 1 MASK tensor(0.8215)
USE STAGE 1 MASK tensor(0.6376)
USE STAGE 1 MASK tensor(0.8711)
USE STAGE 1 MASK tensor(0.5738)
USE STAGE 2 MASK tensor(0.4246)
DEBUG all ious tensor([0.3294, 0.8288])
USE STAGE 2 MASK tensor(0.3294)
USE STAGE 1 MASK tensor(0.8288)
DEBUG all ious tensor([0.4909, 0.6361, 0.7391, 0.4556, 0.4825, 0.7444, 0.3486, 0.0000])
USE STAGE 1 MASK tensor(0.4909)
USE STAGE 1 MASK tensor(0.6361)
USE STAGE 1 MASK tensor(0.7391)
USE STAGE 1 MASK tensor(0.4556)
USE STAGE 1 MASK tensor(0.4825)
USE STAGE 1 MASK tensor(0.7444)
USE STAGE 2 MASK tensor(0.3486)
USE STAGE 2 MASK tensor(0.)
DEBUG all ious tensor([0.1517, 0.8396, 0.7671, 0.2105, 0.2601, 0.2604])
USE STAGE 2 MASK tensor(0.1517)
USE STAGE 1 MASK tensor(0.8396)
USE STAGE 1 MASK tensor(0.7671)
USE STAGE 2 MASK tensor(0.2105)
USE STAGE 2 MASK tensor(0.2601)
USE STAGE 2 MASK tensor(0.2604)
DEBUG all ious tensor([0.5675, 0.6341, 0.5132, 0.3379])
USE STAGE 1 MASK tensor(0.5675)
USE STAGE 1 MASK tensor(0.6341)
USE STAGE 1 MASK tensor(0.5132)
USE STAGE 2 MASK tensor(0.3379)
DEBUG all ious tensor([0.1064])
USE STAGE 2 MASK tensor(0.1064)
DEBUG all ious tensor([0.6219, 0.6892])
USE STAGE 1 MASK tensor(0.6219)
USE STAGE 1 MASK tensor(0.6892)
DEBUG all ious tensor([0.5852, 0.9312])
USE STAGE 1 MASK tensor(0.5852)
USE STAGE 1 MASK tensor(0.9312)
DEBUG all ious tensor([0.5576, 0.2770, 0.5000, 0.8560, 0.1414, 0.4889, 0.4011])
USE STAGE 1 MASK tensor(0.5576)
USE STAGE 2 MASK tensor(0.2770)
USE STAGE 1 MASK tensor(0.5000)
USE STAGE 1 MASK tensor(0.8560)
USE STAGE 2 MASK tensor(0.1414)
USE STAGE 1 MASK tensor(0.4889)
USE STAGE 2 MASK tensor(0.4011)
DEBUG all ious tensor([0.8391, 0.4559])
USE STAGE 1 MASK tensor(0.8391)
USE STAGE 1 MASK tensor(0.4559)
DEBUG all ious tensor([0.5488, 0.6565, 0.3794, 0.8190, 0.5579])
USE STAGE 1 MASK tensor(0.5488)
USE STAGE 1 MASK tensor(0.6565)
USE STAGE 2 MASK tensor(0.3794)
USE STAGE 1 MASK tensor(0.8190)
USE STAGE 1 MASK tensor(0.5579)
DEBUG all ious tensor([0.7722, 0.7757, 0.7929])
USE STAGE 1 MASK tensor(0.7722)
USE STAGE 1 MASK tensor(0.7757)
USE STAGE 1 MASK tensor(0.7929)
DEBUG all ious tensor([0.4194, 0.7768, 0.7501, 0.8053, 0.6694, 0.6887, 0.6200])
USE STAGE 2 MASK tensor(0.4194)
USE STAGE 1 MASK tensor(0.7768)
USE STAGE 1 MASK tensor(0.7501)
USE STAGE 1 MASK tensor(0.8053)
USE STAGE 1 MASK tensor(0.6694)
USE STAGE 1 MASK tensor(0.6887)
USE STAGE 1 MASK tensor(0.6200)
DEBUG all ious tensor([0.5604])
USE STAGE 1 MASK tensor(0.5604)
DEBUG all ious tensor([0.3312, 0.7763, 0.6567, 0.4418, 0.4212, 0.2551, 0.6341, 0.2466, 0.4069,
        0.2436])
USE STAGE 2 MASK tensor(0.3312)
USE STAGE 1 MASK tensor(0.7763)
USE STAGE 1 MASK tensor(0.6567)
USE STAGE 2 MASK tensor(0.4418)
USE STAGE 2 MASK tensor(0.4212)
USE STAGE 2 MASK tensor(0.2551)
USE STAGE 1 MASK tensor(0.6341)
USE STAGE 2 MASK tensor(0.2466)
USE STAGE 2 MASK tensor(0.4069)
USE STAGE 2 MASK tensor(0.2436)
DEBUG all ious tensor([0.7252, 0.3083])
USE STAGE 1 MASK tensor(0.7252)
USE STAGE 2 MASK tensor(0.3083)
DEBUG all ious []
DEBUG all ious tensor([0.7122])
USE STAGE 1 MASK tensor(0.7122)
DEBUG all ious tensor([0.8737, 0.7298])
USE STAGE 1 MASK tensor(0.8737)
USE STAGE 1 MASK tensor(0.7298)
DEBUG all ious tensor([0.6326, 0.7072])
USE STAGE 1 MASK tensor(0.6326)
USE STAGE 1 MASK tensor(0.7072)
DEBUG all ious tensor([0.5327])
USE STAGE 1 MASK tensor(0.5327)
DEBUG all ious tensor([0.7490, 0.3294, 0.6226, 0.6847, 0.2930, 0.3480])
USE STAGE 1 MASK tensor(0.7490)
USE STAGE 2 MASK tensor(0.3294)
USE STAGE 1 MASK tensor(0.6226)
USE STAGE 1 MASK tensor(0.6847)
USE STAGE 2 MASK tensor(0.2930)
USE STAGE 2 MASK tensor(0.3480)
DEBUG all ious tensor([0.4344, 0.5509, 0.8196, 0.2219])
USE STAGE 2 MASK tensor(0.4344)
USE STAGE 1 MASK tensor(0.5509)
USE STAGE 1 MASK tensor(0.8196)
USE STAGE 2 MASK tensor(0.2219)
DEBUG all ious tensor([0.5221, 0.7133])
USE STAGE 1 MASK tensor(0.5221)
USE STAGE 1 MASK tensor(0.7133)
DEBUG all ious tensor([0.8011, 0.3140])
USE STAGE 1 MASK tensor(0.8011)
USE STAGE 2 MASK tensor(0.3140)
DEBUG all ious tensor([0.4647, 0.7133, 0.7439, 0.5811])
USE STAGE 1 MASK tensor(0.4647)
USE STAGE 1 MASK tensor(0.7133)
USE STAGE 1 MASK tensor(0.7439)
USE STAGE 1 MASK tensor(0.5811)
DEBUG all ious tensor([0.5903, 0.4139, 0.3127, 0.3773])
USE STAGE 1 MASK tensor(0.5903)
USE STAGE 2 MASK tensor(0.4139)
USE STAGE 2 MASK tensor(0.3127)
USE STAGE 2 MASK tensor(0.3773)
DEBUG all ious tensor([0.6645, 0.4828, 0.6787, 0.4153, 0.3513, 0.6495])
USE STAGE 1 MASK tensor(0.6645)
USE STAGE 1 MASK tensor(0.4828)
USE STAGE 1 MASK tensor(0.6787)
USE STAGE 2 MASK tensor(0.4153)
USE STAGE 2 MASK tensor(0.3513)
USE STAGE 1 MASK tensor(0.6495)
DEBUG all ious tensor([0.8167, 0.3623])
USE STAGE 1 MASK tensor(0.8167)
USE STAGE 2 MASK tensor(0.3623)
DEBUG all ious tensor([0.5722])
USE STAGE 1 MASK tensor(0.5722)
DEBUG all ious tensor([0.5105, 0.3149])
USE STAGE 1 MASK tensor(0.5105)
USE STAGE 2 MASK tensor(0.3149)
DEBUG all ious tensor([0.3180, 0.7154, 0.3726])
USE STAGE 2 MASK tensor(0.3180)
USE STAGE 1 MASK tensor(0.7154)
USE STAGE 2 MASK tensor(0.3726)
DEBUG all ious tensor([0.5488, 0.7594, 0.7018, 0.4853, 0.6767, 0.3267])
USE STAGE 1 MASK tensor(0.5488)
USE STAGE 1 MASK tensor(0.7594)
USE STAGE 1 MASK tensor(0.7018)
USE STAGE 1 MASK tensor(0.4853)
USE STAGE 1 MASK tensor(0.6767)
USE STAGE 2 MASK tensor(0.3267)
DEBUG all ious tensor([0.5937, 0.4248, 0.6448, 0.3289])
USE STAGE 1 MASK tensor(0.5937)
USE STAGE 2 MASK tensor(0.4248)
USE STAGE 1 MASK tensor(0.6448)
USE STAGE 2 MASK tensor(0.3289)
DEBUG all ious tensor([0.6762, 0.4767, 0.6264, 0.5888])
USE STAGE 1 MASK tensor(0.6762)
USE STAGE 1 MASK tensor(0.4767)
USE STAGE 1 MASK tensor(0.6264)
USE STAGE 1 MASK tensor(0.5888)
DEBUG all ious tensor([0.6164, 0.6221])
USE STAGE 1 MASK tensor(0.6164)
USE STAGE 1 MASK tensor(0.6221)
DEBUG all ious tensor([0.4516, 0.6962, 0.9191, 0.4425, 0.2190, 0.8108, 0.6366])
USE STAGE 1 MASK tensor(0.4516)
USE STAGE 1 MASK tensor(0.6962)
USE STAGE 1 MASK tensor(0.9191)
USE STAGE 2 MASK tensor(0.4425)
USE STAGE 2 MASK tensor(0.2190)
USE STAGE 1 MASK tensor(0.8108)
USE STAGE 1 MASK tensor(0.6366)
DEBUG all ious tensor([0.9159, 0.7913, 0.4147, 0.3738])
USE STAGE 1 MASK tensor(0.9159)
USE STAGE 1 MASK tensor(0.7913)
USE STAGE 2 MASK tensor(0.4147)
USE STAGE 2 MASK tensor(0.3738)
DEBUG all ious tensor([0.5971, 0.8380, 0.8419])
USE STAGE 1 MASK tensor(0.5971)
USE STAGE 1 MASK tensor(0.8380)
USE STAGE 1 MASK tensor(0.8419)
DEBUG all ious tensor([0.6180, 0.6586])
USE STAGE 1 MASK tensor(0.6180)
USE STAGE 1 MASK tensor(0.6586)
DEBUG all ious tensor([0.4990, 0.4238, 0.4151])
USE STAGE 1 MASK tensor(0.4990)
USE STAGE 2 MASK tensor(0.4238)
USE STAGE 2 MASK tensor(0.4151)
DEBUG all ious tensor([0.5144, 0.7372, 0.4296, 0.5439, 0.8541])
USE STAGE 1 MASK tensor(0.5144)
USE STAGE 1 MASK tensor(0.7372)
USE STAGE 2 MASK tensor(0.4296)
USE STAGE 1 MASK tensor(0.5439)
USE STAGE 1 MASK tensor(0.8541)
DEBUG all ious tensor([0.7462, 0.6796, 0.7576, 0.6682, 0.7498, 0.3258])
Refining stage1 output with stage2 outcomes: 112it [00:00, 302.99it/s]USE STAGE 1 MASK tensor(0.7462)
USE STAGE 1 MASK tensor(0.6796)
USE STAGE 1 MASK tensor(0.7576)
USE STAGE 1 MASK tensor(0.6682)
USE STAGE 1 MASK tensor(0.7498)
USE STAGE 2 MASK tensor(0.3258)
DEBUG all ious tensor([0.4597, 0.4133])
USE STAGE 1 MASK tensor(0.4597)
USE STAGE 2 MASK tensor(0.4133)
DEBUG all ious tensor([0.4832, 0.7251, 0.6907, 0.5079])
USE STAGE 1 MASK tensor(0.4832)
USE STAGE 1 MASK tensor(0.7251)
USE STAGE 1 MASK tensor(0.6907)
USE STAGE 1 MASK tensor(0.5079)
DEBUG all ious tensor([0.4692, 0.5399, 0.6666])
USE STAGE 1 MASK tensor(0.4692)
USE STAGE 1 MASK tensor(0.5399)
USE STAGE 1 MASK tensor(0.6666)
DEBUG all ious tensor([0.6313, 0.5599, 0.5138, 0.7016])
USE STAGE 1 MASK tensor(0.6313)
USE STAGE 1 MASK tensor(0.5599)
USE STAGE 1 MASK tensor(0.5138)
USE STAGE 1 MASK tensor(0.7016)
DEBUG all ious tensor([0.6827])
USE STAGE 1 MASK tensor(0.6827)
DEBUG all ious tensor([0.4111, 0.7857, 0.3537, 0.7414, 0.6017, 0.4451])
USE STAGE 2 MASK tensor(0.4111)
USE STAGE 1 MASK tensor(0.7857)
USE STAGE 2 MASK tensor(0.3537)
USE STAGE 1 MASK tensor(0.7414)
USE STAGE 1 MASK tensor(0.6017)
USE STAGE 2 MASK tensor(0.4451)
DEBUG all ious tensor([0.3644, 0.7179, 0.6793, 0.4381, 0.5081, 0.6858, 0.7497])
USE STAGE 2 MASK tensor(0.3644)
USE STAGE 1 MASK tensor(0.7179)
USE STAGE 1 MASK tensor(0.6793)
USE STAGE 2 MASK tensor(0.4381)
USE STAGE 1 MASK tensor(0.5081)
USE STAGE 1 MASK tensor(0.6858)
USE STAGE 1 MASK tensor(0.7497)
DEBUG all ious tensor([0.5481, 0.7991, 0.2841])
USE STAGE 1 MASK tensor(0.5481)
USE STAGE 1 MASK tensor(0.7991)
USE STAGE 2 MASK tensor(0.2841)
DEBUG all ious tensor([0.8223, 0.6649, 0.8140])
USE STAGE 1 MASK tensor(0.8223)
USE STAGE 1 MASK tensor(0.6649)
USE STAGE 1 MASK tensor(0.8140)
DEBUG all ious tensor([0.2327, 0.4933, 0.8761])
USE STAGE 2 MASK tensor(0.2327)
USE STAGE 1 MASK tensor(0.4933)
USE STAGE 1 MASK tensor(0.8761)
DEBUG all ious tensor([0.6036, 0.5155])
USE STAGE 1 MASK tensor(0.6036)
USE STAGE 1 MASK tensor(0.5155)
DEBUG all ious tensor([0.7416])
USE STAGE 1 MASK tensor(0.7416)
DEBUG all ious tensor([0.7674, 0.5554, 0.5648, 0.5865, 0.2568])
USE STAGE 1 MASK tensor(0.7674)
USE STAGE 1 MASK tensor(0.5554)
USE STAGE 1 MASK tensor(0.5648)
USE STAGE 1 MASK tensor(0.5865)
USE STAGE 2 MASK tensor(0.2568)
DEBUG all ious []
DEBUG all ious tensor([0.6965, 0.6982, 0.2605])
USE STAGE 1 MASK tensor(0.6965)
USE STAGE 1 MASK tensor(0.6982)
USE STAGE 2 MASK tensor(0.2605)
DEBUG all ious tensor([0.6440, 0.4679])
USE STAGE 1 MASK tensor(0.6440)
USE STAGE 1 MASK tensor(0.4679)
DEBUG all ious tensor([0.1822, 0.5549, 0.6707, 0.0997, 0.2248, 0.7698])
USE STAGE 2 MASK tensor(0.1822)
USE STAGE 1 MASK tensor(0.5549)
USE STAGE 1 MASK tensor(0.6707)
USE STAGE 2 MASK tensor(0.0997)
USE STAGE 2 MASK tensor(0.2248)
USE STAGE 1 MASK tensor(0.7698)
DEBUG all ious tensor([0.5839, 0.6007, 0.7492])
USE STAGE 1 MASK tensor(0.5839)
USE STAGE 1 MASK tensor(0.6007)
USE STAGE 1 MASK tensor(0.7492)
DEBUG all ious tensor([0.7660, 0.6546, 0.4064, 0.8897])
USE STAGE 1 MASK tensor(0.7660)
USE STAGE 1 MASK tensor(0.6546)
USE STAGE 2 MASK tensor(0.4064)
USE STAGE 1 MASK tensor(0.8897)
DEBUG all ious tensor([0.5657, 0.6887, 0.5139, 0.6606, 0.4849, 0.4955, 0.7107])
USE STAGE 1 MASK tensor(0.5657)
USE STAGE 1 MASK tensor(0.6887)
USE STAGE 1 MASK tensor(0.5139)
USE STAGE 1 MASK tensor(0.6606)
USE STAGE 1 MASK tensor(0.4849)
USE STAGE 1 MASK tensor(0.4955)
USE STAGE 1 MASK tensor(0.7107)
DEBUG all ious tensor([0.6912, 0.6075, 0.4411, 0.2274, 0.4186])
USE STAGE 1 MASK tensor(0.6912)
USE STAGE 1 MASK tensor(0.6075)
USE STAGE 2 MASK tensor(0.4411)
USE STAGE 2 MASK tensor(0.2274)
USE STAGE 2 MASK tensor(0.4186)
DEBUG all ious tensor([0.6435, 0.7082, 0.7033, 0.5484])
USE STAGE 1 MASK tensor(0.6435)
USE STAGE 1 MASK tensor(0.7082)
USE STAGE 1 MASK tensor(0.7033)
USE STAGE 1 MASK tensor(0.5484)
DEBUG all ious tensor([0.2203, 0.5013, 0.1453, 0.4143])
USE STAGE 2 MASK tensor(0.2203)
USE STAGE 1 MASK tensor(0.5013)
USE STAGE 2 MASK tensor(0.1453)
USE STAGE 2 MASK tensor(0.4143)
DEBUG all ious tensor([0.3761, 0.5732, 0.5917, 0.5141])
USE STAGE 2 MASK tensor(0.3761)
USE STAGE 1 MASK tensor(0.5732)
USE STAGE 1 MASK tensor(0.5917)
USE STAGE 1 MASK tensor(0.5141)
DEBUG all ious tensor([0.8693, 0.6471, 0.7693])
USE STAGE 1 MASK tensor(0.8693)
USE STAGE 1 MASK tensor(0.6471)
USE STAGE 1 MASK tensor(0.7693)
DEBUG all ious tensor([0.8141])
USE STAGE 1 MASK tensor(0.8141)
DEBUG all ious tensor([0.7793, 0.7951, 0.7350, 0.6707, 0.6503, 0.6180, 0.7149, 0.8188, 0.8006,
        0.8583])
USE STAGE 1 MASK tensor(0.7793)
USE STAGE 1 MASK tensor(0.7951)
USE STAGE 1 MASK tensor(0.7350)
USE STAGE 1 MASK tensor(0.6707)
USE STAGE 1 MASK tensor(0.6503)
USE STAGE 1 MASK tensor(0.6180)
USE STAGE 1 MASK tensor(0.7149)
USE STAGE 1 MASK tensor(0.8188)
USE STAGE 1 MASK tensor(0.8006)
USE STAGE 1 MASK tensor(0.8583)
DEBUG all ious tensor([0.3707])
USE STAGE 2 MASK tensor(0.3707)
DEBUG all ious tensor([0.5006, 0.7346, 0.4330, 0.6008])
USE STAGE 1 MASK tensor(0.5006)
USE STAGE 1 MASK tensor(0.7346)
USE STAGE 2 MASK tensor(0.4330)
USE STAGE 1 MASK tensor(0.6008)
DEBUG all ious []
DEBUG all ious tensor([0.6495, 0.7633, 0.3481, 0.6798, 0.4524, 0.5677])
USE STAGE 1 MASK tensor(0.6495)
USE STAGE 1 MASK tensor(0.7633)
USE STAGE 2 MASK tensor(0.3481)
USE STAGE 1 MASK tensor(0.6798)
USE STAGE 1 MASK tensor(0.4524)
USE STAGE 1 MASK tensor(0.5677)
DEBUG all ious tensor([0.4126, 0.6489])
USE STAGE 2 MASK tensor(0.4126)
USE STAGE 1 MASK tensor(0.6489)
DEBUG all ious tensor([0.4717, 0.7194, 0.7381])
USE STAGE 1 MASK tensor(0.4717)
USE STAGE 1 MASK tensor(0.7194)
USE STAGE 1 MASK tensor(0.7381)
DEBUG all ious tensor([0.3990, 0.6945, 0.7294, 0.4376, 0.7814, 0.6840])
USE STAGE 2 MASK tensor(0.3990)
USE STAGE 1 MASK tensor(0.6945)
USE STAGE 1 MASK tensor(0.7294)
USE STAGE 2 MASK tensor(0.4376)
USE STAGE 1 MASK tensor(0.7814)
USE STAGE 1 MASK tensor(0.6840)
DEBUG all ious tensor([0.5319])
USE STAGE 1 MASK tensor(0.5319)
DEBUG all ious tensor([0.6522, 0.4945, 0.4500, 0.6886, 0.3519, 0.4092, 0.1086, 0.2196])
USE STAGE 1 MASK tensor(0.6522)
USE STAGE 1 MASK tensor(0.4945)
USE STAGE 2 MASK tensor(0.4500)
USE STAGE 1 MASK tensor(0.6886)
USE STAGE 2 MASK tensor(0.3519)
USE STAGE 2 MASK tensor(0.4092)
USE STAGE 2 MASK tensor(0.1086)
USE STAGE 2 MASK tensor(0.2196)
DEBUG all ious tensor([0.8604, 0.7494, 0.6851])
USE STAGE 1 MASK tensor(0.8604)
USE STAGE 1 MASK tensor(0.7494)
USE STAGE 1 MASK tensor(0.6851)
DEBUG all ious tensor([0.6424, 0.5648, 0.6555, 0.5127])
USE STAGE 1 MASK tensor(0.6424)
USE STAGE 1 MASK tensor(0.5648)
USE STAGE 1 MASK tensor(0.6555)
USE STAGE 1 MASK tensor(0.5127)
DEBUG all ious tensor([0.8029, 0.7477, 0.6939, 0.8128])
USE STAGE 1 MASK tensor(0.8029)
USE STAGE 1 MASK tensor(0.7477)
USE STAGE 1 MASK tensor(0.6939)
USE STAGE 1 MASK tensor(0.8128)
DEBUG all ious tensor([0.2116, 0.0931])
USE STAGE 2 MASK tensor(0.2116)
USE STAGE 2 MASK tensor(0.0931)
DEBUG all ious tensor([0.5188])
USE STAGE 1 MASK tensor(0.5188)
DEBUG all ious tensor([0.7031])
USE STAGE 1 MASK tensor(0.7031)
DEBUG all ious tensor([0.2860, 0.2839, 0.4213, 0.5607, 0.4652])
USE STAGE 2 MASK tensor(0.2860)
USE STAGE 2 MASK tensor(0.2839)
USE STAGE 2 MASK tensor(0.4213)
USE STAGE 1 MASK tensor(0.5607)
USE STAGE 1 MASK tensor(0.4652)
DEBUG all ious tensor([0.7156, 0.7753, 0.4704, 0.3821])
USE STAGE 1 MASK tensor(0.7156)
USE STAGE 1 MASK tensor(0.7753)
USE STAGE 1 MASK tensor(0.4704)
USE STAGE 2 MASK tensor(0.3821)
DEBUG all ious tensor([0.6719, 0.6960, 0.7610, 0.7184, 0.5685, 0.3735])
USE STAGE 1 MASK tensor(0.6719)
USE STAGE 1 MASK tensor(0.6960)
USE STAGE 1 MASK tensor(0.7610)
USE STAGE 1 MASK tensor(0.7184)
USE STAGE 1 MASK tensor(0.5685)
USE STAGE 2 MASK tensor(0.3735)
DEBUG all ious tensor([0.8458, 0.8512, 0.8207, 0.3266, 0.4547])
USE STAGE 1 MASK tensor(0.8458)
USE STAGE 1 MASK tensor(0.8512)
USE STAGE 1 MASK tensor(0.8207)
USE STAGE 2 MASK tensor(0.3266)
USE STAGE 1 MASK tensor(0.4547)
DEBUG all ious tensor([0.3848, 0.7259, 0.5611, 0.3296, 0.6413])
USE STAGE 2 MASK tensor(0.3848)
USE STAGE 1 MASK tensor(0.7259)
USE STAGE 1 MASK tensor(0.5611)
USE STAGE 2 MASK tensor(0.3296)
USE STAGE 1 MASK tensor(0.6413)
DEBUG all ious []
DEBUG all ious Refining stage1 output with stage2 outcomes: 142it [00:00, 306.74it/s]
tensor([0.7606, 0.7867])
USE STAGE 1 MASK tensor(0.7606)
USE STAGE 1 MASK tensor(0.7867)
DEBUG all ious tensor([0.0957, 0.0451, 0.2345, 0.0694, 0.1850, 0.1704, 0.2535, 0.5101, 0.2466,
        0.2498])
USE STAGE 2 MASK tensor(0.0957)
USE STAGE 2 MASK tensor(0.0451)
USE STAGE 2 MASK tensor(0.2345)
USE STAGE 2 MASK tensor(0.0694)
USE STAGE 2 MASK tensor(0.1850)
USE STAGE 2 MASK tensor(0.1704)
USE STAGE 2 MASK tensor(0.2535)
USE STAGE 1 MASK tensor(0.5101)
USE STAGE 2 MASK tensor(0.2466)
USE STAGE 2 MASK tensor(0.2498)
Evaluating class file cabinet...:   0%|          | 0/142 [00:00<?, ?it/s]evaluation/eval/eval_scannet200.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  masks = torch.tensor(masks)
evaluation/eval/eval_scannet200.py:109: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  score = torch.tensor(score)
Evaluating class file cabinet...:   1%|          | 1/142 [00:00<00:15,  9.30it/s]Evaluating class file cabinet...:   2%|▏         | 3/142 [00:00<00:09, 14.23it/s]Evaluating class file cabinet...:   4%|▎         | 5/142 [00:00<00:10, 12.96it/s]Evaluating class file cabinet...:   5%|▍         | 7/142 [00:00<00:09, 13.68it/s]Evaluating class file cabinet...:   6%|▋         | 9/142 [00:00<00:08, 15.22it/s]Evaluating class file cabinet...:   8%|▊         | 12/142 [00:00<00:06, 19.34it/s]Evaluating class file cabinet...:  11%|█         | 15/142 [00:00<00:06, 18.90it/s]Evaluating class file cabinet...:  13%|█▎        | 18/142 [00:01<00:06, 20.54it/s]Evaluating class file cabinet...:  15%|█▍        | 21/142 [00:01<00:05, 21.80it/s]Evaluating class file cabinet...:  17%|█▋        | 24/142 [00:01<00:05, 22.22it/s]Evaluating class file cabinet...:  19%|█▉        | 27/142 [00:01<00:04, 23.30it/s]Evaluating class file cabinet...:  21%|██        | 30/142 [00:01<00:07, 15.24it/s]Evaluating class file cabinet...:  23%|██▎       | 32/142 [00:01<00:06, 15.82it/s]Evaluating class file cabinet...:  24%|██▍       | 34/142 [00:02<00:08, 12.64it/s]Evaluating class file cabinet...:  25%|██▌       | 36/142 [00:02<00:08, 12.37it/s]Evaluating class file cabinet...:  27%|██▋       | 39/142 [00:02<00:07, 14.64it/s]Evaluating class file cabinet...:  30%|███       | 43/142 [00:02<00:05, 16.60it/s]Evaluating class file cabinet...:  32%|███▏      | 45/142 [00:02<00:06, 14.80it/s]Evaluating class file cabinet...:  34%|███▍      | 48/142 [00:02<00:06, 15.66it/s]Evaluating class file cabinet...:  35%|███▌      | 50/142 [00:03<00:05, 15.69it/s]Evaluating class file cabinet...:  37%|███▋      | 53/142 [00:03<00:05, 17.68it/s]Evaluating class file cabinet...:  39%|███▊      | 55/142 [00:03<00:04, 17.78it/s]Evaluating class file cabinet...:  41%|████      | 58/142 [00:03<00:04, 18.89it/s]Evaluating class file cabinet...:  43%|████▎     | 61/142 [00:03<00:03, 20.41it/s]Evaluating class file cabinet...:  45%|████▌     | 64/142 [00:03<00:03, 20.50it/s]Evaluating class file cabinet...:  47%|████▋     | 67/142 [00:03<00:03, 20.60it/s]Evaluating class file cabinet...:  50%|█████     | 71/142 [00:04<00:03, 21.44it/s]Evaluating class file cabinet...:  53%|█████▎    | 75/142 [00:04<00:03, 21.44it/s]Evaluating class file cabinet...:  55%|█████▍    | 78/142 [00:04<00:03, 21.11it/s]Evaluating class file cabinet...:  57%|█████▋    | 81/142 [00:04<00:03, 20.11it/s]Evaluating class file cabinet...:  59%|█████▉    | 84/142 [00:04<00:02, 22.17it/s]Evaluating class file cabinet...:  61%|██████▏   | 87/142 [00:04<00:02, 20.57it/s]Evaluating class file cabinet...:  64%|██████▍   | 91/142 [00:04<00:02, 22.98it/s]Evaluating class file cabinet...:  66%|██████▌   | 94/142 [00:05<00:02, 21.80it/s]Evaluating class file cabinet...:  68%|██████▊   | 97/142 [00:05<00:02, 21.50it/s]Evaluating class file cabinet...:  70%|███████   | 100/142 [00:05<00:02, 17.38it/s]Evaluating class file cabinet...:  73%|███████▎  | 103/142 [00:05<00:02, 17.50it/s]Evaluating class file cabinet...:  74%|███████▍  | 105/142 [00:05<00:02, 17.93it/s]Evaluating class file cabinet...:  75%|███████▌  | 107/142 [00:05<00:02, 16.64it/s]Evaluating class file cabinet...:  77%|███████▋  | 109/142 [00:06<00:02, 15.97it/s]Evaluating class file cabinet...:  78%|███████▊  | 111/142 [00:06<00:02, 14.30it/s]Evaluating class file cabinet...:  80%|███████▉  | 113/142 [00:06<00:02, 14.30it/s]Evaluating class file cabinet...:  81%|████████  | 115/142 [00:06<00:02, 13.38it/s]Evaluating class file cabinet...:  83%|████████▎ | 118/142 [00:06<00:01, 16.02it/s]Evaluating class file cabinet...:  85%|████████▍ | 120/142 [00:06<00:01, 15.46it/s]Evaluating class file cabinet...:  87%|████████▋ | 123/142 [00:06<00:01, 17.41it/s]Evaluating class file cabinet...:  89%|████████▊ | 126/142 [00:07<00:00, 18.17it/s]Evaluating class file cabinet...:  90%|█████████ | 128/142 [00:07<00:00, 14.82it/s]Evaluating class file cabinet...:  92%|█████████▏| 131/142 [00:07<00:00, 17.48it/s]Evaluating class file cabinet...:  95%|█████████▌| 135/142 [00:07<00:00, 20.88it/s]Evaluating class file cabinet...:  97%|█████████▋| 138/142 [00:07<00:00, 19.06it/s]Evaluating class file cabinet...: 100%|██████████| 142/142 [00:07<00:00, 20.26it/s]Evaluating class file cabinet...: 100%|██████████| 142/142 [00:07<00:00, 17.87it/s]
  0%|          | 0/142 [00:00<?, ?it/s]  8%|▊         | 12/142 [00:00<00:01, 108.39it/s] 21%|██        | 30/142 [00:00<00:00, 145.64it/s] 32%|███▏      | 46/142 [00:00<00:00, 151.40it/s] 49%|████▊     | 69/142 [00:00<00:00, 181.65it/s] 66%|██████▌   | 94/142 [00:00<00:00, 205.19it/s] 81%|████████  | 115/142 [00:00<00:00, 189.91it/s] 97%|█████████▋| 138/142 [00:00<00:00, 199.64it/s]100%|██████████| 142/142 [00:00<00:00, 186.53it/s]
ScanNet200 Evaluation
################################################
what           :      AP  AP_50%  AP_25%
################################################
Head AP        :   0.006   0.006   0.006
Common AP      :   0.000   0.000   0.000
Tail AP        :   0.000   0.000   0.000
Base AP        :   0.007   0.008   0.008
Novel AP       :   0.000   0.000   0.000
------------------------------------------------
AP             :   0.002   0.002   0.002
################################################

DEBUG avg value {'ap': 0.37277159630840323, 'ap50%': 0.38625144175317183, 'ap25%': 0.38676340101257894, 'rc': 0.738562091503268, 'rc50%': 0.7647058823529411, 'rc25%': 0.7647058823529411}
DEBUG writing results to ./evaluation/eval_results/overall_results.txt
Processing classes: 100%|██████████| 10/10 [1:02:58<00:00, 416.60s/it]Processing classes: 100%|██████████| 10/10 [1:02:58<00:00, 377.81s/it]
--------------Starting process for class: table--------------
Projection 2D to 3D for table done.
Refinements for table done.
Class table processed successfully.
--------------Starting process for class: backpack--------------
Projection 2D to 3D for backpack done.
Refinements for backpack done.
Class backpack processed successfully.
--------------Starting process for class: shower wall--------------
Projection 2D to 3D for shower wall done.
Refinements for shower wall done.
Class shower wall processed successfully.
--------------Starting process for class: toilet--------------
Projection 2D to 3D for toilet done.
Refinements for toilet done.
Class toilet processed successfully.
--------------Starting process for class: copier--------------
Projection 2D to 3D for copier done.
Refinements for copier done.
Class copier processed successfully.
--------------Starting process for class: counter--------------
Projection 2D to 3D for counter done.
Refinements for counter done.
Class counter processed successfully.
--------------Starting process for class: stool--------------
Projection 2D to 3D for stool done.
Refinements for stool done.
Class stool processed successfully.
--------------Starting process for class: refrigerator--------------
Projection 2D to 3D for refrigerator done.
Refinements for refrigerator done.
Class refrigerator processed successfully.
--------------Starting process for class: window--------------
Projection 2D to 3D for window done.
Refinements for window done.
Class window processed successfully.
--------------Starting process for class: file cabinet--------------
Projection 2D to 3D for file cabinet done.
Refinements for file cabinet done.
Class file cabinet processed successfully.
